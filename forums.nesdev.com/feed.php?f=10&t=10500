<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=10&amp;t=10500" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2013-09-17T08:17:16-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=10&amp;t=10500</id>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2013-09-17T08:17:16-07:00</updated>
<published>2013-09-17T08:17:16-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10500&amp;p=118177#p118177</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10500&amp;p=118177#p118177"/>
<title type="html"><![CDATA[Re: Metatile troubles]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10500&amp;p=118177#p118177"><![CDATA[
<div class="quotetitle">zkip wrote:</div><div class="quotecontent"><br />My first assumption would be something like just using x to index what row. However, the PPU register is write-twice so that pretty much defeats the idea of that. How is this accomplished? Pointers?<br /></div><br />No, not pointers. Since the PPU is on a separate addressing space, there are not that many ways to access it. If you want direct access to any given byte, there's no other way than setting up the address through $2006 for every access. As you can imagine, this is slow should be avoided, specially during VBlank. Most programs take advantage of the auto-increment feature the PPU has: after each write/read, the address increments automatically (by 32, which is useful for drawing columns of tiles, or by 1, which is for nearly everything else).<br /><br />Since you have divided your buffer into a top row and a bottom row, the easiest thing to do would be to set PPU address increments to 1 and just blast all 64 bytes in sequence. If you're drawing a whole screen (meaning rendering is turned off), you can even leave the PPU address untouched from one row of metatiles to the next. Something like this:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   lda #$20 ;have the PPU point to the beginning of the name table<br />   sta $2006<br />   lda #$00<br />   sta $2006<br /><br />   ldy #$00 ;start decoding the first metatile of the map<br />DecodeRow:<br />   ldx #$00 ;start filling the buffer from 0<br />DecodeMetatile:<br />   sty Scratch ;backup Y<br />   lda (LevelData), y ;get the index of the metatile<br />   jsr WriteTileToBuffer ;decompress it to the buffer<br />   ldy Scratch ;restore Y<br />   iny ;go to the next metatile<br />   cpx #$20 ;is the buffer full yet?<br />   bne DecodeMetatile ;if not, do another metatile<br /><br />   ldx #$00 ;start uploading from the beginning of the buffer<br />CopyToPPU:<br />   lda Buffer, x ;get the byte<br />   sta $2007 ;write it<br />   inx ;move on to the next byte<br />   cpx #$40 ;have we done 64 yet?<br />   bne CopyToPPU ;if not, copy another byte<br /><br />   cpy #$f0 ;have we done all 240 metatiles yet?<br />   bne DecodeRow ;if not, decode another row</div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Tue Sep 17, 2013 8:17 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[zkip]]></name></author>
<updated>2013-09-17T07:04:14-07:00</updated>
<published>2013-09-17T07:04:14-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10500&amp;p=118176#p118176</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10500&amp;p=118176#p118176"/>
<title type="html"><![CDATA[Re: Metatile troubles]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10500&amp;p=118176#p118176"><![CDATA[
Update: Argh! I need to go back to NES school.. lol.<br /><br />New problem: The code you all have been so gracious to help me with is for one column. Now, I assumed that right before I turned the screen on, I could JSR to that routine that sets the map up then return to turn the screen on. Basically, I imagined I could just set the writing area to $2000 and proceed on to a routine that would fetch 16 bytes from a level data table indexed by a which row to draw. However, my new problem is that I have no idea how to set the PPU writing area to what it needs to be. Like +$00 for row 1, +$16(?) for row 2, +$32 for 3(?) etc. My first assumption would be something like just using x to index what row. However, the PPU register is write-twice so that pretty much defeats the idea of that. How is this accomplished? Pointers? Sorry, my go-to is always pointers for some reason. lol<br /><br />I mean, I know the nametable deal ($2007) increments with every write, however the buffer is only 64 bytes. Get what I'm trying to say?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5763">zkip</a> — Tue Sep 17, 2013 7:04 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[zkip]]></name></author>
<updated>2013-09-16T18:13:19-07:00</updated>
<published>2013-09-16T18:13:19-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10500&amp;p=118157#p118157</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10500&amp;p=118157#p118157"/>
<title type="html"><![CDATA[Re: Metatile troubles]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10500&amp;p=118157#p118157"><![CDATA[
Ah! Now I see. As I'm not planning on using very many metatiles at all. This seems to be perfect for my style. Thank you very much tokumaru.  <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5763">zkip</a> — Mon Sep 16, 2013 6:13 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2013-09-16T17:47:12-07:00</updated>
<published>2013-09-16T17:47:12-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10500&amp;p=118155#p118155</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10500&amp;p=118155#p118155"/>
<title type="html"><![CDATA[Re: Metatile troubles]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10500&amp;p=118155#p118155"><![CDATA[
<div class="quotetitle">zkip wrote:</div><div class="quotecontent"><br />I understand this, but the way the labels are being used is confusing me. Say I've got 16 metatiles instead of the 4 we have now. MetaTileBlock00-MetaTileBlock10 in order. Now what?<br /></div><br />Oh, now I get why you're confused! Each label in your table represents a metatile, I assumed that each label represented a corner of the metatiles... The code I posted assumed the data was arranged like this:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">TopLeftTile: .db $00, $01, $02, $03, $04, $05, (...)<br />TopRightTile: .db $20, $21, $22, $23, $24, $25, (...)<br />BottomLeftTile: .db $60, $61, $62, $63, $64, $65, (...)<br />BottomRightTile: .db $80, $81, $82, $83, $84, $85, (...)</div><br />Which means that metatile #0 is made of the following tiles: $00, $20, $60, $80. I often arrange data like this because the 6502 is better at reading structures of arrays rather than arrays of structures. In this case, even if you have 200 tiles or more you'll still have only 4 labels in the code, because they represent the corners, and all metatiles have 4 corners.<br /><br />You can do it your way and store the metatiles linearly, but then you can only have 64 of them before you need to use pointers. To read linear metatiles, my routine would look like this:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">WriteTileToBuffer:<br />   asl ;multiply by 4 because each metatile uses 4 bytes<br />   asl<br />   tay ;use this as an index into the array of metatiles<br />   lda MetaTiles+0, y ;copy top left tile<br />   sta Buffer+0, x<br />   lda MetaTiles+1, y ;copy top right tile<br />   sta Buffer+1, x<br />   lda MetaTiles+2, y ;copy bottom left tile<br />   sta Buffer+32, x<br />   lda MetaTiles+3, y ;copy bottom right tile<br />   sta Buffer+33, x<br />   inx ;increment the output index by 1 metatile horizontally<br />   inx<br />   rts</div><br />Like I said, this can only access 64 metatiles, which is why I prefer the other method (which is a better option than using pointers, because it's simpler and faster).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Mon Sep 16, 2013 5:47 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[zkip]]></name></author>
<updated>2013-09-16T17:14:02-07:00</updated>
<published>2013-09-16T17:14:02-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10500&amp;p=118153#p118153</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10500&amp;p=118153#p118153"/>
<title type="html"><![CDATA[Re: Metatile troubles]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10500&amp;p=118153#p118153"><![CDATA[
Please forgive my abundance of question asking, and my un-ability to grasp this concept, but I still don't get it. :E<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />The index register (n this case, Y) can address up to 256 values, so if it contains #$05 and you do LDA MetaTileBlock00, y, that means &quot;get the top left tile of metatile number $05&quot;. That will work up until metatile number 255, after that you'll need pointers.<br /></div><br /><br />I understand this, but the way the labels are being used is confusing me. Say I've got 16 metatiles instead of the 4 we have now. MetaTileBlock00-MetaTileBlock10 in order. Now what? Would the routine still be effective? If so, why are only the first 4 corner offsets loaded? (edit: I know 4 tiles make up a 16x16 tile, but why load the first 4 labels instead of say the last 4 or middle 4?)<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5763">zkip</a> — Mon Sep 16, 2013 5:14 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2013-09-16T16:35:24-07:00</updated>
<published>2013-09-16T16:35:24-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10500&amp;p=118150#p118150</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10500&amp;p=118150#p118150"/>
<title type="html"><![CDATA[Re: Metatile troubles]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10500&amp;p=118150#p118150"><![CDATA[
<div class="quotetitle">zkip wrote:</div><div class="quotecontent"><br />Yes. I'm not sure if I understand your code there.<br /></div><br />Fair enough, you shouldn't use code you don't understand (don't ever copy/paste chunks of code together hoping they'll work if you don't understand the purpose of each chunk), but that's also not a reason to go for a solution way too more complex for your problem, specially if it's getting out of hand like in this case.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />It's using the labels I've made just for readability.<br /></div><br />Not at all. The subroutine I wrote is indeed not a direct replacement of yours, but it's close enough. The only thing missing is the initialization of the X register, which has to be set to 0 before the decoding loop begins (since there is no pointer being updated anymore). Something like this (adding to what kasumi wrote):<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   ldx #$00 ;star filling the buffer from 0<br />levelloop:<br />   sty scratch ;backup Y<br />   lda leveldata, y ;get the index of the metatile<br />   jsr WriteTileToBuffer ;decompress it to the buffer<br />   ldy scratch ;restore Y<br />   iny ;go to the next metatile<br />   cpx #$20 ;is the buffer full yet?<br />   bne levelloop ;if not, get another metatile</div><br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />wouldn't that be hardcoding them? What I'm trying to say here is how would I use your code but instead of the &quot;block 01&quot; &quot;block 02&quot; ect<br /></div><br />With a loop similar to the above, like Kasumi said.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />edit: also, using your method is only viable for one single metatile right? because there's nothing to stop the next jsr to that routine to keep overwriting itself<br /></div><br />The value in X is kept between calls to the function, so nothing is overwritten.<br /><br /><div class="quotetitle">zkip wrote:</div><div class="quotecontent"><br />Man this is confusing lol..... I guess I should have worded that better. I don't have separate banks of metatiles. Just one. No separate tileset..just the one.<br /></div><br />Then forget about pointers altogether, you really don't need them for this.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />What i don't understand is in your code your lda'ing with all of the block labels. why?<br /></div><br />Because you need to load the four corners of the metatile, so we have one LDA instruction for each corner.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />I was under the assumption that all one needed to do was supply the starting address of the metatiles data.<br /></div><br />Not necessary unless you have more than 256 metatiles. The index register (n this case, Y) can address up to 256 values, so if it contains #$05 and you do <strong>LDA MetaTileBlock00, y</strong>, that means <strong>&quot;get the top left tile of metatile number $05&quot;</strong>. That will work up until metatile number 255, after that you'll need pointers.<br /><br />You will maybe need pointers to read from your level map though, unless they're all &lt; 256 metatiles (which could be the case if there's no scrolling, since you need 240 metatiles to fill the whole screen).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Mon Sep 16, 2013 4:35 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[zkip]]></name></author>
<updated>2013-09-16T16:23:32-07:00</updated>
<published>2013-09-16T16:23:32-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10500&amp;p=118149#p118149</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10500&amp;p=118149#p118149"/>
<title type="html"><![CDATA[Re: Metatile troubles]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10500&amp;p=118149#p118149"><![CDATA[
Man this is confusing lol..... I guess I should have worded that better. I don't have separate banks of metatiles. Just one. No separate tileset..just the one. What i don't understand is in your code your lda'ing with all of the block labels. why? I was under the assumption that all one needed to do was supply the starting address of the metatiles data.<br /><br />edit:  say those labels weren't there. Could I just make a big table of the metatile data and make just one label?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5763">zkip</a> — Mon Sep 16, 2013 4:23 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Kasumi]]></name></author>
<updated>2013-09-16T15:59:37-07:00</updated>
<published>2013-09-16T15:59:37-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10500&amp;p=118148#p118148</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10500&amp;p=118148#p118148"/>
<title type="html"><![CDATA[Re: Metatile troubles]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10500&amp;p=118148#p118148"><![CDATA[
That's true. My bad, so you'd load A with the tile you want instead of Y.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3504">Kasumi</a> — Mon Sep 16, 2013 3:59 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[unregistered]]></name></author>
<updated>2013-09-16T15:56:38-07:00</updated>
<published>2013-09-16T15:56:38-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10500&amp;p=118147#p118147</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10500&amp;p=118147#p118147"/>
<title type="html"><![CDATA[Re: Metatile troubles]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10500&amp;p=118147#p118147"><![CDATA[
<div class="quotetitle">Kasumi wrote:</div><div class="quotecontent"><br />This writes tile $00.<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">     ldy #$00<br />     jsr WriteTileToBuffer<br /></div><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">     ldy #$0F<br />     jsr WriteTileToBuffer<br /></div><br />This writes tile $0F.<br /></div> How does WriteTileToBuffer write tile $0f?  The first instruction is tay... that would copy the accumulator into y overwriting y. Right?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3893">unregistered</a> — Mon Sep 16, 2013 3:56 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Kasumi]]></name></author>
<updated>2013-09-16T16:47:31-07:00</updated>
<published>2013-09-16T15:37:44-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10500&amp;p=118146#p118146</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10500&amp;p=118146#p118146"/>
<title type="html"><![CDATA[Re: Metatile troubles]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10500&amp;p=118146#p118146"><![CDATA[
<div class="quotetitle">zkip wrote:</div><div class="quotecontent"><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">,there any reason why you can't copy your tiles like this:<br /></div><br />What I'm trying to say here is how would I use your code but instead of the &quot;block 01&quot; &quot;block 02&quot; ect loading make it load from the beginning of a long set of metatile data?<br /></div><br />Edited because Kasumi is very silly...  <img src="http://forums.nesdev.com/images/smilies/icon_redface.gif" alt=":oops:" title="Embarassed" /> <br />By changing the value in A. <br />This writes tile $00.<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">     lda #$00<br />     jsr WriteTileToBuffer<br /></div><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">     lda #$0F<br />     jsr WriteTileToBuffer<br /></div><br />This writes tile $0F.<br /><br />I'm not sure what you mean that that will only write a single metatile. It will, but you put it in a loop to load the whole map. Something like:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">levelloop:<br />     sty scratch<br />     lda leveldata,y<br />     jsr WriteTileToBuffer<br />     ldy scratch<br />     iny<br />     dec tilesleft<br />     bpl levelloop<br /></div><br /><br />I'm not sure what you mean by &quot;there's nothing to stop the next jsr to that routine to keep overwriting itself&quot;.<br /><br />edit2: Also, I probably misunderstood your first question:<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />What I'm trying to say here is how would I use your code but instead of the &quot;block 01&quot; &quot;block 02&quot; ect loading make it load from the beginning of a long set of metatile data?<br /></div><br /><br />Currently, Tokumaru suggests this:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">WriteTileToBuffer:<br />   tay<br />   lda MetaTileBlock00, y<br />   sta Buffer+0, x<br />   lda MetaTileBlock01, y<br />   sta Buffer+1, x<br />   lda MetaTileBlock02, y<br />   sta Buffer+32, x<br />   lda MetaTileBlock03, y<br />   sta Buffer+33, x<br />   inx<br />   inx<br />   rts<br /></div><br />For the table you have:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">MetaTileBlock00:<br />  .db $23,$23,$23,$23<br />MetaTileBlock01:<br />  .db $20,$21,$30,$31<br />MetaTileBlock02:<br />  .db $22,$23,$32,$33<br />MetaTileBlock03:<br />  .db $01,$01,$01,$01<br /></div><br /><br />If you needed more sets, he's suggesting you do this: <br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">WriteTileToBuffer:<br />   tay<br />   lda (MetaTileTopLeft), y<br />   sta Buffer+0, x<br />   lda (MetaTileTopRight), y<br />   sta Buffer+1, x<br />   lda (MetaTileBottomLeft), y<br />   sta Buffer+32, x<br />   lda (MetaTileBottomRight), y<br />   sta Buffer+33, x<br />   inx<br />   inx<br />   rts<br /></div><br /><br />Say these are your tables:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">;Yeah, they're all the same. Pretend they're different<br />;And long!<br />GrasslandsMetaTileBlock00:<br />  .db $23,$23,$23,$23<br />GrasslandsMetaTileBlock01:<br />  .db $20,$21,$30,$31<br />GrasslandsMetaTileBlock02:<br />  .db $22,$23,$32,$33<br />GrasslandsMetaTileBlock03:<br />  .db $01,$01,$01,$01<br /><br />WaterlevelMetaTileBlock00:<br />  .db $23,$23,$23,$23<br /><br />WaterlevelMetaTileBlock01:<br />  .db $20,$21,$30,$31<br /><br />WaterlevelMetaTileBlock02:<br />  .db $22,$23,$32,$33<br /><br />WaterlevelMetaTileBlock03:<br />  .db $01,$01,$01,$01<br /></div><br /><br />To use indirect code, MetaTileTopLeft etc now refer to RAM rather than ROM.<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">;MetaTileTopLeft (and MetaTileTopLeft+1) stores a 16bit address.<br /><br />;To make it load from the grasslands set:<br />   lda #low(GrasslandsMetaTileBlock00);Not sure the syntax on your assembler<br />;But this loads the low byte of the address GrasslandsMetaTileBlock00<br />;Begins at<br />   sta MetatileTopLeft<br /><br />   lda #high(GrasslandMetaTileBlock00);Same for High byte<br />  sta MetaTileTopLeft+1<br />;Do the same for the other 3 blocks<br /></div><br />From there<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   lda (MetaTileTopLeft), y<br />   sta Buffer+0, x</div><br />Would load the Grasslands data as you'd expect. If you write the address for the waterlevel block to MetatileTopleft etc, that same code will load the waterlevel data.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3504">Kasumi</a> — Mon Sep 16, 2013 3:37 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Movax12]]></name></author>
<updated>2013-09-16T15:33:15-07:00</updated>
<published>2013-09-16T15:33:15-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10500&amp;p=118145#p118145</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10500&amp;p=118145#p118145"/>
<title type="html"><![CDATA[Re: Metatile troubles]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10500&amp;p=118145#p118145"><![CDATA[
<div class="codetitle"><b>Code:</b></div><div class="codecontent"> <br />STA &#91;ColumnNumY_Ptr,x&#93;<br /></div><br /><br />I doubt this is doing what you want, this is not the same as [pointer],y. There is nowhere in this code that needs pointers. Maybe if your metatile definitions were various sizes, you would need a pointer table to find the beginning of the metatile data.<br /><br />You can leave your data as is and multiply the metatile(0 to 3) to by 4 to find the start index of the relevant data or arrange it so all top left, top right etc are together: (all $23 cause I'm lazy)<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">MetaTileBlock00: .db $23,$23,$23,$23 ; all top left<br />MetaTileBlock01: .db $23,$23,$23,$23 ; all top right <br />MetaTileBlock02: .db $23,$23,$23,$23 ; all bottom left<br />MetaTileBlock03: .db $23,$23,$23,$23 ; all bottom right<br /></div><br /><br />Then look at tokumaru's code again.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4680">Movax12</a> — Mon Sep 16, 2013 3:33 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[zkip]]></name></author>
<updated>2013-09-16T14:11:11-07:00</updated>
<published>2013-09-16T14:11:11-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10500&amp;p=118143#p118143</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10500&amp;p=118143#p118143"/>
<title type="html"><![CDATA[Re: Metatile troubles]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10500&amp;p=118143#p118143"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />,there any reason why you can't copy your tiles like this:<br /></div><br />Yes. I'm not sure if I understand your code there. It's using the labels I've made just for readability. wouldn't that be hardcoding them? What I'm trying to say here is how would I use your code but instead of the &quot;block 01&quot; &quot;block 02&quot; ect loading make it load from the beginning of a long set of metatile data?<br /><br />edit: also, using your method is only viable for one single metatile right? because there's nothing to stop the next jsr to that routine to keep overwriting itself<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5763">zkip</a> — Mon Sep 16, 2013 2:11 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2013-09-16T13:45:57-07:00</updated>
<published>2013-09-16T13:45:57-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10500&amp;p=118141#p118141</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10500&amp;p=118141#p118141"/>
<title type="html"><![CDATA[Re: Metatile troubles]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10500&amp;p=118141#p118141"><![CDATA[
You appear to be doing unnecessary complex pointer operations, and making lots of mistakes along the way. For example, I don't see you ever setting the high bytes of ColumnNumX_Ptr or ColumnNumY_Ptr, so when you use those pointers you'll hardly get the addresses you expect. Also, you have the index of the metatile you want to draw in A when you call WriteTileToBuffer, but then you trash it with the <strong>LDA #HIGH(MT_Table)</strong> command.<br /><br />Still, errors aside, the solution you're trying to come up with is way more complicated than it should be. Is there any reason why you can't copy your tiles like this:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">WriteTileToBuffer:<br />   tay<br />   lda MetaTileBlock00, y<br />   sta Buffer+0, x<br />   lda MetaTileBlock01, y<br />   sta Buffer+1, x<br />   lda MetaTileBlock02, y<br />   sta Buffer+32, x<br />   lda MetaTileBlock03, y<br />   sta Buffer+33, x<br />   inx<br />   inx<br />   rts</div><br />You don't need pointers unless you have more than 256 types of metatiles throughout the game, but even if you do you can use this exact same code, except you'd use indirect addressing instead of absolute addressing for accessing the 4 corners of the metatile (you have to setup the 4 pointers whenever the tileset changes, which is usually between levels):<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">WriteTileToBuffer:<br />   tay<br />   lda (MetaTileTopLeft), y<br />   sta Buffer+0, x<br />   lda (MetaTileTopRight), y<br />   sta Buffer+1, x<br />   lda (MetaTileBottomLeft), y<br />   sta Buffer+32, x<br />   lda (MetaTileBottomRight), y<br />   sta Buffer+33, x<br />   inx<br />   inx<br />   rts</div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Mon Sep 16, 2013 1:45 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[unregistered]]></name></author>
<updated>2013-09-16T13:04:36-07:00</updated>
<published>2013-09-16T13:04:36-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10500&amp;p=118138#p118138</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10500&amp;p=118138#p118138"/>
<title type="html"><![CDATA[Re: Metatile troubles]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10500&amp;p=118138#p118138"><![CDATA[
<div class="quotetitle">koitsu wrote:</div><div class="quotecontent"><br /><tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">INC A</tt> is probably being assembled into opcode $1a, which is an undefined opcode on the 6502, and is probably causing you chaos.<br /></div><br /><br />Yes, executing undefined instructions is really bad... probably the cause of your infinite loop.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3893">unregistered</a> — Mon Sep 16, 2013 1:04 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[zkip]]></name></author>
<updated>2013-09-16T12:34:59-07:00</updated>
<published>2013-09-16T12:34:59-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10500&amp;p=118136#p118136</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10500&amp;p=118136#p118136"/>
<title type="html"><![CDATA[Re: Metatile troubles]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10500&amp;p=118136#p118136"><![CDATA[
Okay, that makes sense. However, it is producing different results but still seems to go into an infinite loop. Anyone know why? <img src="http://forums.nesdev.com/images/smilies/icon_eek.gif" alt=":shock:" title="Shocked" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5763">zkip</a> — Mon Sep 16, 2013 12:34 pm</p><hr />
]]></content>
</entry>
</feed>