<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=2&amp;t=4449" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2008-10-12T21:37:05-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=2&amp;t=4449</id>
<entry>
<author><name><![CDATA[Celius]]></name></author>
<updated>2008-10-12T21:37:05-07:00</updated>
<published>2008-10-12T21:37:05-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4449&amp;p=38439#p38439</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4449&amp;p=38439#p38439"/>
<title type="html"><![CDATA[Quickie Q on movement]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4449&amp;p=38439#p38439"><![CDATA[
Your idea actually sounds very practical, and something like it for my engine would be very great, actually. Currently, my game can only scroll at 8 pixels a frame at max, so I set myself a limit so that no enemy or object can move faster than 8 pixels. Also, this would be bad because a 4x4 pixel object if moving faster than 8 pixels a frame could fly through an object, which is bad if it needs to collide with it. Most objects that it'd need to collide with are at minimum 8 pixels wide, so this is good. The 3 bits integer would still allow me to keep the speed under 8 pixels a frame. Though I'm not going to use that exact format, it may give me some ideas to modify some things.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=138">Celius</a> — Sun Oct 12, 2008 9:37 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[smkd]]></name></author>
<updated>2008-10-12T20:01:21-07:00</updated>
<published>2008-10-12T20:01:21-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4449&amp;p=38436#p38436</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4449&amp;p=38436#p38436"/>
<title type="html"><![CDATA[Quickie Q on movement]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4449&amp;p=38436#p38436"><![CDATA[
I'm using seperate routines for updating speed, split into X and Y which can each handle negative numbers but since some entities don't move in both X/Y it makes sense to seperate them.<br /><br />I'm actually using the same speed format (for enemies) as SMW since I could just grab its routine at the same time.<br /><br />1 bit sign<br />3 bits integer<br />4 bits fraction<br /><br />So everything fits into one byte.  For the player I needed more gradual movement so I added an extra byte for some more fraction bits (currently using a 12bit value).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3295">smkd</a> — Sun Oct 12, 2008 8:01 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2008-10-12T15:08:31-07:00</updated>
<published>2008-10-12T15:08:31-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4449&amp;p=38425#p38425</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4449&amp;p=38425#p38425"/>
<title type="html"><![CDATA[Quickie Q on movement]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4449&amp;p=38425#p38425"><![CDATA[
I've been debugging Balloon Fight (JU) lately. As I strongly suspected, it uses 64 bits for each of 9 characters' position and velocity, 16 bits for each coordinate:<br />8 bits X displacement high<br />8 bits X displacement low<br />8 bits X velocity high<br />8 bits X velocity low<br />8 bits Y displacement high<br />8 bits Y displacement low<br />8 bits Y velocity high<br />8 bits Y velocity low<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Sun Oct 12, 2008 3:08 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Celius]]></name></author>
<updated>2008-10-12T12:37:16-07:00</updated>
<published>2008-10-12T12:37:16-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4449&amp;p=38423#p38423</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4449&amp;p=38423#p38423"/>
<title type="html"><![CDATA[Quickie Q on movement]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4449&amp;p=38423#p38423"><![CDATA[
I think you should have just one addition, but that's my opinion. Though in my scrolling routine, I do subtractions to scroll left and up, but this actually avoids complications in this case. Depending on what kind of game it's really a good idea to have the object handled with the same code no matter if it's facing left or right. If you have lots of objects, this will save you a lot of space in the long run.<br /><br />But Bregalad is probably right about the 16-bit coords. You are probably going to want to deal with precision bits (Like .5 pixels) so you can move something at 1.5 pixels a frame, or to give something a parabolic effect for gravity and such. But you can still use the "addition for subtraction" method for 16-bit, all you have to do for the code Bregalad posted would be:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">ldy Direction<br />lda XPosition<br />clc<br />adc PosAddTbl,Y<br />sta XPosition<br />lda XPositionHigh<br />adc PosAddTbl,Y<br />sta XPositionHigh<br />...<br /><br />PosAddTbl<br />.db $01, $ff<br />PosAddTblH:<br />.db $00,$ff<br /></div><br /><br />Though there are several things you can do to optimize this. I currently have to heavily optimize some of my AI code. If you were going to access that table a lot, you'd probably want to do something like this:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">ldy Direction<br />lda PosAddTbl,Y<br />sta ZTempVar1<br />lda PosAddTblH,Y<br />sta ZTempVar2<br /><br />lda XPosition<br />clc<br />adc ZTempVar1<br />sta XPosition<br />lda XPositionHigh<br />adc ZTempVar2<br />sta XPositionHigh<br />...<br /><br />PosAddTbl<br />.db $01, $ff<br />PosAddTblH:<br />.db $00,$ff<br /></div><br /><br />Where "ZTempVar" is a temporary variable in Zero Page. If you don't have any space reserved for TempVars in ZP, I highly highly advise reserving about 8 bytes for them.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=138">Celius</a> — Sun Oct 12, 2008 12:37 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2008-10-12T11:22:05-07:00</updated>
<published>2008-10-12T11:22:05-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4449&amp;p=38421#p38421</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4449&amp;p=38421#p38421"/>
<title type="html"><![CDATA[Quickie Q on movement]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4449&amp;p=38421#p38421"><![CDATA[
Do it like you prefer. You could do something like that :<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">ldy Direction<br />lda XPosition<br />clc<br />adc PosAddTbl,Y<br />sta XPosition<br />...<br /><br />PosAddTbl<br />.db $01, $ff<br /></div><br />But when doing a more complex game engine, you'll have to move 16-bit coordinates and do collision detection, etc... So you'll probably end up with different (but similar) routines for each direction.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Sun Oct 12, 2008 11:22 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Sivak]]></name></author>
<updated>2008-10-12T09:39:31-07:00</updated>
<published>2008-10-12T09:39:31-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4449&amp;p=38419#p38419</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4449&amp;p=38419#p38419"/>
<title type="html"><![CDATA[Quickie Q on movement]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4449&amp;p=38419#p38419"><![CDATA[
Ok.  I'm doing the part involving moving the sprite around and wanted to know this:<br /><br />If I want to just use one routine to move around, 1 pixel at a time, would having it so one variable = 1 or 255 be acceptable?<br /><br />So you basically do this:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">LDA spriteXposition<br />CLC<br />ADC &#40;either #$01 or #$FF&#41;<br />STA spriteXposition<br /></div><br /><br />Or should I just have two routines, one for addition and subtraction?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3374">Sivak</a> — Sun Oct 12, 2008 9:39 am</p><hr />
]]></content>
</entry>
</feed>