<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - &quot;Palette swapping&quot; now VS palette swapping then</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">&quot;Palette swapping&quot; now VS palette swapping then</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=21&amp;t=15311">http://forums.nesdev.com/viewtopic.php?f=21&amp;t=15311</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ittyBittyByte</b> [ Wed Dec 28, 2016 2:41 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>&quot;Palette swapping&quot; now VS palette swapping then</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If one wants to swap palettes in a modern game, one would use either GLSL shaders or create multiple images with different colors.<br />But on the NES, they obviously didn't have shaders. So how did they do it during actual rendering then? If one was to replace color pixel by pixel during drawing or draw anything at all pixel by pixel in a modern game performance would become very slow. The NES clearly found a very efficient way, so what was used? I cant find this straight info anywhere on the web including the wiki so I am asking here. Is the NES method of palette swapping impossible on modern hardware?<br /><br />To be clear what I mean is how does it get from the data of &quot;colors and tiles&quot; to be drawn on the screen with said colors<br /><br />PS The reason I ask is I was wanting to know if its possible or impossible to do 100% real palette swapping, not imitated using shaders, in a game these days? Thanks

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Wed Dec 28, 2016 3:05 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: &quot;Palette swapping&quot; now VS palette swapping then</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />There is <a href="https://wiki.nesdev.com/w/index.php/PPU_palettes" class="postlink">only one palette</a> (read: &quot;set/choice of colours&quot;) on the NES.  The colours depicted under the &quot;Palettes&quot; section are all you get.  Background tiles and sprites get separate palettes, but the &quot;set/choice of colours&quot; (that you have to choose from) are the same across both.  The <a href="http://nintendoage.com/forum/messageview.cfm?catid=22&amp;threadid=6082" class="postlink">Nerdy Nights tutorial</a> goes over this as well.<br /><br />For understanding the &quot;format&quot; of the data that defines what particular colour a pixel (as part of a tile), you need to understand this:<br /><br /><!-- m --><a class="postlink" href="https://wiki.nesdev.com/w/index.php/CHR_ROM_vs._CHR_RAM">https://wiki.nesdev.com/w/index.php/CHR_ROM_vs._CHR_RAM</a><!-- m --><br /><!-- m --><a class="postlink" href="https://wiki.nesdev.com/w/index.php/PPU_attribute_tables">https://wiki.nesdev.com/w/index.php/PPU ... ute_tables</a><!-- m --><br /><br />Overall, in my opinion, <a href="http://web.textfiles.com/games/nestech.txt" class="postlink">my nestech.txt document</a> from days of old explains the latter a lot better (the wiki is over-complicated for beginners).  Refer to Section 4, subsections D, E, and F (you may also <a href="https://wiki.nesdev.com/w/index.php/Nestech.txt" class="postlink">want to read this</a>).  The <a href="http://nintendoage.com/forum/messageview.cfm?catid=22&amp;threadid=8172" class="postlink">Nerdy Nights tutorial</a> also has a section on this.<br /><br />Some advanced games use a combination of sprites and background tiles to give the visual impression of &quot;more colours than normal&quot;.  rainwarrior recently <a href="https://www.youtube.com/watch?v=x_PM79SZ77E" class="postlink">put together a video of Tecmo Bowl's intro</a> that depicts exactly this (read the video description slowly to understand what is being shown).<br /><br />For **extremely** advanced use, there is a demonstration from blargg that <a href="https://www.youtube.com/watch?v=ecJiKqQonDc" class="postlink">does this</a>, however, this is EXTREMELY cycle-precise code and a lot of &quot;PPU trickery&quot;.  The wiki has details on how this was accomplished, as it does palette manipulation during HBlank: <!-- m --><a class="postlink" href="http://wiki.nesdev.com/w/index.php/Full_palette_demo">http://wiki.nesdev.com/w/index.php/Full_palette_demo</a><!-- m --> (once more: EXTREMELY advanced topic).  Because of how all of this is accomplished, it's really only plausible for a kind of demonstration, and not feasible for an actual game.<br /><br />The rest of your statement is vague, with some parts that <a href="http://begthequestion.info/" class="postlink">begs the question</a>.  &quot;The NES surely found a very efficient way [to accomplish what I happen to think is going on]&quot; is, uh, yeah... :P  Every game is different.  So why don't you provide some references to games which &quot;found a very efficient way&quot; [to &quot;palette swap&quot;] so we can explain to you what's actually going on (hint: 99% of the time, there is no &quot;palette swapping&quot;).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ittyBittyByte</b> [ Wed Dec 28, 2016 3:12 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: &quot;Palette swapping&quot; now VS palette swapping then</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">koitsu wrote:</div><div class="quotecontent">There is <a href="https://wiki.nesdev.com/w/index.php/PPU_palettes" class="postlink">only one palette</a> (read: &quot;set/choice of colours&quot;) on the NES.  The colours depicted under the &quot;Palettes&quot; section are all you get.  Background tiles and sprites get separate palettes, but the &quot;set/choice of colours&quot; (that you have to choose from) are the same across both.  The <a href="http://nintendoage.com/forum/messageview.cfm?catid=22&amp;threadid=6082" class="postlink">Nerdy Nights tutorial</a> goes over this as well.<br /><br />For understanding the &quot;format&quot; of the data that defines what particular colour a pixel (as part of a tile), you need to understand this:<br /><br /><!-- m --><a class="postlink" href="https://wiki.nesdev.com/w/index.php/CHR_ROM_vs._CHR_RAM">https://wiki.nesdev.com/w/index.php/CHR_ROM_vs._CHR_RAM</a><!-- m --><br /><!-- m --><a class="postlink" href="https://wiki.nesdev.com/w/index.php/PPU_attribute_tables">https://wiki.nesdev.com/w/index.php/PPU ... ute_tables</a><!-- m --><br /><br />Overall, in my opinion, <a href="http://web.textfiles.com/games/nestech.txt" class="postlink">my nestech.txt document</a> from days of old explains the latter a lot better (the wiki is over-complicated for beginners).  Refer to Section 4, subsections D, E, and F (you may also <a href="https://wiki.nesdev.com/w/index.php/Nestech.txt" class="postlink">want to read this</a>).  The <a href="http://nintendoage.com/forum/messageview.cfm?catid=22&amp;threadid=8172" class="postlink">Nerdy Nights tutorial</a> also has a section on this.<br /><br />Some advanced games use a combination of sprites and background tiles to give the visual impression of &quot;more colours than normal&quot;.  rainwarrior recently <a href="https://www.youtube.com/watch?v=x_PM79SZ77E" class="postlink">put together a video of Tecmo Bowl's intro</a> that depicts exactly this (read the video description slowly to understand what is being shown).<br /><br />For **extremely** advanced use, there is a demonstration from blargg that <a href="https://www.youtube.com/watch?v=ecJiKqQonDc" class="postlink">does this</a>, however, this is EXTREMELY cycle-precise code and a lot of &quot;PPU trickery&quot;.  The wiki has details on how this was accomplished, as it does palette manipulation during HBlank: <!-- m --><a class="postlink" href="http://wiki.nesdev.com/w/index.php/Full_palette_demo">http://wiki.nesdev.com/w/index.php/Full_palette_demo</a><!-- m --> (once more: EXTREMELY advanced topic).  Because of how all of this is accomplished, it's really only plausible for a kind of demonstration, and not feasible for an actual game.<br /><br />The rest of your statement is vague, with some parts that <a href="http://begthequestion.info/" class="postlink">begs the question</a>.  &quot;The NES surely found a very efficient way [to accomplish what I happen to think is going on]&quot; is, uh, yeah... <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" />  Every game is different.  So why don't you provide some references to games which &quot;found a very efficient way&quot; [to &quot;palette swap&quot;] so we can explain to you what's actually going on (hint: 99% of the time, there is no &quot;palette swapping&quot;).</div><br /><br />Sorry, by palette swapping I meant setting the colors to use on a sprite, like how mario can become luigi as an example, is that not what palette swapping is? my probably very very incorrect current understanding is that tiles are just arrays of numbers and those are converted into colored pixels which is what i mean by drawing it to the screen, but like i said its probably wrong

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>hackfresh</b> [ Wed Dec 28, 2016 3:24 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: &quot;Palette swapping&quot; now VS palette swapping then</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><strong>From the wiki:<br />&quot; Each sprite can use the three colors from one of the sprite palettes. The choice of palette is in attribute 2 of each sprite Sprites in the NES can use one of 4 possible sprite color SETS&quot;</strong><br /><br />You can change(&quot;swap&quot;) an entire 16 byte SPRITE color set or a just certain colors during vblank <br /><br /><strong>From the wiki:<br />&quot;The NTSC video signal is made up of 262 scanlines, and 20 of those are spent in vblank state. After the program has received an NMI, it has about 2270 cycles to update the palette, sprites, and nametables as necessary before rendering begins.&quot;</strong><br />  <br />If the rendering is off you can update as much as you want.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Joe</b> [ Wed Dec 28, 2016 3:45 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: &quot;Palette swapping&quot; now VS palette swapping then</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">ittyBittyByte wrote:</div><div class="quotecontent">PS The reason I ask is I was wanting to know if its possible or impossible to do 100% real palette swapping, not imitated using shaders, in a game these days? Thanks</div><br />On the NES, the graphics are stored as 8x8 tiles. These tiles don't have color. They only specify where each color should go, not what it should be. To use your example, Mario's hat and Luigi's hat might both use &quot;color #1&quot;, and the game will set &quot;color #1&quot; to be red for Mario and green for Luigi.<br /><br />On modern systems, graphics are often bitmap textures with complete color information. Palette swaps are usually achieved by replacing the texture with one that looks similar but has different colors.<br /><br />It's also possible for modern systems to use graphics similar to NES tiles, that specify where colors should go but not what those colors should be. In that case, the palette can be swapped just by changing the &quot;what the colors should be&quot; part.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Wed Dec 28, 2016 4:20 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: &quot;Palette swapping&quot; now VS palette swapping then</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Old graphics cards almost always used a &quot;palette&quot;, which was a small chunk of comparatively very fast memory, able to transform a (usually) smaller number of bits to a larger number.<br /><br />In the case of the NES and Sega Master System, this transformed five bits to six. The Game Gear 5→12; the Turbografx 16/PCE  9→9; the Genesis 6→9 ish (ignoring bright and dim modes); and the SNES 8→15. In the case of the Tandy graphics, 2→4; EGA card, 4→6; and the VGA card, gave the choice of either 4→6→18 or the simpler 8→18.<br /><br />At some point in the development of modern graphics cards, it was decided that having dedicated hardware to do this was silly, and applying a palette to a picture is an <a href="https://en.wikipedia.org/wiki/Embarrassingly_parallel" class="postlink">embarrassingly parallel</a> task, perfectly suited to a GPU's processing ability.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Wed Dec 28, 2016 9:13 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: &quot;Palette swapping&quot; now VS palette swapping then</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">ittyBittyByte wrote:</div><div class="quotecontent">If one was to replace color pixel by pixel during drawing or draw anything at all pixel by pixel in a modern game performance would become very slow. The NES clearly found a very efficient way, so what was used?</div><br />The NES does precisely this: it draws every pixel every frame. The PPU repeats the process of drawing the screen from pixel (0, 0) down to pixel (255, 239) 60 times per second (or 50, if PAL), based on data from the name tables, pattern tables, OAM, palette RAM and its internal registers. If any of these things change, the generated image will immediately reflect the changes.<br /><br />The PPU was designed to draw images this fast, and it never slows down, because all of its tasks take a constant amount of time. What slows games down is physics, AI, and the overall complexity of the game world, but the PPU will still output 60 (or 50) images per second, even if some of these images are repeats due to the CPU not having enough time to change the video parameters.<br /><br />Anyway, palette changes on the NES are fast because the program only has to change 25 bytes to select all new colors, and when drawing the next frame the PPU will repeat the entire drawing process, but using the new colors this time.<br /><br />I don't know much about modern game programming, but I'm pretty sure that at lower resolutions you can still redraw the entire image pixel by pixel, since many emulators do that while running full speed. If you're going for higher resolutions though, I don't see why you'd need paletted graphics...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FrankenGraphics</b> [ Thu Dec 29, 2016 3:59 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: &quot;Palette swapping&quot; now VS palette swapping then</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The easiest way to achieve the visual effect of paletted graphics is using graphics that use palettes.  <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /> That's vector graphics. You can manipulate read data from an .svg or .xml file with very little load. That's one of the main reasons mobile interfaces rely heavily on vector graphics. Or you could come up with or call a colour replacement function in your library for raster graphics, but it won't be as fast. Preload everything you can.<br /><br /><br />The reason pixel by pixel manipulation isn't percieved as as fast on modern computers is not only because of resolution, but also because you've got countless buffers of gfx data added on top of each other or blended using algorithms (yet in more buffers) before sent to the final drawing stage. You only have two 'layers' on the NES (background, Sprite), and there's no blending mode, hence, it is &quot;efficient&quot;, because the task is small and consistent.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>M_Tee</b> [ Thu Dec 29, 2016 8:48 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: &quot;Palette swapping&quot; now VS palette swapping then</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Indexed color images such as png contain an embedded color table, right? Would it be possible to alter that data on the fly? As in load a png with an altered color table?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Thu Dec 29, 2016 9:02 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: &quot;Palette swapping&quot; now VS palette swapping then</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">WheelInventor wrote:</div><div class="quotecontent">The reason pixel by pixel manipulation isn't percieved as as fast on modern computers is not only because of resolution, but also because you've got countless buffers of gfx data added on top of each other or blended using algorithms (yet in more buffers) before sent to the final drawing stage.</div><br />I think it's really just about GPUs. There was some <a href="https://www.opengl.org/registry/specs/EXT/paletted_texture.txt" class="postlink">support for indexed texture formats</a> a long time ago, but it's pretty much died off, I think? Without GPU acceleration, you can't do as much stuff in the same amount of time, thus: &quot;palettes are slow&quot;.<br /><br />There a number of ways you can do palettes with the GPU otherwise, but there's generally a loss of efficiency vs. coloured textures, and possibly inconvenient to implement. (e.g. placing palette data in a lookup texture and using a shader to look it up per-pixel, separating paletted textures into colour planes and using shader constants and multiple layers to draw them...)<br /><br /><div class="quotetitle">M_Tee wrote:</div><div class="quotecontent">Indexed color images such as png contain an embedded color table, right? Would it be possible to alter that data on the fly? As in load a png with an altered color table?</div><br />Replacing colours at load time is not generally a problem. Having to do it every frame is the problem: you are software rendering the texture, and then re-uploading it to the GPU.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Dec 30, 2016 9:54 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: &quot;Palette swapping&quot; now VS palette swapping then</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />But doing the lookup shader will still be cheaper than software rendering, correct?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Fri Dec 30, 2016 10:25 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: &quot;Palette swapping&quot; now VS palette swapping then</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Most likely, yes. The idea that palettes are slow on a GPU is usually a comparison against designing your application to not need palettes, or from a time where shaders weren't so ubiquitously supported.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>