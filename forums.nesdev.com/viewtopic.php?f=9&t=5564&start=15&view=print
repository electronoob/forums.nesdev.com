<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Improving UxROM - New mapper ideas</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Improving UxROM - New mapper ideas</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=9&amp;t=5564">http://forums.nesdev.com/viewtopic.php?f=9&amp;t=5564</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>3</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Wed Sep 16, 2009 8:33 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">But conflict problem would STILL appear if you used adress lines.</div>
<br />How? The address that was written to will be the only thing on the address bus when the '161 is fed. I don't see the problem...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Wed Sep 16, 2009 9:17 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">But conflict problem would STILL appear if you used adress lines.</div><br />How? The address that was written to will be the only thing on the address bus when the '161 is fed. I don't see the problem...</div>
<br />
<br />The bank command should work, but the ROM and CPU will still be having an epic struggle on the data bus.  I know it's not permanently damaging because I've done it a bunch of times on my NES, but I don't know exactly what effects it'll have, or if one chip can "win" (my programs always locked up in that case).
<br />
<br />It'd be easy enough to test, just set a conflict in some of the upper bits an existing mapper doesn't use.  Though I'd imagine the results could vary by the type of ROM used.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Wed Sep 16, 2009 10:20 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Memblers wrote:</div><div class="quotecontent">The bank command should work, but the ROM and CPU will still be having an epic struggle on the data bus.</div>
<br />So the CPU and the ROM will try to place a value on the data bus at the same time, but this also happens with regular UNROM and a bunch of other mappers that don't prevent conflicts. Does it make a difference when the values are different from each other?
<br />
<br />I though that the problem with bus conflicts was that the outcome of the battle was unpredictable, so the bank number would be messed up in case the values were different from each other, but I never thought there was the actual chance of damage or anything like that, because with UNROM we always have two chips putting values on the same bus at the same time.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Thu Sep 17, 2009 6:40 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I though that the problem with bus conflicts was that the outcome of the battle was unpredictable</div>
<br />The problem is the battle istelf. This is never supposed to happen, and can damge chips permently.
<br />
<br />Overall it doesn't make much of a difference if you use adress lines or data lines - both way bus conflicts will appear if you use writes on $8000-$ffff. You could use writes or reds to other areas, but then more logic would need to be added, and both for adress or data lines.
<br />
<br />And like Memblers said it don't waste much space if you do it like he mentionned (I do). If you are going for the variable way use a table instead, and it really shouldn't be a problem.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>kyuusaku</b> [ Thu Sep 17, 2009 8:17 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Conflicts are pretty predictable, generally chips can sink more current than they can source so the bus will be ANDed. The danger is that if a chip's output can source a lot and the other can sink a lot, and somehow this happens frequently enough or the CPU crashes and gets stuck in conflicting state, an output could fry.
<br />
<br />Still there's a slight advantage to using the address bus--you don't need a table:
<br />
<br />*A0-7 are latched*
<br />
<br />LDX banknum
<br />LDA $8x00, X
<br />STA $8x00, X
<br />
<br />VS
<br />
<br />LDA banknum
<br />TAX
<br />STA table, X

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Thu Sep 17, 2009 8:32 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You don't need a table, but it waste 2 bytes and 2 cycles as opposed to the D lines, and I find pretty pathetic tokumaru is bothered about a 8-byte or 16-byte table after doing advertisement to have a 256-byte table holding  a plain (0, 1, 2, ...., 254, 255) list so that some stuff could be done faster.
<br />Even if those would be about different projects, you have to admit that if your project is too small to have enough room to store like 16 dummy entries in ROM, then it's not likely you'll need "variable" switching and can't do it like Membler said (which is what I do on my current project).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Sep 17, 2009 8:58 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Or it's a matter of needing all three registers (A, X, Y) at the moment.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>kyuusaku</b> [ Thu Sep 17, 2009 9:04 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Since the 256 byte plain table would make the most sense aligned to a page, it could already be reused for preventing bus conflicts :D But if for whatever reason someone doesn't have that table and has an 8-bit latch, I guess address lines could work better, except you'd have to modify boards...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Thu Sep 17, 2009 12:39 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">The problem is the battle istelf.</div><br />You mean only when the values are different? So what UNROM does (both chips output the same value to the same bus) isn't electrically wrong and will never cause any damage? Weird.<br /><br /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">You don't need a table, but it waste 2 bytes and 2 cycles as opposed to the D lines</div><br />How does it waste bytes and cycles? Here are 3 examples that show that using the address lines is either faster or the same as using data lines with bus conflicts:<br /><br /><strong>Constant bank number:</strong><br /><br />Data lines:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">Address:<br />&nbsp; &nbsp;lda #BANK_NUMBER<br />&nbsp; &nbsp;sta Address+1</div><br /><br />Address lines:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;sta $8000+BANK_NUMBER</div><br /><br /><strong>From variable:</strong><br /><br />Data lines:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;lda BankNumber<br />&nbsp; &nbsp;tax<br />&nbsp; &nbsp;sta Table, x</div><br /><br />Address lines:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;ldx BankNumber<br />&nbsp; &nbsp;sta $8000, x</div><br /><br /><strong>From multiple variables:</strong><br /><br />Data lines:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;lda BankNumber<br />&nbsp; &nbsp;ora Mirroring<br />&nbsp; &nbsp;tax<br />&nbsp; &nbsp;sta Table, x</div><br /><br />Address lines:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;lda BankNumber<br />&nbsp; &nbsp;ora Mirroring<br />&nbsp; &nbsp;tax<br />&nbsp; &nbsp;sta $8000, x</div><br /><br />Using the address lines is shorter and faster in 2 cases, and equal to using the data lines in one case. I fail to see how it wastes cycles or bytes.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I find pretty pathetic tokumaru is bothered about a 8-byte or 16-byte table after doing advertisement to have a 256-byte table holding  a plain (0, 1, 2, ...., 254, 255) list so that some stuff could be done faster.</div>
<br />Watch your words, man. Every once in a while we see you saying that people do "stupid" or, in this case, "pathetic" things just because they go against your own way of working. That's unnecessarily offensive.
<br />
<br />Anyway, each project is a project. For one particular project I thought that the advantages of having that huge table outweighed the disadvantage of losing so much space, but this doesn't mean it will be so for every project I work on.
<br />
<br />However, in the case of address vs data lines, it's not a matter of advantages vs disadvantages, because there are no disadvantages. Every way you look at it, address lines win, so provided that I'm modifying a board already, and I'm willing to rewire it to use address lines, why the hell would I choose to waste any ROM for something that doesn't bring any advantages?
<br />
<br />I can see why you'd choose to lose something in order to gain something else, but loosing it just just because everyone else has so far instead of trying to make something better is just fear of change.
<br />
<br />Believe me, if I knew more about electronics I wouldn't come here and bother you guys with this crap, but at this point we're already used to sharing experiences, so the best I can do for now is asking you guys about how some things I still don't understand well.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Thu Sep 17, 2009 1:40 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br /><br />Watch your words, man. Every once in a while we see you saying that people do "stupid" or, in this case, "pathetic" things just because they go against your own way of working. That's unnecessarily offensive.</div>
<br />Hey man sorry if you are in some kind of paranoia and take everything I say as insult I can't do anything. I don't know a very large english vocabulary because it's a language I learned so I just use the words I know. I just remembered you making publicity for the 256-byte identity table, and then hearing complaints about much smaller tables wasting ROM space it just doesn't make that much sense, but if it's for separate project it does. Still, 16 bytes rarely do any difference at all.
<br />
<br />Whathever you pick, adress lines or data line, YOU SHOULD'T let bus conflicts happen, like you appear to want to do. You're basically saying that if the conflicting bus isn't used to latch the register, it won't be bad, but this is wrong.
<br />
<br />For example you do this :
<br />lda #$05
<br />sta $8004    ;$8004 = $04
<br />Here the values inside ROM is $04, and the value inside the accumulator is 5 so a conflict appear on the line D0. When doing the write instruction, a output transistor inside the CPU will conduct electricity form VCC to D0 to output a '1'. But at the same time, a transisor inside your EPROM will conduct electicity from GND to the D0 line, because you don't disable it on writes. So that will be a major short-circuit between GND and VCC, and *you must never let that happen*.
<br />
<br />In practice, because none of the used transistors are "perfect" transitors, so instead of that they will let a maximum current flow trough and overheat. If this happens for a few ns once in a while it may not damage them permantly, but you still shouldn't do that. It may cause really damage and completely ruin your EPROM and/or your CPU, so you have to either use cheap "anti-bus conflicts tables", no matter if you use A or D lines for latching, or use an extra NOT gate to invert R/W and place it on /OE (in addition to having /CE connected to /ROMSEL), effectively disabling the ROM on writes and preventing conflicts.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Thu Sep 17, 2009 2:11 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">Hey man sorry if you are in some kind of paranoia and take everything I say as insult I can't do anything.</div><br />It's just that it's not the first time I've seen you call other people's decisions "stupid" and things like that. That's not nice, specially since you don't know much about their projects and what kind of trade offs they have decided to do by the time you talk to them.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I just remembered you making publicity for the 256-byte identity table, and then hearing complaints about much smaller tables wasting ROM space it just doesn't make that much sense</div><br />I understand that. If I had decided to always use that table, I probably wouldn't worry about bus conflicts (except for the extra couple of cycles necessary for every mapper write - but, hey, still much better than an MMC1). Just so you know, I rewrote most of the Sonic engine and I haven't used the table the second time around. I guess my programming style changed enough that I ended up coding things without feeling the need to do everything with registers.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Still, 16 bytes rarely do any difference at all.</div><br />16 isn't such a big deal, but since I plan using 5 bits for bank selection and 2 for mirroring, that's 128 bytes, which must be on the hardwired bank. It's very important to save space on the hardwired bank, because it usually contains most of the important code, while the other banks hold mostly data or code that isn't used so frequently. So wasting space in that bank with tables is not such a great idea.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">You're basically saying that if the conflicting bus isn't used to latch the register, it won't be bad, but this is wrong.</div><br />I did think this was the case, yes, but I'm not saying it is so, specially considering that I'm an electronics newbie. If you say the conflicts are bad for the parts, I'll believe it.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">So that will be a major short-circuit between GND and VCC, and *you must never let that happen*.</div><br />OK, I got that. What I found weird is that Nintendo would make a board that can be so dangerous. Any programmer can make mistakes and write values to the wrong places. A program crashing could make dangerous writes.<br /><br />Here is something that confuses me: isn't there a delay between the time the chips are instructed to fetch a byte and the time it's actually placed on the bus? And doesn't each chip take a different amount of time to do that? This would mean that, even for a very short period of time, there would be conflicts on the bus until both chips made their outputs stable. Is there anything preventing this from happening?<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">so you have to either use cheap "anti-bus conflicts tables", no matter if you use A or D lines for latching, or use an extra NOT gate to invert R/W and place it on /OE (in addition to having /CE connected to /ROMSEL), effectively disabling the ROM on writes and preventing conflicts.</div>
<br />OK, if you say so, I believe it. I guess that inverting R/W is still a good option.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Fri Sep 18, 2009 12:12 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Oh if you use 7 bits yes 128 bytes will be way too much for an anti-bus conflict table. So definitely use logic against bus conflicts, then feel free to use either adresses or data byte whenever is your preference. I'm pretty sure a lot of pirate mappers (like mapper 15) uses adresses for writing to the mapper. This alows to latch up to 15 bits easily.
<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I understand that. If I had decided to always use that table, I probably wouldn't worry about bus conflicts (except for the extra couple of cycles necessary for every mapper write - but, hey, still much better than an MMC1).</div><br />Again I have a hard time seeing how 2 cycles wasted for a "tax" now and then would make your game suffer from heavy slowdowns.<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">OK, I got that. What I found weird is that Nintendo would make a board that can be so dangerous. Any programmer can make mistakes and write values to the wrong places. A program crashing could make dangerous writes.</div><br />Ture. When I insert a cart, often I get a grey screen, probably due to at least one of the PRG lines doing bad contact with the connector. Then the CPU does wrong instructions, and could possibly create bus conflicts, or do undesirable writes to battery-backed SRAM (this DOES happen frequenty to me).<br />About bus conflicts if it happens only on a few ns once in awhile... your NES probably won't explode but still I'd avoid it at all costs. I'm not a chip manufacturer, I don't know exactly how they are done inside so I don't know if it could damage the transistors or not. But I'll just assume it could.<br />BTW one of my NES has stopped working for a while I ask myself if it could be something about that.<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">OK, if you say so, I believe it. I guess that inverting R/W is still a good option.</div>
<br />Yes, if you use some logic chips I doubt you'll get an exact number of 74 gates used. A lot of stuff can substitute a NOT gate/inverter. Use a free NAND gate or NOR gate by tying both input togeter, you could aslo use a free multiplexer or de-multiplexer or whathever. You could even do a transistor-resistor NAND gate but I doubt you'll save costs that way (you'll save board space tough).
<br />
<br />EDIT : If you somehow have no free gate to invert R/W, just do like kyuusaku says and do a lda, sta pair when writing to your mapper so that it does get past bus conflicts, while using A lines for latching.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Fri Sep 18, 2009 8:50 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">just do like kyuusaku says and do a lda, sta pair when writing to your mapper so that it does get past bus conflicts, while using A lines for latching.</div>
<br />Yeah, that would be as safe as any UNROM cart is. It would be a bit slower and would need to overwrite the accumulator, but we could still latch up to 15 bits with no need for a table. Somehow I missed he said that. Sorry, kyuusaku, that is a good idea if you can't prevent bus conflicts with hardware.
<br />
<br />An interesting thing that can be done by latching the address lines is separating the information to latch across the 2 bytes of the address in some logical way (wiring the board in a way that it will latch some bits from each byte), such as using the high byte for mirroring and the low one for PRG bankswitching. Then you wouldn't need to combine them all the time, you could just do something like this:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;;A contains the mirroring bits &#40;+ $80&#41; and Y contains the bank index<br />&nbsp; &nbsp;sta Mirroring+1<br />&nbsp; &nbsp;lda &#40;Mirroring&#41;, y ;omit if board doesn't have bus conflicts<br />&nbsp; &nbsp;sta &#40;Mirroring&#41;, y</div>
<br />
<br />Mirroring+0 would have to contain 0 at all times. Or you could just store the bank number there and use those two bytes to know what was last written to the mapper (Y would have to be 0 on mapper writes then). Anyway, the interesting thing is that you could keep the different mapper functions almost independent from each other even though you don't decode the address in any way.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Fri Sep 18, 2009 9:04 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Wow tokumaru this is a great idea ! It looks almost as pro as an advanced mapper, while still being really simple on the hardware side. As long as you use the lda/sta pair you'll be safe for bus conflicts (at least safe when the programm is running as expected).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Fri Sep 18, 2009 8:08 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Guys, there is one thing I'm finding weird...
<br />
<br />I'm looking at the '161 datasheet, and apparently it's clocked on the rising edge of CLK, but NES carts connect PRG /CE to that pin. When the cart is accessed, PRG /CE is low, so how does the '161 get clocked? What am I missing?

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>3</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>