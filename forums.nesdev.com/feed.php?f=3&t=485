<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=3&amp;t=485" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2005-08-28T11:26:37-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=3&amp;t=485</id>
<entry>
<author><name><![CDATA[Zepper]]></name></author>
<updated>2005-08-28T11:26:37-07:00</updated>
<published>2005-08-28T11:26:37-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=485&amp;p=4110#p4110</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=485&amp;p=4110#p4110"/>
<title type="html"><![CDATA[cpu emu implementation]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=485&amp;p=4110#p4110"><![CDATA[
Example: LDA ( A = value ). So, value = readvalue(offset), where offset is BYTE (immediate byte, zero-page) or WORD (absolute). ^_^;;<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=39">Zepper</a> — Sun Aug 28, 2005 11:26 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2005-08-25T17:39:27-07:00</updated>
<published>2005-08-25T17:39:27-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=485&amp;p=4059#p4059</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=485&amp;p=4059#p4059"/>
<title type="html"><![CDATA[cpu emu implementation]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=485&amp;p=4059#p4059"><![CDATA[
I'm posting my reply here since it seems appropriate to this thread. There has been recent blurring of thread topics (that NES Snake thread was the worst heh) and I'm trying to keep things relevant to the topic.<br /><br /><div class="quotetitle">Fx3 wrote:</div><div class="quotecontent"><br />(originally posted to the thread "<a href="http://nesdev.com/bbs/viewtopic.php?p=4054#4054" class="postlink">Reading opcodes directly without read function</a>")<br /><br />Opcodes that access RAM (or the stack) have a pointer, rather than a (*hook)(). After fetching the opcode, it jumps to proper address mode (goto _address_mode_XX), and another jumptable to execute the opcode. I could reduce the code size by more than 75% because a few addressing modes (after the proper opcode/address data fetching) do the same of others.<br /></div><br /><br />I see, you're decoding the addressing mode of the instruction, then the opcode. Due to the 6502's very regular opcode layout, this is fairly easy to do. This way the address mode is handled in one place and without any function calls.<br /><br />How do you efficiently determine whether the instruction has an addressing mode, and which set of modes it uses? (some instructions have a restricted set, or slight changes, i.e. LDX zp,Y).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Thu Aug 25, 2005 5:39 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Anes]]></name></author>
<updated>2005-08-11T17:40:25-07:00</updated>
<published>2005-08-11T17:40:25-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=485&amp;p=3677#p3677</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=485&amp;p=3677#p3677"/>
<title type="html"><![CDATA[cpu emu implementation]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=485&amp;p=3677#p3677"><![CDATA[
thanks both for the advice.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=72">Anes</a> — Thu Aug 11, 2005 5:40 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Omega]]></name></author>
<updated>2005-08-11T12:13:11-07:00</updated>
<published>2005-08-11T12:13:11-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=485&amp;p=3657#p3657</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=485&amp;p=3657#p3657"/>
<title type="html"><![CDATA[cpu emu implementation]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=485&amp;p=3657#p3657"><![CDATA[
google has a good profiler at code.google.com under perftools.<br /><br />As far a switch vs function pointer. The best thing to do is put the opcodes that are used the most in the switch and lesser used opcodes in a function pointer array. The reason for this is to prevent cache busting. Though the CPU is probably not the bottle neck, unless your addressing calls are not inlined. The PPU rendering is my biggest bottle neck, and I greatly improved it by creating a meta bitmap and rendering the whole thing at one time. 1 function call vs 240 .... 35% performance boost. All in all, everyting SHOULD take less than 500,000,000 cycles/sec. <br /><br />Also, be carfull about O flags. A Os flag gives me the best performance, while 03 eats too much memory, and slows things down a lot. But this is all gcc and not MVC.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=155">Omega</a> — Thu Aug 11, 2005 12:13 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[teaguecl]]></name></author>
<updated>2005-08-11T10:47:46-07:00</updated>
<published>2005-08-11T10:47:46-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=485&amp;p=3652#p3652</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=485&amp;p=3652#p3652"/>
<title type="html"><![CDATA[cpu emu implementation]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=485&amp;p=3652#p3652"><![CDATA[
I've had performance issues with my emulator as well, and have re-designed it multiple times.  I've had incarnations of the CPU of both the "giant switch/case" and "array of function pointer" type.  What I found was that the "switch" was faster if your compiler was smart enough to implement it as a jump table (Visual Studio did, as well as gcc with -O3).  This is because in the "function pointer" solution you are always making function calls (they cannot be inlined in this solution) which uses the stack, which wastes time.<br /><br />However, the most important thing I learned was that the CPU was NOT the source of my sluggishness.  In fact, the CPU was running over 900% real time speeds on a 350Mhz P2 in either situation.  The PPU is actually much harder to implement efficiently, as it does lot's of operations that don't map well to x86 instructions.  However, my PPU was "fast enough" as well.  In my situation the culprit was actually the code that drew the pixels on the screen!  This was true for both DirextX and SDL graphic libraries.  I'm pretty sure I am doing the pixel drawing as efficiently as possible (drawing to the backbuffer, locking before acceses, etc.) but it still is insanely slow.<br />So I second the above advice, use a profiler and figure out where the bottleneck is, it likely is not where you think.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=29">teaguecl</a> — Thu Aug 11, 2005 10:47 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2005-08-11T00:56:59-07:00</updated>
<published>2005-08-11T00:56:59-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=485&amp;p=3640#p3640</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=485&amp;p=3640#p3640"/>
<title type="html"><![CDATA[cpu emu implementation]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=485&amp;p=3640#p3640"><![CDATA[
Now is a great time that you could check out the profiling tools. With them you can actually write different test programs and <em>find out</em> which is fastest (and by how much). For simple cases like this you can look up the answer, but for a real program, there is no substitute for a profiler (even an expert programmer can give you no more than speculation based on experience with past programs).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Thu Aug 11, 2005 12:56 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Anes]]></name></author>
<updated>2005-08-10T22:55:36-07:00</updated>
<published>2005-08-10T22:55:36-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=485&amp;p=3638#p3638</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=485&amp;p=3638#p3638"/>
<title type="html"><![CDATA[cpu emu implementation]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=485&amp;p=3638#p3638"><![CDATA[
My emu was horrible, i had a lot of inaccuracy in timing and it runs slow on a Pentium 3 933mhz. Altought i done it in directX<br />So i decided to rewrite my cpu core.. and i have a question:<br /><br />let say that we have a big:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">...<br />switch&#40;opcode&#41; <br />&#123; <br /> case X: <br />  OpcodeEmuFunctionX&#40;&#41;; <br /> break;<br /><br /> ...<br /> case N: <br />  OpcodeEmuFunctionN&#40;&#41;; <br /> break;<br /><br /><br />&#125;<br />...<br /></div><br /><br />i have a question it isn't faster to have an array of functions pointers and call the appropiate function?<br />it is supposed that the addressing mode is done in the "OpcodeEmuFunction()";<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=72">Anes</a> — Wed Aug 10, 2005 10:55 pm</p><hr />
]]></content>
</entry>
</feed>