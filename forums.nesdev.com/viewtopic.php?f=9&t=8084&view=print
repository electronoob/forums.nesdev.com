<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - NESDEV1 development board progress</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">NESDEV1 development board progress</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=9&amp;t=8084">http://forums.nesdev.com/viewtopic.php?f=9&amp;t=8084</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>6</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>infiniteneslives</b> [ Sat Sep 03, 2011 11:35 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>NESDEV1 development board progress</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />So the project has officially be accepted by my department at school there is a <a href="http://classes.engr.oregonstate.edu/eecs/fall2011/ece441/desc.php" class="postlink">little blurb</a> about the project.  I've been slacking on posting up our progress so you'll have to excuse the large post to attempt to catch up.
<br />
<br />The post to do with initial planning is <a href="http://nesdev.com/bbs/viewtopic.php?t=7656&amp;postdays=0&amp;postorder=asc&amp;start=0" class="postlink">here.</a>
<br />
<br />So instead of making separate posts for each little thing that comes up I'll try to keep everything in this post for now.  
<br />
<br />For the most part we've been spending the summer playing around with the kazzo considering using some variant of it to program the onboard memory with an onboard AVR mcu.  But really we won't need to be as versatile as the kazzo since I would like the reading/writing of the all memory via USB to be independent of whatever mapper is currently loaded on the CPLD.
<br />
<br />We've also played around with an NROM dev cart, gotta start somewhere, may as well be something with no mapper <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />  Used the ReproPak, with some modifications to allow for battery backing the SRAM used.  Thing I found out that seemed a little backward to me.  He ties the PRG memory's /CE to ground and has PRG /CE driving the /OE.  Wouldn't be  a problem generally, but since we were using the kazzo to program the memory, having it constantly enabled proved to be a problem since kazzo ties the PRG and CHR busses together.  So we just cut the ground on /CE and have /OE and /CE tied togther.  The battery back up circuitry is the same as most NES carts, but we had to add pull up resistors on the /CE lines to prevent from draining the battery.  Two of the switches in the top control whether the /WE signal is controlled by the cart edge or tied to Vcc for write protection.  That was the only way we could find to keep the data from being corrupted everytime.  One switch was for mirroring and the other for PRG ROM size 16KB/32KB selection.  Everything is in working condition now, but I've got some bug that causes the first byte in CHR to always be programmed to 0xA0 vice 0x00.  Not sure why, think it's the kazzo, but I was able to write my one program for the kazzo to load up via bootloader and write it back to 0x00 after everything else was programmed.
<br />
<br /><img src="http://www.infiniteneslives.com/img/images/NROM_devboard_front.jpg" alt="Image" />
<br /><img src="http://www.infiniteneslives.com/img/images/NROM_devboard_back.jpg" alt="Image" />
<br />
<br />
<br />
<br />
<br />Last weekend I made up what I like to call the "NES protoboard" I've seen a similar idea mentioned before I think it was Memblers.  But basically the board holds the PRG, CHR, And WRAM and routes any signal that may be used or controlled by a mapper to the back of the board where I'll be using some female header to connect up the CPLD.  But since I had a little space I found some room for things that could possibly be used.  The only things I didn't route to the back end were the lower address byte of CHR.  But I do have some extra pads on the outer "wing" area that anything could be routed to by hand.  
<br />
<br />I added some other bells and whistles because they seem to frustrate me commonly.  One being mounting the board to the back shell of a cart.  That's where I made those little tabs on to allow the board to be screwed to the cart plastic bottom securely without needing the top shell that wouldn't fit anyways.
<br />
<br />I also extended the cart edge pins INTO the actual case because if/when you want to tap off of them they're actually outside of the case housing and soldered wires could interfere with a connector potentially without my exteneded pins.  
<br />
<br />The only thing that changes from flash/EPROM/EEPROM/SRAM whatever is the upper address bytes and control signals.  Those are conveintly controlled by the mapper generally speaking so they all got sent to the back of the cart.  Because of this my protoboard could accept most any memory in a DIP package.
<br />
<br />I've also provided battery backup circuitry and each memory has it's power selectable by solder bridge.  May also prove prudent if the cart is powered via USB to prevent attempting to powering the NES through the cart connector.
<br />
<br />Here's the <a href="http://dl.dropbox.com/u/18341918/NES_protoboard.zip" class="postlink">schematic and pcb files</a> including the cart connector and other items I've had to create for the library.  I've designed everything using 
<br /><a href="http://www.designspark.com" class="postlink">DesignSpark</a> which is free and pretty easy to learn in my experiences thus far.  
<br />
<br />Here's a preview, I should have them in next week.
<br />
<br /><img src="http://www.infiniteneslives.com/img/images/NES_protoboard.jpg" alt="Image" />
<br />There's nothing actually over the connector, it just defaults user created items to that 3d rendering height...
<br /><img src="http://www.infiniteneslives.com/img/images/NES_protoboard_front.jpg" alt="Image" />
<br /><img src="http://www.infiniteneslives.com/img/images/NES_protoboard_back.jpg" alt="Image" />
<br />
<br />Our goal over the next month before school and the project officially start, is to get a simple "discrete mapper devboard" working.  We're hoping to support N/A/U/BNROM etc and program it with the kazzo.  We'll be able to connect up our little 72 macrocell CPLD to the NES protoboard and test out some designs from Xilinx IDE we've started designing.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>infiniteneslives</b> [ Mon Sep 05, 2011 4:07 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Took the first step with a CPLD on the NES tonight.  Replicated the UxROM mapper with Xilinx schematic and programmed it on a CPLD devboard.  Just tested it out with a standard board with EPROMs and the '32 and '161 removed.  Next up is to upgrade the NROM devboard and test out flashing the cart.  Then we'll try out some other mappers.
<br />
<br />Here's some pictures
<br /><img src="http://www.infiniteneslives.com/nesdev/uorom_xilinx.jpg" alt="Image" />
<br />
<br />Much better than those two little DIPs <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />
<br /><img src="http://www.infiniteneslives.com/nesdev/uorom_nes.jpg" alt="Image" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>infiniteneslives</b> [ Thu Nov 24, 2011 7:25 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Apologies, for the lack of updates as of late.  Not certain how many people are still interested in the project, but things are still moving forward.  Most of our time spent working on the project was in the form of papers required for the first term which happens to be a writing intensive course...
<br />
<br />We've been posting everything formally <a href="http://beaversource.oregonstate.edu/projects/44x201109" class="postlink">here</a> as is required for school credit.  If you snoop around there are block diagrams and such.
<br />
<br />Now that most of the writting/research is done we're working on the final design for the next 2 weeks.  For the most part I've narrowed it down to using a Lattice CPLD (Mach Xo2 with 640 Mcells) because of the excessive capabilities it has compared to it's Xilinx/Altera equivalents while at a lower price.  I'm tring to determine which mcu to use now and am considering the atmega325A and atmega128A.  They are nearly pin compadable with the exceptions being USB and I2C pins.  The atmega325 would do the trick for the project, but the 128 may be more desirable it were ever used as a coprocessor for the NES (which is a little outside the scope).
<br />
<br />Because the CPLD is so massive I'll be using it to io extend the mcu and a mapper on the same flash.  I would really like to get all discrete mappers, MMC1 and MMC3 in the CPLD at the same time.  Allowing the mcu to select the desired mapper without reflashing the CPLD.
<br />
<br />We're looking at 512KB of PRG/CHR memory in the form of SRAM, 32KB WRAM, and potentially an extra 512KB of PRG-ROM.
<br />
<br />The goal is to allow the rom to be programmed to the cart while connected to the NES by "removing" it from the NES with level shifting buffers for the whole 72 pin connector.  Satisfying the ultimate goal of quick and non-cumbersome programming which current solutions lack.
<br />
<br />Total cost of components is still less than $50.  PCB and case costs vary heavily depending on needs.
<br />
<br />I'll be posting up the final design once it's complete next weekend.  If anyone has inputs I'm more than willing to hear them out, but I can't really consider large changes at this point...  Specifically any input on mcu/CPLD/memory connections and capabilities are open for modifications in the next week.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Sun Nov 27, 2011 4:34 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'm interested in how this goes.  Like I mentioned previously, it's sorta like a board I want to make eventually, with a Spartan3 FPGA and PIC32 MCU (both are 5V tolerant).  It's pretty damn cool to see new NES boards with this kind of stuff on it, yours would be the most advanced to date.
<br />
<br />I looked at that Mach XO2, sounds pretty nice!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>infiniteneslives</b> [ Sun Nov 27, 2011 5:30 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I appreciate the feedback.  At times I feel like the project is a bit overboard, and I question if any of the features I'm trying to provide will actually be exercised.  But in reality I'm setting it up to be more than just a ROM/game development cart, but a hardware development board too.  So I guess that gives the broad scope some justification.
<br />
<br />I agree it is always fun to see these new parts connected up to the NES, I don't think that'll ever get old <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />
<br />
<br />Yeah that XO2 man, the only downer is it's not 5V tolerant.  We had been planning on using a 9500 series Xilinx to stay 5V tolerant.  But we decided to just level shift everything for other reasons and now the XO2 is too tempting to pass up with it's size, cost, and all the hardened features of SPI, I2C, Flash, Dual ported RAM, etc, etc...
<br />
<br />The idea would be that you could design a mapper with the Dev cart for another CPLD though that may be 5V tolerant atleast.  Even if it weren't though and a game was actually produced with the XO2, the requirement to level shift isn't nearly as bad if you've defined all your signals you would only need a few extra cheap ICs for level shifting if you kept 5V memory.  But with all the signals undefined essentially it was easier to just level shift everything on the way into the cart and gain the benefit of 3.3V for everything on board.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>davefmurray</b> [ Sun Nov 27, 2011 8:07 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Just caught wind of this. Awesome project!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>infiniteneslives</b> [ Fri Jan 06, 2012 12:27 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />So most things are pretty well laid out for this thing now.  If anyone's curious of specifics for the design we had to post everything up here: <a href="http://beaversource.oregonstate.edu/projects/44x201109" class="postlink">http://beaversource.oregonstate.edu/projects/44x201109</a>
<br />
<br />My goal has kind of transformed to allow for a lot of capability and functionality.  If I've seen a mapper idea mentioned recently I've noted it and tried to provide the hardware required to make it possible.  The parts cost is around $50 right now for individual quantities.  If it ever actually gets produced it should be able to stay under $100 as hoped.
<br />
<br />
<br />Highlights:
<br />
<br />512 KB of PRG and CHR SRAM
<br />512 KB of PRG Flash
<br />32 KB of WRAM 
<br />possibly some extra serial eeprom tossed on because it's cheap
<br />
<br />Atmega325 
<br />Mach X02 644 MCell CPLD
<br />
<br />entire board is level shifted to 3.3V as the signals enter the cart.  This also allowed for the cartridge to be "removed" from the NES for programming.  The main goal was to be quick and convenient to program.  So assuming your PC is close enough for a USB cable to reach you can leave everything plugged in from one build programming to another.  You should be able to leave the power on as well you'd just have to hit reset after programming (the NES would freeze up during programming unless you kept it running off internal RAM for some reason).
<br />
<br />USB read and write access to ALL memories on board, and should be able to reconfigure the CPLD as well via USB (flash configuration on CPLD provides over 100K write cycles).  I ran a quick demo of programming 8KB of SRAM in under a second with a prototype of our firmware and software.  Picture below and quick video here: <a href="http://www.youtube.com/watch?v=jYlYKQpxwA4&amp;context=C3dc84ddADOEgsToPDskLuEW6BpKAuzi5yxhSsTajc" class="postlink">http://www.youtube.com/watch?v=jYlYKQpxwA4&amp;context=C3dc84ddADOEgsToPDskLuEW6BpKAuzi5yxhSsTajc</a>
<br />
<br /><img src="http://dl.dropbox.com/u/18341918/IMG_3936.JPG" alt="Image" />
<br />
<br />I calculated it out to run about 40KB/sec for this setup.  The final one will be a little different.  But at that speed most games program around 10sec and all memory space on board could be programmed in 20+ seconds.
<br />
<br />But the CPLD is sort of dual functioned.  It I/O extends the mcu durring programming and also runs as the mapper during play/testing.  Since the CPLD was fairly large we were able to do this to keep chip count and part cost down.
<br />
<br />I've got nearly every pin connected to the CPLD.  So all PRG addresses can be decoded and optionally all CHR as well.  I've left some of this configurable for the time being with jumpers because I started to run out of I/O on the CPLD.  So It's possible to get as low as 128byte banks on CHR memory but at a cost of not having lower CHR address bits as inputs.  128byte pages gives you down to A6, 256byte to A5 etc.
<br />
<br />I had planned for 8KB PRG bank switching but I was wondering if anyone can think of a benefit to less than that?  I can't think of any and the I/O seemed more useful for decoding all PRG addresses for things such as dec $4011 and such.
<br />
<br />The CPLD is what I think I'm most excited about though.  I discussed it above but it's stuffed with goodies.  Lots of capabilities with the Dual ported SRAM, and other hardened features without the cost of logic elements.  It opens the door for using the mcu as a co-processor and everything possible there.  It's not as cheap as some CPLD's but still reasonable to put in a production cart.  It has a LOT more to offer than a $4-5 CPLD but at about twice the cost.  
<br />
<br />I don't think it would ever be that reasonable to produce a game that made use of everything on board.  But reading through some of the old posts everyone has their own ideas of what they'd like.  I tried to remove limitations where possible with the thought that limitations could be placed by the user in a final production.  
<br />
<br />I kind of think my goals are a bit lofty at times, but I'm having fun working on it and getting school credit at the same time so either way I win <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />
<br />
<br />Next steps are to port the firmware from the atmega8 in the demo to the kazzo and do some testing with the NESprotoboard.  Should be ordering the prototype and parts within a month.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>bunnyboy</b> [ Fri Jan 06, 2012 2:35 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />NSFs use 4KB PRG banking.  Musicians would definitely be interested in a cart they can use for performances with that fast uploading.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>infiniteneslives</b> [ Fri Jan 06, 2012 3:42 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">bunnyboy wrote:</div><div class="quotecontent">NSFs use 4KB PRG banking.  Musicians would definitely be interested in a cart they can use for performances with that fast uploading.</div>
<br />
<br />Thanks for that info, I had originally planned that PRG A0 would get lost as in input if one wanted 4KB banks for PRG ROM.  But I think I'll make it the default to have 4KB banks and all PRG address inputs then.  I might make it so you can't have CHR A0 and PRG A0 at the same time instead.
<br />
<br />I've talked a bit with Andy over at <a href="http://www.batslyadams.com/" class="postlink">http://www.batslyadams.com/</a> (floats around nesdev a bit too) he's pretty involved with the music scene.  I'll have to check back in and see if he has any last minute inputs.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Hamtaro126</b> [ Fri Jan 06, 2012 1:12 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">infiniteneslives wrote:</div><div class="quotecontent"><div class="quotetitle">bunnyboy wrote:</div><div class="quotecontent">NSFs use 4KB PRG banking.  Musicians would definitely be interested in a cart they can use for performances with that fast uploading.</div><br /><br />Thanks for that info, I had originally planned that PRG A0 would get lost as in input if one wanted 4KB banks for PRG ROM.  But I think I'll make it the default to have 4KB banks and all PRG address inputs then.  I might make it so you can't have CHR A0 and PRG A0 at the same time instead.<br /><br />I've talked a bit with Andy over at <a href="http://www.batslyadams.com/" class="postlink">http://www.batslyadams.com/</a> (floats around nesdev a bit too) he's pretty involved with the music scene.  I'll have to check back in and see if he has any last minute inputs.</div>
<br />
<br />Then it would be a totally different mapper than FME-7/SS-5b, because it is not backwards compatible.
<br />
<br />Since you are changing it, Maybe you can make it backwards compatible by making a new mapper revision to use a MODE for PRG bank size. 
<br />
<br />for this mode you can add in another port to write in at $A000 as Port $10 (%0001xxxx).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>infiniteneslives</b> [ Fri Jan 06, 2012 3:30 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Hamtaro126 wrote:</div><div class="quotecontent"><br />Then it would be a totally different mapper than FME-7/SS-5b, because it is not backwards compatible.<br /></div>
<br />
<br />The mapper isn't intended to be anything concrete.   The goal is for it to be something that can be reprogrammed over USB as well.
<br />
<br />But since the mapper is pretty big do plan to make some mappers that are selectable.  For instance an "all-in-one" that would contain all the discrete mappers on one CPLD configuration.  Then the user can select which one to use when programming or by having the hardware decode the mapper number from the .nes file header.
<br />
<br />So it's possible one could make a FME-7 mapper with selectable bank size like your saying, I just don't think it'll be the default configuration.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Hamtaro126</b> [ Fri Jan 06, 2012 6:48 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Okay, That makes sense then.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>infiniteneslives</b> [ Tue Jan 31, 2012 5:11 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Some previews of the PCB.  We're ordering tomorrow hopefully, getting excited to see it all together.
<br />
<br />I now know why they made NES carts so huge...  <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />
<br />
<br /><img src="http://dl.dropbox.com/u/18341918/nesdev_3d_top.jpg" alt="Image" />
<br /><img src="http://dl.dropbox.com/u/18341918/nesdev_3d_bottom.jpg" alt="Image" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>captncraig</b> [ Thu Feb 02, 2012 1:54 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Looks great! What are the final dimensions of your pcb?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>infiniteneslives</b> [ Fri Feb 03, 2012 1:01 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">captncraig wrote:</div><div class="quotecontent">Looks great! What are the final dimensions of your pcb?</div>
<br />
<br />They are around 4.4"x5.0" basically takes up all the space in the cart.
<br />
<br />Right now I'm just trying to figure out where I can get a small quantity run for $200 or less.  It's proving to be a pain with the ass-ton of signals on the 4 layers since most deals have minimum specs that are pretty big.
<br />
<br />If anyone has any ideas of manufactures let me know.  So far advanced circuits is a no go.  Imagineering is a possibility depending on some technicalities.  I'm trying to see if I can route to Dorkbot's minimums right now...

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>6</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>