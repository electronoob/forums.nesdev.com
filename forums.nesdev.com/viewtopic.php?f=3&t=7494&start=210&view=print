<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - ZapFC Headerless Format</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">ZapFC Headerless Format</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=7494">http://forums.nesdev.com/viewtopic.php?f=3&amp;t=7494</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>15</strong> of <strong>24</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>kyuusaku</b> [ Sun Feb 27, 2011 8:19 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Wow this all fell behind XD So I don't have to quote etabeta's whole post pretend it's right under.
<br />
<br />----------------------
<br />
<br />Granted I don't use MESS, but I haven't seen MAME pack XML with ROM sets. Even if it has been done for a year, that's pretty much a blink of the eye; I, like a lot of other people probably, don't really follow either project.
<br />
<br />I tried ClrMAMEPro twice, once many years ago, once not so many years ago, quickly removing it each time. From my recollection it's a slightly different concept being strictly an auditing tool where 3rd parties distribute whole databases. It takes hashes and renames (and possibly groups) files into sets, it cannot manipulate anything really, has no concept of ROM-"board" mapping, probably can't redefine it's schema, merge databases or even import/export flat files for editing.
<br />
<br />Sure massive XML files have been "done", but as of now they still only implement a static system in a dynamic package, which I feel misses the mark.
<br />
<br />On a side note I think big XML (and 50mb executables) are not only computationally unwieldy, but I find them susceptible to "micro-preservation"; people incessantly documenting minutia like a cart's screw color. OK maybe that's...somewhat...interesting, but the "work now, think later" mindset (in No-Intro's case "learn later") results in impressive work in scale, anemic in innovation. An example of this: MAME/MESS put preservation at their forefront, but is there a single platform emulated approaching mediocre NES emulator accuracy? The vast majority of MAME drivers are littered with so-called "kludges" and AFAIK nothing but high-level video emulation. I constantly find myself going to the source for game lists, memory maps and such, and it serves me well, but from past experiences there's not much else I would trust. Most of the time implementations are so convoluted to me I'd sooner reinvent the wheel as to not use MAME's framework.
<br />
<br />As for .CHDs, yeah they can pack a disk/disc image, but they cannot be used the same way I have proposed; they can't be used like a scalable cuesheet (I'm not really sure they have proficient metadata capabilities) to auto-organize someone's AccurateRip/FLAC collection for example. That would be cool.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>etabeta</b> [ Sun Feb 27, 2011 8:37 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">kyuusaku wrote:</div><div class="quotecontent">Granted I don't use MESS, but I haven't seen MAME pack XML with ROM sets. Even if it has been done for a year, that's pretty much a blink of the eye; I, like a lot of other people probably, don't really follow either project.</div><br /><br />we don't pack xml with roms, and I have said that, but you can get an xml database from the exe <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" /><br />bsnes contained support for xml packed with the ROMs since two years at least, though.<br />where do you think FitzRoy took this idea? he helped byuu too.<br /><br /><br /><div class="quotetitle">kyuusaku wrote:</div><div class="quotecontent">Sure massive XML files have been "done", but as of now they still only implement a static system in a dynamic package, which I feel misses the mark.</div><br /><br />your opinion, and I respect it. leaving the burden of creating the xml to the user, otoh, might be seen as unfriendly and this is what made some emu author to prefer a central xml (see e.g. Nestopia and MESS). to each his own.<br /><br />btw, 2MB-4MB is far from being massive in my opinion <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" /><br /><br /><br /><div class="quotetitle">kyuusaku wrote:</div><div class="quotecontent">On a side note I think big XML (and 50mb executables) are not only computationally unwieldy, </div><br /><br />memory discards unused pages on any CPU from the latest 5 years... check memory usage of MAME for mid-80s games (of course, if you check noami or neogeo, memory usage is heavier since you have to load some hundreds of MB of romdata in the memory)<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">The vast majority of MAME drivers are littered with hacks and AFAIK nothing but high-level video emulation.</div><br /><br />can you provide explicit examples or are you referring things you have heard around? 'cause e.g. voodoo code from MAME has suddenly made DOSBox capable of running tons of mid90s titles ( <!-- m --><a class="postlink" href="http://vogons.zetafleet.com/viewtopic.php?t=25606">http://vogons.zetafleet.com/viewtopic.php?t=25606</a><!-- m --> )... despite being probably not good enough in your eyes...<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">As for .CHDs, yeah they can pack a disk/disc image, but they cannot be used the same way I have proposed; they can't be used like a scalable cuesheet (I'm not really sure they have proficient metadata capabilities) to auto-organize someone's AccurateRip/FLAC collection for example. That would be cool.</div>
<br />
<br />I don't know what you refer exactly to as scalable cuesheet, sorry... anyway CHD contains metadata of course: you can easily get cue+bin out of a CHD whenever you want, even if it is currently not possible to split the tracks automatically in separate bins

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>etabeta</b> [ Sun Feb 27, 2011 8:39 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">James wrote:</div><div class="quotecontent">Agreed.  So if the primary goal is verifiability/preservation, then how about a zip container containing (only) prg and chr, with a simple database mapping mechanism.  No match, no go.  Homebrew, etc. stick with iNES (or iNES2 or UNIF).</div>
<br />
<br />That's what MESS currently does. Except that I'd like to add homebrew to the database... <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Sun Feb 27, 2011 12:18 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I have a NES game that has two variants, MMC1 and a UNROM variant. How will these be listed in the database? That will cause some clutter and confusion.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Wkter</b> [ Sun Feb 27, 2011 1:11 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">3gengames wrote:</div><div class="quotecontent">I have a NES game that has two variants, MMC1 and a UNROM variant. How will these be listed in the database? That will cause some clutter and confusion.</div>
<br />I'm thinking, what if we distribute a bad ROM and it's not until later it's discovered when it's been spread around. Then what? Update the database? That will make the ROM unplayable for the user once the the database is updated, because now the checksum doesn't match with any database entry (Not in database + no header* = no play).
<br />
<br />Possible solutions and problems:
<br /><em>Update the entry in the database to match the new dump.</em>
<br />This will cause the old ROM to be unplayable (Remember, it has no header* supplied, so the emulator has no way of telling what to do with the ROM).
<br />
<br /><em>Keeping the entry in the database, but add a new one for the good ROM.</em>
<br />Isn't this one of the main complaint about the iNES files? The bad ROM will still be in circulation. Besides, then it kinda defeats the purpose of this format all together.
<br />
<br /><em>Auto-update the ROM while keeping the entry in the database. </em>
<br />This might work, but what if they have no internet connection (Don't ask me how they got to update the database... Maybe they just replaced the emulator with a more up-to-date one?)? What if its stored on a read-only format, such as the CD someone here mentioned?
<br />
<br />* Header - Definition: Small piece of information that defines how the rest of the information should be used. Not necessarily at the beginning in a file. (Same concept as C header files).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>kyuusaku</b> [ Sun Feb 27, 2011 1:53 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">I'll answer this one in Python:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">for part in board_name.split&#40;'-'&#41;:<br />&nbsp; &nbsp; if part in known_boards:<br />&nbsp; &nbsp; &nbsp; &nbsp; board = part<br />&nbsp; &nbsp; elif part == 'HVC':<br />&nbsp; &nbsp; &nbsp; &nbsp; using_expansion_sound = True</div></div>What if the board is unlicensed? There should probably be a more reliable method. Same for expansion audio:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">if territory is 'Jpn' and &#40;not using_nes_with_converter or has_resistor_mod&#41; and board in expansion_sound_boards:<br />&nbsp; &nbsp; using_expansion_sound = True<br /></div><br /><br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">You mean "trainers"?</div>Not really (those can be put into any WRAM save), the idea is to preserve the cartridge's true initial state (could contain easter eggs, suicide data, or a game could be shipped with a special save file that that may never be experienced again after saving over it or something). There is little chance of many games being preserved this way, afterall you'd have to dump never played carts which happen to still have sufficient battery charge, but it's a logical feature for applications like the Game Action Replay or homebrew.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">The mappers I've seen such as <a href="http://wiki.nesdev.com/w/index.php/INES_Mapper_068" class="postlink">68</a> include nametable ROMs in CHR ROM space.</div>Which to my understanding constitutes a "frankenfile". ZapFC's specification isn't very consistent with what I gather to be the philosophy behind the format, which is why I suggested losing all iNES-granted liberties in ZFC++. Funny enough these changes will actually create more work for manual hax0rs.<br /><br /><div class="quotetitle">etabeta wrote:</div><div class="quotecontent">we don't pack xml with roms, and I have said that ;)<br />bsnes contained support for xml packed with the ROMs since the past few years, though.<br />where do you think FitzRoy took this idea?</div>I don't know, but an XML (or any descriptive file) packed with a ROM by itself is not novel, I think when it becomes more than a glorified .ini file is it interesting. I didn't think this ZapFC thing was interesting at the start of the thread, and I still don't think the arguments for it are significant, more self-indulgent; today (yesterday now) I spent a lot of time on an iNES fixer using NesCartDB's XML which progressed into working on an intermediate CSV database of my own (much like I described) which I realized could serve many organizational purposes, something I'm very excited about.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">btw, 2MB-4MB is far from being massive in my opinion ;)</div>Maybe 2-4MiB for licensed NES games with all the redundancy... 2-4MiB of XML isn't so hot on a computer without 2-4MiB of cache. I don't want even a few seconds more delay when I load a game on my netbook with a slow spinning disk. Something I should also point out is that it's not just about parsing, <!-- m --><a class="postlink" href="http://git.redump.net/cgit.cgi/mess/tree/hash/nes.xml">http://git.redump.net/cgit.cgi/mess/tree/hash/nes.xml</a><!-- m --> nearly brought my computer to a halt. From now on there will be layer upon layer of markup == exponential growth.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">memory discard unused pages on any CPU from the latest 5 years... check memory usage of MAME for mid-80s games</div>??? what does ROM loading have to do with in-game resources?<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">can you provide explicit examples or are you referring things you have heard around?</div>I've looked at lots of drivers, the standard way seems to be to set a very rough periodic un-synchronized NMI/"render_frame"() timer which effectively halts emulation, loops through VRAM rendering pre-optimized tiles to scroll/sprite layer buffers, then prioritizing them and clipping. It's standard fare for sprite evaluation to include speedhacks. Compare this to NES emulators which attempt to emulate the state machine and internal logic of the PPU rendering on a pixel by pixel basis, in sync with the CPU. Sure that level of accuracy isn't necessary to get games running, but it's doable, especially for the older ones.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I don't know what you refer to as scalable cuesheet, sorry...</div>It's a simple text file describing how to compose a CDROM from binary track data, gaps and any metadata. The cuesheet can easily be implemented in only a few DB columns per track (which might be a row). To build an accurate CD image you'd only need to collect the binary/PCM tracks it's comprised of (which are easier to compress, transfer, verify and in the case of PCM listen to, when split) and not worry about generating or finding one to download. Right now it's a big hassle to archive CD games accurately, there are many steps in lots of tools, after which you have to manually check track hashes against sites like redump.org for verification. It can be easier.<br /><br /><div class="quotetitle">3gengames wrote:</div><div class="quotecontent">I have a NES game that has two variants, MMC1 and a UNROM variant. How will these be listed in the database? That will cause some clutter and confusion.</div>This seems very unlikely, which game? Typically these are hacks for early copiers with UOROM support but not MMC1.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Sun Feb 27, 2011 1:58 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The MMC1/UNROM is Winter Games. I guess the MMC1 was too expensive and remade the game for UNROM? My version is 5 screw. There is also a 3 screw version, but I don't have one to say if the 3 screw versions are the UNROM.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>etabeta</b> [ Sun Feb 27, 2011 2:03 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">3gengames wrote:</div><div class="quotecontent">I have a NES game that has two variants, MMC1 and a UNROM variant. How will these be listed in the database? That will cause some clutter and confusion.</div><br /><br />two separate entries, of course.<br /><br /><br /><div class="quotetitle">Wkter wrote:</div><div class="quotecontent">I'm thinking, what if we distribute a bad ROM and it's not until later it's discovered when it's been spread around. Then what? Update the database? </div><br /><br />this is what is going on with arcade dumps in MAME since 14 years, so yes, you should exactly update the database. <br /><br /><div class="quotetitle">Wkter wrote:</div><div class="quotecontent">That will make the ROM unplayable for the user once the the database is updated, because now the checksum doesn't match with any database entry (Not in database + no header* = no play).</div><br /><br />if the original entry was a bad dump, throwing away the file is the best solution to avoid preservation of bad dumps like some website offering GoodNES sets keeps doing<br /><br /><div class="quotetitle">Wkter wrote:</div><div class="quotecontent">This might work, but what if they have no internet connection (Don't ask me how they got to update the database... Maybe they just replaced the emulator with a more up-to-date one?)? </div>
<br />
<br />let me then ask: how did they obtained the new dump? in the same way they will obtain the new database (or they will simply update by hand the xml file.... a text editor is enough for such a task)
<br />
<br />things change a bit for homebrew, though. that's why in my opinion, support for per-game xml inside the zipfile should be possible too... this is currently not available in MESS for NES, but support exists for AES and TI99, so it is planned for NES too.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Sun Feb 27, 2011 2:10 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I guess I'm out of this now, it's pointless. It's a downgrade for iNES if there ever was one.  You guys can try to make it happen, but don't expect anyone to use this. Ever.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>etabeta</b> [ Sun Feb 27, 2011 2:20 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">kyuusaku wrote:</div><div class="quotecontent"><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">btw, 2MB-4MB is far from being massive in my opinion <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" /></div>Maybe 2-4MiB for licensed NES games with all the redundancy... 2-4MiB of XML isn't so hot on a computer without 2-4MiB of cache. I don't want even a few seconds more delay when I load a game on my netbook with a slow spinning disk. Something I should also point out is that it's not just about parsing, <!-- m --><a class="postlink" href="http://git.redump.net/cgit.cgi/mess/tree/hash/nes.xml">http://git.redump.net/cgit.cgi/mess/tree/hash/nes.xml</a><!-- m --> nearly brought my computer to a halt. From now on there will be layer upon layer of markup == exponential growth.</div><br /><br />problem is in the website I linked: it regenerates the html code each time someone accesses it. I will upload it separately later, if anyone wants to take a look without using the not-so-optimized page I linked.<br /><br />actual emulation parses the whole file at loading time in ~4 seconds on my 2-years old EEEPC, and in a heartbeat on my 2GHz macbook<br /><br /><div class="quotetitle">kyuusaku wrote:</div><div class="quotecontent"><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">memory discard unused pages on any CPU from the latest 5 years... check memory usage of MAME for mid-80s games</div>??? what does ROM loading have to do with in-game resources?</div><br /><br />I must have misread your original post, then. sorry. I thought you were saying that using a 50MB exe (like MAME/MESS) was too much for e.g. PacMan. My reply was on the line of: actually only the specific part of the program needed by the game is loaded, not the whole exe. if you emulate pacman, there is no speed drop due by exe dimensions and big speed drop in old games (e.g. donkey kong) has usually been due to the implementation of discrete sound and the removal of wav samples.<br /><br />I mixed up things when talking about the used resources, though. sorry.<br /><br /><div class="quotetitle">kyuusaku wrote:</div><div class="quotecontent">I've looked at lots of drivers, the standard way seems to be to set a very rough periodic un-synchronized NMI/"render_frame"() timer which effectively halts emulation, loops through VRAM rendering pre-optimized tiles to scroll/sprite layer buffers, then prioritizing them and clipping. It's standard fare for sprite evaluation to include speedhacks. Compare this to NES emulators which attempt to emulate the state machine and internal logic of the PPU rendering on a pixel by pixel basis, in sync with the CPU. Sure that level of accuracy isn't necessary to get games running, but it's doable, especially for the older ones.</div><br /><br />mmm... some arcade games do indeed use large tilemaps and not the same pixel-by-pixel approach of NES PPU. as such, there is no pre-optimization or speedhacks, but only accurate description of the real hardware (see e.g. <!-- m --><a class="postlink" href="http://aarongiles.com/?p=211">http://aarongiles.com/?p=211</a><!-- m --> and <!-- m --><a class="postlink" href="http://aarongiles.com/?p=212">http://aarongiles.com/?p=212</a><!-- m --> ). however, you might also have caught some not-so-accurate driver, since a few of them have not been touched for long time (except for macro updates).<br /><br />anyway, many drivers are very accurate and based directly on the hardware schematics or on tests on the real pcb (see e.g. crystal castles and many old atari systems, or more complicate systems like the kaneko supernova which got accurately emulated by haze last year)<br /><br /><div class="quotetitle">kyuusaku wrote:</div><div class="quotecontent">It's a simple text file describing how to compose a CDROM from binary track data, gaps and any metadata.</div>
<br />
<br />I know about the cuesheet, is the 'scalable' part which was unclear to me. however, as I said, you can already recover the cue from a chd: all necessary metadata is of course included

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FitzRoy</b> [ Sun Feb 27, 2011 2:38 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">kode54 wrote:</div><div class="quotecontent">And now QuickNES is the first NES emulator to support the ZapFC database.</div><br /><br />Sweet. Loading works great. And I can even replace the database with a newer one on my own without waiting for an emulator update. Now I need to complete my board reference table so I can make sense of all the variances. Fair warning: this is early in the game and an additional field may get added for this.<br /><br /><div class="quotetitle">James wrote:</div><div class="quotecontent">The ZapFC checksum is a hash of two hashes, so you still have the same problem.</div><br /><br />I can easily find out which it is with this format because I can just open up the container and drag the files over HashCalc. You have to find a specialty tool somewhere to get access to that info with iNES.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Anyway (and I'm reluctant to even post in this thread, considering FitzRoy's reaction to any criticism), I just don't get the point.</div><br /><br />I'm averse to repeating myself is all. If you don't get the point, don't support it. It bothers me none if you trust distributors to deliver your mappers and you want to wait 10 years before format updates take effect for users if at all.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">One more thing re: iNES being a custom container.  Who cares?  The data itself already requires a custom tool (the emulator) to interpret it, so what's the benefit of distributing the files in an 'standard' container?</div><br /><br />For dumpers and patchers to easily access simple information that will help them be more efficient at what they do. And the container is no longer used for mapper delivery of the main library.<br /><br /><div class="quotetitle">3gengames wrote:</div><div class="quotecontent">I guess I'm out of this now, it's pointless. It's a downgrade for iNES if there ever was one. You guys can try to make it happen, but don't expect anyone to use this. Ever.</div>
<br />
<br />You've trolled this thread with vacuous comments enough, already. You won't be missed.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Sun Feb 27, 2011 3:35 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />What I really want to see is custom mappers for NES files.  Need to come up with a good standard for them, and get that feature integrated into FCEUX, Nestopia, and Nintendulator.  Throw in the Mapper specification as a trailer of the NES file.  Then emulators won't have problems with obscure Chinese pirate games with simple mappers or rewired variations of MMC3.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Sun Feb 27, 2011 3:52 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Lets default mapper 255 to a custom user executable file that the emulator can run and make the way the emulator runs it standard so even closed-soruce emulators can run it without any problems. Either way, you'll have to edit the emulator no matter what file system you use. Lets go back on the old forum post where we'd have a set of bytes that tell what connects to what on each chip. There's so many better solutions then these other file formats that nobody wants, nobody will use, and nobody will ever use because no emulator will support them.
<br />
<br />
<br />And I will be happy when this thread finally bites the dust, I won't miss it either. This new idea is 100% worthless. NES roms are preserved 110% as it is, I am "trolling" because of how pointless this topic really is. They come up every year, it's only that this ones has gotten more attention because of how ridiculous it is. Nobody will ever support this and it will just become another hurdle for emulators to support another ROM format that only one person will ever use. This is like what was mentioned earlier about the two file types for SNES ROMS. It's only a headache and not worth the time already put into thinking up this idea.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>byuu</b> [ Sun Feb 27, 2011 4:06 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">bsnes contained support for xml packed with the ROMs since two years at least, though.</div><br /><br />I do not support packs, period. I use actual folders. But yes, I have a ROM+XML format. This is the way my XML looks:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;<br />&lt;cartridge region=&quot;NTSC&quot;&gt;<br />&nbsp; &lt;rom&gt;<br />&nbsp; &nbsp; &lt;map mode=&quot;linear&quot; address=&quot;00-2f:8000-ffff&quot;/&gt;<br />&nbsp; &nbsp; &lt;map mode=&quot;linear&quot; address=&quot;30-3f:8000-ffff&quot; offset=&quot;100000&quot;/&gt;<br />&nbsp; &nbsp; &lt;map mode=&quot;linear&quot; address=&quot;80-af:8000-ffff&quot;/&gt;<br />&nbsp; &nbsp; &lt;map mode=&quot;linear&quot; address=&quot;b0-bf:8000-ffff&quot; offset=&quot;100000&quot;/&gt;<br />&nbsp; &lt;/rom&gt;<br />&nbsp; &lt;ram size=&quot;2000&quot;&gt;<br />&nbsp; &nbsp; &lt;map mode=&quot;linear&quot; address=&quot;70-77:0000-ffff&quot;/&gt;<br />&nbsp; &lt;/ram&gt;<br />&lt;/cartridge&gt;</div><br /><br />The format is meant to describe the literal mapping of the entire image onto the address space. Unlike the NES' 64KB address space, there is a 16MB address range, and there are dozens of mapper configurations for how to actually place ROM data into that space.<br /><br />One of my primary design goals was to allow homebrew, which I've accomplished. You can easily play neviksti's 96mbit Star Ocean hack, for instance.<br /><br />The format is also used for mapping in special chips, and you can provide coprocessor frequency speeds, MMIO address ranges, etc. You can even map in multiple special chips onto the same game, which is impossible with internal headers.<br /><br />Anyway, I don't really think it's directly contrastable to the NES. NES chips are more about being MMCs, whereas SNES chips are more about being MMIO-mapped coprocessors. I think XML works great for SNES, and the extensibility and flexibility of XML is a godsend. For NES, I don't see it being very useful.<br /><br />Lastly, I do intend to have a hard-coded PCB ID database for official games and their official mappings. I don't really intend to use XML, as it does not need a tree structure, but I may anyway.<br /><br />The internal DB will basically be:<br />name, PCB ID (equivalent to mapper# in NES parlance), sha256<br />&lt;repeat&gt;<br /><br />And will serve as a falback if an actual XML file is not present.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">What I really want to see is custom mappers for NES files.</div><br /><br />I really want to work on a custom, universal-style NES mapper syntax, it seems like such a fun challenge. But I have less than zero interest (yes, negative interest) in writing an NES emulator. Ah well.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">actual emulation parses the whole file at loading time in ~4 seconds on my 2-years old EEEPC, and in a heartbeat on my 2GHz macbook</div>
<br />
<br />You have to parse the whole XML file? Why?
<br />
<br />I have a 2MB cheat database, and it takes a few seconds to parse (I wrote my own 3KB XML parser, so it's not quite as fast), so I just use a speed hack: do a raw string search for the checksum of the game, then do a seek-back to the start of that group's tag, then cut out that single block, and parse it. Takes ~10-20ms tops for the whole operation.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sun Feb 27, 2011 6:11 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Wkter wrote:</div><div class="quotecontent"><div class="quotetitle">3gengames wrote:</div><div class="quotecontent">I have a NES game that has two variants, MMC1 and a UNROM variant. How will these be listed in the database? That will cause some clutter and confusion.</div><br />I'm thinking, what if we distribute a bad ROM and it's not until later it's discovered when it's been spread around. Then what? Update the database? That will make the ROM unplayable for the user once the the database is updated, because now the checksum doesn't match with any database entry (Not in database + no header* = no play).</div><br />Intended. Once the bad ROM is discovered as such, it is no longer the most accurate dump of a licensed game and therefore no longer deserves to be playable from a board database containing the most accurate dumps of licensed games. We <em>want</em> bad dumps to be unplayable.<br /><br /><div class="quotetitle">kyuusaku wrote:</div><div class="quotecontent"><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">The mappers I've seen such as 68 include nametable ROMs in CHR ROM space.</div><br />Which to my understanding constitutes a "frankenfile"</div><br />I looked up <a href="http://bootgod.dyndns.org:7777/profile.php?id=3806" class="postlink">After Burner (J) on NesCartDB</a> and it's sick. Not only are there two separate CHR ROMs, but the mapper IC is mounted askew. These would be handled the same way as Action 52's three PRG ROMs.<br /><br /><div class="quotetitle">kyuusaku wrote:</div><div class="quotecontent">It's standard fare for sprite evaluation to include speedhacks. Compare this to NES emulators which attempt to emulate the state machine and internal logic of the PPU rendering on a pixel by pixel basis, in sync with the CPU.</div><br />And a lot of NES emulators include speedhacks for those huge parts of the screen with no PPU port writes and sprite 0 not in range.<br /><br /><div class="quotetitle">kyuusaku wrote:</div><div class="quotecontent">Sure that level of accuracy isn't necessary to get games running, but it's doable, especially for the older ones. </div><br />Then perhaps you need to make a tech demo that runs on the arcade board but fails on MAME. Wrap a simple game around it, make it accept coins, and install it in an arcade somewhere. I might even be willing to help you with putting a Tetris clone or rhythm game around a tech demo if it's a 6502-based board. But still, it's likely that certain kinds of raster effects are less likely on some arcade systems because they need to be able to flip the screen for cocktail mode.<br /><br /><div class="quotetitle">3gengames wrote:</div><div class="quotecontent">Lets default mapper 255 to a custom user executable file that the emulator can run and make the way the emulator runs it standard so even closed-soruce emulators can run it without any problems.</div>
<br />But in what architecture would this executable be stored? x86? ARM? JVM, CLR, or LLVM? If you have any ideas for how to represent a mapper's logic in a way that is 1. portable across archs and 2. easy to compute, I'd be pleased if you'd offer your proposal in a new topic.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>15</strong> of <strong>24</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>