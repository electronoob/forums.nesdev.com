<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Mapper idea: hardware DMA: has this been discussed before?</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Mapper idea: hardware DMA: has this been discussed before?</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=9&amp;t=17595">http://forums.nesdev.com/viewtopic.php?f=9&amp;t=17595</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Thu Jul 26, 2018 9:29 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Mapper idea: hardware DMA: has this been discussed before?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />A <a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=17594" class="postlink">recent thread</a> prompted me to ponder something:<br /><br />A limiting factor I keep seeing people encounter on the NES, specifically when working with CHR-RAM, is chewed up CPU time when copying data from ROM into CHR-RAM/pattern table space.  Sacrifices have to be made in general (and I take no issue with that), but there are cases where people basically want the best of both worlds: the benefits of CHR-RAM (RAM-based pattern table data), but with the large expansive capabilities of CHR-ROM (e.g. 512KBytes).  There's <a href="https://wiki.nesdev.com/w/index.php/CHR_ROM_vs._CHR_RAM" class="postlink">even a wiki page</a> discussing the pros/cons to both.<br /><br />As such, I'd like to ask a hardware-related question: given that several homebrew-oriented mappers have been created in the past several years, why is it nobody has added basic hardware-based DMA capability to their mapper?  I'm not talking something as complex as what the SNES has (especially not HDMA), nor an identical implementation, but rather a simple MMIO- and hardware-based mechanism for linearly copying data from ROM space to PPU RAM.<br /><br />It's been a very long time since I've partaken in such discussions, but going purely off of (my now old and failing) memory, I can't recall this ever being proposed as a possibility.  I imagine it complicates the PCB circuitry depending on how its implemented.  Is this why it never came up?  Or maybe it has and was shot down due to the fact that the pre-existing CHR-ROM vs. CHR-RAM methodology as they stand today work for most things?<br /><br />Food for thought.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Thu Jul 26, 2018 9:35 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Mapper idea: hardware DMA: has this been discussed befor</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I think the main problem is the mechanism for getting that data across to the CHR-RAM.<br /><br />The &quot;easy&quot; way is dual ported RAM, but that's extremely expensive compared to regular RAM.<br /><br />There was another thread that discussed looking for space in the bus access to insert stuff like this between other CPU accesses. I'm not sure if anything was built or if it was decided it was possible or not...<br /><br />Maybe you could halt the CPU and transfer data faster somehow... I don't know if there's a way to do that, though an idea that just occurred to me: what if you built a mapper that could listen to an OAM DMA and send that data to CHR RAM as the PPU is busy loading it to OAM? You could do a few of those DMAs then finally finish with the real sprite load. (Probably this too has been discussed before, not sure.)<br /><br />Edit: found two of the threads I was thinking of:<br /><ul><li><a href="https://forums.nesdev.com/viewtopic.php?f=9&amp;t=15748" class="postlink">Double Buffered CHR-RAM or DMA Steal?</a></li><li><a href="http://forums.nesdev.com/viewtopic.php?f=9&amp;t=12771" class="postlink">Cart ram used as CHR-RAM and WRAM simultaneously</a></li></ul>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Thu Jul 26, 2018 10:01 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Mapper idea: hardware DMA: has this been discussed befor</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent">Maybe you could halt the CPU and transfer data faster somehow...</div><br />That's how the SNES does it -- and it's still substantially faster than native 65816.  Here's <a href="https://en.wikibooks.org/wiki/Super_NES_Programming/DMA_tutorial" class="postlink">how the SNES does it</a> (<a href="https://wiki.superfamicom.org/grog's-guide-to-dma-and-hdma-on-the-snes" class="postlink">alternate reference</a>) (and I'm speaking from a programmer standpoint, not a HW implementation standpoint): you tell the system via some dedicated DMA MMIO registers (one per DMA channel; there are 8 channels total) the length of the transfer, the transfer method (there are several methods, e.g. write-once, write-twice-same-value, write-low-byte-write-high-byte, etc.), incrementation method (e.g. by 1, by 32, etc.), the source address (in 24-bit addressing space -- which includes both ROM and dedicated RAM areas), the low byte of the destination address (high byte is always $21, e.g. to write to $2122 you use a value of $22), and what DMA channel number to enable (begin transfer).  The native 65816 CPU is halted during such transfers; once done, it resumes where it left off.  SNES DMA also lets you pick transfer direction, specifically ROM/RAM-&gt;PPU or PPU-&gt;ROM/RAM, although I've only seen the former used in practise.<br /><br />The SNES general-purpose DMA method is pretty complicated and overkill for what I'm thinking of, and I imagine it's a lot of circuitry, plus at least one dedicated bus (edit: maybe that's not true, now that I think about it).  I was thinking of something a lot simpler, and maybe the source data came from the linear/raw ROM itself rather than from the active 6502 memory space (if that's even possible; maybe people could transfer data to PPU RAM without having to swap in/out PRG pages, but maybe it can't work that way, re: how busses work.  I'm sort of talking out my ass hardware-wise here, no idea what's feasible).<br /><br />There is some stuff on the SNES that operates &quot;in the background&quot;, mainly hardware multiplication/division capabilities via MMIO registers.  The method there is basically set some values in registers.  The mult/div begins happening once a write to a particular MMIO register happens.  You can get your results from some other MMIO registers, but only after N CPU cycles have passed (N = 8 cycles for multiplication, or 16 for division).  You can do whatever you want with the CPU/65816 during that time.<br /><br />Edit: forgot to write up my response to the OAM DMA idea: that's actually pretty clever, and might be less work (to implement) if it could work (and would work reliably).  Hmm!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Thu Jul 26, 2018 10:24 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Mapper idea: hardware DMA: has this been discussed befor</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I had considered re-using the sprite-DMA hardware, don't think it has been discussed.  Has big disadvantages though, must be done during vblank, and can copy 256 bytes at a time only.  It would be pretty good at copying 16 pattern tiles.<br /><br />While it would be neat to reuse the hardware like that, I've also found that by the time you have A) a mapper capable of handling this and B) dual-port RAM, that we're probably better-off just creating custom DMA hardware inside the mapper that could copy data around without going through the NES bus at all.<br /><br />I've been working a low-cost dual-port RAM cart this year, haven't done much on it lately though.  I think INL may be working on something similar, also.  One of the challenges with designing something like this, is that it can be uphill battle getting people to use any new hardware at all.  Pretty much everyone tests on emulators, and there's the whole chicken before the egg problem when it comes to emulator support.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>NewRisingSun</b> [ Thu Jul 26, 2018 11:02 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Mapper idea: hardware DMA: has this been discussed befor</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The OneBus Famiclones implement exactly such a feature --- in the console, reusing the Sprite DMA.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>gauauu</b> [ Fri Jul 27, 2018 7:16 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Mapper idea: hardware DMA: has this been discussed befor</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Memblers wrote:</div><div class="quotecontent">Pretty much everyone tests on emulators, and there's the whole chicken before the egg problem when it comes to emulator support.</div><br /><br />If it's just about testing (as opposed to wide support for the mapper on common emulators for a rom release), it seems that the community is pretty quick to add support for a new mapper if it's compelling enough. Mesen and FCEUX both support most of your GTROM functionality by now, and I imagine if you came out with a new mapper that was really compelling (both cheap and powerful), people would be interested enough in using it that SOMEBODY would make emulator support happen.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>