<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - MIDI player for the SPC, any interest ?</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">MIDI player for the SPC, any interest ?</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=12&amp;t=9365">http://forums.nesdev.com/viewtopic.php?f=12&amp;t=9365</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Mon Oct 01, 2012 12:05 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>MIDI player for the SPC, any interest ?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I was going to make a Standard MIDI file player for the SPC. However I just noticed I tend to jump on small-scale projects as soon as an idea germinates in my mind, without caring if anyone else in the world shows any interest for the project, and to almost completely forget about my own project as soon as I release it, and instead I never make any progress on larger scale projects.<br />This is why I'd just like to know if there is any interested people before starting such a project.<br /><br />Basically it would be a SPC engine made to play music very easily without any programming knowledge, just with a little hex editing. It would not be optimal to be used in a game or anything like that.<br /><br />Advantages :<br />- Would be a very convenient way to quickly have some music play on the SPC, to include in a demo for example (the coplexity of the SPC might be a significant part of why the world of <span class="posthilit">SNES</span> demoes is so void)<br />- No need for special programs to convert or make the music, just copy/paste<br /><br />Inconvenients :<br />- The music data would take a lot of space compared to an optimized format / only small song will be able to be played (especially if you want decent samples)<br />- The user would have to include his own BRR samples as well, and to manage the memory used for the MIDI and BRR on his self. It can be hard to find or convert BRR samples and manage memory for someone with no programming knowledge<br />- Would not work with all midis (not too many ticks per beat, only 8 channel polyphony, etc...). In all cases no midi larger than ~50kb could be used, even with the crappiest possible samples.<br />- Very likely not suited for actual games

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Shiru</b> [ Mon Oct 01, 2012 12:16 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: MIDI player for the SPC, any interest ?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I personally don't think there is any need in yet another player that could not be used in games. However, someone may want it.<br /><br />There is certainly no point to store and parse actual MIDI files in SPC memory, especially considering their sizes - you can run out of space without even having any samples. As you have to put the data into the file with a tool (hex editor), you can easily make a tool that will convert the data and paste it, for user it will be the same.<br /><br />Also, full GM set certainly won't fit the memory, you have to only put samples that are actually used there.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Hamtaro126</b> [ Mon Oct 01, 2012 4:34 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: MIDI player for the SPC, any interest ?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />How about a MML engine with sound effects? It would be possible!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>KungFuFurby</b> [ Tue Oct 02, 2012 6:42 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: MIDI player for the SPC, any interest ?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Cute Angela's source contains a MIDI to music for Paul Lay's Sound Driver converter... and for those of you curious, I have seen MIDI used in two ways in actual <span class="posthilit">SNES</span> games. Games composed by Michel Winogradoff stores the MIDI data and samples in there all at once (obviously switching samples and what MIDI file is loaded when needed), while California Games 2 streams and buffers its MIDI data (it is the only one that you can get a few notes out of the SPC if you were to ever try to dump one, yet you can't get the complete music). For both, I can tell because &quot;MThd&quot; can be found in the SPC file, though the MIDIs in Michel Winogradoff's music are RNC'd (they're compressed with Rob Northen's ProPacker).<br /><br />I was actually considering MML myself as a &quot;SuperMML&quot; SPC sound driver... though I didn't quite get there yet. Here's a post I made on Battle of the Bits for such a sound driver (snipped to only include sound driver information):<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">...maybe one day, I'll make a &quot;SuperMML&quot; SPC sound driver, which handles .mml music and sound effects (and, if it absolutely has to either by user choice or insufficient SPC700 memory, it can support real-time note input, which will result in undumpable SPC files). I might also make it2mml via Python...</div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Tue Oct 02, 2012 11:51 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: MIDI player for the SPC, any interest ?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yes, I perfectly agree a MML compiler would be so much better, and I definitely want to do it someday regardless of if I make a MIDI player.<br />I mean I'd like to do an almost-unniversal multi platform sound engine for the NES, <span class="posthilit">SNES</span>, GBA, DS, and possibly other platforms too, which would be based on MML, which is efficient if compiled efficiently (that is NOT like PPMCK, where repeats are actually coded in repeats, and so on).<br /><br />It's impossible to convert from MIDI to MML without loosing a lot of informations. For example, pitch bends in MIDI are send in real time, that is if I bent the pitch up I'll have to store multiple pitch bend events at regular intervals. In MML I'd do a single pitch bend macro with the shape I want to bend to. The approach is entierely different, MIDI has been optimized for real-time communication, while MML is optimized for video games (somewhat).<br />It also goes without saying that MIDI has a polyphonic approach while MML has a monophonic approach.<br /><br />The MIDI player/parser would be a simple exercise not related to the universal sound engine at all. But after all perhaps it's not worth the trouble.<br /><br />I should pehaps instead focus on MOD-&gt;MML, IT-&gt;MML and MID-&gt;MML conversion (even if some information is lost) and then MML compiler which is efficient and suitable for video games.<br /><br />PS : It's intersting to see games actually used MIDI, even though all it's inconvenients. I suspected Tales of Phantasia and Star Ocean used MIDI, as they sometimes uses GM instruments for their patch numbers (i.e. The bass is 34, the trumpet is 56, etc...). However there is no MThd or MTrk, but they could have coded it slightly differently while still being MIDI events, like what the GBA sappy engine did.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>qwertymodo</b> [ Tue Oct 02, 2012 4:10 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: MIDI player for the SPC, any interest ?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />An engine supporting real-time note input would be really neat with a project I've had on the shelf for awhile.  I found the official schematics for the Super Multi-Tap, and just for kicks I threw together a schematic for 2 Multi-Taps and 8 controllers all built onto a single board.  Which is basically useless, since official games only support 5 players through a single Multi-Tap, but the original idea was to make a mock arcade cabinet of N-Warp Daisakusen (which does support dual multitaps), but you know what else you could do with 8 controllers?  Ditch the whole idea of 8 controllers, you have 96 buttons... 96 buttons + real-time sound engine... it could be cool.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>KungFuFurby</b> [ Wed Oct 03, 2012 1:40 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: MIDI player for the SPC, any interest ?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />For Star Ocean and Tales of Phantasia, chances are they used a MIDI to their own custom music format converter. I've only seen a few games actually use raw MIDI files... the rest, if they did use them in the first place, straight out converted them to a custom music format.<br /><br />Hey, I actually had an idea for an 8-player arcade game... the soundtrack is even extra large, rivaling Earthbound's soundtrack in size (Each music bank that has those in-game SFX use up 32KB maximum of the SPC700 memory for the music alone... there's four for each: a main tune, a continue tune, a &quot;back in action tune&quot; that goes right back to the main tune, and a Game Over tune). I have at least 32 banks dedicated to handling the main level music (thus, totalling 128), and somewhere around half of those are boss battle themes.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Wed Oct 03, 2012 1:46 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: MIDI player for the SPC, any interest ?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />WarioWare for GBA uses straight MIDI files with a custom sound font, and I once made a rudimentary extraction tool.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Shiru</b> [ Wed Oct 03, 2012 2:56 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: MIDI player for the SPC, any interest ?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />A full nicely sounding GM set could fit in 512K, maybe in 256K even (with ADPCM). So it could be acceptable for GBA where it was common to have 8MB ROMs, but it just wouldn't fit into <span class="posthilit">SNES</span> sound RAM at once, some kind of a instrument/sample manager is a must there.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Wed Oct 03, 2012 3:35 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: MIDI player for the SPC, any interest ?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Such a sample manager could be as easy as scanning the MIDI file for Program Change messages. Or what am I missing?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Shiru</b> [ Wed Oct 03, 2012 4:21 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: MIDI player for the SPC, any interest ?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The OP was talking about inserting a MIDI file into a SPC file with hex editor, that's imply that full GM set is there. And actually no, a sample manager would be more complex than just a simple scanner, as you have to dynamically allocate all needed samples in memory and tell player where they are. For MIDI you would expect to have multilayer instruments, that'll add extra complexity. Not to say it is something very complex, but I think it'll be more complex than a simple custom format music player.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>KungFuFurby</b> [ Wed Oct 03, 2012 5:39 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: MIDI player for the SPC, any interest ?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'm going to completely wing it, but perhaps MIDI is better used for real-time note streaming?<br /><br />Also, even if you used MIDI for real-time note data streaming, I myself can do calculation on how large a sample can be on average if you wanted to load all of the GM instruments... here's how large the combined number of samples can be (warning: you must subtract some bytes for SPC700 code and variable allocation, so this omits the code): 116,496 =  7281 BRR blocks.<br /><br />In order to squeeze 128 samples in the SPC700 memory, on average, they would have to be on average 896 samples large... a mere 56 BRR blocks per sample. That's not too good, even for real-time note streaming. This also makes 256 samples at once an even crazier idea when you only have half the sample size for 448 = 28 BRR blocks per samples.<br /><br />If MIDI is to be used for the SPC700, either you have to load the MIDI files one at a time with their corresponding sample packs, or just stream the MIDI data and switch sample packs when needed (or in an extreme case, load them all at once... but make sure you're not loading 128 samples: only load the instruments you're using... and please don't try to use multiple samples in one instrument).<br /><br />The Loricel games with Michel Winogradoff's music simply switched samples when the next song was loaded. California Games 2 streamed the MIDI data and if I remember correctly, kept the entire sample pack in one piece, especially when there were a mere three pieces of SFX in the entire game. The only one that is missing that MThd happens to be Rap Jam: Volume One...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Hamtaro126</b> [ Wed Oct 03, 2012 7:53 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: MIDI player for the SPC, any interest ?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">It's impossible to convert from MIDI to MML without loosing a lot of informations. For example, pitch bends in MIDI are send in real time, that is if I bent the pitch up I'll have to store multiple pitch bend events at regular intervals. In MML I'd do a single pitch bend macro with the shape I want to bend to. The approach is entierely different, MIDI has been optimized for real-time communication, while MML is optimized for video games (somewhat) ...</div><br /><br /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">... I should pehaps instead focus on MOD-&gt;MML, IT-&gt;MML and MID-&gt;MML conversion (even if some information is lost) and then MML compiler which is efficient and suitable for video games.</div><br /><br />One thing: Midi is possible for conversion in MML without most loss of data, look at ''3ML'', the MML Creation tool, you can download it at Woolyss or SMW Central.<br /><br />And SMW hacking actually uses a form of MML called Addmusic, it is formatted to be a solution for this reason, but only for N-SPC and variants...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Thu Oct 04, 2012 12:20 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: MIDI player for the SPC, any interest ?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I never meant 128 GM samples to be loaded in memory at the same time (and in fact drums should be loaded as well - probably totlising in more than 128 &quot;instruments&quot; - although many instruments could be re-used like Piano 1, Piano 2 and Piano 3 being the same). They would end up sounding like simple waveforms anyway since there wouldn't be too many space.<br /><br />I meant to write a program that just play the SMF file, but the user would have to find instruments, convert them to BRR and insert them in the SPC file (or write code to transmit them to the SPC inside a SMC ROM file) all by himself. This probably kills the &quot;easy to use&quot; argument, unfortunately.<br /><br />The idea to stream MIDI data though the 4 port bytes is interesting. It would make the SPC act like a &quot;dumb&quot; MIDI synthesizer, and just execute MIDI events that the 65c816 would send to it. Unfortunately, the 65c816 has no custom timer or anything like that, it would probably have to update it's MIDI parsing-and-playing code at a 60Hz, which is very slow.<br /><br />EDIT : 3ML looks AMAZING ! Unfortunatley I don't have time to play with it right now so I'll have to wait this weekend.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>KungFuFurby</b> [ Thu Oct 04, 2012 6:37 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: MIDI player for the SPC, any interest ?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yeah, the worst part about doing it in real-time is you're at the mercy of the <span class="posthilit">SNES</span>'s clock speed, which is 60hz or 50hz, depending on NTSC and PAL settings. However, with IRQs (using the <span class="posthilit">vertical</span> <span class="posthilit">line</span> count as a reference), perhaps you can speed it up at the expense of losing some time to process the game itself.<br /><br />You know, I'm getting very interested in &gt;Entertainment's Super Spectrum all over again... it's a music maker program for the <span class="posthilit">SNES</span> that was never produced. I saw nothing of it except my own music.  <img src="./images/smilies/icon_sad.gif" alt=":(" title="Sad" />  <br /><br />The music I made for that happens to be one of the very few pieces of music that I made for &gt;Entertainment that was eventually successfuly converted over to SPC format (I only made three tracks, figuring the rest would be made by the user).<br /><br />Speaking of that, making my own music in a tracker in the first place ensures that the only troublesome thing I have to do is determine if the resulting sound is OK to my ears.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>