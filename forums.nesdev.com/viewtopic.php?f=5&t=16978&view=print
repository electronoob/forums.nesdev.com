<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Intel Spectre bug?</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Intel Spectre bug?</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=5&amp;t=16978">http://forums.nesdev.com/viewtopic.php?f=5&amp;t=16978</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Fri Jan 26, 2018 7:33 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Intel Spectre bug?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Does anyone understand how this works?  I understand Meltdown fine, but I have no idea what Spectre is supposed to be.  Can anyone explain it?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Fri Jan 26, 2018 7:39 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Intel Spectre bug?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />To be honest I didn't understand either bug, despite throwing a few hours at them. My understanding they exploit/abuse how branch prediction works and can retrieve data they should not be able to by doing an &quot;if () &quot; reading illegal memory, and measuring time it takes until the exception popus up. The bug is inherent to hardware so the only way to not have it would be to discard branch prediction or not having a reliable timer.<br /><br />Now, how could nobody think about this between 1995-2017, and wait 6 more month before publishing it until janauary 2018, I really wonder - even though personally I wouldn't have thought of it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Fri Jan 26, 2018 7:55 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Intel Spectre bug?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Meltdown makes perfect sense.  The code snippet from <a href="https://meltdownattack.com/meltdown.pdf" class="postlink">the pdf</a> is very easy to follow:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp;; rcx = kernel address<br />&nbsp;; rbx = probe array<br />retry:<br />&nbsp;mov al, byte &#91;rcx&#93;<br />&nbsp;shl rax, 0xc<br />&nbsp;jz retry<br />&nbsp;mov rbx, qword &#91;rbx + rax&#93;<br /></div><br />The byte fetch will trigger an exception, but due to the flaw, it has already gone ahead and done the read into the probe array, so it now cached.  Even though the values are discarded, they were still used.<br /><br />I saw <a href="https://www.youtube.com/watch?v=bReA1dvGJ6Y" class="postlink">the Youtube video demonstrating dumping kernel memory</a>, so you can see that it clearly works.<br /><br />Meltdown is easy to follow since it's in the same address space as the process.  But Spectre remains a mystery to me.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Fri Jan 26, 2018 11:12 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Intel Spectre bug?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I think Meltdown is a more specific form of attack that more or less directly reads from kernel memory.<br /><br />Spectre on the other hand seems to be a new area of vulnerability for exploiting existing programs. Like how an unchecked array bound in a program might leave you with a way to exploit it, now that we're aware of ways to manipulate and time branch prediction via the cache, a <em>checked</em> bound is vulnerable too if you can get it to mispredict the branch and do the array access anyway.<br /><br />Like if you can run a javascript program in a browser, you can write that program to cause such mispredictions deliberately and use them to read everything the browser process knows, rather than just the stuff that javascript program is supposed to have access to. You have to know the program to be able to exploit it, not just the CPU.<br /><br />At least, that's the gist of what I got from this whitepaper:<br /><a href="https://spectreattack.com/spectre.pdf" class="postlink">https://spectreattack.com/spectre.pdf</a>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Fri Jan 26, 2018 11:33 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Intel Spectre bug?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />So spectre basically requires scripting or other ways of executing code within another process?  Got it.<br /><br />Seems like it would be useful for exploiting web browsers to find out the address layout before going to ROP.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Fri Jan 26, 2018 11:44 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Intel Spectre bug?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Both flaws require the ability to run arbitrary but jailed code on the target CPU.<br /><br />Both flaws involve the same ultimate failure: reading memory that you're &quot;supposed&quot; to not be able to. Meltdown's &quot;just&quot; the version that compromises the read protection guarantees made by the page table.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>pubby</b> [ Fri Jan 26, 2018 12:41 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Intel Spectre bug?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Dwedit wrote:</div><div class="quotecontent">So spectre basically requires scripting or other ways of executing code within another process?  Got it.</div><br /><br />It's less restrictive than that. If you have a sequence of bytes you want to run and that sequence of bytes happens to exist in the program's address space, you can train the branch predictor from outside the program to jump there and execute it speculatively. And since speculative execution touches the cache, it can be used to leak information.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Fri Jan 26, 2018 2:07 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Intel Spectre bug?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The prognosis I've understood is that Meltdown can be corrected by having the OS take protective measures with its kernel paging, at some performance cost. Spectre is more insidious, since it operates from within a program in its own space, and exploits very normal and extremely common code (e.g. jump tables, bounded array lookups, etc.). Not something that can really be patched directly, or that most software developers could even try to prevent, but probably browsers and other critical stuff can be vigilant in addressing known attacks as they appear. A hydra monster always growing new heads.<br /><br />I feel like Intel is about to have a very good sales year once they get a new CPU revision out. ;P<br /><br />(Also, the Spectre attacks work on most CPUs, not just Intel design?)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Fri Jan 26, 2018 3:01 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Intel Spectre bug?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Both of these flaws are obvious-in-hindsight failures given any kind of speculative fetch at all. There's a reason why Spectre basically affects every fast CPU ever: speculative fetch is just <em>way</em> too huge a performance benefit to think that you could possibly recoup the performance loss by excluding it.<br /><br />Meltdown, for whatever it's worth, doesn't only affect Intel's CPU. It's just that Intel was the only corporation to consistently put the permissions check on the wrong (i.e. higher performance) side of the L1 cache fetch. But there's a reason why the newest highest-performing ARM cores are also vulnerable. I think I remember reading it being true of several markedly older POWER cores, too.<br /><br />There's a <a href="https://randomascii.wordpress.com/2018/01/07/finding-a-cpu-design-bug-in-the-xbox-360/" class="postlink">fascinating article</a> that came up in the wake of these revelations about the PowerPC core in the Xbox 360 and its cache-coherency-violating <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">XDCBT</tt> instruction.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Fri Jan 26, 2018 3:50 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Intel Spectre bug?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent">I think Meltdown is a more specific form of attack that more or less directly reads from kernel memory.</div><br />Also my understanding is that Spectre is more like a family of possible exploits, while Meltdown is a particular implementation of such an exploit that actually works. I might be wrong.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Like if you can run a javascript program in a browser, you can write that program to cause such mispredictions deliberately and use them to read everything the browser process knows, rather than just the stuff that javascript program is supposed to have access to. You have to know the program to be able to exploit it, not just the CPU.<br /></div><br />So in my understanding for Spectre to work you need a very specific CPU *and* a very specific version of a very specific program, with programs constantly updating every week it needs the exploit has to be updated as well to take account for new low-level code; also it only allows for spying data on one person's computer which is indeed problematic but Google already does that for everyone using Chrome or any Google-related website so it's nothing new - it doesn't allow to write to memory so to actually implement malware.<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Both of these flaws are obvious-in-hindsight failures given any kind of speculative fetch at all. There's a reason why Spectre basically affects every fast CPU ever: speculative fetch is just way too huge a performance benefit to think that you could possibly recoup the performance loss by excluding it.</div><br />My understanding is that you acess data not by reading it directly, but by measure time it takes to read it, and see whether it was a cache hit or miss, so data is &quot;read&quot; one bit at a time, and some kind of timer is probably used to measure this time. If the timer is made innacurate enough so that it can't distinguish accurately the difference between a cache hit or a cache miss, then data can't be retreived accurately and the exploit is impossible, even if speculative execution is still enabled. Even in current state I think there is some bits which are sometimes read wrongly, as I have seen a video drawing a cat picture with spectre, and there was some random noise on the picture. So just fixing timer to be innacurate might solve the issue.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I feel like Intel is about to have a very good sales year once they get a new CPU revision out. ;P</div><br />Or AMD ;P<br /><br />(By the way Intel Itanium processors seems to be unaffected because they lack hardware speculative execution, which is mostly done compile time)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Fri Jan 26, 2018 4:27 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Intel Spectre bug?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It doesn't need to be quite that specific, I don't think. Your exploiting program can actually search for the needed code fragments to exploit (and you can even use stuff in shared DLLs). I think you need to know something about the program to find an opening in the first place, but I think it'd be tough to sanitize a big API like javascript. There's probably clever ways to prevent a lot of it, but it seems like there are a lot of open holes.<br /><br />As for timers, you can always repeat the tests to get around timer accuracy. It doesn't close the hole, just reduces bandwidth? That might actually be one of the things browsers have currently disabled in response, though there might be multiple ways to create effective timers?<br /><br />Edit: Yes, it looks like exactly that was done. <a href="https://blog.mozilla.org/security/2018/01/03/mitigations-landing-new-class-timing-attack/" class="postlink">https://blog.mozilla.org/security/2018/01/03/mitigations-landing-new-class-timing-attack/</a><br /><br /><br />Then again, I'm surprised that I haven't yet seen news of this thing in action. Just research demos. Where's the spectre supervirus? Maybe we're lucky and its too hard to use effectively?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Fri Jan 26, 2018 6:28 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Intel Spectre bug?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Both Spectre and Meltdown are &quot;only&quot; (n.b. scare quotes; I don't mean to imply this isn't a serious problem) useful for exfiltration. Meltdown lets you bypass kASLR ... if you have an attack that would have been hampered by having to find entry points. Spectre lets you use javascript to read sensitive data out of another web browser tab ... if the attackee has sensitive data to read.<br /><br />Like an FTP server providing read-only access to the entire filesystem, the attacker still has to have something to actually attack. It just makes that attack easier.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Jan 26, 2018 6:34 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Intel Spectre bug?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">lidnariq wrote:</div><div class="quotecontent">Like an FTP server providing read-only access to the entire filesystem, the attacker still has to have something to actually attack.</div><br />Your password manager, your cryptocurrency wallets, and your PGP and SSH private keys, for a start. Someone who can SSH in can install ransomware.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Fri Jan 26, 2018 6:48 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Intel Spectre bug?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Seeing news today about bitcoin miners slipping into YouTube ads doesn't fill me with hope. <img src="./images/smilies/icon_sad.gif" alt=":(" title="Sad" /><br /><a href="https://arstechnica.com/information-technology/2018/01/now-even-youtube-serves-ads-with-cpu-draining-cryptocurrency-miners/" class="postlink">https://arstechnica.com/information-technology/2018/01/now-even-youtube-serves-ads-with-cpu-draining-cryptocurrency-miners/</a><br /><br />Not a Spectre thing, of course, but it's a bit scary that unintended execution like this can even happen on a site like YouTube, that I'd normally presume is safe to visit.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Revenant</b> [ Fri Jan 26, 2018 8:09 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Intel Spectre bug?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent">Not a Spectre thing, of course, but it's a bit scary that unintended execution like this can even happen on a site like YouTube, that I'd normally presume is safe to visit.</div><br />And this is exactly why ad blockers are such a valuable anti-malware tool.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>