<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Details of MMC5 operation</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Details of MMC5 operation</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=9&amp;t=16789">http://forums.nesdev.com/viewtopic.php?f=9&amp;t=16789</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>krzysiobal</b> [ Mon Dec 04, 2017 6:31 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Details of MMC5 operation</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />While creating repro of Super Mario All Stars for MMC5, I had to implement MMC5 in FPGA. For some unknown reason, creators of this cartridge used the ability of MMC5 to supply diffrent CHR banks for sprites &amp; background. Of course they also use the IRQ, so I come back into trouble of thinking how MMC5 scanline detector works.<br />Fortunately I have Just Breed MMC5 cartridge, so using KrzysioKazzo i was able to research MMC5 features with cycle acuracy<br /><a href="https://obrazki.elektroda.pl/1337524400_1512436474.jpg" class="postlink"><img src="https://obrazki.elektroda.pl/1337524400_1512436474_thumb.jpg" alt="Image" /></a> <br /><br />Before I started any research, I rev'ed the board to confirm if the wiki data is correct. I found two bugs:<br /><a href="https://obrazki.elektroda.pl/3136707600_1512436605.jpg" class="postlink"><img src="https://obrazki.elektroda.pl/3136707600_1512436605_thumb.jpg" alt="Image" /></a> <a href="https://obrazki.elektroda.pl/8620023000_1512436607.jpg" class="postlink"><img src="https://obrazki.elektroda.pl/8620023000_1512436607_thumb.jpg" alt="Image" /></a>  <a href="https://obrazki.elektroda.pl/5582363400_1512436585.png" class="postlink"><img src="https://obrazki.elektroda.pl/5582363400_1512436585_thumb.jpg" alt="Image" /></a> <br />1. pin 28 is PPU-!A13, not PPU-A13 as states wiki<br />2. one of the resistors in amplifier circuit is 6.8k (but it might vary from board to board I think)<br /><br />I am also very curious about the unconnected pins. They are wired and cut out of edge from board, this is super crazy. Also, multimeter test shows internal connection. I think they might be related to the WRAM.<br /><a href="https://obrazki.elektroda.pl/3167323600_1512436788.jpg" class="postlink"><img src="https://obrazki.elektroda.pl/3167323600_1512436788_thumb.jpg" alt="Image" /></a> <br /><br />----<br /><br />Ok, now some research about the MMC5 itself:<br />0. Multiplier ($5205/$5206) -&gt; after writing A and B, low(A*B) and high(A*B) can be read immediatelly on next cpu cycle (no need to wait 8 cycles like in mapper90). This means that the whole product is calculated as combinatorial function and it requires quite a lot of ASIC resources.<br />The 8 cycle delay in mapper 90 is because after every cycle, each succesive bit of B is multiplied by A and added to the result causing much less resource need.<br /><br />1.Check if sequence of two PPU reads from same address at row will trigger MMC5's scanline detector<br />It won't<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">public byte&#91;&#93; cpu_read(long start_address, int bytes_to_read)<br />void cpu_write(long start_address, byte&#91;&#93; bytes_to_write);<br />public byte&#91;&#93; ppu_read(long start_address, int bytes_to_read);<br />public void ppu_write(long start_address, byte&#91;&#93; bytes_to_write);<br />public int read_irq(); //reads !IRQ line (0=irq asserted, 1=not asserted), this does not produce any cpu cycle<br />public void cpu_m2_constant_clocking(bool clocking_enabled); //if clocking_enabled=false -&gt; there won't be any cpu/ppu cycles during idle time, if<br />&nbsp;clocking_enabled=true, there will be CPU read at $0000 as idle cycle<br /><br /><br /><br />cpu_m2_constant_clocking(false); <br />&nbsp; &nbsp;cpu_read(0x5204, 1); //clear any interrupt if pending<br />&nbsp; &nbsp;cpu_write(0x5203, new byte&#91;&#93; {10}); //generate irq at scanline 10<br /><br />&nbsp; &nbsp;string result = &quot;&quot;;<br />&nbsp; &nbsp;byte r0x5204;<br /><br />&nbsp; &nbsp;for (int i = 0; i &lt; 20; ++i) {<br />&nbsp; &nbsp;&nbsp; &nbsp;r0x5204 = cpu_read(0x5204, 1)&#91;0&#93;;<br />&nbsp; &nbsp;&nbsp; &nbsp;result += String.Format(&quot;{0:x2} &quot;, r0x5204);<br /><br />&nbsp; &nbsp;&nbsp; &nbsp;ppu_read(1 &lt;&lt; 13, 1);<br />&nbsp; &nbsp;&nbsp; &nbsp;ppu_read(1 &lt;&lt; 13, 1);<br />&nbsp; &nbsp;&nbsp; &nbsp;ppu_read(0 &lt;&lt; 13, 1);<br />&nbsp; &nbsp;} <br />Output:<br />&nbsp; &nbsp;00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 <br /></div><br /><br />2.Check if sequence of three PPU reads from same address at row will trigger MMC5's scanline detector<br />It does<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;string result = &quot;&quot;;<br />&nbsp; &nbsp;byte r0x5204;<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;cpu_m2_constant_clocking(false); <br />&nbsp; &nbsp;cpu_read(0x5204, 1); //clear any interrupt if pending<br />&nbsp; &nbsp;cpu_write(0x5203, new byte&#91;&#93; {10}); //generate irq at scanline 10<br /><br />&nbsp; &nbsp;for (int i = 0; i &lt; 20; ++i) {<br />&nbsp; &nbsp;&nbsp; &nbsp;r0x5204 = cpu_read(0x5204, 1)&#91;0&#93;;<br />&nbsp; &nbsp;&nbsp; &nbsp;result += String.Format(&quot;{0:x2} &quot;, r0x5204);<br /><br />&nbsp; &nbsp;&nbsp; &nbsp;ppu_read(1 &lt;&lt; 13, 1);<br />&nbsp; &nbsp;&nbsp; &nbsp;ppu_read(1 &lt;&lt; 13, 1);<br />&nbsp; &nbsp;&nbsp; &nbsp;ppu_read(1 &lt;&lt; 13, 1);&nbsp; &nbsp; &nbsp;&lt;- this was added<br />&nbsp; &nbsp;&nbsp; &nbsp;ppu_read(0 &lt;&lt; 13, 1);<br />&nbsp; &nbsp;} <br />Output:<br />&nbsp; &nbsp;00 00 40 40 40 40 40 40 40 40 40 40 c0 40 40 40 40 40 40 40<br /></div><br />---<br />03. Will 3 reads with A13=0 trigger it?<br />It won't<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;string result = &quot;&quot;;<br />&nbsp; &nbsp;byte r0x5204;<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;cpu_m2_constant_clocking(false); <br />&nbsp; &nbsp;cpu_read(0x5204, 1); //clear any interrupt if pending<br />&nbsp; &nbsp;cpu_write(0x5203, new byte&#91;&#93; {10}); //generate irq at scanline 10<br /><br />&nbsp; &nbsp;for (int i = 0; i &lt; 20; ++i) {<br />&nbsp; &nbsp;&nbsp; &nbsp;r0x5204 = cpu_read(0x5204, 1)&#91;0&#93;;<br />&nbsp; &nbsp;&nbsp; &nbsp;result += String.Format(&quot;{0:x2} &quot;, r0x5204);<br /><br />&nbsp; &nbsp;&nbsp; &nbsp;ppu_read(0 &lt;&lt; 13, 1);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;- change&nbsp; was made here<br />&nbsp; &nbsp;&nbsp; &nbsp;ppu_read(0 &lt;&lt; 13, 1);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;- change&nbsp; was made here<br />&nbsp; &nbsp;&nbsp; &nbsp;ppu_read(0 &lt;&lt; 13, 1);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;- change&nbsp; was made here<br />&nbsp; &nbsp;&nbsp; &nbsp;ppu_read(1 &lt;&lt; 13, 1);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;- change&nbsp; was made here<br />&nbsp; &nbsp;} <br />Output:<br />&nbsp; &nbsp;00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 <br /></div><br /><br />-------------------------------------------------------------------------------------------------<br />04. Does the PPU address matter or only A13 is checked?<br />There must be three consecutive fetches of the same address with A13=1 (all bits are checked)<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;string result = &quot;&quot;;<br />&nbsp; &nbsp;byte r0x5204;<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;cpu_m2_constant_clocking(false); <br />&nbsp; &nbsp;cpu_read(0x5204, 1); //clear any interrupt if pending<br />&nbsp; &nbsp;cpu_write(0x5203, new byte&#91;&#93; {10}); //generate irq at scanline 10<br /><br />&nbsp; &nbsp;for (int b = 0; b &lt; 14; ++b) {<br />&nbsp; &nbsp;&nbsp; &nbsp;for (int i = 0; i &lt; 20; ++i) {<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;r0x5204 = cpu_read(0x5204, 1)&#91;0&#93;;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;result += String.Format(&quot;{0:x2} &quot;, r0x5204);<br /><br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;ppu_read((1 &lt;&lt; 13) | (1 &lt;&lt; b), 1);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;- change&nbsp; was made here<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;ppu_read(1 &lt;&lt; 13, 1);<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;ppu_read(1 &lt;&lt; 13, 1);<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;ppu_read(0 &lt;&lt; 13, 1);<br />&nbsp; &nbsp;&nbsp; &nbsp;}<br />&nbsp; &nbsp;&nbsp; &nbsp;result += &quot;\r\n&quot;;<br />&nbsp; &nbsp;}<br />Output:<br />&nbsp; &nbsp;00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 <br />&nbsp; &nbsp;00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 <br />&nbsp; &nbsp;00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 <br />&nbsp; &nbsp;00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 <br />&nbsp; &nbsp;00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 <br />&nbsp; &nbsp;00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 <br />&nbsp; &nbsp;00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 <br />&nbsp; &nbsp;00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 <br />&nbsp; &nbsp;00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 <br />&nbsp; &nbsp;00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 <br />&nbsp; &nbsp;00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 <br />&nbsp; &nbsp;00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 <br />&nbsp; &nbsp;00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 <br />&nbsp; &nbsp;00 00 40 40 40 40 40 40 40 40 40 40 c0 40 40 40 40 40 40 40 <br /></div><br /><br />-------------------------------------------------------------------------------------------------<br />05. What if there are more than 3 fetches per row?<br />Interrupt was generated earlier.<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;string result = &quot;&quot;;<br />&nbsp; &nbsp;byte r0x5204;<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;cpu_m2_constant_clocking(false); <br />&nbsp; &nbsp;cpu_read(0x5204, 1); //clear any interrupt if pending<br />&nbsp; &nbsp;cpu_write(0x5203, new byte&#91;&#93; {10}); //generate irq at scanline 10<br /><br />&nbsp; &nbsp;for (int i = 0; i &lt; 20; ++i) {<br />&nbsp; &nbsp;&nbsp; &nbsp;r0x5204 = cpu_read(0x5204, 1)&#91;0&#93;;<br />&nbsp; &nbsp;&nbsp; &nbsp;result += String.Format(&quot;{0:x2} &quot;, r0x5204);<br />&nbsp; &nbsp;&nbsp; &nbsp;<br />&nbsp; &nbsp;&nbsp; &nbsp;ppu_read(1 &lt;&lt; 13, 1);<br />&nbsp; &nbsp;&nbsp; &nbsp;ppu_read(1 &lt;&lt; 13, 1);<br />&nbsp; &nbsp;&nbsp; &nbsp;ppu_read(1 &lt;&lt; 13, 1);<br />&nbsp; &nbsp;}<br />&nbsp; &nbsp;<br />Output:<br />&nbsp; &nbsp;00 00 40 40 40 c0 40 40 40 40 40 40 40 40 40 40 40 40 40 40 <br /></div><br />	<br />06. I found it by accident, but if I add one additional CPU read cycle before reading 0x5204 or after writing 0x5203,<br />the output will be:<br />	00 40 40 40 40 40 40 40 40 40 40 c0 40 40 40 40 40 40 40 40 <br />instead of:<br />	00 00 40 40 40 40 40 40 40 40 40 40 c0 40 40 40 40 40 40 40 <br />so the scanline detector starts working one scanline earlier.<br /><br />06. What makes MMC5 think that frame rendering has ended<br />CPU read from from $fffa? -&gt; yes<br />CPU read from from $fffb? -&gt; yes<br />CPU write at $fffa/$fffb? -&gt; no<br />CPU write $00 at $2001 -&gt; no<br /><br />If there are 3 or more CPU reads between which are no PPU read, MMC5 starts thinking PPU rendering has ended.ppu read <br />cpu read <br />cpu read <br />cpu read  &lt;- at beginning of this cycle, mmc5 sets in-frame to 0 (so if this read would be from $5204, it will return 0)<br /><br />PPU writes does not matter, the following sequence will still set in-frame to 0:<br />ppu read <br />cpu read <br />ppu write<br />cpu read <br />cpu read  &lt;- at beginning of this cycle, m2 sets in-frame to 0 (so if this read would be from $5204, it will return 0)<br /><br />---<br /><br />Later I will check the memory protection bits, because I roughly tested it few days ago and I think that when M2 stops toggling, these bits are automatically set (like if reset happened). No idea how MMC5 checks without help of external detector that this happened.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Mon Dec 04, 2017 8:43 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Details of MMC5 operation</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">krzysiobal wrote:</div><div class="quotecontent">I am also very curious about the unconnected pins. They are wired and cut out of edge from board, this is super crazy. Also, multimeter test shows internal connection. I think they might be related to the WRAM.<br /></div>I assume they're all some sort of validation, but it'd be interesting to figure out what all the bonus pins are. Certainly all the pins actually come out of the package and go to traces (that then fall off the PCB)<br /><br />I wouldn't be surprised if pins 73 and 75 were &quot;PRG RAM /CE&quot; and &quot;PRG RAM A15&quot;. And if one of 29 or 30 were &quot;PPU A13 OR PPU /RD&quot;. But that leaves a number of pins.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Tue Dec 05, 2017 2:36 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Details of MMC5 operation</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I am also very curious about the unconnected pins. They are wired and cut out of edge from board, this is super crazy.</div><br />The vast majority of Nintendo-made boards have those, this is nothing MMC5 specific.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>infiniteneslives</b> [ Tue Dec 05, 2017 5:33 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Details of MMC5 operation</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Old PCBs often have areas where several traces meet together and then appear to have been drilled through that crossing to electrically disconnect them.<br /><br />Just a guess, but I think these &quot;crazy&quot; routings allowed for PCB continuity testing prior to drilling step that breaks all the testing connections.  Perhaps the traces that run off the edge of the board connected to a testing header of sorts.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>krzysiobal</b> [ Tue Dec 05, 2017 7:54 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Details of MMC5 operation</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />What about this one?<br /><a href="https://obrazki.elektroda.pl/3359797800_1512484939.png" class="postlink"><img src="https://obrazki.elektroda.pl/3359797800_1512484939_thumb.jpg" alt="Image" /></a> <br /><br />You really think there has been test pads in the place where there is hole now?<br />I rather suspect that this is some copy-protection policy. Nintendo ordered big PCB sheets containing more small PCB cartridges on them, with some fake tracks and connections between those small carts and later, they cutted and milled them on their own or in another factory to minimize posibility of leakage.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Tue Dec 05, 2017 8:33 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Details of MMC5 operation</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">krzysiobal wrote:</div><div class="quotecontent">What about this one?<br />I rather suspect that this is some copy-protection policy.</div><br />Hahaha ! I like how every single time something is not understood in reverse-engineering, someone comes and claims &quot;this is a form of copy protection&quot;.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">0. Multiplier ($5205/$5206) -&gt; after writing A and B, low(A*B) and high(A*B) can be read immediatelly on next cpu cycle (no need to wait 8 cycles like in mapper90). This means that the whole product is calculated as combinatorial function and it requires quite a lot of ASIC resources.</div><br />Could be, but not necessarily. There is a 4 cycle gap between an STA $abs and an immediately following LDA $abs instruction, so the MMC5 <em>might</em> take advantage of it for its multiplier.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Tue Dec 05, 2017 10:05 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Details of MMC5 operation</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">krzysiobal wrote:</div><div class="quotecontent">You really think there has been test pads in the place where there is hole now?<br /></div>Another possibility is that their EDA software wouldn't let them have a trace that didn't go anywhere, so to silence it they sent it to a connector that they then milled out.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>infiniteneslives</b> [ Tue Dec 05, 2017 10:27 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Details of MMC5 operation</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />That's an example of where they all shorted together like I mentioned.  Perhaps that massive shorting of signals provided continuity checks at the header that would be off the edge.  I'm saying the signals that went off the edge of the board is where the header may have been.  This is all just a theory though.  I find it hard to believe it's copy protection and Nintendo did post manufacturing.  I've wondered if lidnariq's theory might be the case as well, some artifact of early design tools.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>kevtris</b> [ Fri Dec 08, 2017 11:36 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Details of MMC5 operation</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">krzysiobal wrote:</div><div class="quotecontent">I am also very curious about the unconnected pins. They are wired and cut out of edge from board, this is super crazy. Also, multimeter test shows internal connection. I think they might be related to the WRAM.<br /><a href="https://obrazki.elektroda.pl/3167323600_1512436788.jpg" class="postlink"><img src="https://obrazki.elektroda.pl/3167323600_1512436788_thumb.jpg" alt="Image" /></a> <br /><br /></div><br /><br /><br />Nah the answer is a lot more pedestrian.  It's because they need to short all the lines together that they wish to gold plate.  There's a shorting bar on the card edge where it plugs into the system, and then more shorting bars around the edges of the board.  These cartridge boards use hard gold (vs. ENIG)  and this is a plating process, so everything you wish to have gold on needs to be electrically connected.<br /><br />The boards are plated, then the shorting bars are routed off, breaking all the connections into their separate circuits.  You'll find that most if not all of the connections that run off the top/sides of the board are all internal&quot; connections- i.e. signals from the MMC5 to the ROMs or WRAM and signals that do not actually make it back to the card edge.   This is found on nearly all (if not all) nintendo-made cartridge boards.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>infiniteneslives</b> [ Fri Dec 08, 2017 11:44 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Details of MMC5 operation</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Ahh that makes a lot more sense.  Guess I was right about intentional shorting and off board connection, but for the wrong reasons...  Thanks kevtris!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Fri Dec 08, 2017 2:20 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Details of MMC5 operation</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />But why would you need to plate any signals that don't go to the card edge?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>krzysiobal</b> [ Fri Dec 08, 2017 5:57 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Details of MMC5 operation</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />All vias are gold plated.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>