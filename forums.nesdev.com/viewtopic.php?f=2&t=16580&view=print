<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - CHR-RAM in UNROM</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">CHR-RAM in UNROM</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=16580">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=16580</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Diskover</b> [ Sun Oct 15, 2017 2:37 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>CHR-RAM in UNROM</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'm doing tests at UNROM.<br /><br />Compile with CC65.<br /><br />I want to update a tile (for example, 0x00) of CHR 'on the fly' without turning the screen off.<br /><br />How can I access the CHR-RAM to tell it to replace the 0x00 tile with another?<br />How can I access the CHR-RAM to tell it to move the graph to the left, right, up or down the tile 0x00?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Sun Oct 15, 2017 4:14 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: CHR-RAM in UNROM</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I don't know what you mean by &quot;move the graph&quot;, but <a href="https://wiki.nesdev.com/w/index.php/PPU_pattern_tables" class="postlink">each tile is 16 bytes</a> (8 x 8 bits x 2 planes), so the PPU address of any given tile is just 16x its index.<br /><br />E.g. tile $53 begins at $0530 or $1530, depending on <a href="https://wiki.nesdev.com/w/index.php/PPU_memory_map" class="postlink">which CHR page</a> you're using.<br /><br />So, to write a new tile, just set the address with <a href="https://wiki.nesdev.com/w/index.php/PPU_registers#PPUADDR" class="postlink">two writes to $2006</a>, and then write the 16 bytes to <a href="https://wiki.nesdev.com/w/index.php/PPU_registers#PPUDATA" class="postlink">$2007</a>.<br /><br />To do it without turning rendering off, you simply need to do this during vblank (probably in your NMI handler), just like you would for nametable updates.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sun Oct 15, 2017 12:47 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: CHR-RAM in UNROM</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Do note that &quot;updating tiles on the fly without turning the screen off&quot; is a pretty slow processes, specially if you're not unrolling loops, so don't expect to be able to change a lot of tiles per frame. If you use the vblank interval exclusively for updating tiles (no pallette, NT, AT or sprite updates at all), you'll be able to update around 16 tiles at best.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>na_th_an</b> [ Sun Oct 15, 2017 1:13 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: CHR-RAM in UNROM</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If you are using neslib to do the updates you may use the common method you use to update the nametables, this is, the set_vram_update function and the update list array. Just be sure to use the NT_UPD_HORZ switch alongside the MSB and add the 16 bytes to be updated afterwards, something like this:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">// Before your main loop<br />set_vram_update (update_list);<br /><br />&#91;...&#93;<br /><br />// Calculate the address<br />gp_addr = pattern_number &lt;&lt; 4; // Add 0x1000 for the second pattern table<br /><br />// the ul pointer points to the current position in the update_list<br />*ul ++ = MSB (gp_addr) | NT_UPD_HORZ<br />*ul ++ = LSB (gp_addr);<br />*ul ++ = byte0;<br />...<br />*ul ++ = byte15;<br /><br />// During the next VBLANK the bytes will be sent to VRAM<br />*ul = NT_UPD_EOF;<br />ppu_wait_update ();<br /><br />&#91;...&#93;<br /><br /></div><br /><br />I have never done this but I understand it should work. Note that, as mentioned, you will be able to update just a few patterns using this method (it could be as few as just a couple or three patterns!). It's better to add custom code to your NMI routine to handle this.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Diskover</b> [ Tue Oct 17, 2017 1:15 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: CHR-RAM in UNROM</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />No, what I'm talking about is being able to change the tiles of CHR-RAM.<br /><br />Modifying VRAM I have already been able to do something, but what I need is to change tiles in the CHR-RAM to be able to get animated effects.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>calima</b> [ Tue Oct 17, 2017 1:57 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: CHR-RAM in UNROM</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />CHR-RAM is VRAM.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Tue Oct 17, 2017 6:16 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: CHR-RAM in UNROM</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It's mostly the same deal.<br /><br /><ul><li>To write to nametables, you load an address $2000-$2FFF into PPU port $2006 and then start writing bytes through $2007. </li><li>To write to pattern tables, you load an address $0000-$1FFF into PPU port $2006 and then start writing bytes through $2007. </li></ul><br />If you're using a generic update buffer system, it should work for both, with two exceptions:<br /><br /><ul><li>If the buffer format uses bits 13 and 12 of the destination address for behavior flags instead of the destination address, it won't work.</li><li>If the buffer format uses an address $0000-$00FF for terminating (as Nintendo's does), you may not be able to replace the first 16 tiles of the first pattern table. You may, however, be able to write to $4000-$40FF, which the PPU mirrors to $0000-$00FF. </li></ul>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Diskover</b> [ Wed Oct 18, 2017 2:28 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: CHR-RAM in UNROM</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I do not know if it's a language problem, but I do not understand you very much. <br /><br />For now I have managed to do this: Basically drawing on the tile, although I can not write on the tile I want, I always write in the 0x00 and sometimes it is also written in other tiles without much sense.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">//x starts at 0<br /><br />if(joypad1 &amp; PAD_LEFT)&nbsp; &nbsp;&nbsp; &nbsp;--x;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;<br />if(joypad1 &amp; PAD_RIGHT)&nbsp; &nbsp;++x;<br /><br />PPU_ADDRESS = 0x20;&nbsp; &nbsp; &nbsp; &nbsp;//Here I am writing $2000?<br /><br />&nbsp; &nbsp;&nbsp; &nbsp;if(x == 0){&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;PPU_DATA&nbsp; &nbsp; = 0x80;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;PPU_DATA&nbsp; &nbsp; = 0x80;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;PPU_DATA&nbsp; &nbsp; = 0x80;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;PPU_DATA&nbsp; &nbsp; = 0xFF;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;PPU_DATA&nbsp; &nbsp; = 0x80;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;PPU_DATA&nbsp; &nbsp; = 0x80;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;PPU_DATA&nbsp; &nbsp; = 0x80;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;PPU_DATA&nbsp; &nbsp; = 0x80;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;<br />&nbsp; &nbsp;&nbsp; &nbsp;}<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;&nbsp; &nbsp;if(x == 1){<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;PPU_DATA&nbsp; &nbsp; = 0x40;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;PPU_DATA&nbsp; &nbsp; = 0x40;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;PPU_DATA&nbsp; &nbsp; = 0x40;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;PPU_DATA&nbsp; &nbsp; = 0xFF;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;PPU_DATA&nbsp; &nbsp; = 0x40;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;PPU_DATA&nbsp; &nbsp; = 0x40;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;PPU_DATA&nbsp; &nbsp; = 0x40;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;PPU_DATA&nbsp; &nbsp; = 0x40;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;<br />&nbsp; &nbsp;&nbsp; &nbsp;}<br />&nbsp; &nbsp;&nbsp; &nbsp;<br />&nbsp; &nbsp;&nbsp; &nbsp;if(x == 2){<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;PPU_DATA&nbsp; &nbsp; = 0x20;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;PPU_DATA&nbsp; &nbsp; = 0x20;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;PPU_DATA&nbsp; &nbsp; = 0x20;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;PPU_DATA&nbsp; &nbsp; = 0xFF;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;PPU_DATA&nbsp; &nbsp; = 0x20;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;PPU_DATA&nbsp; &nbsp; = 0x20;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;PPU_DATA&nbsp; &nbsp; = 0x20;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;PPU_DATA&nbsp; &nbsp; = 0x20;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;<br />&nbsp; &nbsp;&nbsp; &nbsp;}<br />&nbsp; &nbsp;&nbsp; &nbsp;<br />&nbsp; &nbsp;&nbsp; &nbsp;if(x == 3){<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;PPU_DATA&nbsp; &nbsp; = 0x10;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;PPU_DATA&nbsp; &nbsp; = 0x10;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;PPU_DATA&nbsp; &nbsp; = 0x10;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;PPU_DATA&nbsp; &nbsp; = 0xFF;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;PPU_DATA&nbsp; &nbsp; = 0x10;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;PPU_DATA&nbsp; &nbsp; = 0x10;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;PPU_DATA&nbsp; &nbsp; = 0x10;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;PPU_DATA&nbsp; &nbsp; = 0x10;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;<br />&nbsp; &nbsp;&nbsp; &nbsp;}<br />&nbsp; &nbsp;&nbsp; &nbsp;<br />&nbsp; &nbsp;&nbsp; &nbsp;if(x == 4){<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;PPU_DATA&nbsp; &nbsp; = 0x08;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;PPU_DATA&nbsp; &nbsp; = 0x08;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;PPU_DATA&nbsp; &nbsp; = 0x08;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;PPU_DATA&nbsp; &nbsp; = 0xFF;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;PPU_DATA&nbsp; &nbsp; = 0x08;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;PPU_DATA&nbsp; &nbsp; = 0x08;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;PPU_DATA&nbsp; &nbsp; = 0x08;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;PPU_DATA&nbsp; &nbsp; = 0x08;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;<br />&nbsp; &nbsp;&nbsp; &nbsp;}<br />&nbsp; &nbsp;&nbsp; &nbsp;<br />&nbsp; &nbsp;&nbsp; &nbsp;if(x == 5){<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;PPU_DATA&nbsp; &nbsp; = 0x04;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;PPU_DATA&nbsp; &nbsp; = 0x04;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;PPU_DATA&nbsp; &nbsp; = 0x04;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;PPU_DATA&nbsp; &nbsp; = 0xFF;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;PPU_DATA&nbsp; &nbsp; = 0x04;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;PPU_DATA&nbsp; &nbsp; = 0x04;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;PPU_DATA&nbsp; &nbsp; = 0x04;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;PPU_DATA&nbsp; &nbsp; = 0x04;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;<br />&nbsp; &nbsp;&nbsp; &nbsp;}<br />&nbsp; &nbsp;&nbsp; &nbsp;<br />&nbsp; &nbsp;&nbsp; &nbsp;if(x == 6){<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;PPU_DATA&nbsp; &nbsp; = 0x02;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;PPU_DATA&nbsp; &nbsp; = 0x02;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;PPU_DATA&nbsp; &nbsp; = 0x02;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;PPU_DATA&nbsp; &nbsp; = 0xFF;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;PPU_DATA&nbsp; &nbsp; = 0x02;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;PPU_DATA&nbsp; &nbsp; = 0x02;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;PPU_DATA&nbsp; &nbsp; = 0x02;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;PPU_DATA&nbsp; &nbsp; = 0x02;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;<br />&nbsp; &nbsp;&nbsp; &nbsp;}<br />&nbsp; &nbsp;&nbsp; &nbsp;<br />&nbsp; &nbsp;&nbsp; &nbsp;if(x == 7){<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;PPU_DATA&nbsp; &nbsp; = 0x01;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;PPU_DATA&nbsp; &nbsp; = 0x01;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;PPU_DATA&nbsp; &nbsp; = 0x01;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;PPU_DATA&nbsp; &nbsp; = 0xFF;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;PPU_DATA&nbsp; &nbsp; = 0x01;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;PPU_DATA&nbsp; &nbsp; = 0x01;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;PPU_DATA&nbsp; &nbsp; = 0x01;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;PPU_DATA&nbsp; &nbsp; = 0x01;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;<br />&nbsp; &nbsp;&nbsp; &nbsp;}<br />&nbsp; &nbsp;&nbsp; &nbsp;<br />&nbsp; &nbsp;&nbsp; &nbsp;if(x == 8) x = 0;<br />&nbsp; &nbsp;&nbsp; &nbsp;if(x == 255) x = 7;<br />&nbsp; &nbsp;&nbsp; &nbsp;<br />&nbsp; &nbsp;&nbsp; &nbsp;Reset_Scroll();<br /></div><br /><br />What I get is this:<br /><img src="http://oi63.tinypic.com/ok5t1t.jpg" alt="Image" /><br /><br /><br />ROM: <div class="attachtitle">Attachment:</div><div class="attachcontent">
			<span class="genmed">
				<img src="./styles/subsilver2/imageset/icon_topic_attach.gif" width="14" height="18" alt="" title="" /> 
				<a href="./download/file.php?id=10475">prueba1.nes</a> [64.02 KiB]
			</span><br />
			<span class="gensmall">Downloaded 32 times</span>
		

		<br />
	</div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>team_disposable</b> [ Wed Oct 18, 2017 3:08 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: CHR-RAM in UNROM</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />tl;dr - Just quickly looking at your code, you only seem to be writing the first part of the address to PPU_ADDRESS - you need to write the whole 16 bit address. Secondly, presumably because it's a demo, your code has movement functions being called before the update to CHR-RAM - I would recommend you don;t do this, and call CHR-RAM updates first, at the very top, as NMI update time is limitedand if it overruns, you will get horrible graphical glitches to your tiles.<br /><br />Hi Diskover, the game you're porting looks ace! I look forward to playing it!<br /><br />I've done quite a lot of CHR-RAM updating for animations - <br /><br />First I made a lookup table of the address of the graphic I want to write in to CHR-RAM, and the address it should be written to - here's an excerpt:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">;address in rom high, address in rom low, destination address high, destination address low<br />tile_lookup:<br />.byte &lt;spike1_chr, &gt;spike1_chr, 22, 16<br />&nbsp;.byte &lt;spike2_chr, &gt;spike2_chr, 22, 16<br />&nbsp;.byte &lt;spike3_chr, &gt;spike3_chr, 22, 16<br />.byte &lt;coin1_chr, &gt;coin1_chr, 18, 16<br />.byte &lt;coin2_chr, &gt;coin2_chr, 18, 16<br />.byte &lt;coin3_chr, &gt;coin3_chr, 18, 16<br />.byte &lt;coin4_chr, &gt;coin4_chr, 18, 16<br />.byte &lt;fivecoin1_chr, &gt;fivecoin1_chr, 18, 32<br />.byte &lt;fivecoin2_chr, &gt;fivecoin2_chr, 18, 32<br />.byte &lt;fivecoin3_chr, &gt;fivecoin3_chr, 18, 32<br />.byte &lt;fivecoin4_chr, &gt;fivecoin4_chr, 18, 32</div><br /><br />Secondly, I wrote a function in assembly to load the tile when given the name as a parameter:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">_copy_tile:<br />&nbsp;tay<br />&nbsp;lda tile_lookup, y ; load the source address into a pointer in zero page<br />&nbsp;sta src<br />&nbsp;iny<br />&nbsp;lda tile_lookup,y<br />&nbsp;sta src+1<br />&nbsp;iny<br />&nbsp;lda tile_lookup,y<br />&nbsp; sta PPUADDR&nbsp; ; load the destination address into the PPU<br />&nbsp; iny<br />&nbsp; lda tile_lookup,y<br />&nbsp; sta PPUADDR<br />&nbsp; ldy #0<br />&nbsp; lda (src),y&nbsp; ; copy one byte<br />&nbsp; sta PPUDATA<br />&nbsp; iny<br />&nbsp; <br />&nbsp; lda (src),y&nbsp; ; copy one byte<br />&nbsp; sta PPUDATA<br />&nbsp; iny<br />&nbsp; <br />&nbsp; lda (src),y&nbsp; ; copy one byte<br />&nbsp; sta PPUDATA<br />&nbsp; iny<br />&nbsp; <br />&nbsp; lda (src),y&nbsp; ; copy one byte<br />&nbsp; sta PPUDATA<br />&nbsp; iny<br />&nbsp; <br />&nbsp; <br />&nbsp; lda (src),y&nbsp; ; copy one byte<br />&nbsp; sta PPUDATA<br />&nbsp; iny<br />&nbsp; &nbsp;<br />&nbsp; lda (src),y&nbsp; ; copy one byte<br />&nbsp; sta PPUDATA<br />&nbsp; iny<br />&nbsp; <br />&nbsp; lda (src),y&nbsp; ; copy one byte<br />&nbsp; sta PPUDATA<br />&nbsp; iny<br />&nbsp; <br />&nbsp; lda (src),y&nbsp; ; copy one byte<br />&nbsp; sta PPUDATA<br />&nbsp; iny<br />&nbsp; <br />&nbsp; <br />&nbsp; lda (src),y&nbsp; ; copy one byte<br />&nbsp; sta PPUDATA<br />&nbsp; iny<br />&nbsp; &nbsp;<br />&nbsp; lda (src),y&nbsp; ; copy one byte<br />&nbsp; sta PPUDATA<br />&nbsp; iny<br />&nbsp; <br />&nbsp; lda (src),y&nbsp; ; copy one byte<br />&nbsp; sta PPUDATA<br />&nbsp; iny<br />&nbsp; <br />&nbsp; lda (src),y&nbsp; ; copy one byte<br />&nbsp; sta PPUDATA<br />&nbsp; iny<br />&nbsp; <br />&nbsp; <br />&nbsp; lda (src),y&nbsp; ; copy one byte<br />&nbsp; sta PPUDATA<br />&nbsp; iny<br />&nbsp; &nbsp;<br />&nbsp; lda (src),y&nbsp; ; copy one byte<br />&nbsp; sta PPUDATA<br />&nbsp; iny<br />&nbsp; <br />&nbsp; lda (src),y&nbsp; ; copy one byte<br />&nbsp; sta PPUDATA<br />&nbsp; iny<br />&nbsp; <br />&nbsp; lda (src),y&nbsp; ; copy one byte<br />&nbsp; sta PPUDATA<br />&nbsp; iny<br />&nbsp; rts&nbsp; &nbsp;</div><br /><br />Thirdly, I then export this from the assembly, forthly I write a function header in C, and then finally call it in C like this:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">copy_tile(chr_heart1);</div><br /><br />That's it - just make sure you're calling copy_tile in the NMI.<br /><br />Hopefully this is of some help, if not let me know!

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>