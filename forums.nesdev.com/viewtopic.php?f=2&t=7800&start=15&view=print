<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - [Alpha] QASM - A Simplified CA65 with Debugger Output</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">[Alpha] QASM - A Simplified CA65 with Debugger Output</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=7800">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=7800</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Wave</b> [ Wed Jun 01, 2011 4:07 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'm glad I can be of any help. If this assembler has all the features I have in NESHLA I'll try to switch to it (losing switch and while statements I guess)
<br />
<br />EDIT:
<br />Also on structs maybe it could be like:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.equ NUM_PLAYERS 4<br />.struct struct_players<br />&nbsp; &nbsp; .res x 2<br />&nbsp; &nbsp; .res y 2<br />&nbsp; &nbsp; .res life<br />.endstruct<br /><br />.res players struct_players NUM_PLAYERS</div>
<br />So it creates player X and Y as 2 * NUM_PLAYERS, this way you only use the number of objects once and every entry can have a different size.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>qbradq</b> [ Wed Jun 01, 2011 8:34 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yea, that's what I assumed from your first post. Here's the example code I've written:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">; Define a data structure<br />.datastruct object<br />&nbsp; &nbsp;.res x&nbsp; &nbsp;&nbsp; &nbsp;2&nbsp; &nbsp;; X position in pixels / 16<br />&nbsp; &nbsp;.res y&nbsp; &nbsp;&nbsp; &nbsp;2&nbsp; &nbsp;; Y position in pixels / 16<br />&nbsp; &nbsp;.res vx&nbsp; &nbsp;&nbsp; &nbsp;1&nbsp; &nbsp;; X velocity in pixels / 16<br />&nbsp; &nbsp;.res vy&nbsp; &nbsp;&nbsp; &nbsp;1&nbsp; &nbsp;; Y velocity in pixels / 16<br />&nbsp; &nbsp;.res shape&nbsp; &nbsp;1&nbsp; &nbsp;; Shape number<br />.enddatastruct<br /><br /><br />; Create a single object instance<br />.struct player object<br /><br /><br />; Create a table of objects<br />.equ MAX_OBJECTS 16<br />.struct game_objects object MAX_OBJECTS<br /><br /><br />; Define an initialized object instance<br />.data some_obj object x=0x0170, y=0x00a0, vx=48, vy=0, shape=7<br /><br /><br />; Define an initialized table of objects<br />.table object_templates object<br />&nbsp; &nbsp;.data x=0x0170, y=0x00a0, vx=48, vy=0, shape=7<br />&nbsp; &nbsp;.data x=0x0170, y=0x00a0, vx=96, vy=0, shape=4<br />.endtable<br /></div>
<br />
<br />These directives take care of an awful lot of problems I have when defining data for my game. I think this will make the whole process much smoother.
<br />
<br />One thing I also like is that this will be easy for an external tool to parse the initialized data tables. For instance, I have a script that generates a tile set image based on definitions, graphics files and palette files. I could easily read the tile definitions in from the table definition.
<br />
<br />Thanks for all of the inspiration! I now have a road map through version 0.05 :d

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Wave</b> [ Wed Jun 01, 2011 8:56 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />This is for discussion but it seemed it was easier to access data in "non interleaved" fashion, like:
<br />x,x,x,x,y,y,y,y,z,z,z,z
<br />instead of x,y,z,x,y,z,x,y,z
<br />
<br />In interleaved you have:
<br />ldx numplayer * sizeof(data)
<br />lda data + offset(z), x
<br />On non interleaved:
<br />ldx numplayer * sizeof(z) 
<br />lda data.z, x
<br />
<br />As struct sizes can be any number and variables inside a struct would usually be 1~4 bytes, seems that non-interleaved would be better.
<br />(as stated on KNES C library recommendations)
<br />Also you could access more than 256 bytes using only the x register (up to 256bytes per struct entry)
<br />
<br />I don't know if it's clear what I'm saying...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>qbradq</b> [ Wed Jun 01, 2011 9:51 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />What I am talking about is specifying the data in an interleaved fashion, but outputting it in a non-interleaved fashion.
<br />
<br />So this code:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.table object_templates object<br />&nbsp; &nbsp;.data x=0x0170, y=0x00a0, vx=48, vy=0, shape=7<br />&nbsp; &nbsp;.data x=0x0170, y=0x00a0, vx=96, vy=0, shape=4<br />.endtable</div><br /><br />Would be equivalent to this code, but with an easier to understand syntax:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.scope object_templates<br />&nbsp; &nbsp;x: .word 0x0170, 0x0170<br />&nbsp; &nbsp;y: .word 0x00a0, 0x00a0<br />&nbsp; &nbsp;vx: .byte 48, 96<br />&nbsp; &nbsp;vy: 0, 0<br />&nbsp; &nbsp;shape: 7, 4<br />.endscope</div>
<br />
<br />This gives you the convenience of C-style structs and the runtime efficiency of tables.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Wave</b> [ Wed Jun 01, 2011 10:39 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yeah, yeah, that's what I was talking about too <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>qbradq</b> [ Thu Jun 02, 2011 1:55 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Updated to version 0.04 with conditional assembly support. Man, that was a major rewrite <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /> It will be a lot easier to implement new features now though.
<br />
<br />The next thing I will work on is data structures. I want to use them when I port over my demo.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Wave</b> [ Thu Jun 02, 2011 11:52 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Cool, I'm waiting for that part to try to port over my nes framework to it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>qbradq</b> [ Fri Jun 03, 2011 4:54 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yea, definitely wait a bit. I have found and fixed a ton of bugs in version 0.04 that came from the rewrite. I am going to wait until I've ported over some of my own code with 0.05 before I release it so I can try to get some of the bugs out <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>qbradq</b> [ Fri Jun 03, 2011 12:28 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I have realized that the whole data structure thing is a little mis-guided. It breaks if you allow fields to be larger than one byte. It is still very useful for that though. You just have to address your multi-byte values as individual bytes.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>qbradq</b> [ Fri Jun 03, 2011 1:42 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Updated to version 0.05 with support for data structures. I have ported my entire scrolling demo over to this assembler and fixed a lot of bugs in the process.
<br />
<br />If anyone wants to try this out, now is the time. I am going to start working on my demo again using this assembler. Hopefully that will work out any more bugs that may be present.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>qbradq</b> [ Mon Jun 06, 2011 6:49 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Minor update, I added a syntax highlighting definition for notepad++ including folding.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>qbradq</b> [ Thu Jun 30, 2011 9:44 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Well I finally caught up on my documentation so I figured I'd go ahead and release version 0.7. Here's what's changed:
<br />
<br />Version 0.7
<br />
<br />* Macro parameter expressions are now scoped to the line invoking the macro, not the macro body
<br />* Added offset and length parameters to the .incbin directive
<br />* Added option to print the memory map to the screen following assembly
<br />* Added support for custom character encodings
<br />* Added the .encoding, .endencoding, .char, .range and .text directives
<br />* Fixed a bug that created invalid addresses when forward-referencing zero-page labels
<br />* Fixed a bug that prevented the use of labels within macros defined outside of a segment block
<br />* Added .__size__ default labels for data structure definitions, objects, object arrays and data tables
<br />* Added .__count__ default labels for objects, object arrays and data tables
<br />* Added .__size__ and .__count__ default labels to all .res labels
<br />
<br />Version 0.06
<br />
<br />* Fixed missed requirement: macro bodies are scopes without an associated label address
<br />* More useful error messages for bad named value pairs
<br />* Fixed a crash bug that occurred when a macro parameter name masked the name of a label within the macro's parent scope
<br />* Added the .error directive
<br />* Added support for multiple symbols to the .ifdef and .ifndef directives
<br />
<br />
<br />I am very happy with the progress made on the assembler. As I continue to use it for my projects I keep adding nice features and finding the bugs. Hopefully this will be ready to use by others soon <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>