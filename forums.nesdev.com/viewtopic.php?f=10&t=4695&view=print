<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Looking to make some NES games</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Looking to make some NES games</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=4695">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=4695</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dartht33bagger</b> [ Sat Jan 03, 2009 3:34 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Looking to make some NES games</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I've wanted to make nes games for about a year and a half now, about as long as I've known about emulators.  I have very limited experience with C coding and Visual Basics.  
<br />
<br />Where is a good starting point for making games in 6502?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sat Jan 03, 2009 4:17 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />For people in your situation (programming experience with something other than assembly) I usually recommend reading a lot about the 6502 until you get a grasp on how it works. <a href="http://www.obelisk.demon.co.uk/6502/index.html" class="postlink">This</a> is a good starting pint.
<br />
<br />While you study the 6502, you can use <a href="http://home.pacbell.net/michal_k/6502.html" class="postlink">Michal Kowalski's 6502 simulator</a> to code a few simple routines (such as multiplication and division) to make sure you understood things correctly and to study instructions don't yet understand completely. With this simulator you can study, among other things, how the flags work (flags can be confusing to newbies).
<br />
<br />Once you have a basic understanding of 6502 it's time to read about the NES. It's no use looking into that before you know some assembly because nothing will make sense. It is a good idea though to use an emulator with strong debugging features (such as FCEUXD) to study what the PPU can do. Abuse the tile/palette viewer and the name table viewer and observe how things change in response to input. That you can do before learning 6502.
<br />
<br />When you are ready, read all the NES docs you can find. The main NESDEV page and the wiki should have enough info. Once you haver an idea of how the PPU works, you can try using a good tutorial (hopefully someone can point one out!) and make your first demos.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dartht33bagger</b> [ Sat Jan 03, 2009 4:44 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thanks for the info, I will start looking into that tongiht.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Sat Jan 03, 2009 4:50 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />For 6502 assembly, there are few (if any) online tutorials that can compare to what's available in books.  6502 has been very widely-used since the '70s.  It's a good idea to a invest a few bucks into an old book (check ebay and maybe amazon).
<br />
<br />Here's a short, yet complete 6502 guide:
<br /><a href="http://www.geocities.com/oneelkruns/asm1step.html" class="postlink">http://www.geocities.com/oneelkruns/asm1step.html</a>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dartht33bagger</b> [ Sun Jan 04, 2009 9:56 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I've been using nesasm to compile a few test codes out and it seems to be working ok.  I'm just wondering what programs should I use for compiling, making music, mappers etc.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Mon Jan 05, 2009 3:52 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />For compiling it'll be a never ending debate, as it seems no assembler has an ideal all-features list. CA65 has a ton of features but is complicated to use for newbie because it needs extra files for linking, so it WLA-DX.
<br />
<br />There is simpler assembler, but they may not have all features you'd want to have like align code, povisions for bankswitching code, relocatable code (copied to RAM before executed), have the same piece of code identical many times in the ROM so that it's immuned to bankswitching, etc...
<br />
<br />Personally I can tell WLA-DX is very good but it's annoying you have to type .w about almost every opcode who use 16-bit argument, and it doesn't really have provisions for relocatable code. Also, it's a shame you can not align RAM sections, only ROM section can get aligned for some reason. Aside of that it's a great assembler/linker. The author used to be active and to answer all question and bug reports, which was a very good thing, but that's not the case any longer. Finally if you switch to SNESdev, GBdev, or anything like that you can still use the corresponding WLA-DX which is cool.
<br />
<br />For making music everyone here will recommand Nerdtracker 2 which is an olg sluggish and terribly glitchy music tracker, and personally I recommand writing your own. I love writing music engines, and having to place music with .db statements is not as bad as using Nerdtracker's terrible interface.
<br />There is other trackers arround, but personally I overall don't quite like trackers, that's too limited.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Mon Jan 05, 2009 6:46 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I use TASM (what the TI83 scene used for the Z80, also supports 6502), and Famitracker.  But I couldn't get famitracker player's code to compile, so I just moved my program origin forward and included the binary.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Mon Jan 05, 2009 3:31 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />NESASM is an OK assembler, but it's infamous for non-intuitive error messages (view the listing), and a few non-standard things (like making indirect addressing use [] instead of ()), and forced 8kB PRG banking.  If it doesn't limit you yet, there's nothing wrong with using it.
<br />
<br />YY-CHR and Tile Molester are a couple of nice tile editors, I use both those.
<br />
<br />Get a hex editor.  I use Frhed, and it's free.
<br />
<br />For music, as a Nerdtracker user for 11? years, I'd recommend Famitracker.  NT2 hasn't been updated since 2000 or so.  FT has a more flexible instrument editor.  A lot can be done with NT2 though, it's a real miracle program (and this site wouldn't have existed without it).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>UncleSporky</b> [ Mon Jan 05, 2009 6:26 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I like playing with Famitracker, but how useful is it for putting music into a game?  I've seen tutorials for throwing together a quick program that just plays music for the chiptune sceners, but does it produce data efficient enough to use in a time critical environment?  Or does its output not matter?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Tue Jan 06, 2009 1:57 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">but does it produce data efficient enough to use in a time critical environment?</div><br />Likely not. I use a format which uses one byte per note while still being flexible, and most existing trackers or music programms doesn't reach that level. Also I can come with more than one effect at a time, which trackers can't do. Finally it's possible to make channels not looping at the same time (Final Fantasy 5 does this in at least 3 songs) or to have triplets, all of this is not possible with trackers.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">NESASM is an OK assembler, but it's infamous for non-intuitive error messages (view the listing), and a few non-standard things (like making indirect addressing use [] instead of ()), and forced 8kB PRG banking. If it doesn't limit you yet, there's nothing wrong with using it. </div>
<br />Yeah, most assembler use [] because () are reserved for math priorities. But WLA-DX can optionally swap parenthesis so that [] are for math priorities and () for indirect adressing.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Tue Jan 06, 2009 8:40 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">Yeah, most assembler use [] because () are reserved for math priorities.</div>
<br />
<br />Huh?
<br />
<br />() is the standard syntax in pretty much <em>all</em> the 6502 documentation I've ever seen, and is commonly supported in most assemblers, as well as being the output of virtually all disassemblers and debuggers.
<br />
<br />In fact I'm reasonably sure that the exact opposite is true.  Most 65xx series assemblers use () for indirection because [] is used for <em>long</em> indirection (see 65c816).
<br />
<br />And yeah -- this is one of the reasons I don't like nesasm.  [] for indirection = blech.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Tue Jan 06, 2009 11:43 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I've always used [] for indirection. The () noation dates form the '70s, and that before common assembler had math pre-processor (I assume, I might be completely wrong).
<br />
<br />Altough it's true that an assembler can detect if an expression is surrounded by () and have no math arround it it means indirection, but the leads confusion.
<br />
<br />lda (3*4+12),X would mean using direct adressing (parenthesis are useless, but not an error)
<br />lda (3*4+12),Y would be ambigus. Is it math parenthesis (useless) or indirection parenthesis ? Most likely it's the second because there is no point in putting parenthesis, but well...
<br />
<br />In WLA (and I guess NESasm too), it makes it clear in the doccumentation that () are for math and [] for indirection, but they can be optionally inverted.
<br />
<br />Anyway I don't think either way makes that much difference. A '[' it to a '(' what a 'Z' is to a 'z' if you see what I mean. The only real consern that comes into situation when comparing assembler is their features, such details shouldn't bother anyone who is at leastt *a little* open minded.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Tue Jan 06, 2009 12:21 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">I've always used [] for indirection.</div><br /><br />Could this be because you started with assemblers like nesasm that have funky syntax?  I'm willing to bet that's why.  Which is another reason why I don't like nesasm for this:  it encourages people to fall into nonstandard practices.<br /><br />My first introduction to 6502 came when I made my first NSF player, and in all documentation I read, in other sources I checked, and debuggers and trace logs I examined... not once did I ever see any indication that [] was for indirection.<br /><br />This was my original point, actually.  You said that "most" assemblers use [] for indirection, yet so far you've only listed two.  I can list two that don't (ca65, x816) and can link you to countless other programs (debuggers, tracers, disassemblers) that don't, as well as page after page of documentation that don't.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Altough it's true that an assembler can detect if an expression is surrounded by () and have no math arround it it means indirection, but the leads confusion.<br /><br />[snip]<br /><br />lda (3*4+12),Y would be ambigus. Is it math parenthesis (useless) or indirection parenthesis ? Most likely it's the second because there is no point in putting parenthesis, but well...</div><br /><br />There's no perfect solution to this problem.  But this is a somewhat unrealistic and not really that confusing.  Nobody really encases <em>entire</em> expressions in parenthesis because there's no point (or at least, nobody should).  Like you say, math parenthesis here is useless.<br /><br />And this is the only way there could be this confusion.  Either parenthesis are totally useless, or they're indirection.  So the simple way to avoid this confusion is just to not have totally useless parenthesis.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Anyway I don't think either way makes that much difference. A '[' it to a '(' what a 'Z' is to a 'z' if you see what I mean.</div><br /><br />It actually kind of does matter, because in other areas of the 65xx series, [] means something else entirely (long indirection)<br /><br />lda (blah),Y  ; normal indirection<br />lda [blah],Y  ; long indirection<br /><br />Both are legal in 65c816, and they both mean something different.  Normal indirection () reads a 2 byte pointer, and long indirection [] reads a 3 byte pointer.<br /><br />Granted this isn't applicable to the NES.  But it enforces my point that () <em>is the standard</em>.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">The only real consern that comes into situation when comparing assembler is their features, such details shouldn't bother anyone who is at leastt *a little* open minded.</div>
<br />
<br />There's a lot to be said for following standards.  And there's a lot of grief to be had for needlessly breaking them.  () is the standard for indirection pretty much everywhere in the 6502 universe.  For an assembler to stubbornly go against the standard for no real reason other than to avoid potential confusion is somewhat silly, and a big turnoff to me, personally.
<br />
<br />; is standard for comments
<br />. is standard for assembler directives
<br />() is standard for indirection
<br />
<br />Standards are a good thing.  Breaking them is bad.
<br />
<br />Can you imagine the flack a C compiler would get if it started breaking syntax standards like this?  What if a C compiler came out that flipped the functionality of the [] and () symbols?  What if a web browser came out that used {} instead of &lt;&gt; for html tags?  They'd be burned at the stake... nobody would use them.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Tue Jan 06, 2009 1:29 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">It actually kind of does matter, because in other areas of the 65xx series, [] means something else entirely (long indirection)<br /><br />lda (blah),Y ; normal indirection </div><br />I wasn't aware of this. In that case yeah () makes more sence since you can only adress 64k with the 6502. It would encourage bad practice (?) when moving to 65816 for the SNES.<br />And WLA doesn't impose the usage of [], in fact it wors with both independantly. You can even write sta (pointer],Y it will comile fine.<br />The assembler where you could swap both options should have been another (maybe snowbro's discontinued assembler (the Xorcyst if I remember well) I used a couple of times ?)<br />I just took the habbit of using [] because I saw it at a lot of places.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Can you imagine the flack a C compiler would get if it started breaking syntax standards like this? What if a C compiler came out that flipped the functionality of the [] and () symbols? What if a web browser came out that used {} instead of &lt;&gt; for html tags? They'd be burned at the stake... nobody would use them.</div>
<br />Definitely. And for some reason peopl still uses WLA-DX and Nesasm.
<br />
<br />But there is a big difference : A C code is supposed to be written no matter who the compiler is. For assembly, unfortunately, there is a LOT of work to port a code so taht it assembles with another assembler. There is no really standard syntax, and things like .org are handled differently with about every assembler on earth.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Tue Jan 06, 2009 8:50 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">You can even write sta (pointer],Y it will comile fine.</div><br /><br />ugh<br /><br />*shudders*<br /><br /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">But there is a big difference : A C code is supposed to be written no matter who the compiler is. For assembly, unfortunately, there is a LOT of work to port a code so taht it assembles with another assembler.</div>
<br />
<br />Sad but true.  Good point.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>