<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Using RetroZone RetroVision to program GameBoy audio.</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Using RetroZone RetroVision to program GameBoy audio.</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=6&amp;t=7791">http://forums.nesdev.com/viewtopic.php?f=6&amp;t=7791</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>B00daW</b> [ Wed May 25, 2011 8:08 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Using RetroZone RetroVision to program GameBoy audio.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I originally posted this at ChipMusic.org.
<br />
<br /><!-- m --><a class="postlink" href="http://chipmusic.org/forums/topic/4281/retrovision-gb-for-the-nes-oh-the-possibilities/">http://chipmusic.org/forums/topic/4281/ ... ibilities/</a><!-- m -->
<br />
<br />Basically the idea would be to allow the NES and Game Boy pseudo APUs to sing together.
<br />
<br />I'll mirror the quotation here:
<br />
<br /><div class="quotetitle">B00daW wrote:</div><div class="quotecontent">Oh, Hi.<br /><br />Well, it's not news that bunnyboy of RetroUSB fame has created the RetroVision (<!-- m --><a class="postlink" href="http://www.retrousb.com/product_info.ph">http://www.retrousb.com/product_info.ph</a><!-- m --> … ucts_id=87) from his "because he can" department...  Game Boy on the NES seems to be a neat idea for the NES fans who would just love to play a Game Boy game on the same system after playing a Nintendo game.  However, don't we all just love chip music even more?<br /><br />Let's stop bickering about which console has more sheer power or kick-ass, because we'll never reach an outcome of which sound chip sounds the best or which console has the greatest possibilities.  ...Not.<br /><br />The Nintendo Entertainment System wins again by one simple design choice of the RetroVision.<br /><br />The RetroVision is basically Game Boy with a I/O (controller) wrapper intercepting from the NES to the GB and PPU (graphics) wrapper intercepting from the GB to the NES inside of an NES cart.  The GB audio is also piped through the expansion port of the NES if you have done the expansion sound modification.  If not, there is a 1/8" headphones audio jack on the side of the cartridge.  The RetroVision wraps the NES I/O register $4016 to the GB controller register $FF00.  Both registers are also R/W (or read/write).  (The NES controller register can be written via binary strobe. -- <!-- m --><a class="postlink" href="http://wiki.nesdev.com/w/index.php/Cont">http://wiki.nesdev.com/w/index.php/Cont</a><!-- m --> … _registers.  GB registers located here. -- <!-- m --><a class="postlink" href="http://fms.komkon.org/GameBoy/Tech/Software.html">http://fms.komkon.org/GameBoy/Tech/Software.html</a><!-- m -->)   What does this mean or why does this matter?  Effectively the NES can stream data to the Game Boy.  Let's use our imagination, shall we?  Hrm...<br /><br />Who would like the NES to control the Game Boy's audio?  ...Now wouldn't we need NES code and hardware to store that code to control the GB while the Retrovision is also connected to the Nintendo?<br /><br />Fortunately, it appears that bunnyboy at RetroUSB is working on a dongle cartridge for the NES.  <!-- m --><a class="postlink" href="http://www.sealiecomputing.com/images/scoreboard.jpg">http://www.sealiecomputing.com/images/scoreboard.jpg</a><!-- m -->  (This cart in question currently takes score information from a game and uploads it to the Internet.  Neat.)  This means that a dongle cart can run host code in a specified area of RAM while the client cart connected to it is running its code as well.  Remember the Game Genie?<br /><br />Let's think about what we need for our NES+GB audio set up:<br /><br />1.)  6502/2a0x host code on a NES dongle cartridge that contains a NES sound engine -- with its 2a0x instrument envelopes, sequencer and sample data -- also its accompanying GB instrument envelopes, sample and sequencer data; and a routine that streams GB sequencer data through the controller port to the GB after X cycles (depending on the code.)<br /><br />2.)  A Game Boy flash cartridge with Z80 code that contains a Game Boy sound engine and a routine that synchronizes with the NES, reads the GB instrument envelopes, sample and sequencer data from the NES controller port and plays the sequencer data after X cycles (depending on the code.)<br /><br />Sounds complicated, but once it's coded and done, it's done.  However there are just a couple minor snags to consider:<br /><br />1.)  Obviously the controller would be useless while GB music is playing, but could also effectively distort the GB sequencer data if you wanted it to for a few frames.  The only way around this would be that the controller can only be used after the GB song data has been determined finished.  Obviously looped GB audio accompaniment would make effectively using the controller impossible.<br /><br />2.)  There is a known hardware glitch on the NES that when DPCM (sample) data is being played that it corrupts reads to certain NES registers; one being the controller registers.  (<!-- m --><a class="postlink" href="http://wiki.nesdev.com/w/index.php/APU_DMC">http://wiki.nesdev.com/w/index.php/APU_DMC</a><!-- m --> -- See the bottom.)  This is normally worked around for NES/Famicom software by reading the register 2 to 4 times before proceeding to make sure the right information is received.  In this case the GB would have to read its controller register a few times before proceeding.  My idea for this would be to either have no DPCM sample data on the NES end -- being quite the shame -- or streaming four duplicate nibbles (half bytes or 4 bits) of the GB sequencer information to the controller register from the NES.  If the GB receives two equal nibbles, that it would wait the remaining cycles until the next nibble, and so on...<br /><br />The main stress would be synchronization of the GB to the NES.  Without it this wouldn't work.  This means cycle timing on the GB end on its main loop timed to the NES code.  Shouldn't be all that difficult.  The second stress is that the sequencer data should not be played unless the GB instrument envelopes and sample data has already been streamed to the GB and written to RAM.  Basically there would only be a short loading period.  To summarize, first the GB would synchronize to the NES, the NES would wait X frames before streaming GB instrument envelopes and samples to the GB with a stop sequence at the end, once the GB has written them to RAM the NES waits X additional frames before streaming sequencer data to the GB, to which it begins to listen and stream the sequencer data in real time to its player routine.  The goal being the NES is only writing and not checking on the GB to see if it has gotten what it needs.  The NES would just make sure to send more than necessary while the GB continues to check that it's getting the right stuff.<br /><br />So that about sums it up.  If I was a better coder than a dreamer I'd do this myself.<br /><br />Thoughts?</div>
<br />
<br />I'm no expert at the moment.  I'm more of a dreamer with select knowledge.  I talked with a few people in #NESdev to see if this would work and most responded positively or didn't shoot me down.
<br />
<br />How many people have a RetroVision and a hacked Game Genie?
<br />
<br />I guess the easiest way to start this off would be to program music using PPMCK and XPMCK since the xyntax is almost identical for the MML.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Wed May 25, 2011 1:33 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I've considered doing this with my NES+PowerPak and a stock Game Boy Color. But you'd first need an 8-bit Game Boy flash cartridge. Those are a lot harder to find than, say, a GBA flash cartridge since Nintendo shut down Bung.
<br />
<br />Then you'd need to solder together a cable from controller port 2 to the Game Boy's Game Link port. Game Link is in essence a null modem cable for SPI (clk to clk, MISO to MOSI), and we know the NES controllers use a protocol not entirely unlike SPI. In SPI terms, data out ($4016 write D0) is a combination of chip select and MOSI, and data in ($4017 read D0, D3, or D4) is MISO. Set up Game Boy in "external clock" mode, and it'll see the NES as another Game Boy, and the NES will see the Game Boy as a gamepad.
<br />
<br />From pandocs: <ul><li><a href="http://nocash.emubase.de/pandocs.htm#serialdatatransferlinkcable" class="postlink">$FF00/$FF01: GB/GBC SPI registers</a> </li><li><a href="http://nocash.emubase.de/pandocs.htm#externalconnectors" class="postlink">Game Boy external connectors</a> </li></ul>
<br />I've composed some tracker music for an NES+Game Boy duet in anticipation of a setup like this. It might sound like <a href="http://pics.pineight.com/nes/chill_fakebit.ogg" class="postlink">this</a> (NES on left, GB on right).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ccovell</b> [ Wed May 25, 2011 2:59 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />This might sound blasphemous, but why not just use a PC-Engine tracker if you want to get NES-like and GB-like waveforms together?  Or a Virtual Boy?  Or a DS with the NES side done in emulation through PCM?
<br />
<br />Why must it be a veritable chimera of an idea?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>B00daW</b> [ Wed May 25, 2011 3:02 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The <a href="http://www.nonelectronics.com/catalog/index.php?main_page=product_info&amp;cPath=2&amp;products_id=112&amp;zenid=4rj8uo8qgaktvjma6tapukie86" class="postlink">EMS cartridge</a> is one that seems to stay available longer than others.  I have an older model Game Boy flash cart that still does the trick for me.
<br />
<br />Either way this looks like to be another good idea to pull this off.  Would be good to get the software made so that either route could be taken with the same software.
<br />
<br />As for Chris:
<br />
<br /><div class="quotetitle">ccovell wrote:</div><div class="quotecontent">This might sound blasphemous, but why not just use a PC-Engine tracker if you want to get NES-like and GB-like waveforms together?  Or a Virtual Boy?  Or a DS with the NES side done in emulation through PCM?<br /><br />Why must it be a veritable chimera of an idea?</div>
<br />
<br />In this case why not just use an modular format like tepples, FL Studio or Renoise?  The idea would be to use the real hardware.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Wed May 25, 2011 3:15 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The EMS USB cartridge sort of reminds me of the EFA-Linker in how it's described. But a lot of people will have to reboot to Linux to get it to work.
<br />
<br /><div class="quotetitle">ccovell wrote:</div><div class="quotecontent">why not just use a PC-Engine tracker</div>
<br />Because TurboGrafx-16 was never popular in my market. That's why I currently stick with Modplug Tracker for my fakebit compositions.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>mic_</b> [ Wed May 25, 2011 10:27 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Those are a lot harder to find than, say, a GBA flash cartridge since Nintendo shut down Bung.</div>
<br />
<br />I own 3 different GB flash carts, all bought in the last couple of years, and none of them Bung. So they're not that hard to find.
<br />
<br />Like B00daW said, the EMS 64M cart is sold at various places. I've found the USB drivers for it a bit iffy, but it can also be programmed over an LPT port using the Gameboy Transferer II. The LPT-only GB Smart 32 card is also still on sale.
<br />Only the Smartboy cart seems to be temporarily unavailable, due to shipping problems.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Theta_Frost</b> [ Sun Jun 19, 2011 12:06 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'd like to be able to use these together.  It would streamline my live setup, and I'd only have to bring the NES, as apposed to the NES + GB.  And that's one less thing to forget. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />
<br />
<br /><div class="quotetitle">ccovell wrote:</div><div class="quotecontent">This might sound blasphemous, but why not just use a PC-Engine tracker if you want to get NES-like and GB-like waveforms together?  Or a Virtual Boy?  Or a DS with the NES side done in emulation through PCM?<br /><br />Why must it be a veritable chimera of an idea?</div>
<br />
<br />When there is a PC-Engine tracker, let me know!... and Virtual Boy! <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>mic_</b> [ Sun Jun 19, 2011 1:18 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">When there is a PC-Engine tracker, let me know!... and Virtual Boy!</div>
<br />
<br />It's not a tracker, but <a href="http://jiggawatt.org/muzak/xpmck/" class="postlink">my MML compiler kit</a> supports the PC-Engine.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Theta_Frost</b> [ Wed Jun 22, 2011 1:10 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I know!  Just saw the release.   XPMCK is a powerful program.  But, man, I really struggle with MML.   <img src="./images/smilies/icon_redface.gif" alt=":oops:" title="Embarassed" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>zzo38</b> [ Wed Jun 22, 2011 3:56 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">mic_ wrote:</div><div class="quotecontent">It's not a tracker, but <a href="http://jiggawatt.org/muzak/xpmck/" class="postlink">my MML compiler kit</a> supports the PC-Engine.</div>Is source codes available and is there feature for using alternative temperament (such as just intonation for example), or be able to enter some of the assembly language codes for callbacks directly in your .mml file?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>mic_</b> [ Wed Jun 22, 2011 10:01 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Is source codes available</div><br />Yes.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">and is there feature for using alternative temperament (such as just intonation for example)</div><br />I've had no musical education, so that's mumbo-jumbo to me. But this is what I base my frequency tables on:<br /><br />	32.7032,	-- C<br />	34.6479,	-- C+ / D-<br />	36.7081,	-- D<br />	38.8909,	-- D+ / E-<br />	41.2035,	-- E<br />	43.6536,	-- F<br />	46.2493,	-- F+ / G-<br />	48.9995,	-- G<br />	51.9130,	-- G+ / A-<br />	55.0000,	-- A<br />	58.2705,	-- A+ / B-<br />	61.7354	-- B<br /><br />That's my Octave 1, and then I double the values for each octave I go up.<br /><br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">be able to enter some of the assembly language codes for callbacks directly in your .mml file?</div>
<br />No. At the moment you have to put all callback code in a separate file (like the assembly code file that invokes xpmp_init/xpmp_update).

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>