<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - APU I/O ports, TV cycles, Cx4 and other miscellaneous things</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">APU I/O ports, TV cycles, Cx4 and other miscellaneous things</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=12&amp;t=5362">http://forums.nesdev.com/viewtopic.php?f=12&amp;t=5362</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Gekko</b> [ Wed Jul 01, 2009 3:21 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>APU I/O ports, TV cycles, Cx4 and other miscellaneous things</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />1) Every document I've come across that deals with the APU I/O ports go over the SNES side briefly, not giving me enough information on what format I should upload the data in, and normally, how I should upload it. (I do have the latter information now but I'm unsure if I'm thinking of it properly)
<br />As such, I want to know what the format the data is uploaded in or preferably a clear explanation of what you are doing at any step, as opposed to merely saying "copy a byte here" or whatever. An example of what I don't want is <a href="http://en.wikibooks.org/wiki/Super_NES_Programming/Loading_SPC700_programs#The_SNES.27s_communication_routine" class="postlink">here</a>.
<br />2) This is simply statistical. Anyway, I want to know how long the following take, in terms of FastROM master clock cycles, although machine cycles and non-FastROM (SlowROM?) would be acceptable too.
<br />Anyway, the things I want this data for, are: V-blank, H-blank and the difference between H-blanks (time to go from the beginning of a scanline to the end of it).
<br />
<br />Any help would be appreciated, greatly!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Wed Jul 01, 2009 3:45 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />1.  I found the explanations to be confusing, too.  There's nothing special about the data format, but what was helpful to me was just to disassemble the internal ROM of the SPC.  It's only 64 bytes I think, you can extract it from any .SPC file.  I found the code much easier to follow than any explanations of the loading process.  You only need to use that once, then you can communicate any way you want (from within your loaded code).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Gekko</b> [ Wed Jul 01, 2009 4:42 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If I understand your post properly, you think I'm talking about the SPC700 data as opposed to the format that the SNES stores it in. (Correct me if I'm wrong.) In the SNES Development manual, I got the following information before hand:
<br />1) The first word is the length of the block
<br />2) The second word is the address of the block
<br />3) The rest is the SPC700 data.
<br />What I want to know is:
<br />1) What is that address for? Is it for where the SPC700 puts it in its RAM/cache/whatever it is? (I'm not well versed in SPC700. In fact, I'm still learning it. It's just I'm asking for information on the SNES side, not the SPC700 side).
<br />2) How is the SPC700 data sent? I'm pretty sure it would just be on  word at a time but would that be reversed byte order (little-endian) or standard order (big-endian).
<br />In addition, I want to know what exactly you are inputing into the APU I/O ports.
<br />Sorry for not being clear enough before hand! (And not realizing what exactly it was that I wanted)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Wed Jul 01, 2009 5:12 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I don't remember about the endien-ness.  It's been years since I've used the SPC.  I don't know why, but I can't find that part of my source code (just a broken commented out one).  If that code was right, the data is sent as bytes.  And you're right about the address.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Wed Jul 01, 2009 5:15 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />oh nevermind, I found what I did. i ripped someone else's code.
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">;Sound.ASM<br />;<br />;Support routines for the SPC700<br />;&#40;C&#41; 1999 Realtime Simulations and Roleplaying Games<br />;<br />;Grog's worst nightmares come true with this bloody CPU<br /><br />InitSoundCPU:<br />&nbsp; &nbsp; &nbsp; &nbsp; phk<br />&nbsp; &nbsp; &nbsp; &nbsp; plb<br />&nbsp; &nbsp; &nbsp; &nbsp; php<br />&nbsp; &nbsp; &nbsp; &nbsp; rep #$30<br />&nbsp; &nbsp; &nbsp; &nbsp; sep #$20<br />&nbsp; &nbsp; &nbsp; &nbsp; .mem 8<br />&nbsp; &nbsp; &nbsp; &nbsp; .index 16<br /><br />&nbsp; &nbsp; &nbsp; &nbsp; ldx #$0400&nbsp; &nbsp; &nbsp; ;Target SPC address for program<br />&nbsp; &nbsp; &nbsp; &nbsp; stx $2142<br />&nbsp; &nbsp; &nbsp; &nbsp; ldx #$0000<br />&nbsp; &nbsp; &nbsp; &nbsp; lda #$01<br />&nbsp; &nbsp; &nbsp; &nbsp; sta $2141<br />&nbsp; &nbsp; &nbsp; &nbsp; lda #$CC<br />&nbsp; &nbsp; &nbsp; &nbsp; sta $2140<br />-&nbsp; &nbsp; &nbsp; &nbsp;cmp $2140&nbsp; &nbsp; &nbsp; &nbsp;;Wait for SPC to sync<br />&nbsp; &nbsp; &nbsp; &nbsp; bne -<br /><br />&nbsp; &nbsp; &nbsp; &nbsp; SoundSendLoop:<br />&nbsp; &nbsp; &nbsp; &nbsp; lda spcprogg,X<br />&nbsp; &nbsp; &nbsp; &nbsp; sta $2141&nbsp; &nbsp; &nbsp; &nbsp;;Set the address<br />&nbsp; &nbsp; &nbsp; &nbsp; txa<br />&nbsp; &nbsp; &nbsp; &nbsp; sta $2140&nbsp; &nbsp; &nbsp; &nbsp;;Set the data<br />-&nbsp; &nbsp; &nbsp; &nbsp;cmp $2140<br />&nbsp; &nbsp; &nbsp; &nbsp; bne -&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;Wait for SPC to sync<br />&nbsp; &nbsp; &nbsp; &nbsp; inx<br />&nbsp; &nbsp; &nbsp; &nbsp; cpx #spcend-spcprogg&nbsp; &nbsp;;Check for last data byte<br />&nbsp; &nbsp; &nbsp; &nbsp; bne SoundSendLoop<br /><br />&nbsp; &nbsp; &nbsp; &nbsp; stz $2141&nbsp; &nbsp; &nbsp; &nbsp;;Mark end of data<br />&nbsp; &nbsp; &nbsp; &nbsp; ldy #$0400&nbsp; &nbsp; &nbsp; ;Set starting address of SPC code<br />&nbsp; &nbsp; &nbsp; &nbsp; sty $2142<br />&nbsp; &nbsp; &nbsp; &nbsp; inx<br />&nbsp; &nbsp; &nbsp; &nbsp; inx<br />&nbsp; &nbsp; &nbsp; &nbsp; txa<br />&nbsp; &nbsp; &nbsp; &nbsp; sta $2140&nbsp; &nbsp; &nbsp; &nbsp;;Tell SPC to begin executing its program<br /><br />&nbsp; &nbsp; &nbsp; &nbsp; plp<br />&nbsp; &nbsp; &nbsp; &nbsp; rtl<br /><br />spcprogg:<br />.incbin &quot;SPC.obj&quot;<br />;.incbin &quot;FLUTEC4.BRR&quot;<br />;.incbin &quot;MOO.BRR&quot;<br />spcend:<br />&nbsp; &nbsp; &nbsp; &nbsp; .dcb $FF<br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Gekko</b> [ Wed Jul 01, 2009 7:29 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />O.K., a few things.
<br />1) While this is definitely easier to understand than the other routines I've seen, I am going more for an actual understanding of the ports. It doesn't matter much but it might be nice. (After all, having a routine isn't like knowing what the routine does.)
<br />2) Why did you never check $2140 to be #$AA and $2141 to be #$BB? I recall that being the SPC700's signal that it is ready. Do you assume that someone already did that?
<br />3) What is spcend-spcprogg?
<br />4) Just in case you were wondering, little-endian reverses the byte order. (so the highest address would store the highest byte and the lowest address would store the lowest byte) while big-endian is what we would expect, namely the lowest byte is at the highest address and the highest byte would be stored at the lowest address.
<br />
<br />Yet again, I apologize for a lack of clarity and any such examples to be shown in the future.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Thu Jul 02, 2009 5:56 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />1. IIRC, you can only write 8-bits to the port at a time.  I'm not sure what else I can add.  I couldn't locate the disassembly of the SPC's ROM.  I did have another routine in my SNES program, to transfer data to it every frame (and definitely not using the internal loader thing), I could dig that out if that'd be useful.
<br />
<br />2. I didn't write that particular routine, but the one I did write did check for #$AA and #$BB like the docs say, but it apparently didn't work because I commented it all out.  Seems it can be ignored.  I'm guessing it may be for when games want to re-use that loader routine later (for further data, samples, etc.).
<br />
<br />3. The "spc.obj" file there is a binary, it's the whole SPC program/data, assembled with TASM (table assembler).  spcend-spcprogg lets it calculate the filesize.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Gekko</b> [ Thu Jul 02, 2009 6:26 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />1) Well, don't worry about it. I looked over the places I previously found information and that helped me understand even further.
<br />
<br />2) What do you mean? Do you mean sound effects or different music? Also, should I add a
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">LDA #$BBAA<br />CMP $2140<br />BEQ $02 ;Skip the PLP and RTL or RTS<br />PLP<br />RTL ;or RTS</div>
<br />between the REP #$30 and the SEP #$20?
<br />
<br />3) That clears that one up!
<br />
<br />Another thing, though: It just occurred to me that that routine sets the address manually. Does this mean that if I were to use multiple sounds, (as in sound effects and music at the same time) I would want to use indexed pointers, for example?
<br />
<br />Also, thank you for your great help!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Thu Jul 02, 2009 6:57 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />2. I mean music, code, basically anything.
<br />
<br />For doing music/sfx at the same time, really you'll want all the sample data to be preloaded in SPC's RAM.  Then have some variables that you transfer to the SPC every frame, to trigger the sound effects.  I suppose you could reuse that loader thing to transfer a few variables, but it seems kinda slow and complicated.
<br />
<br />The debugger in old ZSNES was really helpful when I was working on communications since it could step through the code for both CPUs at the same time.
<br />
<br />
<br /><div class="quotetitle">Gekko wrote:</div><div class="quotecontent">ean? Do you mean sound effects or different music? Also, should I add a<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">LDA #$BBAA<br />CMP $2140<br />BEQ $02 ;Skip the PLP and RTL or RTS<br />PLP<br />RTL ;or RTS</div><br />between the REP #$30 and the SEP #$20?<br /></div>
<br />I'd highly suspect a 16-bit access won't work, as the port is <em>probably</em> an 8-bit link between the chips.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Gekko</b> [ Thu Jul 02, 2009 7:47 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Memblers wrote:</div><div class="quotecontent">I'd highly suspect a 16-bit access won't work, as the port is <em>probably</em> an 8-bit link between the chips.</div>
<br />
<br />Actually, I've seen it before, even in a commercial games.
<br />
<br />Anyway, thank you for taking so much time to answer my questions!
<br />
<br />If anyone could answer my other question, I would be thankful as well.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Thu Jul 02, 2009 10:22 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Memblers wrote:</div><div class="quotecontent"><div class="quotetitle">Gekko wrote:</div><div class="quotecontent">Also, should I add a<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">LDA #$BBAA<br />CMP $2140<br />BEQ $02 ;Skip the PLP and RTL or RTS<br />PLP<br />RTL ;or RTS</div><br />between the REP #$30 and the SEP #$20?<br /></div><br />I'd highly suspect a 16-bit access won't work, as the port is <em>probably</em> an 8-bit link between the chips.</div>
<br />
<br />The CMP in question would actually read 8 bits from $2140 (APU_PORT_0) and $2141 (APU_PORT_1).  So the ""16-bit read"" method should work just fine.  The official developers manual even uses to this method in example SPC bootloader code; see Section D.4 (of manual revision A, dated 1992/05/01).
<br />
<br />And yes, you should wait for APU_PORT_0==$AA and APU_PORT_1==$BB before doing transferring any data to/from the SPC.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Fri Jul 03, 2009 6:41 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">koitsu wrote:</div><div class="quotecontent">And yes, you should wait for APU_PORT_0==$AA and APU_PORT_1==$BB before doing transferring any data to/from the SPC.</div>
<br />
<br />A couple guys built my NSF player on a cartridge, and it worked.  Looks like I run InitSoundCPU somewhat early in reset, too (after RAM/VRAM clearing).  So maybe I just got lucky that time.  SPC loading was quite an ordeal at first, so I'm glad if I can help anyone else with that.
<br />
<br />Thanks for clearing up my guesses, probably would make more sense if I referred to docs instead of my old source code and memories.  <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>byuu</b> [ Fri Jul 03, 2009 2:58 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It doesn't take the S-SMP long to clear 240 bytes of stack and signal to the S-CPU that it's ready. Clearing all of WRAM / VRAM gives you plenty of time for it to finish its setup process.
<br />
<br />Still, it's good advice. For a one-time check, especially for a library routine, it's best to just add the cmp #$bbaa. Never know when someone might call it right off the bat.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Gekko</b> [ Fri Jul 10, 2009 8:07 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I already posted two unrelated questions, so why not more?
<br />3) This is a Cx4 question. (or set) What is the purpose (or what do you store to, and in what format) of the registers that are labeled MSBs/MSB of the above in <a href="http://www.romhacking.net/docs/192" class="postlink">this</a> documentation? For example, how does this work: (command $00, subcommand $03)
<br />    $7f8c:   Height
<br />    $7f8d-e: ??? (MSBs of above?)
<br />In addition, for that same command, what about the format of $7F83-5 and $7F86-8? Are they bb.bbbb?
<br />EDIT: It's the most significant byte/bytes for the value, not of the value.
<br />4) Does DMA actually stop the CPU from reading off more instructions (like using the DSP-1 would) or can the CPU still go on reading instructions during DMA?
<br />5) This isn't a question as much as the others but I've noticed that many places reference things like SPC7110 information floating around. Since I want to know about all of the chips, where can I find information on the following chips:
<br />DSP-2
<br />DSP-3
<br />DSP-4
<br />OBC-1
<br />S-DD1
<br />S-RTC
<br />SPC7110
<br />MX15001TFC
<br />ST010
<br />I already know of <a href="http://users.tpg.com.au/advlink/dsp/" class="postlink">this</a> place but I don't understand C, except for the parts that English enough. (And the if, then, else things)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Sat Jul 11, 2009 9:05 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Gekko wrote:</div><div class="quotecontent">4) Does DMA actually stop the CPU from reading off more instructions (like using the DSP-1 would) or can the CPU still go on reading instructions during DMA?</div>
<br />
<br />Yes.  Once you enable a DMA transfer via $420B, the transfer takes place and the main CPU is essentially "halted" until the transfer finishes.
<br />
<br />E.g.:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">...<br /><br />$8004: LDA #$01&nbsp; &nbsp; &nbsp; &nbsp;; Enable channel 0<br />$8006: STA $420B&nbsp; &nbsp; &nbsp; ; Begin DMA transfer<br />;<br />; CPU is stalled/held until the DMA transfer is completed.<br />; Below instructions won't occur until the DMA transfer has<br />; completed.<br />;<br />$8009: REP #$10<br />$800B: LDX #$1234<br /><br />...</div>

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>