<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Im new.....And I brougth source! :D</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Im new.....And I brougth source! :D</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=6221">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=6221</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>3</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sat Mar 27, 2010 6:13 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">65024U wrote:</div><div class="quotecontent">By sprite overlap, i saw in some document that if 2 sprites on the PPU overlap (Not including "see through" spots?) that it would make it go to a high, otherwise it would be low.</div><br />I think you are talking about an effect that results from overlapping a high priority sprite set to be displayed under the background over a low priority sprite set to be displayed over the background. What happens is that the PPU decides to draw the high priority sprite, but since it's configured to be below the background the background gets displayed instead.<br /><br />With this trick it's possible to bring detailed parts of the background (the shape is the same as the shape of the high priority sprite) over the sprites. Not something you should worry about now... The uses for this trick are very limited, since the NES allows few sprites per scanline, so you can't waste them making "masks".<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Okay, Next question.....What's the best way to get the PPU to not display (Or, well, display offscreen) the graphics? My pong game so far just writes $FE to every location in RAM and it's done, it seems to be okay, is it? 0_0</div><br />You mean the sprites? Just give them an Y coordinate of $F0 or more. Since you are using $Fe it should be fine. Tho other bytes don't really matter though, only the Y coordinate (in a game that makes heavy use of sprites it might save you some time to just modify the Y coordinate to put them off-screen).<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Does storing the location where to update the screen in NMI, doe you HAVE to do it first?....Also, Does it halt the microprocessor once you do that?</div><br />I have no idea what you're talking about here.<br /><br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">So wait, since Vblank (When the screen is done scanning verticly?) is done, it NMI's, so technicly the best time is during the begining of the NMI?</div>
<br />Yes, all graphical updates should be at the beginning of your NMI routine, and they shouldn't go past the time of the vertical blank (around 20 scanlines, or 2273 CPU cycles), or there will be glitches. If you want to update more than that time allows, tricks will be necessary.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Sat Mar 27, 2010 6:18 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Okay thanks, that question you didn't know was answered by your next answer <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />....
<br />
<br />
<br />Ahhh that code I have is not good for use then lol nothing big. I am going to actually start the paddle movement now......Coming from 6809, It's not gona be easy, Im used to ADD, SUB, DEC (Decrease by 1).......Ugh <img src="./images/smilies/icon_sad.gif" alt=":(" title="Sad" /> I used DEC in a program and it didn't work lol ^_^
<br />
<br />
<br />Edit:
<br />
<br />Also I think you should maybe move this to the Newbie Help Center?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sat Mar 27, 2010 6:56 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">65024U wrote:</div><div class="quotecontent">Is there a depository of games here that everyone's put together? I'd LOVE to try some!</div><br />pdroms.de<br /><br />The two NES productions that I'm most proud of are <a href="http://lj65.org/" class="postlink">LJ65</a> and <a href="http://pineight.com/croom/" class="postlink">Concentration Room</a>, both of which come with full source code.<br /><br /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">Pong is already better, because it's action-based, as opposed to turn-based</div>
<br />So would Missile Command and Centipede and Bomberman and Qix be "single-screen puzzle games"? They're single-screen but not turn-based. And the only thing that's "turn-based" in games like Tetris is when you "turn" the pieces.
<br />
<br />
<br />Anyway, I'm moving it to n00bville.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sat Mar 27, 2010 7:08 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">So would Missile Command and Centipede and Bomberman and Qix be "single-screen puzzle games"? They're single-screen but not turn-based.</div>
<br />If it's not turn-based it's already a step up in my book, even if it's still a single-screen puzzle game. My hate goes more towards board/card games I guess. Tetris is cool, however.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Sat Mar 27, 2010 7:23 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Lol thanks Tep ^_^
<br />
<br />
<br />
<br />Well....Hmm....Whatdoyaknow....Another problem lol XD  <img src="./images/smilies/icon_redface.gif" alt=":oops:" title="Embarassed" />   <img src="./images/smilies/icon_rolleyes.gif" alt=":roll:" title="Rolling Eyes" /> 
<br />
<br />
<br />It doesn't update the sprite at the begining of the NMI :/
<br />
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NMI:<br />&nbsp; LDA $2002<br />&nbsp; LDX #$00<br />ContinueSpriteUpdate:<br />&nbsp; LDA Player1YPos,X<br />&nbsp; STA $200,X<br />&nbsp; INX<br />&nbsp; CPX #$04<br />&nbsp; BNE ContinueSpriteUpdate<br />&nbsp; LDA #$00<br />&nbsp; STA $2003&nbsp; &nbsp; &nbsp; &nbsp;; set the low byte &#40;00&#41; of the RAM address<br />&nbsp; LDA #$02<br />&nbsp; STA $4014&nbsp; &nbsp; &nbsp; &nbsp;; set the high byte &#40;02&#41; of the RAM address, start the transfer<br />&nbsp; LDA #$00&nbsp; &nbsp;;No scroll?<br />&nbsp; STA $2005<br />&nbsp; STA $2005<br />&nbsp; RTI<br /></div><br /><br /><br />Player1YPos  hold the Players Y position, and a string of 3 bytes after it that are $01,$00,$10....And nothing is put on the screen at all <img src="./images/smilies/icon_sad.gif" alt=":(" title="Sad" /><br /><br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; Player1YPos: .rs 1&nbsp; &nbsp;;YPosition<br />&nbsp; .db $01,$00,$10&nbsp; &nbsp;;Tile Info<br /></div>
<br />
<br />
<br />I can do that, right?
<br />
<br />
<br />Dang this is soooo confusing XD It seems like it should work, like I followed the instructions but nooooooooo, It's gotta be difficult XD

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sat Mar 27, 2010 7:41 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Reserving bytes (.rs) is something you do in RAM, and declaring bytes (.db) is something you do in ROM, you can't mix them.  It is a common misconception that .db will initialize values in RAM, but it won't. If you want to put values in RAM you have to do it yourself with LDA/LDX/LDY and STA/STX/STY. And there is no point in reserving bytes in ROM since you can't replace them.
<br />
<br />Also, don't populate $200 in the NMI routine. That isn't a PPU operation, $200 is regular RAM, so do that out of the critical time. Leave for the critical time just the DMA itself ($2003 and $4014 stuff).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Sat Mar 27, 2010 7:50 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Ohhhh kay <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /> I thought I was being smart mixing the two but whoops XD Im just an idiot at the moment <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" />
<br />
<br />
<br />
<br />Okay well on a different computer now, once I edit my program to what you say, I should be able to start actually making A/The engine.
<br />
<br />
<br />
<br />Also, So all that should be in the NMI is that little 00-&gt;2003 and 02-&gt;4014? Okay.
<br />
<br />I think to keep timing consistant, I will COM (ramAddress) and once it's Complimented, I will make loop run again, does that sound like the normal way of doing things?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sat Mar 27, 2010 8:20 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">65024U wrote:</div><div class="quotecontent">Also, So all that should be in the NMI is that little 00-&gt;2003 and 02-&gt;4014? Okay.</div><br />You should leave to the NMI strictly what can't be done during rendering, so that you don't waste any of that precious time with stuff you could do some other time.<br /><br />In you case it's just the DMA (00-&gt;2003 and 02-&gt;4014, like you put it) and resetting the scroll. Note that resetting $2005 alone is not enough to fully reset the scroll: you also have to take care of the 2 lower bits of $2000.<br /><br />A typical NMI routine will first take care of palette updates, background updates, sprite DMA and finally resetting the scroll. The order doesn't really matter, except for resetting the scroll which absolutely must be the last PPU operation. Everything that you can pre-compute to help speed up those operations you should (such as writing the tiles output by a level map decompression routine to a buffer instead of directly to the screen, because simply copying the data from the buffers to VRAM is much faster than decoding the data during VBlank.).<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I think to keep timing consistant, I will COM (ramAddress) and once it's Complimented, I will make loop run again, does that sound like the normal way of doing things?</div>
<br />COM? You lost me again.
<br />
<br />The typical game loop consists of updating the game world (i.e. processing input and moving the game entities around), filling any variables or buffers that will be necessary during VBlank in the process, and then waiting for the NMI to fire. After the NMI finishes and control is transferred back to the main program, you repeat the loop.
<br />
<br />This is usually do done by setting a "waiting VBlank" flag after all the frame calculations are done, and then reading the flag in a loop until it changes. Once it changes, JMP back to the start of the game loop.
<br />
<br />In the end of your NMI routine you change the flag to indicate that the NMI happened. It's also a good idea to have your NMI routine check this flag *before* doing the updates. You see, when games get more complex, sometimes a whole video frame isn't enough to compute everything, so the NMI will fire before the game logic is done, in which case the buffers and variables that are used for video updates are not guaranteed to contain valid data. So if the NMI wasn't expected, just skip the updates altogether (which will make this frame a "lag frame"). This is why some games slow down when there is too much going on (like Mega Man with lots of enemies on-screen).
<br />
<br />I know it is very unlikely that PONG will go over the time limit, but it's a good practice for when you start working on more complex projects.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Sat Mar 27, 2010 9:12 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Okay I get what your saying......And by COM, I ment compliment......Sorry more 6809 stuff the 6502 doesn't have? Or atleast different syntax...
<br />
<br />
<br />
<br />Okay yeah well there aren't going to be any pallet changes or such so I'll just leave that out and do what you say now to the program.....
<br />
<br />
<br />This NES programming is painful, but rewarding even if it really doesn't do anything XD

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sat Mar 27, 2010 9:31 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">65024U wrote:</div><div class="quotecontent">Okay I get what your saying......And by COM, I ment compliment......Sorry more 6809 stuff the 6502 doesn't have? Or atleast different syntax...</div><br />I don't know anything about the 6809... So, COM inverts the bits, is that it? There is no single instruction for it on the 6502, you have to load, EOR with $FF and store it back, making that a poor choice for handling flags. For manipulating flags I usually use INC and DEC to flip them from $FF to $00 and back, and I often use the N flag (which is basically a copy of bit 7) to detect its state.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">This NES programming is painful, but rewarding even if it really doesn't do anything XD</div>
<br />Painful? You must have serious problems if your hobby is something you consider painful! <img src="./images/smilies/icon_eek.gif" alt=":shock:" title="Shocked" />
<br />
<br />Just curious, what machine have you programmed before that has a 6809?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Sat Mar 27, 2010 9:50 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hmmm....
<br />
<br />
<br /> I passed the main loop the "switch" to know that a NMI occurred by putting a little LDA #$FF, BNE (Itsself), And after the BNE is false it runs the loop again, and I *think* I implemented what you said right, but it seems I have missed something <img src="./images/smilies/icon_sad.gif" alt=":(" title="Sad" />
<br />
<br />
<br />
<br />Wow this is getting really hard ha.....
<br />
<br />
<br />Well here's the code, Main game's loop is the label Loop.......I added what should be a working controller reader subroutine......At he begining of the loop I *try* to put the sprites to the sprites ram, but it doesn't seem to work  (If it does, it won't be the right one, It'll be a dash)....
<br />
<br />
<br />Is that a appropriate way to catch a NMI occurance?
<br />
<br />
<br /><!-- m --><a class="postlink" href="http://aaronrls01.webs.com/Programming/FullBackgroundFail.zip">http://aaronrls01.webs.com/Programming/ ... ndFail.zip</a><!-- m -->
<br />
<br />
<br />
<br />Well thanks for all the help! There are definently not enough hours in the day! Gooing to hit bed and be on first thing tomorrow <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /> Thanks so much guys I am learning alot. If only this was a class in high school....

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sat Mar 27, 2010 10:25 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">65024U wrote:</div><div class="quotecontent">I passed the main loop the "switch" to know that a NMI occurred by putting a little LDA #$FF, BNE (Itsself), And after the BNE is false it runs the loop again, and I *think* I implemented what you said right, but it seems I have missed something <img src="./images/smilies/icon_sad.gif" alt=":(" title="Sad" /></div><br />You used a "#", so you are directly loading the value $FF into A every time. The BNE will always branch, since $FF is not 0, and the program will never leave this loop.<br /><br />I usually do something like this:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;lda #$00 ;initialize the flag to &quot;false&quot;<br />&nbsp; &nbsp;sta FrameDone<br /><br />GameLoop:<br />&nbsp; &nbsp;;GAME LOGIC HERE<br /><br />&nbsp; &nbsp;dec FrameDone ;set the flag to &quot;true&quot;<br /><br />Wait:<br />&nbsp; &nbsp;bit FrameDone<br />&nbsp; &nbsp;bmi Wait<br /><br />&nbsp; &nbsp;jmp GameLoop ;go back and process another frame<br /><br />;--------------------------------<br /><br />NMI:<br />&nbsp; &nbsp;bit FrameDone<br />&nbsp; &nbsp;bpl NotReady<br /><br />&nbsp; &nbsp;;VRAM UPDATES HERE<br /><br />&nbsp; &nbsp;inc FrameDone ;set the flag to &quot;false&quot;<br /><br />NotReady:<br />&nbsp; &nbsp;rti</div><br />Note that when the frame is not ready you have to be careful to not trash any of the registers (the game logic was interrupted, so for it to continue correctly later you the register must contain the same values), which is why I used BIT to check the value of the flag, because it doesn't modify registers. If you do have to use the registers, back them up somewhere (using the stack or variables) and restore them before returning. You don't have to worry about trashing the flags, because the CPU automatically saves and restores them on interrupts.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">http://aaronrls01.webs.com/Programming/FullBackgroundFail.zip</div>
<br />The link is not working for me. Once I see the code I'll try to identify exactly what you're doing wrong.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Sun Mar 28, 2010 2:38 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">- Read $2002 in your NMI code to acknownledge the interupt (okay technically I think you don't have too but really it's good practice to do it)</div>
<br />This is definitely a good practice, because if you don't clear the NMI flag, in some conditions a new NMI will be generated in the middle of the old NMI... I don't remember the exact condition but it might've been if you modify PPUCTRL ($2000) D7 in the NMI. It can make for some really hard to track bugs.
<br />
<br />Actually, now that I think of it, I think it works like this: if NMI flag is not cleared by reading $2002, and you clear D7 of PPUCTRL, then set it again, a new NMI will trip immediately. So, code like this will result in NMIs to be generated until the end of time:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">nmi:<br />&nbsp; lda #0<br />&nbsp; sta $2000<br />&nbsp; lda #$80<br />&nbsp; sta $2000<br />&nbsp; ; new NMI is generated here<br /></div>
<br />This can be fixed by adding lda $2002 as the first instruction of the NMI.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sun Mar 28, 2010 7:08 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">thefox wrote:</div><div class="quotecontent">Actually, now that I think of it, I think it works like this: if NMI flag is not cleared by reading [$2002], and you clear D7 of PPUCTRL, then set it again, a new NMI will trip immediately. So, code like this will result in NMIs to be generated until the end of time</div>
<br />Or at least until the end of vertical blanking. The PPU clears <a href="http://wiki.nesdev.com/w/index.php/NMI" class="postlink">NMI_occurred</a> during the pre-render scanline, which is why turning on PPUCTRL D7 during draw time doesn't trigger an immediate NMI.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Sun Mar 28, 2010 7:56 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Wait that link didn't work? I just tried it, it should, the updated files were there 0_o.....When my mom stops playing farmville on our Good pc with my flash drive in it with all the stuf I'll re-upload it.
<br />
<br />
<br />
<br />Yeah, at the NMI I put LDA #$00, then stored it to 2005 or some register twice for no scrolling? Wouldn't that set the equal bit to 1 so the BNE would be false and it jumps to the game loop? I basicly did the sdame thing I am pretty sure.
<br />
<br />
<br />NMI and RTI push and pull the stack, right? If so I have no variable trashing problems, right?

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>3</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>