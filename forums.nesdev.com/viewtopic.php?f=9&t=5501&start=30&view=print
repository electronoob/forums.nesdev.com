<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Newbie advice on making a simple dev cart.</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Newbie advice on making a simple dev cart.</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=9&amp;t=5501">http://forums.nesdev.com/viewtopic.php?f=9&amp;t=5501</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>3</strong> of <strong>3</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sun Aug 23, 2009 11:10 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />That or put a known-working, tested-on-an-actual-PowerPak homebrew game on there.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>R-T-B</b> [ Sun Aug 23, 2009 4:48 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The original mario bros roms work, so it isn't hardware...
<br />
<br />Still, it's odd.  It behaves like I want in Nintendulator, but not in Nestopia.  In Nestopia, it acts like it does loaded in my dev cart.  However, on the PowerPak CF card, it acts like it does in Nintendulator, just like I want.
<br />
<br />That can't be normal, can it?  I mean I know my source code is a soupy nbasic mess, but should the powerpak act just the same as my devcart if it can run Mario Bros?
<br />
<br />Very strange...  but whatever, I'm going to try to code a different example in asm for the 6052.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sun Aug 23, 2009 5:34 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If you see differences between a multicart (like the PowerPak) and a single-game cart running the same ROM on the same NES, the multicart's menu is probably initializing the hardware for you. Two things that the PowerPak does but you may or may not be doing include 1. setting the RAM locations your program uses to a known state, and 2. waiting for the PPU to stabilize.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>R-T-B</b> [ Sun Aug 23, 2009 5:44 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />That's it then.
<br />
<br />I'm starting to write the program in assembler.  Pretty sure that with that and some good coding practices, I can get it to work.  Baby steps to be sure...  But hey, it's a good summer project.
<br />
<br />I'm familiar with most Higher level langauges, but not assembly.  Well let you know how it goes.  Using this guide at the moment:
<br />
<br /><!-- m --><a class="postlink" href="http://patater.com/gbaguy/nesasm.htm">http://patater.com/gbaguy/nesasm.htm</a><!-- m -->

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sun Aug 23, 2009 6:24 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">R-T-B wrote:</div><div class="quotecontent">I'm familiar with most Higher level langauges, but not assembly.</div>
<br />C, for example, guarantees that your program's statically allocated variables will be filled with zero or NULL values before main() starts. To simulate this in 6502 assembly:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; lda #0<br />&nbsp; tax<br />@clear_ram:<br />&nbsp; sta $00,x<br />&nbsp; sta $0100,x<br />&nbsp; sta $0200,x<br />&nbsp; sta $0300,x<br />&nbsp; sta $0400,x<br />&nbsp; sta $0500,x<br />&nbsp; sta $0600,x<br />&nbsp; sta $0700,x<br />&nbsp; inx<br />&nbsp; bne @clear_ram<br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>R-T-B</b> [ Sun Aug 23, 2009 7:41 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">  lda #0<br />  tax<br />@clear_ram:<br />  sta $00,x<br />  sta $0100,x<br />  sta $0200,x<br />  sta $0300,x<br />  sta $0400,x<br />  sta $0500,x<br />  sta $0600,x<br />  sta $0700,x<br />  inx<br />  bne @clear_ram <br />  </div>
<br />
<br />Thanks for that code snippet.  Using my now rudimentary assembly skills, I mostly understand it.  You are simply incrementing the x register and storing 0 throughout the memory banks using the 0 stored in the acumulator.  One question though (and I probably should know this, but it isn't coming to me), what's the "tax" command do?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Jarhmander</b> [ Sun Aug 23, 2009 7:49 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />TAX: Transfer Accumulator into X
<br />
<br /><a href="http://www.obelisk.demon.co.uk/6502/reference.html" class="postlink">Here is a list of the documented 6502 opcodes, with descriptions.</a> Now the 6502 instruction set should not be mystery to you.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>R-T-B</b> [ Sun Aug 23, 2009 7:53 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Beautiful, thanks.  Your guys patience seems infinite, and I appreciate it.  I'll post my first program when I finish it, promise. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>R-T-B</b> [ Mon Aug 24, 2009 7:20 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If anyone is curious as to my progress and wants to offer tips/tricks (basically tell me what I'm doing inefficinently), here's my latest product.  I can move a (dumb) sprite!
<br />
<br />Yet to test it on a real NES, but my guess is it will work.
<br />
<br /><!-- m --><a class="postlink" href="http://21gunsoftware.com:8080/PRG2.ZIP">http://21gunsoftware.com:8080/PRG2.ZIP</a><!-- m -->
<br />
<br />It's a lot of cut and paste work, but I understand it pretty well so that shouldn't matter in the long run.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>R-T-B</b> [ Mon Aug 31, 2009 12:44 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Just another newb question, I recently began assembly of a Reproboard and was wondering what the differences between U*ROM and A*ROM is mapper wise?  Which would be better for development?  Is it simply the bank size?  If so, why the extra mapper chip for U*ROM on the Reproboard?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Aug 31, 2009 1:42 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The extra chip in U*ROM implements the fixed bank. A fixed bank is useful for subroutines that need to read data from more than one bank, or for code or data that a background process needs. (On the NES, the background process is either DPCM sample playback or an interrupt handler.)
<br />
<br />Roughly:
<br /><ul><li>B*ROM is U*ROM without the fixed bank </li><li>A*ROM is B*ROM with one-screen mirroring </li></ul>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Mon Aug 31, 2009 1:53 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />There is two big differences between U*ROM (mapper 2) and A*ROM (mapper 7).
<br />
<br />The first is that U*ROM have switchable banks at $8000-$bfff, and a fixed bank at $c000-$ffff, while A*ROM will switch the whole 32k $8000-$ffff at once.
<br />
<br />The second is that U*ROM have either horizontal or vertical mirroring (but only once per cart, it can't be changed by software) while A*ROM have one-screen mirroring.
<br />Note that if you want to banswitch like A*ROM, but have a "traditionnal" mirroring type instead of A*ROM one-screen mirroring, you can use B*ROM (mapper 34 I guess) which only Deadly Towers used. Is is techincally possible to have A*ROM style 1-screen mirroring and U*ROM style bankswitching, but no Nintendo card did that, you'd as well use the MMC1 to do that.
<br />
<br />There is not one better than the other, it all depends on your personal preferences, and maybe how your game is going to scroll for the mirroring.
<br />The game I'm writing only has 32kb PRG so no banskwiching, so I can't give you much advice on it.
<br />
<br />As far as I can tell, the main advantage of A*ROM style bankswtiching is that banks are very large, so you can have more data in them at once, for example you can place all maps of the game plus the code that deals with maps in one banks, all music of the game plus code that deals with music in another, etc...
<br />Bankswitching will be a little tricky however because it switch ALL programm space at once, you may consider reading <a href="http://nesdev.com/bbs/viewtopic.php?t=4737" class="postlink">this</a> to give you ideas.
<br />
<br />U*ROM bankswitching is usefull if you want some subroutines to be always accessible quickly witout doing any bankswitching, typically interrupt routines, or a routine that does things close to hardware such as loading the palette, mapping sprites to RAM, etc... You put them in the fixed bank ($c000-$ffff) and they are always there. Also you only need to have one time your interrupt vectors and interrupt routines in ROM which simplifies things a lot.
<br />The main drawback is that the fixed bank is limited to 16k so you'd want to cleverly thing of what to put in the fixed bank and what not, but also swappable banks are smaller, so there is a chance that you won't be able to place for example all maps of the game + code dealing with maps in 16k, you'll either have to split the maps in 2 banks and have the code dealing with maps in the fixed bank, or have it it one of the 2 banks, and doing very frequent bankswitching when dealing with a map which is in another bank (this is CPU intensive).
<br />
<br />Hope that helps you to see the 16k/16k bankswtiching VS whole 32k debate. As a side note, GB/GBC games using MMCs all gets a U*ROM style bankswitching so if you're going to develop for those systems as well and want to learn less programming techniques this could be a element to consider.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>R-T-B</b> [ Mon Aug 31, 2009 3:41 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thanks for the info.  I'm thinking I'll just stick with what is simple and go with U*ROM.  Should be simpler to implement bankswitching from.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>3</strong> of <strong>3</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>