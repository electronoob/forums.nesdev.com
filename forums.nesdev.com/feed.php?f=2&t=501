<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=2&amp;t=501" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2005-08-20T11:55:51-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=2&amp;t=501</id>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2005-08-20T11:55:51-07:00</updated>
<published>2005-08-20T11:55:51-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=501&amp;p=3953#p3953</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=501&amp;p=3953#p3953"/>
<title type="html"><![CDATA[How many tiles can I draw during vblank?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=501&amp;p=3953#p3953"><![CDATA[
<div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><br />I know that, I know that... let's not be so litteral here, ok? When I ask about "tiles" or "patterns" I mean how many of them people can squeeze in the avaliable time on average!<br /></div><br />Yeah, the problem is "on average". You can upload up to 16 tiles with the Membler's method, but it'll waste 16*16*5 = 1280 bytes, more than the half of the NES' CPU RAM. So, by the use of normal buffer, you can go up to 8 tiles, with an unrolled loop such as :<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">A=Number of tiles<br />X;Y = PPU Adress<br />bit $2002<br />stx $2006<br />sty $2006<br />tay<br />ldx #$00<br />_loop<br />.rept 16<br />lda Buffer,X<br />sta $2007<br />.endrept ;Write a whole tile trough an unrolled loop<br />txa<br />clc<br />adc #$10<br />tax<br />dey<br />bne _loop<br />rts</div><br />As you see, the "unrolled" loop wastes pretty much rom, but is way faster than doing it in a rolled loop, where only 6 tiles are allowed. Now you can also do 12 tiles by so :<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">A=Number of tiles<br />X;Y=PPU Adress<br /><br />bit $2002<br />stx $2006<br />sty $2006<br />tsx<br />stx Temp<br />ldx #StackBufferAdress-1<br />txs<br />tay<br />_loop<br />.rept 16<br />pla<br />sta $2007<br />.endrept<br />dey<br />bne _loop<br />ldx Temp<br />txs<br />rts</div><br />This is definitely a good way to updata VRAM, but due to the limited amount of free byte in the stack, it won't work for much others things. 12 tiles are 192 bytes, or 75% of the available stack. An usual programm will not have its stack pointer going under $e0, and by doubling this space for security, $100-$1bf can be used freely for this.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />I meant on screen transitions, not during a level. Like when the title screen fades and the enemy selection comes in. Maybe it turns the screen off during this little fraction of time when the first screen has faded out and next hasn't appeared yet, to load a bunch of pattern tiles at once.<br /></div><br />Of course, the screen is off between two screen.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />I know the difference... but you have to agree that the advantages of vram are very few... what's the use of beeing able to draw dynamic effects, like FF's water, if you can only update 4-6 tiles? Not many effects can be done anyway.<br /></div><br />Effectively, but there is the 100% custom tileset, also. Using 1kb pages of VROM is possibly better than VRAM, but I don't think 4kb pages of VROM is enough to copete against VRAM.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Sat Aug 20, 2005 11:55 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2005-08-20T10:20:13-07:00</updated>
<published>2005-08-20T10:20:13-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=501&amp;p=3951#p3951</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=501&amp;p=3951#p3951"/>
<title type="html"><![CDATA[How many tiles can I draw during vblank?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=501&amp;p=3951#p3951"><![CDATA[
<div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br />Again, there is no bytes limit but time limit. It all depend on how you're updating them in your code.<br /></div><br />I know that, I know that... let's not be so litteral here, ok? When I ask about "tiles" or "patterns" I mean how many of them people can squeeze in the avaliable time on average!<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />It doesn't, only several infamous games such as Battletoads did (actually Battletoads was basically a PAL game ported on the NTSC, and I'm pretty sure the PAL Battletoads does simply write the stuff on the PPU during VBlank... exept that it's much longer in PAL).<br />Megaman 1 does 2 tiles per frame. However, Megaman 6 was able to do 4 tiles per frame.<br /></div><br />I meant on screen transitions, not during a level. Like when the title screen fades and the enemy selection comes in. Maybe it turns the screen off during this little fraction of time when the first screen has faded out and next hasn't appeared yet, to load a bunch of pattern tiles at once.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Effectively, it's different from VROM. VRAM is slow, but feathure 100% custommed tiles in the whole pattern table. VROM is fast and can switch banks at a very high rate, but it only switches whole bank of tiles, without allowing you to customize your tileset or to modify tiles for effects like the FF3's water.<br /></div><br />I know the difference... but you have to agree that the advantages of vram are very few... what's the use of beeing able to draw dynamic effects, like FF's water, if you can only update 4-6 tiles? Not many effects can be done anyway. I think the best way to do BG animations is by using CHR ROM switching... the disadvantage is that you must have ALL BG animations share the same length (or you could duplicate frames, to give the impression of animations with different length).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Sat Aug 20, 2005 10:20 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2005-08-20T01:54:35-07:00</updated>
<published>2005-08-20T01:54:35-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=501&amp;p=3949#p3949</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=501&amp;p=3949#p3949"/>
<title type="html"><![CDATA[How many tiles can I draw during vblank?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=501&amp;p=3949#p3949"><![CDATA[
<div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><br />Hey,<br />Let me just ask one more thing in this topic... I'd like to know how many tiles would I be able to copy to the pattern table, in a vram cart... Since you say it is safe to write 2 or 3 columns of tiles in the BG, thats like, 96 bytes. Does that mean I could copy only 6 tiles to the pattern table in 1 vblank?<br /></div><br />Again, there is no bytes limit but time limit. It all depend on how you're updating them in your code.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />That seems too slow... I've watched games like megaman 1 and they seem to do it faster than 6 tiles per frame... although I can't be sure if the game turned the screen off at some point to do a faster transfer.<br /></div><br />It doesn't, only several infamous games such as Battletoads did (actually Battletoads was basically a PAL game ported on the NTSC, and I'm pretty sure the PAL Battletoads does simply write the stuff on the PPU during VBlank... exept that it's much longer in PAL).<br />Megaman 1 does 2 tiles per frame. However, Megaman 6 was able to do 4 tiles per frame.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />It can't be that slow... it doesn't seem practical at all to use vram if it is that slow...<br /></div><br />Effectively, it's different from VROM. VRAM is slow, but feathure 100% custommed tiles in the whole pattern table. VROM is fast and can switch banks at a very high rate, but it only switches whole bank of tiles, without allowing you to customize your tileset or to modify tiles for effects like the FF3's water.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Sat Aug 20, 2005 1:54 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2005-08-19T20:45:54-07:00</updated>
<published>2005-08-19T20:45:54-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=501&amp;p=3944#p3944</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=501&amp;p=3944#p3944"/>
<title type="html"><![CDATA[How many tiles can I draw during vblank?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=501&amp;p=3944#p3944"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />Some references call rendering time "draw" or "vdraw" time. Tomayto, tomahto.<br /></div><br />I was thinking more like:<br />RENDERING - PPU sending stuff to the TV;<br />DRAWING - PPU not sending stuff to the TV, me sending stuff to the PPU;<br /><br />And if I can do everything during RENDERING time, DRAWING is just about copying the stuff I already processed earlier. So I'm not actually processing during drawing time.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Fri Aug 19, 2005 8:45 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2005-08-19T20:17:20-07:00</updated>
<published>2005-08-19T20:17:20-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=501&amp;p=3942#p3942</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=501&amp;p=3942#p3942"/>
<title type="html"><![CDATA[How many tiles can I draw during vblank?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=501&amp;p=3942#p3942"><![CDATA[
<div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">you have to run AI and physics during the 'draw' time.<br /></div><br />I'll exclusively update the PPU during vblank. All the physics and object handling is done during rendering, not drawing.</div><br />Some references call rendering time "draw" or "vdraw" time. Tomayto, tomahto.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Fri Aug 19, 2005 8:17 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2005-08-19T20:02:34-07:00</updated>
<published>2005-08-19T20:02:34-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=501&amp;p=3941#p3941</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=501&amp;p=3941#p3941"/>
<title type="html"><![CDATA[How many tiles can I draw during vblank?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=501&amp;p=3941#p3941"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />In a demo, intro, or other program with limited interactivity, you have a lot more leeway than you have with a game. In a game, you have a lot of objects' state to keep in the NES's 2 KB of built-in work RAM, you have to make time for the OAM update, and you have to run AI and physics during the 'draw' time. In a demo, you don't.<br /></div><br /><br />I'll exclusively update the PPU during vblank. All the physics and object handling is done during rendering, not drawing. I'll use buffers to store everything I have to draw, so that drawing is just a matter of copying bytes. I agree with the RAM usage thing though, but that's the only difference. Besides, in the other mentioned thread, about Battletoads (a full featured game), it did update a lot of stuff and did OAM updates also.<br /><br />Well, I'll just be safe and write few rows/columns per frame. The question about pattern table updates was for another project anyway, not for the platformer.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Fri Aug 19, 2005 8:02 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2005-08-19T19:10:29-07:00</updated>
<published>2005-08-19T19:10:29-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=501&amp;p=3939#p3939</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=501&amp;p=3939#p3939"/>
<title type="html"><![CDATA[How many tiles can I draw during vblank?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=501&amp;p=3939#p3939"><![CDATA[
In a demo, intro, or other program with limited interactivity, you have a lot more leeway than you have with a game. In a game, you have a lot of objects' state to keep in the NES's 2 KB of built-in work RAM, you have to make time for the OAM update, and you have to run AI and physics during the 'draw' time. In a demo, you don't.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Fri Aug 19, 2005 7:10 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2005-08-19T18:56:10-07:00</updated>
<published>2005-08-19T18:56:10-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=501&amp;p=3937#p3937</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=501&amp;p=3937#p3937"/>
<title type="html"><![CDATA[How many tiles can I draw during vblank?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=501&amp;p=3937#p3937"><![CDATA[
<div class="quotetitle">Memblers wrote:</div><div class="quotecontent"><br />Hm, one program I've written (the Garage Cart intro) writes 256 bytes per frame to the pattern table.  I'm sure a lot more could be done.  I couldn't push it further because I ran out of both RAM and ROM, heheh.<br /></div><br />Then how come Quietust said 2 to 3 rows would be the safe limit? I know you used "tricks" to do it faster, but still... there is a BIG difference between 96 and 256, and you even say a lot more can be done! In both cases you're just writing to vram... why is the difference so big?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Fri Aug 19, 2005 6:56 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Memblers]]></name></author>
<updated>2005-08-19T17:58:09-07:00</updated>
<published>2005-08-19T17:58:09-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=501&amp;p=3933#p3933</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=501&amp;p=3933#p3933"/>
<title type="html"><![CDATA[How many tiles can I draw during vblank?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=501&amp;p=3933#p3933"><![CDATA[
Hm, one program I've written (the Garage Cart intro) writes 256 bytes per frame to the pattern table.  I'm sure a lot more could be done.  I couldn't push it further because I ran out of both RAM and ROM, heheh.<br /><br />I came up with a scheme to use in my game that I planned, since it has fast scrolling, as well as a huge amount of pattern table updates.  But it costs 5 bytes of RAM for every byte in your buffer and uses self-modifying code.<br /><br />I posted about it in this thread:<br /><a href="http://nesdev.com/bbs/viewtopic.php?t=259" class="postlink">http://nesdev.com/bbs/viewtopic.php?t=259</a><br /><br />And there's some other ideas in there that may be interesting.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=10">Memblers</a> — Fri Aug 19, 2005 5:58 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2005-08-19T16:16:42-07:00</updated>
<published>2005-08-19T16:16:42-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=501&amp;p=3929#p3929</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=501&amp;p=3929#p3929"/>
<title type="html"><![CDATA[How many tiles can I draw during vblank?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=501&amp;p=3929#p3929"><![CDATA[
Hey,<br />Let me just ask one more thing in this topic... I'd like to know how many tiles would I be able to copy to the pattern table, in a vram cart... Since you say it is safe to write 2 or 3 columns of tiles in the BG, thats like, 96 bytes. Does that mean I could copy only 6 tiles to the pattern table in 1 vblank?<br /><br />That seems too slow... I've watched games like megaman 1 and they seem to do it faster than 6 tiles per frame... although I can't be sure if the game turned the screen off at some point to do a faster transfer.<br /><br />It can't be that slow... it doesn't seem practical at all to use vram if it is that slow...<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Fri Aug 19, 2005 4:16 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Anonymous]]></name></author>
<updated>2005-08-18T12:24:02-07:00</updated>
<published>2005-08-18T12:24:02-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=501&amp;p=3895#p3895</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=501&amp;p=3895#p3895"/>
<title type="html"><![CDATA[How many tiles can I draw during vblank?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=501&amp;p=3895#p3895"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />Chemical Plant 2 in <em>Sonic the Hedgehog 2</em> for Sega Genesis had Sonic rolled into a ball and going down a ramp several screens long at velocities in excess of (8, <img src="http://forums.nesdev.com/images/smilies/icon_cool.gif" alt="8)" title="Cool" />.<br /></div><br />True, true... I remember places like this, but although Sonic can run pretty fast, the camera often lags behind him in such cases. But I can still have problems, since I have a limited ammount of screens loaded based on the camera's position, wich means my player can't go past the screen as Sonic can at higher speeds.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />There are sorting methods to reduce the number of collision box tests that you must do from O(n^2) to O(n log n).<br /></div><br />I just hate log. Always had problems with it in school.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Plain old "physics" if I think I know what you mean is just Newton's laws (in the absence of force, velocity is unchanged; and gravity is a constant acceleration)<br /></div><br />Yes, it's pretty simple physics and collision detection for most objects... only the player needs more sophisticated stuff. And objects don't need to be checked for collision with each other, only with the player, wich greatly reduces the number of detections.<p>Statistics: Posted by Guest — Thu Aug 18, 2005 12:24 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2005-08-18T12:10:42-07:00</updated>
<published>2005-08-18T12:10:42-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=501&amp;p=3894#p3894</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=501&amp;p=3894#p3894"/>
<title type="html"><![CDATA[How many tiles can I draw during vblank?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=501&amp;p=3894#p3894"><![CDATA[
<div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">Sonic what?<br /></div><br />Heh! I think that even Sonic can be limited to 8 pixels per frame with no problems. He is fast, but I don't recall him going faster than 2 screens in 1 second!</div><br />Chemical Plant 2 in <em>Sonic the Hedgehog 2</em> for Sega Genesis had Sonic rolled into a ball and going down a ramp several screens long at velocities in excess of (8, <img src="http://forums.nesdev.com/images/smilies/icon_cool.gif" alt="8)" title="Cool" />.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />yeah, many objects just go back and forth without much AI going on... but I still have to check for collisions between the player and the objects<br /></div><br />There are sorting methods to reduce the number of collision box tests that you must do from O(n^2) to O(n log n).<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Some objects even just sit there, but others must have physics<br /></div><br />Plain old "physics" if I think I know what you mean is just Newton's laws (in the absence of force, velocity is unchanged; and gravity is a constant acceleration)<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Thu Aug 18, 2005 12:10 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2005-08-18T09:33:54-07:00</updated>
<published>2005-08-18T09:33:54-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=501&amp;p=3889#p3889</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=501&amp;p=3889#p3889"/>
<title type="html"><![CDATA[How many tiles can I draw during vblank?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=501&amp;p=3889#p3889"><![CDATA[
I'm pretty sure it's possible to write a whole row and/or a whole column of metatiles in just one VBlank, while keeping the sprites aliving during the same frame. Just test your code with Nintedulator's tracer to be sure you don't run out of time.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Thu Aug 18, 2005 9:33 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2005-08-18T08:49:52-07:00</updated>
<published>2005-08-18T08:49:52-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=501&amp;p=3887#p3887</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=501&amp;p=3887#p3887"/>
<title type="html"><![CDATA[How many tiles can I draw during vblank?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=501&amp;p=3887#p3887"><![CDATA[
<div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br />Well, the best way to do that scrooling is definitely to write one whole metatile to the screen. That will be two rows of 32 tiles at the same time, + 8 attributes bytes and this is doable. Horizontally, there would be two colums of 8 tiles + 8 attributes bytes, which is also doable. Both at the same time aren't, but I think you can alternate between horzontal and vertical writes... in the worst case, there would be a few non-noticable glitches in the border of the screen.<br />I just noted that all games able to scroll diagonally uses horizontal mirroring, even without status bar. I'll try to get my hands on the exact reason of this, if any.<br /></div><br /><br />Or I could write one-tile rows or columns. Delaying one of the writes in favour of the other may be noticeble. I thought about writing half of the metatiles in the first frame, and then writing the second half + the attributes in the second frame. This way there is no risk of going past the avaliable time or ending up with jerky movement. The only drawback is the camera can't move faster than 8 pixels per frame.<br /><br />I'll probably end up testing both, and see what looks/feels better. =)<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Thu Aug 18, 2005 8:49 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2005-08-18T08:26:57-07:00</updated>
<published>2005-08-18T08:26:57-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=501&amp;p=3882#p3882</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=501&amp;p=3882#p3882"/>
<title type="html"><![CDATA[How many tiles can I draw during vblank?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=501&amp;p=3882#p3882"><![CDATA[
Well, the best way to do that scrooling is definitely to write one whole metatile to the screen. That will be two rows of 32 tiles at the same time, + 8 attributes bytes and this is doable. Horizontally, there would be two colums of 8 tiles + 8 attributes bytes, which is also doable. Both at the same time aren't, but I think you can alternate between horzontal and vertical writes... in the worst case, there would be a few non-noticable glitches in the border of the screen.<br />I just noted that all games able to scroll diagonally uses horizontal mirroring, even without status bar. I'll try to get my hands on the exact reason of this, if any.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Thu Aug 18, 2005 8:26 am</p><hr />
]]></content>
</entry>
</feed>