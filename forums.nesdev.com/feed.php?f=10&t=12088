<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=10&amp;t=12088" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2014-12-01T12:17:20-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=10&amp;t=12088</id>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2014-12-01T12:17:20-07:00</updated>
<published>2014-12-01T12:17:20-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12088&amp;p=137167#p137167</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12088&amp;p=137167#p137167"/>
<title type="html"><![CDATA[Re: Simple Mini-Game NESASM - ask for deep code analyze]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12088&amp;p=137167#p137167"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />&quot;shadow OAM&quot; = ram page 0200?<br /></div><br />Yes. We call it that way because it's a shadow of what is in the actual OAM in PPU.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />if you mean something like this (updating sprites)?<br /></div><br />Yes exactly<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />How best to do that?<br /></div><br />Well there's a lot of approach. For example, by using $200,X adressing mode, before calling the sprite update routine it's possible to select which of the 64 sprites you're going to use. By selecting this in a different way each frame you get sprite cycling (you don't need it in your example, but should you risk to have more than 8 per line, then this would be needed).<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />In my program i compare SPR0 horizontal data with two another SPR1/2 ($0203,$0203 and $0207)as simple collision detection (It's badly done, but I got nothing else). How would you do it correctly?<br /></div><br />What you are looking for is collision detection.<br /><br />First don't use shadow OAM for collision detection, this is not good practice. Have dedicated variables for your objects that gets copied to shadow OAM every frame when they are displayed.<br /><br />You are doing point-to-point collision detection, you should do rectangle-to-rectangle (but it's also possible to &quot;fake&quot; it using rectangle-to-point, but that might not be the best to do it when learning).<br /><br />Google search for &quot;collision detection&quot; and you'll likely find dozen of tutorials with good graphics, that are better than anything I can write up for a quick post.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Mon Dec 01, 2014 12:17 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[sdm]]></name></author>
<updated>2014-11-30T16:13:52-07:00</updated>
<published>2014-11-30T16:13:52-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12088&amp;p=137121#p137121</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12088&amp;p=137121#p137121"/>
<title type="html"><![CDATA[Re: Simple Mini-Game NESASM - ask for deep code analyze]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12088&amp;p=137121#p137121"><![CDATA[
<div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br />Using the sprites in shadow OAM as a game state is not a very good idea. It works if you are sure that 1) all your sprites are 8x8 and 2) you will never use sprite cycling.<br /><br />In reality this is almost never the case, so it's better to store the state of your objects somewhere else, and have a routine that draws sprites based on the object's state.<br /></div><br /><br /><br />&quot;shadow OAM&quot; = ram page 0200? <br /><br />I read NNight some - if you mean something like this (updating sprites)? How best to do that?<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">UpdateSprites:<br />  LDA bally  ;;update all ball sprite info<br />  STA $0200<br />  <br />  LDA #$30<br />  STA $0201<br />  <br />  LDA #$00<br />  STA $0202<br />  <br />  LDA ballx<br />  STA $0203<br />  <br />  ;;update paddle sprites<br />  RTS</div><br /><br />In my program i compare SPR0 horizontal data with two another SPR1/2 ($0203,$0203 and $0207)as simple collision detection (It's badly done, but I got nothing else). How would you do it correctly?<br /><br /><br />Indicated greater number of errors is greatly appreciated. <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" />  It will be very helpful for the future. (And if shown how to do it properly, it is even more welcome. <img src="http://forums.nesdev.com/images/smilies/icon_redface.gif" alt=":oops:" title="Embarassed" /> )<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=411">sdm</a> — Sun Nov 30, 2014 4:13 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[mikaelmoizt]]></name></author>
<updated>2014-11-30T15:07:22-07:00</updated>
<published>2014-11-30T15:07:22-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12088&amp;p=137115#p137115</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12088&amp;p=137115#p137115"/>
<title type="html"><![CDATA[Re: Simple Mini-Game NESASM - ask for deep code analyze]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12088&amp;p=137115#p137115"><![CDATA[
<div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br />Oh, I think the &quot;do it everything in NMI&quot; is a perfectly valid option, but it's not the easiest.<br /></div><br />Yeah.. that pretty much sums up my experiences aswell. <br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Using NESASM is not a very good idea.<br /></div> <br />Agreed. Asm6 with a good editor really is a nice choice. No more .bank directives, everything falls into place really nicely and syntax is pretty much the same as in NESASM.<br />The only thing to add into your projects would be an ines header (and possibly some padding)<br /><br />Like<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">byte &quot;NES&quot;,$1a            ; basically &quot;NES&quot; plus a terminator<br />byte $02                     ; 2x16 PRG-ROM block, full NROM 256<br />byte $01                     ; 1 CHR-ROM block<br />byte $00                     ; dontcare<br />byte $00                     ; dontcare<br />dsb 8                         ; 8 bytes padding<br /><br />org $8000</div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6478">mikaelmoizt</a> — Sun Nov 30, 2014 3:07 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2014-11-30T14:00:11-07:00</updated>
<published>2014-11-30T14:00:11-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12088&amp;p=137110#p137110</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12088&amp;p=137110#p137110"/>
<title type="html"><![CDATA[Re: Simple Mini-Game NESASM - ask for deep code analyze]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12088&amp;p=137110#p137110"><![CDATA[
Oh, I think the &quot;do it everything in NMI&quot; is a perfectly valid option, but it's not the easiest. But if you like it or feel like doing it, go ahead this is not something wrong. Most Konami games and early Nintendo games does it this way. (Castlevania, Gradius, SMB, Kid Icarus, Zelda, ...)<br /><br />The other two options are &quot;do it everything outside of NMI&quot; (seen in Final Fantasy series, FDS BIOS), and the most common, the &quot;Do most of the work outside NMI, but do music, graphics updates in NMI&quot;, which is done by the majority of games, including more recent Nintendo games.<br /><br />Each of those 3 approaches has it's pros and cons so it's your decision. If you feel comfortable with the &quot;everything in NMI&quot; then just go ahead.<br /><br />Using NESASM is not a very good idea. This assembler is not only limited and has bugs, but is also never updated officially by it's authors. ASM6 seems like a better choice, although personally I use another one but I regret my choice, but it's too late for changing, because once you have some thousands of ASM code for one assembler it's simply not possible to change anymore.<br /><br />Using the sprites in shadow OAM as a game state is not a very good idea. It works if you are sure that 1) all your sprites are 8x8 and 2) you will never use sprite cycling.<br /><br />In reality this is almost never the case, so it's better to store the state of your objects somewhere else, and have a routine that draws sprites based on the object's state.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Sun Nov 30, 2014 2:00 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[sdm]]></name></author>
<updated>2014-11-30T09:52:41-07:00</updated>
<published>2014-11-30T09:52:41-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12088&amp;p=137103#p137103</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12088&amp;p=137103#p137103"/>
<title type="html"><![CDATA[Re: Simple Mini-Game NESASM - ask for deep code analyze]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12088&amp;p=137103#p137103"><![CDATA[
Thank you for the information, this is my first real approach to NESASM. I will try to do anything more with a sense and study more NerdyNights <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br />Despite the chaos in the code, I had a chance to run on real hardware. Using EPROM's chips, NROM cart and original Famicom (old CRT TV).Everything works fine and without problems, sometimes the third screen appears with an error but the same thing happens on the emulators.<br /><br /><img src="http://s4.postimg.org/73msymt7x/hide1.jpg" alt="Image" /><img src="http://s4.postimg.org/waxoyvwbx/hide2.jpg" alt="Image" /><br /><img src="http://s4.postimg.org/z6as5r0bx/hide3.jpg" alt="Image" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=411">sdm</a> — Sun Nov 30, 2014 9:52 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[mikaelmoizt]]></name></author>
<updated>2014-11-30T04:51:09-07:00</updated>
<published>2014-11-30T04:51:09-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12088&amp;p=137097#p137097</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12088&amp;p=137097#p137097"/>
<title type="html"><![CDATA[Re: Simple Mini-Game NESASM - ask for deep code analyze]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12088&amp;p=137097#p137097"><![CDATA[
After trying <strong>really </strong>hard to get this to work in asm6 adjusting syntax and layout it <em>sortof </em>worked.<br /><br />I recognize this &quot;everything I want to happen is gonna go into nmi and I will just sit on an eternal loop until triggered&quot; layout.  <br />Just on top of my head, there are some improvements to be done like moving controller reading routines outside nmi and putting the result into ram.<br />Also, you might consider keeping nmi a lot shorter by removing stuff like the music player to <div class="codetitle"><b>Code:</b></div><div class="codecontent">Forever:</div> acting on a nmi flag instead.<br /><br />Like<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">forever:<br /> lda nmiflag<br /> bne playmusic<br /> beq skipmusic<br /><br />playmusic:<br /> jsr playmusicnow<br /><br /> lda #$00<br /> sta nmiflag<br /><br />skipmusic:<br /> jsr readjoy <br /> jmp forever </div><br /><br />or something like that<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6478">mikaelmoizt</a> — Sun Nov 30, 2014 4:51 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2014-11-30T04:04:15-07:00</updated>
<published>2014-11-30T04:04:15-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12088&amp;p=137094#p137094</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12088&amp;p=137094#p137094"/>
<title type="html"><![CDATA[Re: Simple Mini-Game NESASM - ask for deep code analyze]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12088&amp;p=137094#p137094"><![CDATA[
Well, there's at least one thing you do terribly wrong. You are reading the controller by $4016 and directly take decisions on that. Do not do that ! Instead have a routine that reads all 8 buttons, stores them in a byte (use shift operations), where each bits correspond to a button. This routine is generic and you can use it anywhere in the game.<br /><br />THEN, you read the buttons variable and take decisions according to it, depending on the state of your game. This is also more useful, if at a later point your game will have more than 1 state, and if you want to act on button presses (0-&gt;1 transitions) and releases (1-&gt;0 transitions) instead of just button state.<br /><br />Do never use memory addresses directly in your code, except for hardware registers. Instead use labels, which allows you to re-arrange your variables in memory without breaking your code.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Sun Nov 30, 2014 4:04 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[sdm]]></name></author>
<updated>2014-11-30T03:32:35-07:00</updated>
<published>2014-11-30T03:32:35-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12088&amp;p=137093#p137093</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12088&amp;p=137093#p137093"/>
<title type="html"><![CDATA[Simple Mini-Game NESASM - ask for deep code analyze]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12088&amp;p=137093#p137093"><![CDATA[
I created a simple mini-game. I asked for analyzing code. What is being done wrong, what to do differently, how fix etc. <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br />I know that the code is written chaotic and has probably strange solution, but just trying to learn NES assembly (I am an n00b in these things <img src="http://forums.nesdev.com/images/smilies/icon_redface.gif" alt=":oops:" title="Embarassed" />  <img src="http://forums.nesdev.com/images/smilies/icon_confused.gif" alt=":?" title="Confused" /> )<br />So I have a large request for a deep analysis of the code, with descriptions. <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" />)<br /><br />Thanks.  <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br /><a href="http://www.youtube.com/watch?v=zO_V-4_Joig" class="postlink">http://www.youtube.com/watch?v=zO_V-4_Joig</a><br /><img src="http://s30.postimg.org/fgoz3xwkh/hidegame1.png" alt="Image" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=411">sdm</a> — Sun Nov 30, 2014 3:32 am</p><hr />
]]></content>
</entry>
</feed>