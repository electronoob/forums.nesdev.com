<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Expanding a game beyond its physical board limitations</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Expanding a game beyond its physical board limitations</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=9&amp;t=10082">http://forums.nesdev.com/viewtopic.php?f=9&amp;t=10082</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Pennywise</b> [ Wed May 08, 2013 11:00 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Expanding a game beyond its physical board limitations</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />This is a subject that has interested me for some time since I've made it common practice to expand NES ROMs and sometimes I would avoid expansion if there wasn't a physical board to support it. I believe that this might be a moot point with flash carts etc that emulate the original mapper, but can have ROM sizes larger than what's specified and still work on the NES.<br /><br />Anyhow, the latest games I've come across are mapper 75 and those bandai mappers 16, 154, 159 etc<br /><br />Now mapper 75 is capped at an unreasonable 128kb for the PRG-ROM, but I expanded the original ROM and had it tested on a Powerpak. The game ran fine from what I remember. Then there's the Bandai games which are capped at 256kb.<br /><br />Anyway my question is to expand or not to expand? In most cases the games won't work in Nestopia, but emulator's and/or flash carts seems capable to playing them fine. Also is it possible to modify the original boards to support a larger PRG-ROM?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Wed May 08, 2013 11:10 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Expanding a game beyond its physical board limitations</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Pennywise wrote:</div><div class="quotecontent">Also is it possible to modify the original boards to support a larger PRG-ROM?</div><br />No. That's where these constraints come from.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Wed May 08, 2013 11:13 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Expanding a game beyond its physical board limitations</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Pennywise wrote:</div><div class="quotecontent">Also is it possible to modify the original boards to support a larger PRG-ROM?</div><br />With discrete logic mappers you can easily add/replace parts to support larger ROMs, but with ASIC mappers things are not so easy. If they don't have the pins to support larger ROMs, there's no way to hack them in. One possibility in this case is to add a &quot;master mapper&quot; on top of the existing mapper (pirate multicarts sometimes do this). For example, if a mapper is limited to 256KB, you can add a few discrete logic components and become able to select different 256KB blocks from a larger ROM. This will break compatibility in emulators of course.<br /><br />The other alternative, which will retain compatibility with emulators that implement more banking bits than available in the actual mappers, is to recreate the mapper in a CPLD or FPGA, but with more banking bits than the original mappers.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Wed May 08, 2013 12:52 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Expanding a game beyond its physical board limitations</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Sometimes a game could be expanded by mapper hacking at the same time. For example, <a href="http://wiki.nesdev.com/w/index.php/INES_Mapper_154" class="postlink">mapper 154 (Namco 108 with 1-screen mirroring)</a> could probably be reasonably ported to any MMC3-like mapper that supports 1-screen mirroring, such as 207, 158, or 118. Similarly, mapper 75 (Konami VRC1) is approximately a subset of 64, 80, or 82.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Pennywise</b> [ Wed May 08, 2013 1:07 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Expanding a game beyond its physical board limitations</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">lidnariq wrote:</div><div class="quotecontent">Sometimes a game could be expanded by mapper hacking at the same time. For example, <a href="http://wiki.nesdev.com/w/index.php/INES_Mapper_154" class="postlink">mapper 154 (Namco 108 with 1-screen mirroring)</a> could probably be reasonably ported to any MMC3-like mapper that supports 1-screen mirroring, such as 207, 158, or 118. Similarly, mapper 75 (Konami VRC1) is approximately a subset of 64, 80, or 82.</div><br /><br />True. I've actually expanded a GxROM game to 256kb and hacked the mapper to become one of those Chinese pirate mappers. It was the exact same, but with more PRG bits. I don't think 159 is even supported by flash carts and the unique nature of it prevents it from working with other mappers. At least I think. Unless extra time is spent to hack the game to use traditional SRAM instead of EPROM. If that is even possible, how difficult it is, time etc.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Wed May 08, 2013 1:21 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Sega Dreamcast</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Pennywise wrote:</div><div class="quotecontent">True. I've actually expanded a GDROM game to 256kb</div><br />I thought GDROM supported <a href="https://en.wikipedia.org/wiki/GD-ROM" class="postlink">over a million kB</a>.<br /><br />If you meant GNROM, you could always try expanding it to SLROM or another of the MMC1 variants.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Drakon</b> [ Thu May 16, 2013 5:19 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Expanding a game beyond its physical board limitations</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'm wondering if it's possible to use a memory bank controller chip like what's found in gameboy carts to use larger roms.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Thu May 16, 2013 6:35 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Expanding a game beyond its physical board limitations</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />AFAIK, the only problem in nesting mappers is the fact that their registers would share the same addresses unless you added some extra address decoding to select one mapper or the other. Or you could write to both mappers at once if you fed the extra mapper with data lines not used by the first mapper (for example, the MMC1 takes its data from bit 0, so you could connect bit 1 to a second MMC1 and control both mappers with a single write operation), or maybe even unused address lines (would make more sense for mappers that use all data bits).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Thu May 16, 2013 11:27 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Expanding a game beyond its physical board limitations</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The problem is not that we couldn't add a register that would bank things. The problem is that it's not compatible with the existing definition, and so a specific release will either be compatible with the hardware you made as a one-off, or with existing emulators (including the PowerPak). At that point, rather than using existing ICs, you may as well use a CPLD or mapper-hack the game to something that is already completely adequate.<br /><br />The obnoxious exception being expanding things past 512KiB PRG, since neither the PowerPak nor Everdrive N8 support that, and no historical mappers besides MMC5 and various pirates' did either.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Thu May 16, 2013 12:39 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Expanding a game beyond its physical board limitations</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">lidnariq wrote:</div><div class="quotecontent">neither the PowerPak nor Everdrive N8 support that</div><br />Unfortunately, it looks like these devices are primarily meant for playing commercial games rather than encouraging experimentation with new ideas. Huge ROMs would allow games with short FMV sequences, 3D effects which use large look-up tables, etc.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Thu May 16, 2013 5:26 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Expanding a game beyond its physical board limitations</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />This is a tangent, but:<br /><br />I don't think &quot;FMV on the NES&quot; is reasonable anyway. Because it lacks DMA the only way to stream video is directly supplying CHR fetches, and then you get no compression beyond the goofy palettized format, as well as being constrained to 4 to 13 colors and attribute zones no smaller than 8x1 pixels. Streaming said video from SD or CF is perfectly reasonable, but sufficiently inefficient (≈1MB/s at 60Hz on NTSC) that I don't think it ever really had a place. I don't know whether there even was a non-spinning-media method for delivering FMV before the GBA... <strong>that said</strong> I've been wanting to make a streaming video format for the NES, but have been stymied by not knowing if either the N8 or PowerPak are wired in a way such that you could stream video off large cheap flash. (Of course, once you can interpose an FPGA, you can implement zlib or something, reducing the bitrate substantially)<br /><br />I'm also not convinced that 512KiB isn't enough for the lookup tables you describe; I strongly suspect the memory addressing modes of the NES are far more relevant there. Space-for-time exchanges only get you so far. <br /><br />The only thing, AFAICT, that the 512KiB restriction really does for us is make fanslations a royal PITA. Although maybe that's why Battle Kid 2 was only 512KiB, I dunno <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" /><br /><br />As a final alternative point of view, infiniteneslives has that <a href="http://forums.nesdev.com/viewtopic.php?p=108197#p108197" class="postlink">bootloader/128KiB RAM/1MB serial EEPROM</a> project, which is really clearly the right option on a cost basis. But that makes bankswitching more expensive than conventional parallel ROMs.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Thu May 16, 2013 7:40 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Expanding a game beyond its physical board limitations</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">lidnariq wrote:</div><div class="quotecontent">Because it lacks DMA the only way to stream video is directly supplying CHR fetches, and then you get no compression beyond the goofy palettized format</div><br />That's a pretty closed-minded way of thinking. Updating the whole pattern table isn't the only method of drawing bitmaps, you know... if you lower the resolution of the video, you can represent all pixel combinations in a fixed number of tiles. You could easily store 4 pixels per tile in the 256 tiles that are available, and they don't have to be ugly 4x4-pixel pixels, because you can lay all 4 pixels horizontally creating 4x1 patterns, and with scroll updates during rendering you can show only 1 or 2 scanlines of each row of tiles. With 2 name tables you could achieve a vertical resolution of 60 pixels. With 4 you could go up to 120, which could result in a nice wide-screen video.<br /><br />Also, there are tricks to make the resolution seem better than it actually is. Look at the FMV intro in sonic 3D Blast on the Genesis. It's not perfect, but for something stored in a cartridge it's pretty amazing. If you step through that sequence frame by frame, you'll notice that alternating scanlines are shifted by one pixel (and the effect is reversed on alternating frames), creating a dithered look, and giving the illusion of more resolution. The same technique could be used on the NES.<br /><br />FMV was smooth enough for most people at 15 frames per second on the original Playstation, so 15 or 12 should work well enough on the NES too. That leaves us plenty of time to decode simple compression schemes and upload all the data to the PPU, since there would be no need to deal with the massive amount of data that pattern table updates require, only name+attribute table updates have to be done.<br /><br />If I were to try this, I'd probably use 4-screen mirroring and a resolution of 128x60 pixels for the video, so that 2 name tables could be used as a hidden buffer. I'd probably use the Sonic 3D blast trick to fake a higher resolution too. The challenge would be to come up with the best compression scheme possible, that could still be decoded during the available time.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">as well as being constrained to 4 to 13 colors and attribute zones no smaller than 8x1 pixels.</div><br />This is not as bad as it sounds. Several video/image compression schemes rely on quantization of the color data. A very simple one is called Block Truncation Coding, but nearly every coded you can think of will <a href="http://en.wikipedia.org/wiki/Chroma_subsampling" class="postlink">use significantly less bandwidth for color than for lightness</a>, so it isn't unusual for video to have 16 times less color information than lightness information. These ideas adapt fairly well to the limitations of the NES.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu May 16, 2013 7:42 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Expanding a game beyond its physical board limitations</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">lidnariq wrote:</div><div class="quotecontent">I don't know whether there even was a non-spinning-media method for delivering FMV before the GBA</div><br />Nintendo 64 had FMV in Pokemon Puzzle League and Resident Evil, but then N64 Game Paks are comparable in capacity to GBA Game Paks. The intro to Sonic 3D Blast for Genesis still impresses me; it appears to be a short clip using some Sega CD codec.<br /><br />On the other hand, Bad Apple.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>