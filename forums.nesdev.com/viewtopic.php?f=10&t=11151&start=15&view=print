<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Minimal NES example using ca65</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Minimal NES example using ca65</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=11151">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=11151</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>3</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>cpow</b> [ Fri May 02, 2014 11:46 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Minimal NES example using ca65</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent">So, we can attach .nesproject files now, but then I realized I should probably just add it to the zip. <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" /></div><br />Yeah I suppose I could have added it to your ZIP and re-uploaded the ZIP.  But then there'd be two ZIPs floating around one with and one without.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Fri May 02, 2014 2:09 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Minimal NES example using ca65</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Off topic:<br /><br />There's one small feature that I really miss from WinRAR after switching to 7zip: when the Extract button is pressed, it doesn't automatically fill the destination path with the name of the package (with extension stripped), instead it defaults to extracting to the directory where the package is. Usually not a problem since I mostly use the context menu to extract stuff, but sometimes it's more natural to open the archive in the program (e.g. when the file has been downloaded with a browser).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thenendo</b> [ Mon Oct 06, 2014 5:39 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Minimal NES example using ca65</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />rainwarrior, thanks, this is super useful for someone getting started with ca65 on the NES.<br /><br />I have a question, though. (Probably dumb, as I'm new to both the cc65 suite and 6502 programming.)<br /><br />In example.cfg, you have:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">MEMORY {&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <br />&nbsp; &nbsp; ZP:&nbsp; &nbsp; &nbsp;start = $00,&nbsp; &nbsp; size = $0100, type = rw, file = &quot;&quot;;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br />&nbsp; &nbsp; OAM:&nbsp; &nbsp; start = $0200,&nbsp; size = $0100, type = rw, file = &quot;&quot;;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br />&nbsp; &nbsp; RAM:&nbsp; &nbsp; start = $0300,&nbsp; size = $0500, type = rw, file = &quot;&quot;;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br />&nbsp; &nbsp; HDR:&nbsp; &nbsp; start = $0000,&nbsp; size = $0010, type = ro, file = %O, fill = yes, fillval = $00;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <br />&nbsp; &nbsp; PRG:&nbsp; &nbsp; start = $8000,&nbsp; size = $8000, type = ro, file = %O, fill = yes, fillval = $00;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <br />&nbsp; &nbsp; CHR:&nbsp; &nbsp; start = $0000,&nbsp; size = $2000, type = ro, file = %O, fill = yes, fillval = $00;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <br />}&nbsp; <br /></div><br /><br />Because CHR starts at $0000, doesn't this mean that the TILES segment (full of data from `.incbin &quot;background.chr&quot;', etc.) will overlap the zero page and the stack page ($0100 - $01FF), as well as the OAM and RAM areas (not to mention the iNES header)? Doesn't this mean that if I, say, push something onto the stack, I'll be overwriting random parts of the background tiles data? I must not understand how ld65 behaves when you declare overlapping memory areas... why not declare all of the memory areas as strictly disjoint regions? (looks like none of the examples in the ld65 docs have overlapping memory areas)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Mon Oct 06, 2014 5:44 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Minimal NES example using ca65</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The NES has two completely unrelated notions of address: one is for the CPU, and has zero page, stack, other RAM, &amp;c.<br />The other is for the PPU and (almost always) contains just tile data.<br />They both start at 0. They're just different 0s.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Mon Oct 06, 2014 5:59 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Minimal NES example using ca65</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />As lidnariq said, in this case these are two different memory regions (CPU vs PPU), but I will also explain the linker.<br /><br />Each line of the MEMORY section describes a block of memory space that can be used by a SEGMENT, and also may be output to a file. MEMORY regions will be output in the same order as specified.<br /><br />Each line of the SEGMENTS section describes an allocation of space in one of the previously defined MEMORY blocks. A segment doesn't have to fill up all of any particular MEMORY region, and will be assigned space contiguously in the order listed, sometimes with padding if a start address is specified.<br /><br />Assembly code may specify which SEGMENT to use with the .segment directive, and the SEGMENT will be filled contiguously in the order the code/data appears.<br /><br /><br />All that said, blocks in MEMORY can refer to memory regions in different spaces, like in this case, or even the same space. What it really controls is whether and where that region will appear in the output file. A space that represents RAM doesn't normally go in the file. In an <a href="http://wiki.nesdev.com/w/index.php/INES" class="postlink">iNES file</a>, there is a 16 byte header (HDR), a PRG block (PRG), and a CHR block (CHR), so I have specified 3 MEMORY regions for these three parts of the file.<br /><br />If you are doing banking, you will typically want to have one MEMORY region per bank. In this case, many of them will overlap the same address space, but what matters is they will go into the file as separate blocks, and you can use SEGMENTS to specify which bank things need to go into.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thenendo</b> [ Tue Oct 07, 2014 6:50 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Minimal NES example using ca65</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thanks, guys, I think I get it now. What I failed to appreciate is that with the MEMORY areas that are being written to the file (%O), we are actually describing the layout of the iNES file, not the runtime layout of memory -- the iNES format has its own conventions about how its contents will determine the initial state of memory at power-on. And, on the other hand, the MEMORY areas with file = &quot;&quot; (ZP, OAM, RAM) <strong>are</strong> referring to the runtime address space, but this is for purposes of the symbolic assembler knowing how to interpret what we put in our source code, so it knows, e.g., that &quot;.res 1&quot; means to reserve a byte in one region if it appears under &quot;.segment &quot;ZP&quot;&quot;, but in another region if it appears under &quot;.segment &quot;RAM&quot;&quot;.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thenendo</b> [ Sat Oct 11, 2014 8:42 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Minimal NES example using ca65</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />One more question: is there a particular reason that you define the gamepad_poll subroutine in the DATA segment, rather than in the CODE segment? Changing it to CODE compiles and works fine. Is it more efficient somehow to have this subroutine located in DATA? (Not sure how that would be, unless you were depending on relative addressing in such a way that you wanted to be close to certain addresses, but I don't see how that's the case here.)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Sun Oct 12, 2014 3:59 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Minimal NES example using ca65</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">thenendo wrote:</div><div class="quotecontent">One more question: is there a particular reason that you define the gamepad_poll subroutine in the DATA segment, rather than in the CODE segment? Changing it to CODE compiles and works fine. Is it more efficient somehow to have this subroutine located in DATA? (Not sure how that would be, unless you were depending on relative addressing in such a way that you wanted to be close to certain addresses, but I don't see how that's the case here.)</div><br />Looks like a mistake. It's not more efficient.<br /><br />In this case it doesn't matter which segment the code is placed in, because both the CODE and the DATA segments are ROM and end up in the same memory area. If one wanted to place code at certain addresses, the correct way to do it in cc65/ca65 would be to define a new segment (and possibly a new memory area as well) with the desired starting address.<br /><br />...<br /><br />On an unrelated note, it goes somewhat against convention to name the read-only data segment DATA. Typically RDATA or RODATA is used for that, and DATA is used for initialized data in RAM. Not saying that it should be changed, only noting it here since some other source code might be using different conventions.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Sun Oct 12, 2014 6:44 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Minimal NES example using ca65</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yeah, just a mistake. I will correct that.<br /><br />Also, that is a good point. I forgot that RODATA is the cc65 convention for read-only data, though the name might be a little more obscure to new users. Not sure if I want to correct this. The main reason I bother to use separate CODE and DATA segments is that it keeps them nicely separated (good for debugging disassembly if all the code is in one contiguous place) and so the map statistics the linker generates will list them separately.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thenendo</b> [ Sun Oct 12, 2014 7:05 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Minimal NES example using ca65</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Awesome, gotcha. While you're at it, I think you could also fix a typo in the comment on line 52 (byte 5 of the iNES header):<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.byte $01 ; 4k CHR bank count<br /></div><br /><br />That should say 8k, right?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Sun Oct 12, 2014 8:24 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Minimal NES example using ca65</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yeah.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thenendo</b> [ Sun Oct 12, 2014 8:45 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Minimal NES example using ca65</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent">Also, that is a good point. I forgot that RODATA is the cc65 convention for read-only data, though the name might be a little more obscure to new users. Not sure if I want to correct this. The main reason I bother to use separate CODE and DATA segments is that it keeps them nicely separated (good for debugging disassembly if all the code is in one contiguous place) and so the map statistics the linker generates will list them separately.</div><br />Relatedly, I think you might want to use &quot;ZEROPAGE&quot; instead of &quot;ZP&quot;. Using your linker config (with &quot;ZP&quot;), I found that this code makes assembler fail with &quot;Error: Range error&quot;:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.segment &quot;ZP&quot;<br />addr0: .res 2<br /><br />.segment &quot;CODE&quot;<br />; ... in some subroutine<br />sta addr0+1<br /></div><br />But after I renamed &quot;ZP&quot; to &quot;ZEROPAGE&quot; in the linker config and assembly source, it seems to work as expected. I guess without it, ca65 isn't smart enough to figure out that addr0+1 is a constant zero-page address, or something.<br /><br />Edit: It makes sense that ca65 isn't smart enough, because the assembler runs before the linker, so it has no knowledge of the segment layouts and types; so it's forced to rely on hard-coded conventions for certain things, like &quot;ZEROPAGE&quot;.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Mon Oct 13, 2014 2:22 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Minimal NES example using ca65</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">thenendo wrote:</div><div class="quotecontent">Edit: It makes sense that ca65 isn't smart enough, because the assembler runs before the linker, so it has no knowledge of the segment layouts and types; so it's forced to rely on hard-coded conventions for certain things, like &quot;ZEROPAGE&quot;.</div><br />Your analysis is correct. However, it's also possible to explicitly specify a segment as a zero page segment:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.segment &quot;ZP&quot; : zeropage<br />foo: .res 1<br />; ...<br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Mon Oct 13, 2014 8:04 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Minimal NES example using ca65</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">thenendo wrote:</div><div class="quotecontent"><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent">Relatedly, I think you might want to use &quot;ZEROPAGE&quot; instead of &quot;ZP&quot;. Using your linker config (with &quot;ZP&quot;)</div></div><br /><br />Ack, yeah I forgot about that special name too. Okay, I've renamed ZP &gt; ZEROPAGE, and DATA &gt; RODATA to keep with ca65 convention.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Thu Oct 16, 2014 2:28 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Minimal NES example using ca65</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Fixed a bug with the emphasis bits, accidentally had emphasize-red set on.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>3</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>