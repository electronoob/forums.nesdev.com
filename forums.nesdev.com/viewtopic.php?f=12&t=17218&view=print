<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - new to snes environment, have some questions.</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">new to snes environment, have some questions.</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=12&amp;t=17218">http://forums.nesdev.com/viewtopic.php?f=12&amp;t=17218</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>7</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>infidelity</b> [ Mon Apr 02, 2018 6:43 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>new to snes environment, have some questions.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'm now getting the desire to get serious with learning to write for the snes. But I have a few questions as to understanding how the RAM/ROM works.<br /><br />I know 6502, I've hacked many games which a lot of people know, and I've now written 2 games from scratch for the NES. Just wanted to give that brief background on my coding/writing history. <br /><br />1. Is the snes ram really $0-$1FFF? I ask because, I know the NES ram is $0-$7FF. Also, commercially, the sprite dma is in $200-$2FF of the nes ram, so, is the sprite dma for the snes also placed within the snes ram?<br /><br />2. Do snes games utilize chr-rom, or are the graphics embedded within the rom as chr-ram?<br /><br />3. I know in the nes, the region  $FFFA-$FFFF contains the pointers to the NMI/RESET/IRQ, does the snes use the exact same region?<br /><br />4. I'm a little fuzzy on header/no header. Right now I'm using bsnes for trying out writing. If I want to create a header, where I'm the rom does it start? I know it's near the end of the rom. So for example, let's say I have a snes rom file that's empty, starts at $0, and goes all the way to $FFFF. Where would I begin to put the header?<br /><br />Thank you all for reading!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>creaothceann</b> [ Mon Apr 02, 2018 7:07 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: new to snes environment, have some questions.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">infidelity wrote:</div><div class="quotecontent">I know 6502, I've hacked many games which a lot of people know, and I've now written 2 games from scratch for the NES.</div>Take a look at <a href="http://www.defence-force.org/computing/oric/coding/annexe_2/" class="postlink">this</a> then.<br /><br /><div class="quotetitle">infidelity wrote:</div><div class="quotecontent">1. Is the snes ram really $0-$1FFF?</div>See <a href="http://www.romhacking.net/?page=documents&amp;category=&amp;platform=&amp;game=&amp;author=548&amp;perpage=20&amp;level=&amp;title=&amp;desc=&amp;docsearch=Go" class="postlink">anomie</a>'s memmap.txt.<br /><br />(His regs.txt is an excellent hardware reference.)<br /><br /><div class="quotetitle">infidelity wrote:</div><div class="quotecontent">Also, commercially, the sprite dma is in $200-$2FF of the nes ram, so, is the sprite dma for the snes also placed within the snes ram?</div>Sprite data is in OAM (Object Attribute Memory), which is accessed via a set of PPU registers.<br /><br /><div class="quotetitle">infidelity wrote:</div><div class="quotecontent">2. Do snes games utilize chr-rom, or are the graphics embedded within the rom as chr-ram?</div>Graphics are either stored uncompressed in ROM and transferred to VRAM, or are decoded into WRAM and transferred to VRAM, or decoded directly to VRAM.<br /><br /><div class="quotetitle">infidelity wrote:</div><div class="quotecontent">3. I know in the nes, the region  $FFFA-$FFFF contains the pointers to the NMI/RESET/IRQ, does the snes use the exact same region?</div>The CPU loads the 16-bit reset vector from $00:$FFFC, which is in cartridge address space. The memory mapper or address bus wiring may route that to any ROM location, but it mostly goes to either $FFFC or $7FFC.<br /><br /><div class="quotetitle">infidelity wrote:</div><div class="quotecontent">4. I'm a little fuzzy on header/no header. Right now I'm using bsnes for trying out writing. If I want to create a header, where I'm the rom does it start? I know it's near the end of the rom. So for example, let's say I have a snes rom file that's empty, starts at $0, and goes all the way to $FFFF. Where would I begin to put the header?</div>Depends if you're using HiROM/LoROM/etc.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Apr 02, 2018 7:21 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: new to snes environment, have some questions.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">infidelity wrote:</div><div class="quotecontent">1. Is the snes ram really $0-$1FFF?</div><br />RAM on the Super NES is $7E0000-$7FFFFF. The $7E0000-$7E1FFF region gets mirrored to $0000-$1FFF of banks $00-$3F and $80-$BF.<br /><br /><div class="quotetitle">infidelity wrote:</div><div class="quotecontent">Also, commercially, the sprite dma is in $200-$2FF of the nes ram, so, is the sprite dma for the snes also placed within the snes ram?</div><br />Shadow OAM can be placed anywhere in $7E0000-$7FFFFF. Because DMA on Super NES is much more flexible than DMA on NES, there is no need for alignment to a 256-byte page, though it cannot cross a 65536-byte bank.<br /><br /><div class="quotetitle">infidelity wrote:</div><div class="quotecontent">2. Do snes games utilize chr-rom, or are the graphics embedded within the rom as chr-ram?</div><br />Like the Game Boy and Genesis, the Super NES uses CHR RAM. The only consoles I know of that use CHR ROM are NES and Neo Geo. (Atari 7800 is a borderline example; if you're interested, ask in Other Retro Dev.)<br /><br /><div class="quotetitle">infidelity wrote:</div><div class="quotecontent">3. I know in the nes, the region  $FFFA-$FFFF contains the pointers to the NMI/RESET/IRQ, does the snes use the exact same region?</div><br />Super NES uses $FFE4-$FFFF, as it has separate sets of vectors for 6502 emulation mode (not used much past the boot sequence) and native mode.<br /><br /><div class="quotetitle">infidelity wrote:</div><div class="quotecontent">4. I'm a little fuzzy on header/no header. Right now I'm using bsnes for trying out writing. If I want to create a header, where I'm the rom does it start? I know it's near the end of the rom. So for example, let's say I have a snes rom file that's empty, starts at $0, and goes all the way to $FFFF. Where would I begin to put the header?</div><br />The internal header goes immediately prior to the vectors, based on whatever offset in the ROM image corresponds to $00FFB0-$00FFDF in the CPU address space. In mode $20/$30 (&quot;LoROM&quot;), it goes at $007FB0-$007FDF in the ROM image. In mode $21/$31 (&quot;HiROM&quot;), it goes at $00FFB0-$00FFDF in the ROM image.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>93143</b> [ Mon Apr 02, 2018 12:59 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: new to snes environment, have some questions.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">infidelity wrote:</div><div class="quotecontent">Do snes games utilize chr-rom, or are the graphics embedded within the rom as chr-ram?</div><br />No.  The S-PPU can't access the cartridge.  All graphics data needs to be transferred to the 64 KB VRAM (which the CPU can access only via a port, as it is not on the A bus) before it can be used.  As said, DMA is far more flexible on the SNES, and far more bandwidth is available, so this isn't as onerous as it would be on the NES.<br /><br />VRAM and OAM can be targeted with DMA at any point during VBlank (which is bigger than on NES, at least for NTSC, because the useless overscan has been trimmed and NMI fires after just 224 lines by default) or forced blank (which can be used to extend VBlank like in Star Fox, which can comfortably update its 224x192 4bpp framebuffer in three frames and could probably do it in two if it had to, or to create a black bar on the screen like in Mario Kart, which uploads OAM data in between the top and bottom halves of the display).  CGRAM can be addressed during VBlank, forced blank, or HBlank, and is (like most other PPU registers) a great target for HDMA.<br /><br />Also, the SNES has a raster IRQ that can be set to trigger at a horizontal position every line, at a vertical position every frame, or at a horizontal position on a particular line every frame.  HDMA is better for a lot of things, but the IRQ can be very useful too.  The use of forced blank described above is a good example, because the NMI can't be moved except by switching overscan on and off.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I'm a little fuzzy on header/no header.</div><br />That's got nothing to do with the official Nintendo header.  A &quot;headered&quot; ROM is one that has a Super Magicom (or other?) copier header before the actual copy of the ROM, and is thus slightly larger than the actual game; by convention the extension for a ROM with a Super Magicom header is .smc.  An &quot;unheadered&quot; ROM has no copier header and is thus the correct size; the correct extension for an unheadered ROM is .sfc.  These file extension conventions are not universal and should not be relied on.  If the ROM is a multiple of 32 KB, it's unheadered.  Modern emulators and flash carts do not use the copier headers, so there's no point including one unless you're going to be using a Super Magicom or something to run it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Mon Apr 02, 2018 1:11 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: new to snes environment, have some questions.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">93143 wrote:</div><div class="quotecontent">That's got nothing to do with the official Nintendo header.  A &quot;headered&quot; ROM is one that has a Super Magicom (or other?) copier header before the actual copy of the ROM, and is thus slightly larger than the actual game; by convention the extension for a ROM with a Super Magicom header is .smc.  An &quot;unheadered&quot; ROM has no copier header and is thus the correct size; the correct extension for an unheadered ROM is .sfc.  These file extension conventions are not universal and should not be relied on.  If the ROM is a multiple of 32 kB, it's unheadered.</div><br />I think he's talking about $FFB0 through $FFDF (&quot;ROM Registration Data&quot;, using official Nintendo terminology).  People colloquially call this a &quot;header&quot; or &quot;cartridge header&quot;.  Quoting him again, emphasis mine:<br /><br /><div class="quotetitle">infidelity wrote:</div><div class="quotecontent">4. I'm a little fuzzy on header/no header. Right now I'm using bsnes for trying out writing. If I want to create a header, where I'm the rom does it start? <span style="color: #00FF00">I know it's near the end of the rom.</span> So for example, let's say I have a snes rom file that's empty, starts at $0, and goes all the way to $FFFF. Where would I begin to put the header?</div><br />Talking to the OP again: 93143 is talking about the 512-byte SMC header (for files ending in <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.swc</tt> or <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.smc</tt>) for Super Magicom / Super Wild Card copiers, which is at the start of the file (i.e. 512 byte header followed by the actual ROM).  You don't need this to make a ROM.  Stick to just the raw data and name your ROM with a <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.sfc</tt> file extension and you should be fine.  If the assembler you're using forces you to make a file with an SMC header, then that file format is documented -- just ask if/when you get there.<br /><br />Also, re: &quot;goes from 0 to $FFFF&quot;: don't make a 64KByte ROM (or smaller like we used to do back in the day).  You'll get publicly chastised by some emulator authors for doing so, usually authors who weren't around doing snesdev using copiers and floppy disks.  ;-)  Make your ROM 512KBytes (4mbits), even if you use way less space than that.  Unused space will compress well with .zip or other formats.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>93143</b> [ Mon Apr 02, 2018 1:28 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: new to snes environment, have some questions.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Given the wording of &quot;header/no header&quot;, I figured he might be confused about the distinction between copier headers and ROM registration data.  I was when I started - I deliberately used .smc on my first attempts because I wasn't sure which &quot;header&quot; Neviksti's starter kit was constructing and including.  (It was the ROM registration data, of course.  You have to go back a fair ways to find example code that includes a copier header; the Anthrox mode split demo is an example.)<br /><br />It may be worth noting that while some emulators and flash carts do rely on the ROM registration data, the SNES itself does not.  The only header data the SNES cares about is the vectors.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Revenant</b> [ Mon Apr 02, 2018 1:31 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: new to snes environment, have some questions.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">koitsu wrote:</div><div class="quotecontent">don't make a 64KByte ROM (or smaller like we used to do back in the day).  You'll get publicly chastised by some emulator authors for doing so</div><br />To the contrary, I think 32/64/128/256kb ROMs are fine if that's the only space you actually need; I'm not aware of any current emulators that would have problems with that. 512kb is reasonable for e.g. an actual gamedev project though, since it's hard to predict how much stuff you'll be throwing in there over the course of development and it's easy to just give yourself a decent amount of space right off the bat.<br /><br />I've even made working ROMs as small as <a href="http://forums.nesdev.com/viewtopic.php?f=12&amp;t=16017" class="postlink">256 bytes</a> that loaded and ran just fine in bsnes/higan (other emulators needed some padding), although there is virtually no <em>realistic</em> scenario where anyone would actually have a reason to attempt to do this <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Mon Apr 02, 2018 2:54 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: new to snes environment, have some questions.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Revenant wrote:</div><div class="quotecontent">To the contrary, I think 32/64/128/256kb ROMs are fine if that's the only space you actually need; I'm not aware of any current emulators that would have problems with that. 512kb is reasonable for e.g. an actual gamedev project though, since it's hard to predict how much stuff you'll be throwing in there over the course of development and it's easy to just give yourself a decent amount of space right off the bat.</div><br />The problem was not with emulators, it was with emulator authors.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Revenant</b> [ Mon Apr 02, 2018 3:29 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: new to snes environment, have some questions.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'm not sure why that's important.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>infidelity</b> [ Tue Apr 03, 2018 4:19 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: new to snes environment, have some questions.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thank you everyone for all the info!<br /><br />I was doing some testing with the JML &amp; JSL, very cool! I learned how to correctly set the desired address, and the bank number, and was able to return properly with the RTL, again that's so cool how that works! And also a first, I wanted to clear all of the $0000-$1FFF snes ram. So I set X &amp; Y as 16 bit values, while A was at 8 bit. I then loaded 00 into A, then I loaded Y as #$1FFF, then I did STA'Y to $0000 (which at the start, stores 00 into $1FFF, then I DEY, and BNE back to my STA'Y. Using bsnes, I stepped through a couple times to make sure it was working, then when I clicked Run, the code worked! Y was down to 0000, and all the ram was wiped! <img src="./images/smilies/icon_smile.gif" alt=":-)" title="Smile" /><br /><br />Very fun stuff!<br /><br />However I got lazy and didn't read up on what snes address does ppu rendering, (nes uses $2000) so I was unable to have my NMI fire up, my reset vector I had to deliberately insert a brk, to trip the NMI. :-/<br /><br />All I'm doing is testing commands right now, to get a feel of the system.<br /><br />Oh, am I wiping the stack with my code? I don't know where the stack is in the snes.<br /><br />Thanks, this is becoming fun to toy around with! <img src="./images/smilies/icon_smile.gif" alt=":-)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Nicole</b> [ Tue Apr 03, 2018 5:31 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: new to snes environment, have some questions.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">infidelity wrote:</div><div class="quotecontent">Oh, am I wiping the stack with my code? I don't know where the stack is in the snes.</div><br />Yes. The 6502 confines the stack to $0100-$01ff, but the 65816 allows it to be anywhere in bank $00. Most games tend to put it at $1fff, or $01ff like NES.<br /><br />You initialize the stack pointer just like on NES, but this time you'll want to do it with X as a 16-bit register.<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">ldx #$1fff<br />txs</div><br />Alternatively, you can use A instead, like so:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda #$1fff<br />tcs&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; or &quot;tas&quot; in some assemblers</div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>infidelity</b> [ Thu Apr 05, 2018 1:37 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: new to snes environment, have some questions.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thanks for that info! <img src="./images/smilies/icon_smile.gif" alt=":-)" title="Smile" /><br /><br />I have 2 questions with CGRAM.<br /><br />1: Are you able to set the desired CGRAM address via $2121, by writing to it twice like you would on the NES for $2006?<br /><br />2: I've written 2 bytes to $00-$01 of CGRAM. The first byte is fine, but no matter what I put for a 2nd byte, it's always increased by 80? Any ideas?<br /><br />Thanks! <img src="./images/smilies/icon_smile.gif" alt=":-)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Thu Apr 05, 2018 3:01 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: new to snes environment, have some questions.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">infidelity wrote:</div><div class="quotecontent">1: Are you able to set the desired CGRAM address via $2121, by writing to it twice like you would on the NES for $2006?</div><br />No.  $2121 (CGADD) is essentially an &quot;index&quot; register into CGRAM.  You write a single 8-bit value (0 to 255), depending on what colour index you wish to start at.  The address (internally) auto-increments when you've written to $2122 twice (keep reading).  This is a write-only register.<br /><br />$2122 (CGDATA) is a double-write register, similar to how the NES's $2006 works (but for a different purpose).  It's a 15-bit value, but you write the lower 8 bits first, followed by the upper 7.  The order of the data is (when represented by a 15-bit value): <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">0BBBBBGGGGGRRRRR</tt> (B = blue, G = green, R = red).  You can only write to this during VBlank, HBlank, or if forced blanking is set.  How this data is used depends on what BG mode you're using ($2105).  This is a write-only register.  Example which would store a bright purple colour (%0111110000011111) in CG-RAM location 6, assuming mode 0:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">sep #$20&nbsp; &nbsp; &nbsp;; 8-bit accumulator<br />lda #6&nbsp; &nbsp; &nbsp; &nbsp;; Colour index 6<br />sta $2121<br />lda #$1f&nbsp; &nbsp; &nbsp;; $7c1f = %0111110000011111 = bright purple<br />sta $2122<br />lda #$7c<br />sta $2122<br /></div><br /><div class="quotetitle">infidelity wrote:</div><div class="quotecontent">2: I've written 2 bytes to $00-$01 of CGRAM. The first byte is fine, but no matter what I put for a 2nd byte, it's always increased by 80? Any ideas?</div><br />Sounds like a bug in your understanding of how the registers work, or a general bug in your program.  I don't know how your determined &quot;it's always increased by 80&quot;.  If you're using bsnes-plus then you should know that some registers and memory is &quot;pre-seeded&quot; with values, so that may be what you're seeing (this still means your program is buggy :-) ).<br /><br />Start here: <!-- m --><a class="postlink" href="https://wiki.superfamicom.org/writing-your-first-snes-program">https://wiki.superfamicom.org/writing-y ... es-program</a><!-- m -->

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>93143</b> [ Thu Apr 05, 2018 3:03 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: new to snes environment, have some questions.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Regarding your second question, are you saying that you're writing two 8-bit values to $2122 after setting $2121 to zero, and the top bit of the resulting 16-bit colour value is being flipped?  If so, it might be a quirk of the emulator, because the top bit is a dummy bit.  I don't think it's even stored; <a href="http://problemkaputt.de/fullsnes.htm" class="postlink">fullsnes</a> says it's PPU2 open bus when read (via $213B).  The values in CGRAM are 15-bit BGR triplets with no extra information.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>infidelity</b> [ Fri Apr 06, 2018 3:12 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: new to snes environment, have some questions.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />OK I see now what's happening. In bsnes when I view the CGRAM, using the addresses $000 &amp; $001, the address showing me only .421|8421 is $001. So when I write the 2nd byte to $2122, then that's the one with the leftmost bit unused. <br /><br />And I was also able to direct $2121 wherever I wanted it to start within the CGRAM to write the palette color! <img src="./images/smilies/icon_smile.gif" alt=":-)" title="Smile" /><br /><br />Very exciting so far for me!<br /><br />Now I need to learn CHR-RAM, this feature I've never done on the NES, I've only worked with CHR-ROM. Any helpful tips would be grear! Can't believe I'm getting all this. <img src="./images/smilies/icon_smile.gif" alt=":-)" title="Smile" />

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>7</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>