<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - 8x16 and whatever else unreg wants to know</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">8x16 and whatever else unreg wants to know</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=7451">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=7451</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>49</strong> of <strong>83</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Fri Sep 21, 2012 3:04 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 sprite is really a 16x32 pixel image?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Now that I think of it, the code in <a href="http://forums.nesdev.com/viewtopic.php?p=99960#p99960" class="postlink">this post</a> will indeed add 32 every time after the first time it reaches a multiple of 32. Say that the number is 30, after you add two it become 32, so you add another 30, making it 62, which is also 2 units away from a multiple of 32. If you add 32 to a number that is 2 units away from being a multiple of 32, it will <strong>always</strong> be 2 units away from a multiple of 32.<br /><br />So, I still don't understand where you're going with this. What behavior exactly do you expect when the number is 30? shouldn't it become 62? And why shouldn't the 62 become 94? Please show me a few steps of what should happen to that number after a couple of times of going through your macro.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Fri Sep 21, 2012 3:32 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 sprite is really a 16x32 pixel image?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">Now that I think of it, the code in <a href="http://forums.nesdev.com/viewtopic.php?p=99960#p99960" class="postlink">this post</a> will indeed add 32 every time after the first time it reaches a multiple of 32. Say that the number is 30, after you add two it become 32, so you add another 30, making it 62, which is also 2 units away from a multiple of 32. If you add 32 to a number that is 2 units away from being a multiple of 32, it will <strong>always</strong> be 2 units away from a multiple of 32.<br /><br />So, I still don't understand where you're going with this. What behavior exactly do you expect when the number is 30? shouldn't it become 62? And why shouldn't the 62 become 94? Please show me a few steps of what should happen to that number after a couple of times of going through your macro.</div><br /><br />It should start at 0 and increment by 2 until it becomes a multiple of 32...  then increment by 32... then increment by 2 again until it becomes a multiple of 32 again.<br /><br />So it should go something like this:  00... 02... 04... 06... 08... 0A... 0C... 0E... 10... 12... 14... 16....18...1A...1C...1E...40... 42... 44... 46... 48... 4A... 4C... 4E... 50...52...54...56...58...5A...5C...5E...80...82...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Fri Sep 21, 2012 3:35 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 sprite is really a 16x32 pixel image?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Would you mind telling us what it's for? I don't get why this would be useful in any places honestly...and is this supposed to change a value it has in RAM on a per-run basis?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Fri Sep 21, 2012 3:59 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 sprite is really a 16x32 pixel image?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">3gengames wrote:</div><div class="quotecontent">Would you mind telling us what it's for? I don't get why this would be useful in any places honestly...</div><br /><br />It's so...went to look at code... it's what I need to happen during writes to <span style="color: #FFFF00">screenArray</span>.  <span style="color: #FFFF00">screenArray</span> is the memory that holds one screen's collision values... it's 1 byte per 8x8pixel square.<br /><span style="color: #FF0000">Actually, that sounds like something I fixed for the attribute tables... ...probably was... well this code was in my </span><span style="color: #FF4000">prg-collisionU.asm</span><span style="color: #FF0000"> page... it's ok.  <img src="./images/smilies/icon_redface.gif" alt=":oops:" title="Embarassed" /> It's gone now... well, I'll have to think this over.  <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />  </span><br /><br /><br /><div class="quotetitle">3gengames wrote:</div><div class="quotecontent">is this supposed to change a value it has in RAM on a per-run basis?</div><br />Yes.  <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br /><span style="color: #FF0000">edit</span><br /><span style="color: #800000">edit2:  Well I'm sorry 3gengames and tokumaru... and everyone else who looked at this thread today.  <img src="./images/smilies/icon_sad.gif" alt=":(" title="Sad" />  <img src="./images/smilies/icon_redface.gif" alt=":oops:" title="Embarassed" />  It my brain... it's getting so much better though... you'd have to understand the many hours I spent... ...it's ok.  <img src="./images/smilies/icon_redface.gif" alt=":oops:" title="Embarassed" />  <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /> </span>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Fri Sep 21, 2012 4:56 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 sprite is really a 16x32 pixel image?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">unregistered wrote:</div><div class="quotecontent">00... 02... 04... 06... 08... 0A... 0C... 0E... 10... 12... 14... 16....18...1A...1C...1E...40... 42... 44... 46... 48... 4A... 4C... 4E... 50...52...54...56...58...5A...5C...5E...80...82...</div><br />Then use the code in <a href="http://forums.nesdev.com/viewtopic.php?p=99960#p99960" class="postlink">this post</a> but do <strong>adc #32</strong> instead of <strong>adc #30</strong>. Then you'll get this sequence.<br /><br />I don't want to be mean, but if you cared to write the desired sequence down you'd have realized that to jump from $1E to $40 you'd have to add 34 (2 INXs and then ADC #32), not 32.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Fri Sep 21, 2012 6:25 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 sprite is really a 16x32 pixel image?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><div class="quotetitle">unregistered wrote:</div><div class="quotecontent">00... 02... 04... 06... 08... 0A... 0C... 0E... 10... 12... 14... 16....18...1A...1C...1E...40... 42... 44... 46... 48... 4A... 4C... 4E... 50...52...54...56...58...5A...5C...5E...80...82...</div><br />Then use the code in <a href="http://forums.nesdev.com/viewtopic.php?p=99960#p99960" class="postlink">this post</a> but do <strong>adc #32</strong> instead of <strong>adc #30</strong>. Then you'll get this sequence.<br /><br />I don't want to be mean, but if you cared to write the desired sequence down you'd have realized that to jump from $1E to $40 you'd have to add 34 (2 INXs and then ADC #32), not 32.</div><br />That's an excellent  <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /> way of learning that I should write the desired sequence down in the future.  Thanks very much tokumaru! <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Sat Sep 22, 2012 1:13 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 sprite is really a 16x32 pixel image?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">3gengames wrote:</div><div class="quotecontent">Would you mind telling us what it's for? I don't get why this would be useful in any places honestly...</div><br /> It's for running through all of our metatiles... I have this run during each time through the loop... incrementing x by either 2 or <span style="color: #FF0080"><s>32</s></span> 34 each time.  Remember we are useing 16x16 metatiles.  <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /> <br /><br /><span style="color: #FF0080">edit: and well tokumaru, I found the paper page where I figured this out so I could remember what I was thinking... and it says</span><br /><div class="quotetitle"><span style="color: #FFBF00">...from some pages ago</span> I wrote:</div><div class="quotecontent">x goes from 0 to 30<br />then skips 32<br />&amp; goes from 64 to 94<br />...</div><span style="color: #FF0080">It seems my math thought 30 + 32 = 64... though I think I remember keeping the 32 because it was a power of 2.  Next time I'm going to write out what I expect... that was a great lesson, thanks.  <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /> </span>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Tue Sep 25, 2012 9:14 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 sprite is really a 16x32 pixel image?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'm confused about my collision detection process.  <br /><br />I know that 1 page of RAM (256 bytes) is big enough to hold 1 screen of information (240 bytes) because 1 screen is 256 pixels wide and 240 scan lines tall.  Each of my metatiles are 16 pixels high and 16 pixels wide.  That 16 pixel square is big enough to hold four 8 pixel by 8 pixel tiles.<br />256 (screen width) / 16 (metatile width) = <span style="color: #FF4000">16</span>.  And 240 (screen height) / 16 (metatile height) = <span style="color: #FFBF00">15</span>.  And so there are <span style="color: #FF4000">16</span> x <span style="color: #FFBF00">15</span> = 240 metatiles.  Since 1 screen of information is 240 bytes that allows 1 byte of collision data per metatile.  <br /><br />I don't understand... the part I'm having problems with is: How do I create a tile map with 240 bytes when each byte is supposed to represent the four 8x8 pixel tiles of my metatiles?  Well, I am going to continue to try and find the posts where you all spent your time to teach this to me... my sister is helping me.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Tue Sep 25, 2012 9:34 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 sprite is really a 16x32 pixel image?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Usually, you'd make a lookup table from metatile numbers to the tile numbers for the top left, top right, bottom left, and bottom right tiles of the metatile. Then you'd either have a fifth table for the attribute value or do like SMB1 and use the upper 2 bits of the metatile number for the attribute.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Tue Sep 25, 2012 9:56 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 sprite is really a 16x32 pixel image?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />And also a 6th table with collision information.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Wed Sep 26, 2012 1:28 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 sprite is really a 16x32 pixel image?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Do either of you have 16x16 metatiles?  Is your collision table memory 240 bytes?  How do you find out what value to store there?  Does that value depend on what the four tiles are?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Denine</b> [ Wed Sep 26, 2012 1:41 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 sprite is really a 16x32 pixel image?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I do have 16x16 metatiles. But my map is 224 bytes long. I don't wirte collision table but metatiles ID themselfs to have more options.<br />I write the value into RAM while decompressing map from PRG.<br />Something like this:<br />-Decompres a map byte from ROM.<br />-Save the byte into Level table in RAM<br />-JSR to function that draws metatile.<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"> Does that value depend on what the four tiles are?</div><br />I use solid\non solid metatiles only and 1 metatile-one collision type(meaning, I can't make half of metatile as non solid and other half as solid).<br />When I want to check a Hero's collision with background, I calcutale his position and convert the result to X register. Later I use X to read from Level data in RAM that I saved before.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Wed Sep 26, 2012 2:50 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 sprite is really a 16x32 pixel image?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You don't need to have a separate collision table in RAM. In fact, I doubt most games have. Normally, if you wanted to test the solidity of a metatile, you'd access that metatile in the level map (which might be in RAM, if you decompressed it there, or in ROM), and then read the collision information associated with that metatile. It's a bit more indirect, but saves you a lot of memory. It goes something like this:<br /><br />-calculate level map position of metatile to check;<br />-load metatile index from level map and put it into an index register;<br />-load from collision table in ROM, using the index from the previous step;<br /><br />It makes little sense to store an entire screen of collision information separate from the metatiles, because the same kind of metatile will always have the same type of solidity, and you're not making use of that redundancy.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Fri Sep 28, 2012 10:20 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 sprite is really a 16x32 pixel image?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Denine wrote:</div><div class="quotecontent">... When I want to check a Hero's collision with background, I calcutale his position and convert the result to X register. Later I use X to read from Level data in RAM that I saved before.</div> Thank you Denine; your help is much appreciated. Hope your game is growing healthyly too. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">You don't need to have a separate collision table in RAM. In fact, I doubt most games have. Normally, if you wanted to test the solidity of a metatile, you'd access that metatile in the level map (which might be in RAM, if you decompressed it there, or in ROM), and then read the collision information associated with that metatile. It's a bit more indirect, but saves you a lot of memory. It goes something like this:<br /><br />-calculate level map position of metatile to check;<br />-load metatile index from level map and put it into an index register;<br />-load from collision table in ROM, using the index from the previous step;<br /><br />It makes little sense to store an entire screen of collision information separate from the metatiles, because the same kind of metatile will always have the same type of solidity, and you're not making use of that redundancy.</div> Wat is the level map?  What info does it hold other than the metatile index?  I don't think I have a level map.  Was planning on creating one for collision... but I'm already susposed to have one?  Hmm...  <img src="./images/smilies/icon_confused.gif" alt=":?" title="Confused" />   Thank you for helping me tokumaru! <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Fri Sep 28, 2012 11:23 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 sprite is really a 16x32 pixel image?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">unregistered wrote:</div><div class="quotecontent">Wat is the level map?  What info does it hold other than the metatile index?  I don't think I have a level map.</div><br />If you have a level, you should have a level map. Storing straight name/attribute table is not efficient at all, even if you compress each screen, because you don't take advantage of all the redundancy of blocks that repeat.<br /><br />A level map is usually a 2D grid of metatiles, where each byte is a metatile index. The level map can be used both for rendering (read a row/column of metatiles from the map, use their indexes to load the tiles that make up the metatiles and write them to VRAM) and for collision (get the metatile index and use it to get the metatile's collision information).<br /><br />Here's a straightforward representation of a level that uses 32x32-pixel (4x4 tiles) metatiles:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">;16 tiles for each of the 4 metatiles<br />;metatile:&nbsp; $00&nbsp; $01&nbsp; $02&nbsp; $03<br /><br />MatatileTile00:<br />&nbsp; &nbsp;.db $00, $04, $08, $0c<br />MatatileTile01:<br />&nbsp; &nbsp;.db $00, $04, $09, $0c<br />MatatileTile02:<br />&nbsp; &nbsp;.db $00, $04, $0a, $0c<br />MatatileTile03:<br />&nbsp; &nbsp;.db $00, $04, $0a, $0c<br />MatatileTile10:<br />&nbsp; &nbsp;.db $00, $05, $0b, $0d<br />MatatileTile11:<br />&nbsp; &nbsp;.db $00, $05, $0a, $0c<br />MatatileTile12:<br />&nbsp; &nbsp;.db $00, $05, $0a, $0c<br />MatatileTile13:<br />&nbsp; &nbsp;.db $00, $05, $0b, $0d<br />MatatileTile20:<br />&nbsp; &nbsp;.db $00, $06, $06, $0e<br />MatatileTile21:<br />&nbsp; &nbsp;.db $00, $06, $06, $0c<br />MatatileTile22:<br />&nbsp; &nbsp;.db $00, $06, $06, $0c<br />MatatileTile23:<br />&nbsp; &nbsp;.db $00, $06, $06, $0e<br />MatatileTile30:<br />&nbsp; &nbsp;.db $00, $07, $07, $0f<br />MatatileTile31:<br />&nbsp; &nbsp;.db $00, $07, $07, $0f<br />MatatileTile32:<br />&nbsp; &nbsp;.db $00, $07, $07, $0f<br />MatatileTile33:<br />&nbsp; &nbsp;.db $00, $07, $07, $0f<br /><br />MatatileAttributes: ;4 palette indexes for each metatile<br />&nbsp; &nbsp;.db %00000000 ;palettes for metatile $00<br />&nbsp; &nbsp;.db %01010101 ;palettes for metatile $01<br />&nbsp; &nbsp;.db %01010000 ;palettes for metatile $02<br />&nbsp; &nbsp;.db %11000011 ;palettes for metatile $03<br /><br />MetatileCollision: ;%00 = air, %01 = solid, %10 = water, %11 = hazard<br />&nbsp; &nbsp;.db %00000000 ;metatile $00 is all air<br />&nbsp; &nbsp;.db %01010101 ;metatile $01 is all solid<br />&nbsp; &nbsp;.db %01010000 ;only the top of metatile $02 is solid<br />&nbsp; &nbsp;.db %11110101 ;the top of metatile $03 hursts the player, the bottom is solid<br /><br />LevelMap01: ;this small level is 16x8 metatiles (512x256 pixels) large<br />&nbsp; &nbsp;.db $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00<br />&nbsp; &nbsp;.db $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00<br />&nbsp; &nbsp;.db $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00<br />&nbsp; &nbsp;.db $00, $00, $00, $00, $00, $02, $02, $00, $00, $00, $00, $00, $00, $00, $00, $00<br />&nbsp; &nbsp;.db $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $02, $02<br />&nbsp; &nbsp;.db $00, $00, $00, $01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00<br />&nbsp; &nbsp;.db $01, $01, $01, $01, $00, $00, $00, $00, $00, $01, $01, $01, $03, $03, $01, $01<br />&nbsp; &nbsp;.db $01, $01, $01, $01, $00, $00, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01</div><br />See how everything connects? Whenever you want to check what is present at a certain map location, you convert the coordinates into an index which you can use to read a metatile index from the level map. Once you know the metatile's index, you can use it to get any information you want about it. If you are rendering the background, read from the MatatileTileXX tables and and write the tile indexes to the name tables, and the attributes to the attribute tables. If you're testing for collisions, read from the MetatileCollision table to know how the objects should react to the metatile.<br /><br />Se how one thing points to another, that points to another and so on? This is how you manage to reuse your level data effectively compressing it to much less than it would be if you had raw name/attribute table data. The data above is just 200 bytes. If I were to represent that in uncompressed form, this 2-screen wide level would have been 2048 bytes large.<br /><br />Anyway, this is not a lesson about compression (although the maps are indeed compressed), this is to show you one of the possible ways in which a level can be represented, and how you can access everything on it. Does this make sense to you?

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>49</strong> of <strong>83</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>