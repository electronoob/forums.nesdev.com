<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=9&amp;t=16056" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2017-06-10T09:52:17-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=9&amp;t=16056</id>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2017-06-10T09:52:17-07:00</updated>
<published>2017-06-10T09:52:17-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=16056&amp;p=197903#p197903</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=16056&amp;p=197903#p197903"/>
<title type="html"><![CDATA[Re: Dual-PPU system design]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=16056&amp;p=197903#p197903"><![CDATA[
Sounds good to me!<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Sat Jun 10, 2017 9:52 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[lidnariq]]></name></author>
<updated>2017-06-10T09:51:20-07:00</updated>
<published>2017-06-10T09:51:20-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=16056&amp;p=197902#p197902</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=16056&amp;p=197902#p197902"/>
<title type="html"><![CDATA[Re: Dual-PPU system design]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=16056&amp;p=197902#p197902"><![CDATA[
Yeah. If we're making something compatible with the NES instead of the Famicom, we could even use OUT1 and OUT2 instead of A3 and A4.<br /><br />However, if we are trying to explicitly support sprites on the second PPU, then the design of what to provide it with becomes more complex. I guess the simplest option is just to provide a flat 16 KiB of addressable RAM, but maybe Memblers's GTROM CHR-RAM design would be a better choice.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3512">lidnariq</a> — Sat Jun 10, 2017 9:51 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[krzysiobal]]></name></author>
<updated>2017-06-10T04:06:33-07:00</updated>
<published>2017-06-10T04:06:33-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=16056&amp;p=197886#p197886</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=16056&amp;p=197886#p197886"/>
<title type="html"><![CDATA[Re: Dual-PPU system design]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=16056&amp;p=197886#p197886"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Of course, there's no way to get OAM DMA into the second one.<br /></div><br />Why just not map both of their registers at $2000-$2007 and add another two bit latch which stores info, which PPU (PPU1/PPU2/BOTH) should be used when accessing $2000-$2007?<br /><br />That way you can write to them simulatenously and both can have OAM_DMA.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4898">krzysiobal</a> — Sat Jun 10, 2017 4:06 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[lidnariq]]></name></author>
<updated>2017-06-09T13:02:43-07:00</updated>
<published>2017-06-09T13:02:43-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=16056&amp;p=197848#p197848</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=16056&amp;p=197848#p197848"/>
<title type="html"><![CDATA[Dual-PPU system design]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=16056&amp;p=197848#p197848"><![CDATA[
I don't actually have any interest in implementing this. I just think it's fun to think about.<br /><br /><div class="quotetitle"><a href="https://forums.nesdev.com/viewtopic.php?p=197823#p197823" class="postlink">tepples in this thread</a> wrote:</div><div class="quotecontent"><br />I can see two practical problems with running two 2C02 PPUs in a master/slave configuration. The biggest is that the missing dot on every other frame when rendering is enabled would cause the PPUs to drift out of sync over time, 30 pixels for each second in which one PPU's rendering is enabled and the other's not. Another is that you'd need two separate sets of CHR RAM and nametable memory, one for each PPU, unless you can design some sort of multiplexer circuit.<br /><br />If you have solutions for these, I'd be interested to see a new topic about them.<br /></div>The first problem is easily solved: overlap PPU registers.<br />If PPU1 has its decoder as <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">M2 AND /A15 AND /A14 AND A13 AND /A3</tt>, and PPU2 has its decoder as <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">M2 AND /A15 AND /A14 AND A13 AND A4</tt>, then writes to $2011 will turn on both at the exact same time. And writes to $2000...$2007 address only PPU1, and writes to $2018-$201F address only the other.<br /><br />Of course, there's no way to get OAM DMA into the second one. I'm not clear just how problematic this is: whether a layer of background-colored sprites is actually useful. If we don't need to accommodate sprites, then &quot;just&quot; giving PPU2 8 KiB of RAM for 4scr nametables and background tiles seems like an obvious choice.<br /><br />I think the exciting thing about the dual-PPU circuit is that it <em>could</em> have been easily done in the 1980s, even if it wasn't.<br /><br /><em>(As far as emulation ... I'd be much more excited to see a dual-APU tracker that could target Vs. System / VT03 / Donkey Kong.)</em><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3512">lidnariq</a> — Fri Jun 09, 2017 1:02 pm</p><hr />
]]></content>
</entry>
</feed>