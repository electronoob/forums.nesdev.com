<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Need some help with the PPU</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Need some help with the PPU</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=10351">http://forums.nesdev.com/viewtopic.php?f=3&amp;t=10351</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>5</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Thu Aug 08, 2013 9:25 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need some help with the PPU</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Zepper wrote:</div><div class="quotecontent">Avoid technical or low level things. He's writing an emulator.</div><br />Well, he did ask how the PPU does it, and that's how... I can't lie to him, or even dumb it down. But I didn't provide any details either, or said that he should emulate this control line.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">You should trap reads by <span style="color: #00FF40">LDA $2007</span> instruction, and writes by <span style="color: #00FF40">STA $2007</span>.</div><br />You and tepples are talking about LDA and STA like those are the ONLY instructions that can access $2007. Personally, I think that might confuse the OP. Several instructions (with different addressing modes!) can write/read to/from memory, and all of them can access $2007... no reason to hide that from him.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dartht33bagger</b> [ Thu Aug 08, 2013 11:09 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need some help with the PPU</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Zepper wrote:</div><div class="quotecontent"><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><div class="quotetitle">Dartht33bagger wrote:</div><div class="quotecontent">1. How does the PPU know if $2007 wants a read or a write?  Does the CPU write a nonzero value for a write and a zero value for a read?</div><br />What? Where did you get this zero/non-zero idea from? Like 3gengames said, one of the CPU pins indicates whether it's trying to read or write data, and the PPU uses that to tell reads and writes apart.</div><br /><br />Avoid technical or low level things. He's writing an emulator.<br /><br /><em>How does the PPU know if <strong>$2007</strong> wants a read or a write?</em><br />- Firstly, you need the CPU 6502 program code. You should trap reads by <span style="color: #00FF40">LDA $2007</span> instruction, and writes by <span style="color: #00FF40">STA $2007</span>. Look for LDA/STA timing diagram. Easy.</div><br /><br />This is exactly what I needed.  I didn't know that reading $2007 would tell the PPU to read data for the CPU.  I was thinking that reading $2007 would just give you the back the data that you wrote to $2007 in the past.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Zepper</b> [ Fri Aug 09, 2013 7:55 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need some help with the PPU</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><div class="quotetitle">Zepper wrote:</div><div class="quotecontent">Avoid technical or low level things. He's writing an emulator.</div><br />Well, he did ask how the PPU does it, and that's how... I can't lie to him, or even dumb it down. But I didn't provide any details either, or said that he should emulate this control line.</div><br /><br />He asked for an easy PPU read/write... in an emulation point of view.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">You and tepples are talking about LDA and STA like those are the ONLY instructions that can access $2007. Personally, I think that might confuse the OP. Several instructions (with different addressing modes!) can write/read to/from memory, and all of them can access $2007... no reason to hide that from him.</div><br /><br /><a href="http://www.youtube.com/watch?v=wdX8y_xkz14" class="postlink">That's obvious</a>. I gave a quick example, since I mentioned to check <strong>the instruction timing</strong>, where occurs <span style="color: #008040">reads</span> or <span style="color: #008040">writes</span>.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Fri Aug 09, 2013 10:32 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need some help with the PPU</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Zepper wrote:</div><div class="quotecontent"><a href="http://www.youtube.com/watch?v=wdX8y_xkz14" class="postlink">That's obvious</a>.</div><br />You know it's obvious, and I know it's obvious... but does he? <img src="./images/smilies/icon_wink.gif" alt=":wink:" title="Wink" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Zepper</b> [ Fri Aug 09, 2013 1:02 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need some help with the PPU</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><div class="quotetitle">Zepper wrote:</div><div class="quotecontent"><a href="http://www.youtube.com/watch?v=wdX8y_xkz14" class="postlink">That's obvious</a>.</div><br />You know it's obvious, and I know it's obvious... but does he? <img src="./images/smilies/icon_wink.gif" alt=":wink:" title="Wink" /></div><br /><br />I don't know. I <em>suppose</em> he has 6502 emulation working, but I can't answer by him. -_-;;

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dartht33bagger</b> [ Sun Aug 11, 2013 3:29 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need some help with the PPU</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />My 6502 emulator is working correctly <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br />A few more questions for you guys.  I'm having a hard time figuring out how a 8x8 tile is rendered in a scanline.  From my understand of how the PPU renders a background pixel from <a href="http://wiki.nesdev.com/w/images/d/d1/Ntsc_timing.png" class="postlink">this</a> diagram, it goes something like this:<br /><br />1. Fetch name table byte<br />2. Fetch attribute table byte two cycles later<br />3. Fetch lower background byte two cycles later<br />4. Fetch upper background byte two cycles later<br />5. 8 cycles after the first fetch, the attribute byte and the two background tile bytes are loaded into shift registers.<br /><br />Now the PPU shifts the registers every cycle and created a pixel from the four bits it fetches from the shift registers.  That's great and it makes sense.  The part that confuses me is how I'm supposed to draw a 8x8 tile in a scanline.  Does only the top 8x1 pixels in a tile get rendered on the first scanline?  Does the PPU switch between many different tiles on the first scanline and then come back to the same tiles when it needs to draw the next scanline?<br /><br />Also, almost everything about scrolling makes sense to me but this line:<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">The low 3 bits of X and Y sent to $2005 are the fine pixel offset within the 8x8 tile. The X component goes into the separate x register, which just selects one of 8 pixels coming out of a set of shift registers.</div><br /><br />How exactly does it &quot;select&quot; the pixel coming out of the shift register?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sun Aug 11, 2013 3:44 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need some help with the PPU</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Dartht33bagger wrote:</div><div class="quotecontent">The part that confuses me is how I'm supposed to draw a 8x8 tile in a scanline.  Does only the top 8x1 pixels in a tile get rendered on the first scanline?</div><br />Yes. Each scanline covers 34 tiles, and only a sliver of each tile gets rendered.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Does the PPU switch between many different tiles on the first scanline and then come back to the same tiles when it needs to draw the next scanline?</div><br />Yes. It normally* visits a particular set of 34 tiles eight times.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">The low 3 bits of X and Y sent to $2005 are the fine pixel offset within the 8x8 tile. The X component goes into the separate x register, which just selects one of 8 pixels coming out of a set of shift registers.</div><br />How exactly does it &quot;select&quot; the pixel coming out of the shift register?</div><br />With these:<br /><a href="https://en.wikipedia.org/wiki/File:Multiplexer_8-to-1.svg" class="postlink"><img src="https://upload.wikimedia.org/wikipedia/commons/thumb/e/e4/Multiplexer_8-to-1.svg/200px-Multiplexer_8-to-1.svg.png" alt="Image" /><img src="https://upload.wikimedia.org/wikipedia/commons/thumb/e/e4/Multiplexer_8-to-1.svg/200px-Multiplexer_8-to-1.svg.png" alt="Image" /><br /><img src="https://upload.wikimedia.org/wikipedia/commons/thumb/e/e4/Multiplexer_8-to-1.svg/200px-Multiplexer_8-to-1.svg.png" alt="Image" /><img src="https://upload.wikimedia.org/wikipedia/commons/thumb/e/e4/Multiplexer_8-to-1.svg/200px-Multiplexer_8-to-1.svg.png" alt="Image" /></a><br />The eight pixels coming out of the shift register are fed into a set of 8-to-1 <a href="https://en.wikipedia.org/wiki/Multiplexer" class="postlink">multiplexers</a> indexed by the three bits of fine X scroll.<br /><br /><br />* The top and bottom row of tiles in a scrolled screen may be visited fewer than eight times, as are many tiles that form part of a raster effect.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dartht33bagger</b> [ Mon Aug 12, 2013 2:21 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need some help with the PPU</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'm really close to understanding how this all works now.  Two final questions (hopefully).<br /><br />1. When the attribute shift registers are filled, the attribute byte fetched is fed through a 4 to 1 mux that selects two bits in the attribute byte based on bit 1 of coarse X and coarse Y.  The two bits that are selected by the mux are used to fill the entirety of the two attribute shift registers, correct?<br /><br />For example, say my attribute byte is 11100100.  Then lets say bit 1 of coarse X is 1 and bit 1 of course Y is 0.  That would make my mux choose 01 from the attribute byte, which would make my two attribute shift registers look like this: 01010101.  Is this a correct understand of the process?<br /><br />2. How are the pattern table addresses created?  I know how to find the nametable address and read a byte from that location, which will give me a value of up to $FF.  Then I check the PPU register status to see what pattern table the background is held in.  If it's held in the second table, I add $1000.  That's fine.<br /><br />However, I see that on the wiki, the valid pattern table address are from $0000-$0FF7 and $1000-$1FF7.  How are these addresses made?  The only way I could think of it happening is shifting the byte read from the nametable to the left 4 bits and then adding fine x scroll to the address (since fine x scroll can't be larger than 7).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Quietust</b> [ Mon Aug 12, 2013 6:12 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need some help with the PPU</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Dartht33bagger wrote:</div><div class="quotecontent">For example, say my attribute byte is 11100100.  Then lets say bit 1 of coarse X is 1 and bit 1 of course Y is 0.  That would make my mux choose 01 from the attribute byte, which would make my two attribute shift registers look like this: 01010101.  Is this a correct understand of the process?</div><br /><br />No - one shift register will get filled with 1s and the other will get filled with 0s.<br /><br /><div class="quotetitle">Dartht33bagger wrote:</div><div class="quotecontent">2. How are the pattern table addresses created?  I know how to find the nametable address and read a byte from that location, which will give me a value of up to $FF.  Then I check the PPU register status to see what pattern table the background is held in.  If it's held in the second table, I add $1000.  That's fine.<br /><br />However, I see that on the wiki, the valid pattern table address are from $0000-$0FF7 and $1000-$1FF7.  How are these addresses made?  The only way I could think of it happening is shifting the byte read from the nametable to the left 4 bits and then adding fine x scroll to the address (since fine x scroll can't be larger than 7).</div><br /><br />It does indeed shift the nametable byte to the left 4 bits, but it adds the fine <strong>Y</strong> scroll to the address, not the fine X scroll (why would it add fine X scroll when each byte represents one scanline?). Also, remember that the PPU fetches <strong>two</strong> pattern bytes per tile, where the second one is simply the first one plus 8 (and contains the upper color bits for that tile).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dartht33bagger</b> [ Thu Aug 15, 2013 2:28 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need some help with the PPU</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />So I've gotten the background part of my ppu written and I'm trying to test it, but I'm failing miserably. I'm just trying to get one frame rendered at the very least.  Right now, I'm not even reaching any of my PPU functions because $2000 stays 0x00 and $2001 stays 0x10.  I know my CPU works because it passed the nestest.nes log (well, at least up until the illegal opcodes kicked in), but my cpu gets stuck in a loop as well.<br /><br />So I'm thinking at this point I'm missing something important about how the system starts up.  I've read the power up states for both the PPU and the CPU on the wiki, but I'm having a hard time understanding how the system starts up.  I know the system boots up, the program counter is set to the reset vector, and then the PPU does something for a certain amount of cycles before telling the CPU that it's clear to go.<br /><br />How exactly does the &quot;handshake&quot; between the PPU and the CPU occur?  Is the PPU rendering frames at this point?  Do NMIs occur at this point, or do they wait until the handshake is complete?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ulfalizer</b> [ Thu Aug 15, 2013 3:14 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need some help with the PPU</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Dartht33bagger wrote:</div><div class="quotecontent">So I've gotten the background part of my ppu written and I'm trying to test it, but I'm failing miserably. I'm just trying to get one frame rendered at the very least.  Right now, I'm not even reaching any of my PPU functions because $2000 stays 0x00 and $2001 stays 0x10.  I know my CPU works because it passed the nestest.nes log (well, at least up until the illegal opcodes kicked in), but my cpu gets stuck in a loop as well.<br /><br />So I'm thinking at this point I'm missing something important about how the system starts up.  I've read the power up states for both the PPU and the CPU on the wiki, but I'm having a hard time understanding how the system starts up.  I know the system boots up, the program counter is set to the reset vector, and then the PPU does something for a certain amount of cycles before telling the CPU that it's clear to go.<br /><br />How exactly does the &quot;handshake&quot; between the PPU and the CPU occur?  Is the PPU rendering frames at this point?  Do NMIs occur at this point, or do they wait until the handshake is complete?</div><br /><br />The CPU and PPU run in isolation and only interact via reads/writes from the CPU and NMIs from the PPU. On the NES, the PPU always starts at (0,0) in <a href="http://wiki.nesdev.com/w/images/d/d1/Ntsc_timing.png" class="postlink">this diagram</a> on power-up and reset (I think the reset button on the Famicom doesn't reset the PPU, so there it could start anywhere within the frame). The PPU is always &quot;running&quot;, so there's nothing special that needs to be done to get it going.<br /><br />The only complication is that certain registers won't work (are zeroed out) until the PPU has run for one frame. On startup, you'll see games e.g. polling the VBlank flag in $2002 in a loop to determine when the PPU is safe to use. I don't know of any games that <em>depend</em> on certain PPU regs not working on start-up though, so you can safely treat all PPU regs as working right away when starting out.<br /><br />If you haven't done so already, I'd recommend implementing CPU tracing so you can see what your emulator is doing. On startup you should get something like the following (taken from Donkey Kong):<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">C79E: sei<br />C79F: cld<br />C7A0: lda #$10<br />C7A2: sta $2000<br />C7A5: ldx #$FF<br />C7A7: txs&nbsp; &nbsp; &nbsp; <br />C7A8: lda $2002 &lt;-+<br />C7AB: and #$80&nbsp; &nbsp; | VBlank flag polling loop<br />C7AD: beq $C7A8 --+</div><br /><br />Once you get that, you can then see that the PPU register accesses in that code are handled as expected, using your favourite debugging method.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Thu Aug 15, 2013 7:32 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need some help with the PPU</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Dartht33bagger wrote:</div><div class="quotecontent">How exactly does the &quot;handshake&quot; between the PPU and the CPU occur?</div><br />Are you setting bit 7 of $2002 to indicate that VBlank has started? The PPU needs about a frame to become stable after power up, so all games will wait 2 or 3 frames by polling this flag before doing anything else. If you are not consistently setting/clearing the flag games will get stuck in this wait loop.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Is the PPU rendering frames at this point?</div><br />The PPU is always rendering <em>something</em>. Even if background and sprites are disabled, it will render the background color.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Do NMIs occur at this point, or do they wait until the handshake is complete?</div><br />NMIs will only occur if bit 7 of $2000 is set. Most games will only enable NMIs after everything is stable and initialized. It should be possible to have them enabled right from the start though.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dartht33bagger</b> [ Mon Aug 19, 2013 10:04 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need some help with the PPU</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Another question about rendering turned on/off.  If background rendering is turned off, does the ppu still go through the attribute/nametable/tile fetch and all that, or does the ppu just idle and render pixels from whatever pallete value is at $3F00?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Aug 19, 2013 10:11 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need some help with the PPU</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Dartht33bagger wrote:</div><div class="quotecontent">If background rendering is turned off, does the ppu still go through the attribute/nametable/tile fetch and all that</div><br />Yes, so long as sprite rendering is turned on. If at least one of background rendering and sprite rendering is turned on, all the background processing still happens. The background pixels are just replaced with 0 before they hit the compositor (the part of the PPU where the pixels from the sprite unit and background unit are combined). In <a href="http://wiki.nesdev.com/w/images/e/ee/PPU_block_diagram.svg" class="postlink">my block diagram</a>, this replacement with 0 happens in the D-shaped AND gates just to the left of the compositor. This results in display of the color at $3F00 unless an opaque sprite is in the way.<br /><br />If <em>both</em> background and sprite rendering are turned off, the output is the color at $3F00, unless the VRAM address is in $3F00-$3FFF in which case the output is the color at the VRAM address.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dartht33bagger</b> [ Tue Aug 20, 2013 2:38 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need some help with the PPU</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />So I've spent about 8 hours debugging now and I'm kind of stuck.  I'm currently just trying to render the background before I move onto sprites, and everything looks like it *should* be working correctly in my code.  The screen shows a different story, though.  I'm using Donkey Kong as a test game and I'm getting black, orange and gray bars on the screen.  Does anyone have any idea why this is happening? I can't seem to pinpoint the issue since my cpu seems to be filling VRAM correctly, and my PPU is reading from valid addresses.

		
			<br clear="all" /><br />

			<table class="tablebg" width="100%" cellspacing="1">
			<tr>
				<td><b class="genmed">Attachments: </b></td>
			</tr>
			
				<tr>
					<td>
			<a href="./download/file.php?id=792&amp;mode=view"><img src="./download/file.php?id=792&amp;t=1" alt="Nesemu.png" /></a><br />
			<span class="gensmall">Nesemu.png [ 16.37 KiB | Viewed 279 times ]</span>
		

		<br />
	</td>
				</tr>
			
			</table>
		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>5</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>