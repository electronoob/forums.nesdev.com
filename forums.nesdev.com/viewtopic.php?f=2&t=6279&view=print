<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - C/C++ NES programming</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">C/C++ NES programming</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=6279">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=6279</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>yassergsNESDEV</b> [ Fri Apr 09, 2010 7:58 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>C/C++ NES programming</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Ok, Hello Every Body. I am /new on this NES gaming world. I have seen a couple of  assembler programming and it´s really troublesome, since  rogramming differs from 8080/80286/80386/80486 micro assembler programming. For me is more useful if I make it on C/C++. So do you know some tutorials about C nes programming I already got the cc65 compiler. But how I start drawing picture, sprites point and Shapes? Know my pourpose is make nes or snes games for emulators for PC or portables, like Dingoo or GP32 &lt;&lt; uff I´m a really long-tonged newbie, sorry for the boring chat&gt;&gt;

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Fri Apr 09, 2010 8:35 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Unfortunately the NES libraries included with cc65 don't work properly (unless they were fixed when I wasn't looking, I doubt it).
<br />
<br />I think it was a guy going by the name Petruza who was working on making some C libraries for NES.  It was a little while back, I'm not sure how that progressed.
<br />
<br />I don't think there is any example program written in C for NES that actually will work on an NES.. as far as I know.  There was a Tetris game written by Groepaz that was cross-platform (he wrote the old NES cc65 libraries), but it's probably not gonna work anymore on most emulators or the real system.  Of course the compiler works just fine, if you don't mind writing your own libraries and stuff.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Apr 09, 2010 8:55 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: C/C++ NES programming</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">yassergsNESDEV wrote:</div><div class="quotecontent">For me is more useful if I make it on C/C++. So do you know some tutorials about C nes programming I already got the cc65 compiler. But how I start drawing picture, sprites point and Shapes? Know my pourpose is make nes or snes games for emulators for PC or portables</div>
<br />If you want to code for machines that can run emulators, and you want to code in C, you could always try cutting out the middleman: write your game in C using SDL or Allegro.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Fri Apr 09, 2010 11:57 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I've been working on an couple of examples and a small library (replacement for the built-in CC65 one) for NES development with C.
<br />
<br />Based on my experience I think it's definitely possible to write reasonably complex games in C, but there's a lot of low-level stuff one must be aware of, like where variables are allocated and what C code will produce the fastest assembly code (CC65 isn't particularly good with optimizing). Also you still need to know all the nitty gritty NES hardware details.. you won't find any blit() functions here.
<br />
<br />The main example is a single direction scrolling SMB-like platformer engine with a simple music engine also written in C (just for fun). I think I'll add some basic enemy support and then it's ready to go.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Fri Apr 09, 2010 1:38 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I looked at cc65's code efficiency and concluded that it would be too much of a limitation for writing a game. You'd have to limit what you did, or write lots in assembly. I don't even think it's reasonable on the SNES. They did it on many of the Game Boy Color games, but the CPU ran significantly faster, and the games all ran at a sucky 30 FPS (Bionic Command, I'm looking at you).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Fri Apr 09, 2010 1:50 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">blargg wrote:</div><div class="quotecontent">You'd have to limit what you did, or write lots in assembly.</div>
<br />I'd think that goes without saying. It's never going to be as fast as assembly. Also the complexity in finding how to make the compiler emit reasonably fast code (and other quirks like that) kinda defeats the purpose of using C in the first case.
<br />
<br />But I think a game like Battle Kid would most likely be possible to be written in C (it'd make sense to have completely separate modules like the music engine written in assembly however). Would it be any less work than writing it in assembly... not so sure. But it's fun for sure. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Fri Apr 09, 2010 3:08 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />What is a bit annoying is that CC65 hardcore the ($xx),Y adressing mode whenever you acess to any local variable, where Y is the pointer in C variable stack.
<br />A good thing would be to limit the stack length to 256 bytes and use the $xxx,Y adressing instead but there is no option to do this.
<br />
<br />Yes the code will be slow, but you will greatly reduce the chances of having variable conflicts, something that happens all the time when you write in assembly and have no "local variables",  but numbered Temp and other generic varaibles. Even if you clearly indicate which ones are used/erased on the header of each routine, it's still hard not to mess up.
<br />
<br />I think it also depends on the kind of game you code. Usually in a standard game, a good part of CPU time is dedicated to write sprites to OAM. If this routine is written in assembly (it should), along with other routines which are called every frame, it is probably possible to have the core of the game written in C and have it run at fine speed.
<br />Slow code is an issue only if the code is executed regularly.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>GradualGames</b> [ Fri Apr 09, 2010 7:57 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />One thing that writing an NES game in C would lack is an easy way to step through your code as it runs. Unless there's a debugging emulator out there that can read debug output for C programs, you'd have to know 6502 anyway for debugging/stepping. I guess since C would be less error prone to bugs involving shared zp space (as per Bregalad's example) maybe this would be less of an issue, though. I'm so used to being able to step through code from working with C# and C++ professionally though I can't imagine working without it in my hobby.
<br />
<br />On the subjective side of things, I know for me I just wouldn't enjoy coding for the NES in pure C. It'd take away the sensation of being 100% in control that makes asm so much fun.
<br />
<br />@yassergsNESDEV: When you say troublesome and then mention the x86 processors, do you mean you're familiar with x86 assembly language and find 6502 to be alien by comparison...or?  Because I know for me, knowing a little bit of x86 really helped out when I learned 6502. Most of the "hard" things about assembly language are pretty much the same from processor to processor.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>byuu</b> [ Fri Apr 09, 2010 9:56 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />NES, no way. SNES, probably not. Targeting the SA-1 @ 10.74MHz could be doable.
<br />
<br />C isn't really appropriate for a processor with only a single accumulator. An intermediate between assembler and C should work well. The point would be:
<br />- function arguments
<br />- automatic variable location handling
<br />- less opcode mnemonics, more raw logic (inx; lda #$0100 -&gt; x++; a = 256)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>mic_</b> [ Sat Apr 10, 2010 3:11 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />There's an Arkanoid clone written in C that comes with the SNES_SDK (based on TCC). So it's doable for simple games on the SNES, but for more advanced stuff you'd have to write most of it in assembly.
<br />And looking at the code generated by TCC is enough to turn my stomach, even after it's gone though the included optimizer. It's just really, really bad. Can't say anything about CC65's code quality, though thefox mentioned that it's not very good either.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Sat Apr 10, 2010 3:25 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The 65816 includes various stack-relative modes, very obviously for languages like C where you have plenty of local variables. The stack pointer is 16 bits, so you don't have to do the things cc65 does on the 6502.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Sat Apr 10, 2010 3:25 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">What is a bit annoying is that CC65 hardcore the ($xx),Y adressing mode whenever you acess to any local variable, where Y is the pointer in C variable stack.<br />A good thing would be to limit the stack length to 256 bytes and use the $xxx,Y adressing instead but there is no option to do this.</div>
<br />Yeah it uses a software stack for local variables and function arguments so to get faster code one should use static local variables or global variables. There's a compiler switch (-Cl) that makes all local variables static which speeds up things a bit.
<br />
<br />EDIT: Also, it treats all variables as "volatile", so even if a variable already exists in a register it will always read it again from memory. For example:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">byte a = 1, b, c;<br />b = a;<br />c = a;<br /></div>
<br />Will read "a" twice from memory always. However, code like "b = c = a;" will read it only once.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ReaperSMS</b> [ Sat Apr 10, 2010 11:05 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />That's not so much treating everything as volatile, as not doing any CSE whatsoever.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Petruza</b> [ Thu May 13, 2010 8:02 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Memblers wrote:</div><div class="quotecontent">Unfortunately the NES libraries included with cc65 don't work properly (unless they were fixed when I wasn't looking, I doubt it).<br /><br />I think it was a guy going by the name Petruza who was working on making some C libraries for NES.  It was a little while back, I'm not sure how that progressed.<br /><br />I don't think there is any example program written in C for NES that actually will work on an NES.. as far as I know.  There was a Tetris game written by Groepaz that was cross-platform (he wrote the old NES cc65 libraries), but it's probably not gonna work anymore on most emulators or the real system.  Of course the compiler works just fine, if you don't mind writing your own libraries and stuff.</div>
<br />
<br />You're right, it didn't progress. Although I'd like to get back to it, I stoppped writing the lib in C, because I realized it would be better if it was coded in Assembler, but exported C functions to be used from C code, which was the original idea.
<br />
<br />Actually, there are at least two example programs written in C that work on a NES (Emulator), or did you mean the actual Hardware?
<br />Not sure about that, but it may.
<br />It's a sprite and scrolling demo and a working metronome.
<br />
<br />If the original poster is still interested, contact me by PM and I'll send you the sources.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Fri May 14, 2010 10:23 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'm not even gona lie, I think C is evil....especially when people debate what's better, C or assembly, which is too obvious ⌐.⌐  <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" />  <img src="./images/smilies/icon_rolleyes.gif" alt=":roll:" title="Rolling Eyes" />

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>