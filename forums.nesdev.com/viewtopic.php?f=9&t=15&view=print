<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Squeedo: The Flash Cart prototype</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Squeedo: The Flash Cart prototype</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=9&amp;t=15">http://forums.nesdev.com/viewtopic.php?f=9&amp;t=15</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>4</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Mon Sep 27, 2004 10:31 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Squeedo: The Flash Cart prototype</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Finally, after years of wanting to make something like this, I've just received the prototype boards of my own cart design.
<br />
<br />I have no idea if it works or not, still waiting on some components to arrive, but it sure looks cool.  Check it out:
<br /><a href="http://mywebpages.comcast.net/memblers/nespics/IM001757.JPG" class="postlink">http://mywebpages.comcast.net/memblers/nespics/IM001757.JPG</a>
<br /><a href="http://mywebpages.comcast.net/memblers/nespics/IM001758.JPG" class="postlink">http://mywebpages.comcast.net/memblers/nespics/IM001758.JPG</a>
<br /><a href="http://mywebpages.comcast.net/memblers/nespics/IM001759.JPG" class="postlink">http://mywebpages.comcast.net/memblers/nespics/IM001759.JPG</a>
<br />
<br />System specs:
<br />Up to 1 megabyte of EPROM, or 512kB of FlashROM (32kB pages).  1 million erase cycles on Flash.
<br />32kB of WRAM (8kB pages) optional
<br />32kB of VRAM (8kB pages), 4kB of which is used for all 4 nametables
<br />PIC microprocessor (can be 20Mhz or 40Mhz, any 40-pin one pretty much)
<br />minimum of 64 bytes EEPROM for non-volative storage (100,000 cycles).  Flash is of course another storage option.
<br />32 readable and writable 8-bit registers (function of which is totally configurable in the PIC firmware).  10,000 firmware update cycles.
<br />6 pin I/O port, 5+, GND, and 4 I/O lines.
<br />
<br />extra features:
<br />.047" board thickness, standard for NES
<br />gold-plated connectors
<br />
<br />What it doesn't do, is run copied games.  I suppose it might, but with the forced 4-screen nametables, probably not.  This cart is strictly for new designs.
<br />
<br />I hope this thing works, I'll definitely let everyone know when I find out.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Sep 27, 2004 4:20 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It appears you've chosen high-speed CMOS (74HC) rather than low-power Schottky (74LS) for your discrete logic parts.
<br />
<br />How much will this cost when populated with chips?
<br />
<br />And will it have a built-in flash programmer?
<br />
<br />And what about nametable switching, such as for status bars? I seem to remember some limitations of the four-screen layout for presenting a stable status bar without a scanline IRQ.
<br />
<br />Will Nintendulator and FCE Ultra be patched to play programs designed for this cart, or would emulation of the PIC eat up too much CPU time?
<br />
<br />Will it require cutting lockout chip pin 4?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Mon Sep 27, 2004 10:23 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yeah, I'm gonna try 74HC parts first.  It has pretty much every advantage that I know of over 74LS (especially availability).  But I'm using sockets for every IC on the prototypes, I can experiment with other chips easily.
<br />
<br />The chips and related components alone might cost maybe $20, more or less, bought in small quantity.  And that's using one of the cheaper PICs, could be another $5-$7 for a high-end one.  Then there's the board price, assembly (doing it myself), probably some other stuff I'm forgetting.  The price can be cheaper if I could make a whole fuckton of them, but with my budget it seems I have little choice but to plan on starting with a small quantity and see how that goes.  Not sure about the final price though, first things first, gotta make sure it works as planned.
<br />
<br />It should be able to program a Flash ROM.  A 29F040 chip is able to program itself, using standard bus read/write operations.  It sounds real easy in the datasheet.  So I'm counting on having the NES run it's code in RAM while it erases/writes the flash.  Theoretically, one could use a ZIF socket to hot-swap the chip to program a whole one.  I'm not sure about that though.
<br />
<br />The Flash chip uses 64kB sectors, so I'd have my little operating system sitting in one sector (and that one would be write-protected, so nothing dumb could ever happen to it by accident).  That would leave 448kB free for general use, 7 individual sectors.
<br />
<br />I hope the 4-screen nametables won't be a problem, I'd like to hear more about that from anyone who has much experience with this stuff.
<br />
<br />In the design there's a scanline counter, and CPU cycle counter.  They will both be able to generate IRQs.
<br />
<br />As for the emulator support, I guess that's up to emu authors if they want to deal with the PIC.  For some of the basic functions they could probably simulate it, but there's nothing to stop any developer from putting their own routines inside the PIC or even enabling code protection so the PIC can't be dumped (evil, heheh).
<br />
<br />It's a pretty decent little chip, every instruction (except branches, etc.) uses the equivalent of 4 6502 cycles.  Considering it runs at 20mhz (or 40mhz on the high-end models), that's quite a bit of processing.
<br />
<br />And the board has a place for a lockout chip (part # 6113) if you don't want to disable it (I'm not sure why anyone wouldn't want to, that's 4 less pins to worry about cleaning, heheh).  Whether or not I can get a significant amount of those chips is unknown currently.
<br />
<br />BTW, here's an extremely preliminary register list.  Lots of changes/additions are planned, but feel free to check it out.
<br /><a href="http://mywebpages.comcast.net/memblers/micromapper.txt" class="postlink">http://mywebpages.comcast.net/memblers/micromapper.txt</a>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Mon Sep 27, 2004 10:39 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />BTW, I forgot to mention how the cart receives data from a PC.  My serial adapter will hook up to the I/O port on the cart for that.  Or, it could use the controller port also (and just not be able to read controller data at the same time it communicates).
<br />
<br />So the serial adapter is another thing that has to be figured into the cart's cost, for development purposes at least.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>RoboNes</b> [ Tue Sep 28, 2004 2:34 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />looks good <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Drag</b> [ Tue Sep 28, 2004 1:53 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yeah, this pcb, and the features seem to be very good. The scanline counter and the clock cycle counter are GREAT ideas. <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />
<br />
<br />Hmm... you know, if you absolutely NEEDED to bypass the 4-screen, wouldn't you be able to just tie some A lines together, like on other carts?
<br />
<br />Also, a 1-screen mirroring controller (You know, one single nametable is used for all four ppu quadrants) would be nice, but it's not an absolute necessity.
<br />
<br />Otherwise, it looks like this cart would be a VERY good... (ugh I can't think of a noun) It'd be good for new developments. <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" /> But this kinda has an issue, would emulator developers be willing to program this cart mapper into their emulators? This is the same problem I had when I was talking about the NES mouse. (didn't know if emulator authors would be willing to program support for it in their emulators) They probably would, your cart is more usable. <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" />
<br />
<br />Edit: I need to scan posts more thoroughly for *links to documents that describe the registers*. <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Hyde</b> [ Tue Sep 28, 2004 2:42 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Drag wrote:</div><div class="quotecontent">But this kinda has an issue, would emulator developers be willing to program this cart mapper into their emulators?<br /></div>
<br />
<br />I am willing to do it,  as soon as Memblers releases an official memory map.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Tue Sep 28, 2004 5:40 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yeah, it should be possible to modify the cart somehow if 4 screens isn't suitable.
<br />
<br />For the emulator support, the only registers I'm sure about are the bankswitching ones in that doc.  All the other ones are still undetermined.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Wed Sep 29, 2004 4:42 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I received the components I was waiting for.
<br />
<br />The cart is working nicely so far, everything is installed on it currently except the PIC.  Looking good.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Thu Sep 30, 2004 12:11 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Woohoo, got the PIC running.  Serial port works, and I managed to light up my on-board LED.
<br />
<br />Now to test all the other I/O ports.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Fri Oct 01, 2004 1:30 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />BTW, anyone have a preference on the type of Flash memory to use?
<br />
<br />I can try AMD or Atmel style.
<br />
<br />AMD is the one I mentioned with 8 64kB-sized sectors and &gt;1,000,000 write cycles.
<br />
<br />Atmel makes one that has 2048 256-byte-sized sectors, but does &gt;10,000 write cycles and is a little more expensive.
<br />
<br />I'm gonna go with AMD's chip, unless there's a strong preference for smaller sector sizes.  32kB sectors would've been nice, but that's just not available.
<br />
<br />BTW, if you're not familiar with flash memory sectors (I'm not terribly familiar with it either), it seems to be like a sector on a disk drive, in that you can only erase and write whole sectors at a time, not just individual bytes.  The write cycles, I believe is the amount of times you can erase/reprogram each individual sector.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Oct 07, 2004 9:30 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Memblers wrote:</div><div class="quotecontent">Yeah, I'm gonna try 74HC parts first.  It has pretty much every advantage that I know of over 74LS (especially availability).</div><br />There's a difference between HC and HCT, which may affect compatibility with the TTL parts inside the NES. You might want to go with HCT eventually.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I hope the 4-screen nametables won't be a problem, I'd like to hear more about that from anyone who has much experience with this stuff.</div><br />At least Gauntlet II uses a nasty hack to deal with a status bar in a 4-screen mirroring setup, namely doing a variable split-screen to skip over the scanlines of the second nametable that contain the status bar.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">As for the emulator support, I guess that's up to emu authors if they want to deal with the PIC.  For some of the basic functions they could probably simulate it, but there's nothing to stop any developer from putting their own routines inside the PIC or even enabling code protection so the PIC can't be dumped (evil, heheh).</div><br />So if I wanted to do some testing on emulators, I'd have to build in compile-time options for a "common" mapper or your PIC based mapper, right? And dealing with a several-6502-cycle delay for mapper writes to take effect might be a pain as well, especially when trying to read data from several banks consecutively.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">And the board has a place for a lockout chip (part # 6113) if you don't want to disable it (I'm not sure why anyone wouldn't want to, that's 4 less pins to worry about cleaning, heheh).</div><br />Not every budding NES developer owns his NES console. Some use one bought by a parent and have no right to open the case. Some don't know how to cut out the middle of a flathead screwdriver to make it turn the proprietary screws that hold the NES case together.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">BTW, here's an extremely preliminary register list.  Lots of changes/additions are planned, but feel free to check it out.<br /><a href="http://mywebpages.comcast.net/memblers/micromapper.txt" class="postlink">http://mywebpages.comcast.net/memblers/micromapper.txt</a></div>
<br />32 KB bankswitching? That'd kill all DMC usage in music engines unless you want to duplicate all waveforms in all PRG banks. I'd almost rather use UNROM style hardwiring, even if it would require a PCB redesign.
<br />
<br />Is there another type of flash memory with sectors smaller than two PRG banks but with a decent number of erases per sector? (Single-level-cell memories have better life than multi-level-cell memories but are a bit more expensive for a given capacity. <a href="http://www.samsung.com/Products/Semiconductor/Flash/TechnicalInfo/Samsung_on_SLC_vs_MLC_flash_memory.htm" class="postlink">Samsung's SLC page</a> explains it in more detail.) If so, games could write to part of PRG flash to save a game state in the same way that FDS games and 8-bit home computer games wrote to the disk. Either that or make the EEPROM bigger than 64 bytes.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Fri Oct 08, 2004 4:10 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">There's a difference between HC and HCT, which may affect compatibility with the TTL parts inside the NES. You might want to go with HCT eventually.</div><br /><br />OK, I'll try them out next time I order some parts.  HC seems to work fine, testing with a toploader (it's probably uses TTL parts, I dunno for sure).<br /><br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">So if I wanted to do some testing on emulators, I'd have to build in compile-time options for a "common" mapper or your PIC based mapper, right? And dealing with a several-6502-cycle delay for mapper writes to take effect might be a pain as well, especially when trying to read data from several banks consecutively.<br /></div><br /><br />Well, other than for the debugging features, I wouldn't bother with emulators.  Especially if you want to use any special features of the cart.  Writing a game to support multiple mappers is cool, but sounds like it'd be kinda annoying when there's differences.<br /><br />I've lost source codes to some of my older programs, and don't want to mess with changing others, etc., so one thing I plan on doing in my loader is automatically modify mapper writes.  Won't be a problem.<br /><br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Not every budding NES developer owns his NES console. Some use one bought by a parent and have no right to open the case. Some don't know how to cut out the middle of a flathead screwdriver to make it turn the proprietary screws that hold the NES case together.<br /></div><br /><br />There are a lot of screws on an NES, but they're all standard, actually.  On every front-loader I've seen, at least.  But yeah, I can get all the needed lockout chips, even if I have to remove them from the carts in my own collection.  I'd have to charge a bit extra for that, because desoldering equipment is probably gonna cost me.  And getting chips for overseas regions.<br /><br />It's a pretty necessary chip if you want to run it on any NES, but if you use a Famicom or a top-loader it's not needed.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">32 KB bankswitching? That'd kill all DMC usage in music engines unless you want to duplicate all waveforms in all PRG banks. I'd almost rather use UNROM style hardwiring, even if it would require a PCB redesign.</div><br /><br />You can have a fixed 16kB bank at $C000, but the total ROM size would max out at 224kB (or 256kB w/o the BIOS).  My loader will handle it.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Is there another type of flash memory with sectors smaller than two PRG banks but with a decent number of erases per sector? (Single-level-cell memories have better life than multi-level-cell memories but are a bit more expensive for a given capacity. <br /></div><br /><br />Unfortunately, I think most of the good stuff is 3.3V and 1.6V.  All I've got available to me currently is the 29Fxxx series.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">If so, games could write to part of PRG flash to save a game state in the same way that FDS games and 8-bit home computer games wrote to the disk. Either that or make the EEPROM bigger than 64 bytes.</div>
<br />
<br />You can do this with the current flash, might be cumbersome with 64kB pages, but it would work.  The EEPROM is internal to the PIC, the high-end series has 256 bytes.
<br />
<br />I've got a lot of ideas about things to do with it, one thing is that if the cart is hooked up to a PC anyways, you should be able to store and load files from there within your program.  Like the Famicom disk system perhaps, but with gigabytes instead of kilobytes.  <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Tue Oct 19, 2004 4:34 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Status update.
<br />
<br />Scanline counter works.  Triggers about 3/4th of the way along (towards the right side) on my test program, this can be adjusted though.
<br />
<br />CPU cycle counter works.  It can be used simultaniously with the scanline IRQ too, works great.
<br />
<br />Haven't had a chance to write my inital test code to my flash chip yet (have no device programmer).  But I'm getting my code for it ready.  I'll have at least 2 routines available for programs to use if desired, erase_sector and program_byte.
<br />
<br />All the RAM works fine.  My BIOS checks it at startup.  Nametables work, they occupy the lowest 4kB of VRAM.
<br />
<br />Gonna work on the USART next.  See what kind of baud rate I can get with this thing.   <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /> 
<br />
<br />Haven't written any code for the PC-side stuff, yet.  Still learning (and re-learning) C so I can get started there.  I might implement it into ucon64, but I haven't been able to get it to build.  I seem to have bad luck with compilers.   <img src="./images/smilies/icon_confused.gif" alt=":?" title="Confused" /> 
<br />
<br />Board will need to be redesigned to fix some mechanical problem, possibly one minor electrical one too.
<br />
<br />Everything's going well, no problems at all so far.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Guest</b> [ Mon Dec 13, 2004 9:58 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Any new info?  More pics at least <img src="./images/smilies/icon_question.gif" alt=":?:" title="Question" />

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>4</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>