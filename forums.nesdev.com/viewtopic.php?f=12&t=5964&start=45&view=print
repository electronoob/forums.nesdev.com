<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - SuperFX GSU-1/GSU-2 pinout</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">SuperFX GSU-1/GSU-2 pinout</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=12&amp;t=5964">http://forums.nesdev.com/viewtopic.php?f=12&amp;t=5964</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>4</strong> of <strong>5</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>nocash</b> [ Tue Nov 27, 2012 3:15 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SuperFX GSU-1/GSU-2 pinout</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Actually, the newer notches are Nintendo's sinister plan to throw the competing Amiga 500 out of the market. You know: The player fiddling with a 3.5&quot; floppy disk and a snes cartridge, not expecting anything harmful, but then the disk gets into the notch, and - zack - the disk is broken. The older notch shape combined destroying 5.25&quot; disks and Atari cartridges.<br />If somebody is telling you that the square-edged notches would prevent SRAM corruption, don't trust that! The notches are what they are: Very evil cyber weapons.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>nocash</b> [ Sat Dec 01, 2012 9:41 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SuperFX GSU-1/GSU-2 pinout</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I've got two GSU cartridges (big thanks to Alexis). One Star Fox cartridge with black blobs, and LR0G1801 marking (this should be the oldest variant). And Doom with GSU2. VCR version code register returns 01h for the blob, and 04h for GSU2.<br /><br />The I/O mirrors for GSU2 are quite straight:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; 3000h..301Fh&nbsp; 20h&nbsp; &nbsp;R0-R15<br />&nbsp; 3020h..302Fh&nbsp; 10h&nbsp; &nbsp;mirror of 3030h..303Fh<br />&nbsp; 3030h..303Fh&nbsp; 10h&nbsp; &nbsp;status regs (unused or write-only ones return 00h)<br />&nbsp; 3040h..30FFh&nbsp; C0h&nbsp; &nbsp;mirrors of 3000h..303Fh<br />&nbsp; 3100h..32FFh&nbsp; 200h&nbsp; cache<br />&nbsp; 3300h..34FFh&nbsp; 200h&nbsp; mirrors of 3000h..303Fh<br />&nbsp; 3500h..3FFFh&nbsp; B00h&nbsp; open-bus<br /></div><br /><br />For the Blob, the mirroring is rather messy:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; 3000h..301Fh&nbsp; 20h&nbsp; R0-R15<br />&nbsp; 3020h..302Fh&nbsp; 10h&nbsp; open bus<br />&nbsp; 3030h..3031h&nbsp; 2&nbsp; &nbsp; status reg<br />&nbsp; 3032h..303Fh&nbsp; 0Eh&nbsp; mirrors of status reg (except 303Bh=01h=VCR)<br />&nbsp; 3040h..305Fh&nbsp; 20h&nbsp; mirror of R0-R15<br />&nbsp; 3060h..307Fh&nbsp; 20h&nbsp; mirrors of status reg (except 307Bh=01h=VCR)<br />&nbsp; 3080h..30FFh&nbsp; 80h&nbsp; open bus<br />&nbsp; 3100h..32FFh&nbsp; 200h cache<br />&nbsp; 3300h..332Fh&nbsp; 30h&nbsp; open bus<br />&nbsp; 3330h..333Fh&nbsp; 10h&nbsp; mirrors of status reg (except 333Bh=01h=VCR)<br />&nbsp; 3340h..335Fh&nbsp; 20h&nbsp; mirror of R0-R15<br />&nbsp; 3360h..337Fh&nbsp; 20h&nbsp; mirrors of status reg (except 337Bh=01h=VCR)<br />&nbsp; 3380h..33FFh&nbsp; 80h&nbsp; open bus<br />&nbsp; 3400h..342Fh&nbsp; 30h&nbsp; open bus<br />&nbsp; 3430h..343Fh&nbsp; 10h&nbsp; mirrors of status reg (except 343Bh=01h=VCR)<br />&nbsp; 3440h..345Fh&nbsp; 20h&nbsp; mirror of R0-R15<br />&nbsp; 3460h..347Fh&nbsp; 20h&nbsp; mirrors of status reg (except 347Bh=01h=VCR)<br />&nbsp; 3480h..3FFFh&nbsp; B80h open bus<br /></div><br /><br />The Speed Test results are:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">CFGR=80, CLSR=00&nbsp; GSU2&nbsp; &nbsp; Blob<br />&nbsp;NOP+CACHE&nbsp; &nbsp; &nbsp; &nbsp; 0006FB&nbsp; 00150F&nbsp; &nbsp; &nbsp; &nbsp; ;\<br />&nbsp;NOP&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 0014EC&nbsp; 00150F&nbsp; &nbsp; &nbsp; &nbsp; ; both slow<br />&nbsp;MUL+CACHE&nbsp; &nbsp; &nbsp; &nbsp; 001E39&nbsp; 001E6C&nbsp; &nbsp; &nbsp; &nbsp; ;<br />&nbsp;MUL&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 003C6D&nbsp; 001E6B&nbsp; &nbsp; &nbsp; &nbsp; ;/<br />CFGR=A0, CLSR=00<br />&nbsp;NOP+CACHE&nbsp; &nbsp; &nbsp; &nbsp; 0006FB&nbsp; 00150F&nbsp; &nbsp; &nbsp; &nbsp; ;\<br />&nbsp;NOP&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 0014EC&nbsp; 00150F&nbsp; &nbsp; &nbsp; &nbsp; ; fast multiply<br />&nbsp;MUL+CACHE&nbsp; &nbsp; &nbsp; &nbsp; 0014ED&nbsp; 001E6C&nbsp; &nbsp; &nbsp; &nbsp; ;<br />&nbsp;MUL&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 003321&nbsp; 001E6B&nbsp; &nbsp; &nbsp; &nbsp; ;/<br />CFGR=80, CLSR=01<br />&nbsp;NOP+CACHE&nbsp; &nbsp; &nbsp; &nbsp; 00037E&nbsp; 00118D&nbsp; &nbsp; &nbsp; &nbsp; ;\<br />&nbsp;NOP&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 00116F&nbsp; 00118D&nbsp; &nbsp; &nbsp; &nbsp; ; fast cpu clock<br />&nbsp;MUL+CACHE&nbsp; &nbsp; &nbsp; &nbsp; 000F1D&nbsp; 000F36&nbsp; &nbsp; &nbsp; &nbsp; ;<br />&nbsp;MUL&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 002AFF&nbsp; 000F36&nbsp; &nbsp; &nbsp; &nbsp; ;/<br />CFGR=A0, CLSR=01<br />&nbsp;NOP+CACHE&nbsp; &nbsp; &nbsp; &nbsp; 00037D&nbsp; 00118D&nbsp; &nbsp; &nbsp; &nbsp; ;\<br />&nbsp;NOP&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 00116F&nbsp; 00118D&nbsp; &nbsp; &nbsp; &nbsp; ; both fast (illegal)<br />&nbsp;MUL+CACHE&nbsp; &nbsp; &nbsp; &nbsp; 000A77&nbsp; 000F36&nbsp; &nbsp; &nbsp; &nbsp; ;<br />&nbsp;MUL&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 002659&nbsp; 000F36&nbsp; &nbsp; &nbsp; &nbsp; ;/<br /></div><br />The small differences like 14ECh vs 150Fh are caused by different clock inputs (GSU2=21.44MHz oscillator, Blob=21.2813700MHz/PAL Master Clock).<br /><br />GSU2 can have various different speeds, with slow/fast cpu or multiply clocks, the &quot;illegal both fast&quot; is also working (at least in so far the test runs extra-fast, but maybe the multply results are truncated or unstable, haven't tested that yet).<br /><br />The Blob can have slow/fast cpu clock (don't know if it's actually working/stable, or if it's really bugged), the Blob's multiply speed is always &quot;slow&quot;. And the Blob's cache... that doesn't work as expected... normally cache should loaded/enabled by &quot;cache&quot; opcode, and unloaded/disabled by writing GO=0 vis SNES I/O ports (this is working fine on GSU2), but the Blob is more or less ignoring it, the &quot;NOP&quot; test is always executed with cache OFF, and the &quot;MUL&quot; test always with cache ON. Don't know what is causing that effect, maybe the NOP test is somehow loading the cache, but without activating it until running the MUL test.<br /><br />Writing to the R0..R15 registers works as so:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">Writes to 3000h-301Eh (even addresses) do set LATCH=data.<br />Writes to 3001h-301Fh (odd addresses) do apply LSB=LATCH and MSB=data.<br /></div><br />Ie. for the even addresses, it doesn't matter if one writes to 3000h or 3002h .. or 301Eh.<br /><br />GSU2.pin106 is actually SRAM.A16 (on the Doom PCB, it's wired to SRAM.pin2).<br /><br />And, here's an updated version of the test program <div class="attachtitle">Attachment:</div><div class="attachcontent">
			<span class="genmed">
				<img src="./styles/subsilver2/imageset/icon_topic_attach.gif" width="14" height="18" alt="" title="" /> 
				<a href="./download/file.php?id=206">Gsu-test.zip</a> [9.73 KiB]
			</span><br />
			<span class="gensmall">Downloaded 36 times</span>
		

		<br />
	</div> it's fixing some bugs, and contains new &quot;General Tests&quot; which do verify the above mirroring/openbus schemes for the Blob and GSU2. One of them should always FAIL (depending on which GSU chip you don't have), the other one might pass OK (depending on which chip you do have).<br />Would be interesting if the SMD-MC1,GSU1, GSU1A, and GSU2-SP1 do also pass OK on one of the two mirroring schemes.<br />And of course the speed test would be also interesing on other chips, to find out when fast-multiply and normal-cache behaviour have been invented.<br /><br />Btw. the stuff about anti-eject has been rather nonsense: You could as well remove the cartridge shell instead of removing the lever (without opening the cartridge you wouldn't know what you are testing anyways). When using the plain cartridge PCB be sure to use the correct orientation:<br />SMD CHIPs should be facing to REAR side.  <br />BLOCK BLOBs should be facing to FRONT side.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>qwertymodo</b> [ Sat Dec 01, 2012 9:54 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SuperFX GSU-1/GSU-2 pinout</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The epoxy blob Star Fox carts are actually newer than the QFP ones.  They must've run out of the QFP chips and cheaped out on the next batch.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>byuu</b> [ Sat Dec 01, 2012 10:09 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SuperFX GSU-1/GSU-2 pinout</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Wow, some interesting stuff here after all.<br /><br />Always thought epoxy was the earliest version, and that the IO range was well known to be 3000-32ff.<br />Really weird that the mirroring doesn't repeat up to 37ff or 3fff. The address decoder logic must be pretty insane for what you're seeing.<br /><br />GSU2 as revision 4 is also fascinating. I figured there were three revisions between them: Mario Chip, GSU1, GSU2, with the -SP1 just being process revisions. Guess not. I better sequester all my SFX carts and check their versions.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>nocash</b> [ Sat Dec 01, 2012 10:47 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SuperFX GSU-1/GSU-2 pinout</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yup, the mapping is strange. Maybe it's some optimized trickery for best performance :-) although things like cache at 3100-32FF don't look too optimized, 3200-33FF would appear easier and faster. The used range is 3000h-34FFh (higher addresses up to 3FFFh are decoded and rejected, ie. open bus).<br />The blob's mapping is pretty odd, but should be correct as so (since the test proggy throws out &quot;OK&quot; for it). Ah, and the Blob is really allowing to read only two registers (2byte SFR, and 1byte VCR) in the 3030h-303Fh space. Of course at least some of the other registers (like PBR) do exist too, but they are write-only on the Blob.<br /><br /><div class="quotetitle">hyarion wrote:</div><div class="quotecontent">MARIO CHIP 1 <a href="http://www.snescentral.com/pcbboards.php?chip=SHVC-1C0N5S-01" class="postlink">9306</a>, <a href="http://www.snescentral.com/pcbboards.php?chip=SNSP-1C0N5S-01" class="postlink">9321</a> Starfox<br /></div><br />For the Blobs, my PCB is marked &quot;<span style="color: #FFBF00">9308 3</span>&quot;, and the pic at snescentral shows <a href="http://www.snescentral.com/pcbboards.php?chip=SHVC-1C0N" class="postlink">9304 7</a>. If that are Year-Week-(day?) datecodes then the Blobs have been produced alongsides with the SMD chips. That's odd. The PCB datecode isn't neccessarily same as the chip production date... maybe the &quot;blob&quot; chips have been produced earlier (like late 9250..9305 or so) and have been installed on PCBs at a time when the SMD chip production started.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>nocash</b> [ Sat Dec 01, 2012 11:27 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SuperFX GSU-1/GSU-2 pinout</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Some more details: When hitting a STOP opcode at address $+0, the GSU does apparently prefetch one more opcode byte at $+1 (but without executing it), and does then stop with R15=$+2 (after the unused/prefetched byte), SFR.GO=0 and SFR.IRQ=1 (the IRQ flag is always set on STOP, no matter if IRQ is enabled in CFGR).<br /><br />The 16bit SFR register is marked &quot;R/W&quot; in book2, but, actually, only bit1-5 are &quot;R/W&quot;. And the other bits are... don't know... either &quot;R&quot;... or maybe &quot;W&quot;. After a STOP opcode, bit0 and bit5-14 seem to be always zero.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>qwertymodo</b> [ Sun Dec 02, 2012 4:28 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SuperFX GSU-1/GSU-2 pinout</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If you're interested in the difference between the 2 versions of Star Fox, I just uploaded PCB pics: <a href="http://imgur.com/a/U0LXy" class="postlink">http://imgur.com/a/U0LXy</a>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>nocash</b> [ Mon Dec 03, 2012 9:06 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SuperFX GSU-1/GSU-2 pinout</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Nice and very detailed pics! Both versions are patched with a 1.2 ohm resistor (inserted in the master clock line). So far it looks to me as if both are &quot;the oldest version&quot;, ie. looks as if nintento has produced both Blob and SMD versions at the same time.<br />The later LR0G1807 (Blob) doesn't seem to have that resistor (or it's installed as normal SMD resistor instead of as patch). The later SHVC-1CON5S-02 (SMD) is still having the patch, confusing.<br /><br />The different Star Fox boards that I've spotted here and there are:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; Type&nbsp; Mario Chip&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Board&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ROM<br />&nbsp; Blob&nbsp; LR0G1801 9307 6&nbsp; &nbsp; SHVC-1CON (01)&nbsp; &nbsp;SNS-FO-0<br />&nbsp; Blob&nbsp; LR0G1807 9324 4&nbsp; &nbsp; noname&nbsp; &nbsp; (02)&nbsp; &nbsp;SNS-FO-2<br />&nbsp; SMD&nbsp; &nbsp;LR38173 9306 3D&nbsp; &nbsp; SHVC-1C0N5S-01&nbsp; &nbsp;SNS-FO-0<br />&nbsp; SMD&nbsp; &nbsp;LR38173 9309 5D&nbsp; &nbsp; SHVC-1C0N5S-02&nbsp; &nbsp;SHVC-FO-0<br />&nbsp; SMD&nbsp; &nbsp;LR38173 9321 1E&nbsp; &nbsp; SNSP-1C0N5S-01&nbsp; &nbsp;SFRG-FO-0 (PAL)<br />&nbsp; SMD&nbsp; &nbsp;LR38173 9415 7E&nbsp; &nbsp; GS 0871-102&nbsp; &nbsp; &nbsp; SHVC-FO-1 (SFC-Box multi-cart)<br /></div><br /><br />After the I/O maps, I've now also checked the overall memory maps (on SNES side):<br /><br /><strong>GSU Memory Map (at SNES Side)</strong><br />This is more or less as already known. The 8K at xx:6000h-xx:7FFFh is always mirroring to 700000h-701FFFh (no matter if the &quot;xx&quot; bank is 00h..3Fh or 80h..BFh).<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; 00-3F:3000-34FF&nbsp; GSU I/O Ports<br />&nbsp; 00-3F:6000-7FFF&nbsp; Mirror of 70:0000-1FFF (ie. FIRST 8K of Game Pak RAM)<br />&nbsp; 00-3F:8000-FFFF&nbsp; Game Pak ROM in LoRom mapping (2Mbyte max)<br />&nbsp; 40-5F:0000-FFFF&nbsp; Game Pak ROM in HiRom mapping (mirror of above 2Mbyte)<br />&nbsp; 70-71:0000-FFFF&nbsp; Game Pak RAM&nbsp; &nbsp; &nbsp; &nbsp;(128Kbyte max, usually 32K or 64K)<br />&nbsp; 78-79:0000-FFFF&nbsp; Additional &quot;Backup&quot; RAM&nbsp; (128Kbyte max, usually none)<br />&nbsp; 80-BF:3000-32FF&nbsp; Mirror of GSU I/O Ports<br />&nbsp; 80-BF:6000-7FFF&nbsp; Mirror of 70:0000-1FFF (ie. FIRST 8K of Game Pak RAM)<br />&nbsp; 80-BF:8000-FFFF&nbsp; Additional &quot;CPU&quot; ROM LoROM (2Mbyte max, usually none)<br />&nbsp; C0-FF:0000-FFFF&nbsp; Additional &quot;CPU&quot; ROM HiROM (4Mbyte max, usually none)<br />&nbsp; Other Addresses&nbsp; Open Bus<br /></div><br />The above &quot;Additional&quot; areas aren't installed on existing boards (=are seen as open bus). Maybe some of the unused pins on the GSU2 are chipselect signals for that areas.<br /><br /><strong>MC1/Blob Memory Map (at SNES Side)</strong><br />This is totally different as GSU2, but it's very simple. There is no HiROM support, and no 8K RAM mirror at 6000h-7FFFh, and no &quot;Additional&quot; areas.<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; 00-3F/80-BF:3000-34FF&nbsp; GSU I/O Ports<br />&nbsp; 00-1F/80-9F:8000-FFFF&nbsp; Game Pak ROM in LoRom mapping (1Mbyte max)<br />&nbsp; 60-7D/E0-FF:0000-FFFF&nbsp; Game Pak RAM with mirrors (64Kbyte max?, usually 32K)<br />&nbsp; Other Addresses&nbsp; &nbsp; &nbsp; &nbsp; Open Bus<br /></div><br />Additional &quot;Backup&quot; RAM can't be there since that area contains normal RAM, and Additional &quot;CPU&quot; ROM LoROM can't be there since that area constains normal LoROM, and Additional &quot;CPU&quot; ROM HiROM... well, that could be there since bank C0-DF are open bus, but I'd doubt that the Blob contains provisions for decoding that area.<br /><br />The test program contains a new test for checking the memory map, and a bug-fix for doing cartridge swaps - which didn't work properly in older version, although it seems to that nobody is running the test proggy anyways :-/  so, at least, the bug wasn't much of a problem :-)<br />Anyways, here's the updated version <div class="attachtitle">Attachment:</div><div class="attachcontent">
			<span class="genmed">
				<img src="./styles/subsilver2/imageset/icon_topic_attach.gif" width="14" height="18" alt="" title="" /> 
				<a href="./download/file.php?id=216">Gsu-test.zip</a> [12.55 KiB]
			</span><br />
			<span class="gensmall">Downloaded 33 times</span>
		

		<br />
	</div> - the new stuff in the &quot;general test&quot; section is quite slow (takes about 10 seconds before it shows the results, if you try it, please be patient).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>byuu</b> [ Mon Dec 03, 2012 10:50 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SuperFX GSU-1/GSU-2 pinout</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />nocash, the SuperFX maps differ significantly between each board. See my database for specifics.<br />I still need to add the new I/O stuff, my mapper skips probing 00-3f,80-bf:0000-5fff; because writing to I/O regs could affect other things.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>nocash</b> [ Mon Dec 03, 2012 1:02 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SuperFX GSU-1/GSU-2 pinout</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You already have those in the database, too? Good to know... <!-- m --><a class="postlink" href="http://byuu.org/snes/database/">http://byuu.org/snes/database/</a><!-- m --> okay, there are six &quot;type=1Cxx&quot; boards in there... MC1 mapping is same as what I've found out. And revision=2 means GSU1+GSU1A, right? The missing &quot;size=0x2000&quot; for Vortex is having no special meaning (or is that an important variant)? Then GSU1 mapping should be so:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; 00-3F/80-BF:3000-34FF&nbsp; GSU I/O Ports<br />&nbsp; 00-3F/80-BF:6000-7FFF&nbsp; Mirror of 70:0000-1FFF (ie. FIRST 8K of Game Pak RAM)<br />&nbsp; 00-3F/80-BF:8000-FFFF&nbsp; Game Pak ROM in LoRom mapping (1Mbyte max?)<br />&nbsp; 40-5F/C0-DF:0000-FFFF&nbsp; Game Pak ROM in HiRom mapping (1Mbyte max?)<br />&nbsp; 70-71/F0-F1:0000-FFFF&nbsp; Game Pak RAM with mirrors (64Kbyte max?, usually 32K)<br />&nbsp; 78-7x/F8-Fx:0000-FFFF&nbsp; Unknown (maybe Additional &quot;Backup&quot; RAM like GSU2)<br />&nbsp; Other Addresses&nbsp; &nbsp; &nbsp; &nbsp; Open Bus<br /></div>The &quot;Additional&quot; LoROM/HiROM can't exist here (as that areas contain normal LoROM/HiROM). Game Pak RAM is mapped to bank 70-71 only, which implies that bank 78-79 (or so) might be intended to contain &quot;Additional Backup RAM&quot; (as in GSU2).<br />The ROM/RAM mapping is a strange: Concerning pinouts, the GSU1 should support max 1Mbyte ROM and max 64Kbyte RAM. But according to the above memory map it does seem to support twice as much ROM and RAM internally (as implemented in GSU2).<br /><br /><div class="quotetitle">byuu wrote:</div><div class="quotecontent">my mapper skips probing 00-3f,80-bf:0000-5fff; because writing to I/O regs could affect other things.</div><br />Writing yes, but you couldn't you do normal Open Bus checks by reading? And throw out a warning if it isn't open bus. That way you would have discovered the GSU I/O mirrors at 3300h-34FFh, as well as whatever secret hardware contained in other cartridges.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>byuu</b> [ Mon Dec 03, 2012 11:10 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SuperFX GSU-1/GSU-2 pinout</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />&gt; And revision=2 means GSU1+GSU1A, right?<br /><br />Don't rely on revision= tags yet. I was basing them on chip names.<br />MARIO = 1, GSU1 = 2, GSU2 = 3. But you found it goes 1-4, so I need to retest all my SFX carts and read the version reg directly.<br /><br />&gt; The missing &quot;size=0x2000&quot; for Vortex is having no special meaning<br /><br />Good catch, looks like I missed that. Star Fox is an interesting board in that it only has the 70-71 RAM.<br /><br />&gt; as well as whatever secret hardware contained in other cartridges.<br /><br />Reading -can- interfere with hardware, unlikely but I figured why risk it? I would have to mask out the SNES internal I/O regs and WRAM still. And my ROM vs RAM test requires writing, so I could only flag it as &quot;not open bus&quot;, which isn't as nice.<br /><br />Anyway, it's not a big deal. The only boards with I/O regs in 0000-5fff are:<br />SuperFX, which you just found out about<br />SA-1 which as far as I know is 2200-23ff firm<br />SPC7110 which I just found out was a lot more interesting<br />SDD1 which we currently believe to be eight regs [needs to be tested though]<br />SGB which d4s documented mirrors to<br />SRTC which we believe to be two regs [needs to be tested though]<br /><br />If there were any mystery ICs on any boards, I would obviously have flagged them for later review. So we aren't missing any secret data there <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br />All the same, I'm not redumping 720 carts; but I'll add an open bus tester before I dump the 1400 Japanese carts (after getting them, of course.)<br /><br />...<br /><br />Something I don't understand, but maybe you do. Stunt Race FX is 1CA6B. Vortex is 1CA0N5S.<br /><br />Now traditionally, we know that:<br /><br />1CA = GSU1<br />6B = board has RAM, and uses non-MAD chips to switch between ROM and RAM<br />0N = board has no RAM and no MAD chip as a result<br />5S = SuperFX board with RAM<br /><br />So why does Stunt Race put the RAM size first, and Vortex put it after?<br />My crazy theory at the moment is that Stunt Race's RAM is only visible to the SNES CPU, and is on its bus directly. And Vortex's RAM is connected behind the SuperFX, so that it can be selected.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>nocash</b> [ Wed Dec 05, 2012 1:33 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SuperFX GSU-1/GSU-2 pinout</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />&gt; But you found it goes 1-4, so I need to retest all my SFX carts<br />How are chances that you could run my test proggy on them? I guess you do have hardware to run ROM-images... I guess you'll dislike the &quot;.bin&quot; extension :-) but you can rename it to &quot;.sfc&quot; or what you please. The &quot;wait_keyboard_input&quot; function executes at 4300h, so you can do cart swaps any time you want (unless during running tests; ie. when screen is all black).<br /><br />Here's an another update <div class="attachtitle">Attachment:</div><div class="attachcontent">
			<span class="genmed">
				<img src="./styles/subsilver2/imageset/icon_topic_attach.gif" width="14" height="18" alt="" title="" /> 
				<a href="./download/file.php?id=221">Gsu-test.zip</a> [13.05 KiB]
			</span><br />
			<span class="gensmall">Downloaded 31 times</span>
		

		<br />
	</div> it's now also checking the GSU1 memory map from your database. If I got it right, then the GSU1 map test should pass OK. For the I/O map test it'd be interesting they pass on GSU1, or that has different I/O map, which would need more research. Timing tests would be still interesting too (to me, at least). I think it'd be nice to know if the GSU1 did support fast multiply or not.<br /><br />And knowing the different VCR version codes would be neat, too (before somebody asks, yes, the test program can show them, too).  At the moment only two versions are known: 01 and 04. Quite possible that 02 and 03 do also exist, or maybe they don't exist. And maybe 05 exists, too.<br /><br />&gt; Reading -can- interfere with hardware, unlikely but I figured why risk it?<br />If you want to reduce risks: You could first read the normal memory areas, and then read the &quot;risky&quot; I/O areas. Of course, making test programs that handle all (im-)possible special cases may be a 10 years project :-)<br /><br />&gt; I could only flag it as &quot;not open bus&quot;, which isn't as nice.<br />In most carts stuff below address 6000h is open bus, so that test would be just perfect for such carts (to trap warnings on unexpected stuff).<br /><br />&gt; SGB which d4s documented mirrors to<br />SGB has mirrors below 6000h ???<br /><br />&gt; If there were any mystery ICs on any boards, I would obviously have flagged them for later review.<br />For the GBA, Nintendo has made cartridges with ROM.<br />Yeah, so what? The ROMs did have an on-chip 4bit parallel I/O port.<br />I'd rather doubt that SNES cartridges contain such hidden features, but you never now.<br /><br />&gt; Stunt Race FX is 1CA6B. Vortex is 1CA0N5S.<br />The main difference is the &quot;B&quot; for Battery (also so in Yoshi's Island). With the normal GSU-notation it should be something like &quot;0B6S&quot; or &quot;0N6B&quot;. Don't know why Nintendo have called it &quot;6B&quot; instead, must have been a &quot;mood of the day decision&quot;. The games do access RAM from GSU side, so it must be wired to the GSU as usually. I haven't checked, but you should also see the wiring on PCB photos. Else the thing would be pretty useless: without RAM it couldn't do any rendering/plotting, at it's best it could transform parameters passed through the R0..R14 registers.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>byuu</b> [ Fri Dec 07, 2012 2:15 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SuperFX GSU-1/GSU-2 pinout</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />&gt; How are chances that you could run my test proggy on them?<br /><br />Possibly, but very unlikely. I'm sorry but my setup is very unique.<br /><br />I run a script that assembles source written in bass, and uploads it into WRAM to execute. It then returns any data through the serial port. I don't even have my SNES connected to a video display at the moment.<br /><br />I don't have the ability to execute a normal program with a cart swapped in.<br /><br />I'll get back to you after I sequester all my SFX carts and test them.<br /><br />&gt; SGB has mirrors below 6000h ???<br /><br />No, just meaning its mirrors have been mapped out by d4s. They vary from SGB1 and SGB2.<br />People can't just leave hardware the fuck alone, I swear :P<br /><br />&gt; Don't know why Nintendo have called it &quot;6B&quot; instead, must have been a &quot;mood of the day decision&quot;.<br /><br />Ugh, that's annoying. But yeah, no PLOT would make SFX fairly pointless. So ... I guess it's just arbitrary then.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>magno</b> [ Sun Dec 09, 2012 5:15 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SuperFX GSU-1/GSU-2 pinout</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">hyarion wrote:</div><div class="quotecontent">I created a google doc survey that can be used to keep track of date codes and other chip information, that way it will be easier to maintain the list (and create statistic plots if enough data is gathered)<br /><br />So feel free to add new data at: <a href="https://docs.google.com/spreadsheet/viewform?formkey=dHYxRW1kd0tWLWlIRlVvdU0zSDJ4OUE6MQ#gid=0" class="postlink">https://docs.google.com/spreadsheet/viewform?formkey=dHYxRW1kd0tWLWlIRlVvdU0zSDJ4OUE6MQ#gid=0</a><br />and view the gathered data at: <a href="https://docs.google.com/spreadsheet/ccc?key=0Am_qc4idMT-1dHYxRW1kd0tWLWlIRlVvdU0zSDJ4OUE" class="postlink">https://docs.google.com/spreadsheet/ccc?key=0Am_qc4idMT-1dHYxRW1kd0tWLWlIRlVvdU0zSDJ4OUE</a></div><br /><br />I just added a lot of new SuperFX revisions to the database.<br /><br /><br /><div class="quotetitle">nocash wrote:</div><div class="quotecontent">&gt; But you found it goes 1-4, so I need to retest all my SFX carts<br />How are chances that you could run my test proggy on them? I guess you do have hardware to run ROM-images... I guess you'll dislike the &quot;.bin&quot; extension <img src="./images/smilies/icon_smile.gif" alt=":-)" title="Smile" /> but you can rename it to &quot;.sfc&quot; or what you please. The &quot;wait_keyboard_input&quot; function executes at 4300h, so you can do cart swaps any time you want (unless during running tests; ie. when screen is all black).<br /><br />Here's an another update <div class="attachtitle">Attachment:</div><div class="attachcontent"><!-- ia0 -->Gsu-test.zip<!-- ia0 --></div> it's now also checking the GSU1 memory map from your database. If I got it right, then the GSU1 map test should pass OK. For the I/O map test it'd be interesting they pass on GSU1, or that has different I/O map, which would need more research. Timing tests would be still interesting too (to me, at least). I think it'd be nice to know if the GSU1 did support fast multiply or not.<br /><br />And knowing the different VCR version codes would be neat, too (before somebody asks, yes, the test program can show them, too). At the moment only two versions are known: 01 and 04. Quite possible that 02 and 03 do also exist, or maybe they don't exist. And maybe 05 exists, too.<br /><br />&gt; Reading -can- interfere with hardware, unlikely but I figured why risk it?<br />If you want to reduce risks: You could first read the normal memory areas, and then read the &quot;risky&quot; I/O areas. Of course, making test programs that handle all (im-)possible special cases may be a 10 years project <img src="./images/smilies/icon_smile.gif" alt=":-)" title="Smile" /><br /><br />&gt; I could only flag it as &quot;not open bus&quot;, which isn't as nice.<br />In most carts stuff below address 6000h is open bus, so that test would be just perfect for such carts (to trap warnings on unexpected stuff).<br /><br />&gt; SGB which d4s documented mirrors to<br />SGB has mirrors below 6000h ???<br /><br />&gt; If there were any mystery ICs on any boards, I would obviously have flagged them for later review.<br />For the GBA, Nintendo has made cartridges with ROM.<br />Yeah, so what? The ROMs did have an on-chip 4bit parallel I/O port.<br />I'd rather doubt that SNES cartridges contain such hidden features, but you never now.<br /><br />&gt; Stunt Race FX is 1CA6B. Vortex is 1CA0N5S.<br />The main difference is the &quot;B&quot; for Battery (also so in Yoshi's Island). With the normal GSU-notation it should be something like &quot;0B6S&quot; or &quot;0N6B&quot;. Don't know why Nintendo have called it &quot;6B&quot; instead, must have been a &quot;mood of the day decision&quot;. The games do access RAM from GSU side, so it must be wired to the GSU as usually. I haven't checked, but you should also see the wiring on PCB photos. Else the thing would be pretty useless: without RAM it couldn't do any rendering/plotting, at it's best it could transform parameters passed through the R0..R14 registers.</div><br /><br />Just a silly question... how do you upload new code to the board to make such tests? Do you compile a program, burn it on an EPROM and then put that EPROM on the SuperFX board? I find it really hard, since no DIP adaptor can be soldered to the board.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>nocash</b> [ Sun Dec 09, 2012 6:41 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SuperFX GSU-1/GSU-2 pinout</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The .bin file is a ready-for-use ROM-image (the .a22/.inc source code files are included only for curiosity, you don't need them).<br /><br />There are dozens of ways how to start the ROM-image: Anything you have to run code on the SNES should work: Easiest way would be Flashcards/Copiers.<br />Other ways (more difficult/with soldering) would be my xboo cable, or yes, replacing the ROM on the GSU cartridge would work too, but isn't required.<br /><br />The program is executing in RAM, once when it is started you can eject the boot-cartridge, and replace it by the GSU cartridge. For doing such cartridge swaps: You'll need to get around the anti-eject lever mechanics, and as byuu has pointed out: you'll need to disable the CIC lock-out in the console (if you haven't done that already).<br /><br />---<br /><br />While doing a few more tests, I've spotted a hardware glitch on the MC1: Executing a STOP opcode shortly after a store-to-RAM opcode does somehow hang (GO flag isn't going to zero). Must be related to the write buffer. Maybe STOP is waiting for the write-buffer to become empty, and simultanously stopping write-operations (thereby preventing itself from completion).<br />GSU2 doesn't have that glitch. And on MC1, inserting two NOPs (or some other opcode with 2 or more memory cycles) between store and STOP is avoiding the problem; maybe there are cases where it needs more NOPs (depending on caching and current CPU speed, and on executing code in ROM or RAM).

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>4</strong> of <strong>5</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>