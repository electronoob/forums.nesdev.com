<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - CA65/LD65: putting common code in several banks</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">CA65/LD65: putting common code in several banks</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=6920">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=6920</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>neilbaldwin</b> [ Tue Aug 31, 2010 4:16 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>CA65/LD65: putting common code in several banks</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hoping someone has a suggestion on how to do this elegantly as I can't fathom it out.
<br />
<br />I want to split my editor over two 16k banks (MMC1) but there are some common routines and tables that need to be accessed whichever of the two PRG banks the editor is currently in.
<br />
<br />My idea was to duplicate these common elements in both editor banks at the same address so you can just call them from anywhere in the editor. Problem is, the labels end up being duplicated too and you get errors of course.
<br />
<br />However, I'm unsure about how to go about it. I was trying to mess around with .export and .import but I got myself in a lot of knots. I was hoping there'd be a simple way to do it in the memory configuration file for ld65.
<br />
<br />Any advice would be very welcome. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>mic_</b> [ Tue Aug 31, 2010 4:40 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If the code is location-independent you could compile it separately and incbin the resulting binary at all the places where you need it.
<br />
<br />Another solution would be to create macros of them (essentially making all local labels anonymous).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Tue Aug 31, 2010 4:49 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Compile and link it separately, and write out a map file. In your main program, incbin the result in its own SEGMENT. Write a native program (in C, Perl, Python, etc.) to translate the map file into a file that the main program can include.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Tue Aug 31, 2010 5:01 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I just tried this and it works well, assuming I'm understanding the question. First, assemble each segment separately, so that only the exported symbols can clash. Then just include the duplicated code in each segment but don't export its names. No incbin or anything. Full source (uses 16-byte segments to make it easy to see in hex editor): <a href="http://blargg.parodius.com/temp/ca65_segments.zip" class="postlink">ca65_segments.zip</a>
<br />
<br />I noticed Neil mentioned he wants the controller routines at the SAME addresses in each. To achieve this, include them at the beginning of the segments, so they always assemble the same in each.
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">; controller.s<br />&nbsp; &nbsp; read_joy:<br />&nbsp; &nbsp; &nbsp; &nbsp; ...<br />&nbsp; &nbsp; &nbsp; &nbsp; rts<br /><br />; common.s<br />&nbsp; &nbsp; .export table<br />&nbsp; &nbsp; <br />&nbsp; &nbsp; .segment &quot;COMMON&quot;<br />&nbsp; &nbsp; table:<br />&nbsp; &nbsp; &nbsp; &nbsp; ...<br /><br />; seg1.s<br />&nbsp; &nbsp; .export foo<br />&nbsp; &nbsp; .import table<br />&nbsp; &nbsp; <br />&nbsp; &nbsp; .segment &quot;SEG1&quot;<br />&nbsp; &nbsp; &nbsp; &nbsp; <br />&nbsp; &nbsp; &nbsp; &nbsp; .include &quot;controller.s&quot;<br />&nbsp; &nbsp; &nbsp; &nbsp; <br />&nbsp; &nbsp; foo:<br />&nbsp; &nbsp; &nbsp; &nbsp; ...<br />&nbsp; &nbsp; &nbsp; &nbsp; jsr read_joy<br />&nbsp; &nbsp; &nbsp; &nbsp; ...<br />&nbsp; &nbsp; &nbsp; &nbsp; lda table,x<br />&nbsp; &nbsp; &nbsp; &nbsp; ...<br />&nbsp; &nbsp; &nbsp; &nbsp; rts<br /><br />; seg2.s<br />&nbsp; &nbsp; .export bar<br />&nbsp; &nbsp; .import table<br />&nbsp; &nbsp; <br />&nbsp; &nbsp; .segment &quot;SEG2&quot;<br />&nbsp; &nbsp; &nbsp; &nbsp; <br />&nbsp; &nbsp; &nbsp; &nbsp; .include &quot;controller.s&quot;<br />&nbsp; &nbsp; &nbsp; &nbsp; <br />&nbsp; &nbsp; bar:<br />&nbsp; &nbsp; &nbsp; &nbsp; ...<br />&nbsp; &nbsp; &nbsp; &nbsp; jsr read_joy<br />&nbsp; &nbsp; &nbsp; &nbsp; ...<br />&nbsp; &nbsp; &nbsp; &nbsp; lda table,x<br />&nbsp; &nbsp; &nbsp; &nbsp; ...<br />&nbsp; &nbsp; &nbsp; &nbsp; rts<br /><br />; build<br />ca65 common.s<br />ca65 seg1.s<br />ca65 seg2.s<br />ld65 common.o seg1.o seg2.o</div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>neilbaldwin</b> [ Tue Aug 31, 2010 6:01 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thanks for the help and ideas.
<br />
<br />With blargg's example I managed to get the code building but have ran into another problem. All of my ZP/RAM vars are defined in one .h file and so I now need to .export everything so the other 'modules' can use the vars.
<br />
<br />The only option seems to be to .export every variable and then .import the definitions (or use the auto-import switch for ld65?) but as I've got about 600 variables defined, if there's a less labour-intestive way to avoid having to change the whole .h to to export everything, I'd really appreciate some info.
<br />
<br />Or could I turn the .h file into a 'library'?
<br />
<br /><img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>clueless</b> [ Tue Aug 31, 2010 6:27 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hello neilbaldwin,
<br />
<br />     I also use ca65 / ld65 for my nes game development.  While I don't have the same routine in multiple ROM banks at the same address, I do have fixed locations for all of my ZP (and non ZP) global variables.  (ps- I'm using a MMC1 based design).
<br />
<br />     I don't know if the source to my project would help you or not, but you (or anyone else) are free to look at it.  Of particular interest for this thread would be "src/kernel/globals.s" and "src/include/globals.inc".
<br />
<br />     <!-- m --><a class="postlink" href="https://svn.ecoligames.com/svn/nes-game/trunk">https://svn.ecoligames.com/svn/nes-game/trunk</a><!-- m -->

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Tue Aug 31, 2010 7:05 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">neilbaldwin wrote:</div><div class="quotecontent">All of my ZP/RAM vars are defined in one .h file and so I now need to .export everything so the other 'modules' can use the vars.</div><br />The typical pattern in C is to "define" the variables (reserve space for them) in a single .c file and "extern declare" them in a .h file that .c files include:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">/* stuff.h */<br />extern unsigned short foo;<br />extern unsigned char bar&#91;128&#93;;<br /><br />/* stuff.c */<br />#include &quot;stuff.h&quot;<br />unsigned short foo;<br />unsigned char bar&#91;128&#93;;<br /></div><br />This works in ca65 too, as the cc65 system has pretty much the same linkage model as C, apart from the difference between 1-byte and 2-byte pointers:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">; stuff.h<br />.globalzp foo<br />.global bar<br /><br />; stuff.s<br />.include &quot;stuff.h&quot;<br />.segment &quot;ZEROPAGE&quot;<br />foo: .res 2<br />.segment &quot;BSS&quot;<br />bar: .res 128<br /></div><br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">The only option seems to be to .export every variable and then .import the definitions (or use the auto-import switch for ld65?) but as I've got about 600 variables defined, if there's a less labour-intestive way to avoid having to change the whole .h to to export everything</div>
<br />If you know <a href="http://www.gnu.org/software/sed/" class="postlink">sed</a>, you can write a one-liner to extract a list of variables and prepend .global or .globalzp as needed. If you don't, you can do the same thing using the regular expression support built into Perl or Python.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>neilbaldwin</b> [ Tue Aug 31, 2010 12:29 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Groan....
<br />
<br />So, I've type ".export" at the front of all my variables and now I'm using the corresponding ".import" in another file to access them but I seem to be getting a lot of "range errors" e.g
<br />
<br />cpx #keyBufferEnd-keyBufferStart
<br />
<br />where keyBufferStart and keyBufferEnd are addresses in main RAM.
<br />
<br />I'm guessing the resulting arithmetic operation is returning a number that exceeds 8bits but how do I know and more importantly, how do I force it to be correct?
<br />
<br />Pllllllease don't tell me I've wasted about 3 hours today trying to make this work :S

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>clueless</b> [ Tue Aug 31, 2010 12:34 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">neilbaldwin wrote:</div><div class="quotecontent">Groan....<br /><br />Pllllllease don't tell me I've wasted about 3 hours today trying to make this work :S</div>
<br />
<br />No matter what solution you choose, you have not wasted 3 hours.  At best you've used 3 hours to solve your problem.  At worse you've used three hours to learn something <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Tue Aug 31, 2010 2:54 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Maybe you could try cpx #&lt;(keyBufferEnd-keyBufferStart) to force the lower 8 bits.  What a pain, though.
<br />
<br />edit - I think I remember doing something like this by putting the duplicated data inside a .scope, but with another label before it (outside the scope) to reference the thing.
<br />
<br />But I've done all sorts of weird things with LD65 to get around this sort of stuff, inserting the duplicate data is easy once everything is just anonymous binary data.  I think this can be done in the linker, you can make a segment and just output it to the file multiple times.  Segment sizes have to be adjusted manually, though.
<br />
<br />I didn't know that for a while with LD65 (I guess because 32kB was usually plenty), that having everything output to the same file will simply build up the entire file in the order you link it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>neilbaldwin</b> [ Tue Aug 31, 2010 3:34 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Memblers wrote:</div><div class="quotecontent">Maybe you could try cpx #&lt;(keyBufferEnd-keyBufferStart) to force the lower 8 bits.  What a pain, though.<br /><br />edit - I think I remember doing something like this by putting the duplicated data inside a .scope, but with another label before it (outside the scope) to reference the thing.<br /><br />But I've done all sorts of weird things with LD65 to get around this sort of stuff, inserting the duplicate data is easy once everything is just anonymous binary data.  I think this can be done in the linker, you can make a segment and just output it to the file multiple times.  Segment sizes have to be adjusted manually, though.<br /><br />I didn't know that for a while with LD65 (I guess because 32kB was usually plenty), that having everything output to the same file will simply build up the entire file in the order you link it.</div>
<br />
<br />Yeah, I fixed that cpx just like that. Horrible though.
<br />
<br />I managed to get the ROM to build but now it doesn't run (black screen).
<br />
<br />Something is wrong somewhere but jesus, it could be anything at this stage <img src="./images/smilies/icon_sad.gif" alt=":(" title="Sad" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ReaperSMS</b> [ Tue Aug 31, 2010 4:38 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I usually just used .global and .globalzp, rather than import/export.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Banshaku</b> [ Tue Aug 31, 2010 5:57 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Like mentioned above, every new trial will bring some experience in the end so I wouldn't see it as a waste of time.  If that was the case, I would be crying a lot over all the re-factoring I did recently <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" />
<br />
<br />But right now, the problem is maybe you changed too much thing without knowing the impact of that change. In assembler, this can sometime be lethal (I experienced it many time ;;^_^). My suggestion, although abstract, would be that you first roll back to a previous version that work and do the operation on a few variables that you know would have a visual impact right away if they're not working properly. During that phase, don't focus on the code sharing but on the variable sharing only, which seem to be the one causing issue. Once you figure out the cause, you can reproduce the same thing with another group of variable. You should do it gradually since maybe you did some miss (typo or something) and now you cannot figure out where it is.  Save every interim revision until the end, just in case something goes wrong during the process. 
<br />
<br />I had a few issue like that when converting the FT driver. I was doing it in one shot and couldn't figure out where did I miss.  Doing it gradually should help.
<br />
<br />It may not be the answer that you're looking for but maybe the process could help in the end figuring out what went wrong.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Tue Aug 31, 2010 8:16 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Here's a doc and example code I came up with that cleanly solves what I understand to be the problem: <a href="http://blargg.parodius.com/nes-code/ca65_duped_bank_data.zip" class="postlink">ca65_duped_bank_data.zip</a>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>neilbaldwin</b> [ Tue Aug 31, 2010 11:03 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It's always something stupid isn't it....
<br />
<br />In all the code reorganising I'd put the audio engine in the wrong bank so the CPU was executing garbage instead of initialising the APU <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />
<br />
<br />Well at least it seems to work now, even though my code now looks like a china shop in the wake of a visit by Mr Bull.
<br />
<br />Oh and blargg's last post is a really nice elegant solution so after all my .export/.import typing, I'm probably going to scrap it and do it his way.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>