<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Tile encoder/decoder</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Tile encoder/decoder</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=5860">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=5860</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>3</strong> of <strong>5</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Wed Dec 23, 2009 6:45 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">The bad thing about making all of this configurable would making things even slower.</div><br />Not if it's decided at compile time.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Have you looked into the frequency distribution of the block lengths? I guess I will when I get a chance.</div><br />Just a little bit out of curiosity, but I don't know if we can do anything useful with it.</div>
<br />Currently, you're encoding the length of each block as a unary number: the number of 0s plus the following 1 gives the length. But unary is optimal for only one distribution: the <a href="http://en.wikipedia.org/wiki/Geometric_distribution" class="postlink">geometric distribution</a> with p=1/2. For different values of p, different <a href="http://en.wikipedia.org/wiki/Golomb_coding" class="postlink">Golomb codes</a> become optimal. But if your distribution follows a <a href="http://en.wikipedia.org/wiki/Zipf%27s_law" class="postlink">power law</a>, the <a href="http://en.wikipedia.org/wiki/Universal_code_%28data_compression%29" class="postlink">universal codes</a> become optimal.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Wed Dec 23, 2009 7:28 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">Not if it's decided at compile time.</div><br />Could be, but it's easy to think of programs where both methods would be desirable. A programmer may want to load tiles while something is displayed on screen some times, or even during gameplay, but he will probably want tiles to load as quickly as possible when he's not displaying anything.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Currently, you're encoding the length of each block as a unary number: the number of 0s plus the following 1 gives the length.</div>
<br />I see what you mean. Depending on the lengths it might be better to use a constant number of bits (or a variable number of them that favors shorter lengths) to represent them.
<br />
<br />From what I've seen, blocks tend to be quite short (less than 5 or 6 tiles maybe), because the number of colors that follow each color grows pretty quickly with typical tiles, and there would be no advantage in using this format if all colors could be followed by 3 colors. There are a few exceptions, like when a long series of tiles use only 2 colors for example, in which case it's more compact to have a long block.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Wed Dec 23, 2009 10:47 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'm having more troubles with that 4th tile.  I'm guessing I'm still building the tables wrong:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">1110&nbsp; Mode&#91;3&#93;=3:1,0,2<br />1110&nbsp; Mode&#91;2&#93;=3:1,0,3<br />1111&nbsp; Mode&#91;1&#93;=3:3,0,2<br />1111&nbsp; Mode&#91;0&#93;=3:3,1,2<br />0 - New Row<br />11&nbsp; -- clr&#91;0&#93;=3<br />1&nbsp; -- clr&#91;1&#93;=3<br />1&nbsp; -- clr&#91;2&#93;=3<br />1&nbsp; -- clr&#91;3&#93;=3<br />1&nbsp; -- clr&#91;4&#93;=3<br />1&nbsp; -- clr&#91;5&#93;=3<br />01&nbsp; -- clr&#91;6&#93;=1<br />01&nbsp; -- clr&#91;7&#93;=3<br />__ ROW 0:&nbsp; 33333313<br /></div>
<br />
<br />The row should be 33333300 -- but I'm not seeing how that is supposed to happen.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Wed Dec 23, 2009 11:57 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Disch wrote:</div><div class="quotecontent"><div class="codetitle"><b>Code:</b></div><div class="codecontent">1110&nbsp; Mode&#91;3&#93;=3:1,0,2<br />1110&nbsp; Mode&#91;2&#93;=3:1,0,3<br />1111&nbsp; Mode&#91;1&#93;=3:3,0,2<br />1111&nbsp; Mode&#91;0&#93;=3:3,1,2<br />0 - New Row<br />11&nbsp; -- clr&#91;0&#93;=3<br />1&nbsp; -- clr&#91;1&#93;=3<br />1&nbsp; -- clr&#91;2&#93;=3<br />1&nbsp; -- clr&#91;3&#93;=3<br />1&nbsp; -- clr&#91;4&#93;=3<br />1&nbsp; -- clr&#91;5&#93;=3<br />01&nbsp; -- clr&#91;6&#93;=1<br />01&nbsp; -- clr&#91;7&#93;=3<br />__ ROW 0:&nbsp; 33333313<br /></div><br /><br />The row should be 33333300 -- but I'm not seeing how that is supposed to happen.</div>
<br />You interpreted the last few bits incorrectly. When row 6 starts, a 0 indicates it's not a repeat, so you need to read a new color. Since the previous color (3) can be followed by 3 others, the possible codes for the new pixel are 0, 10 or 11. After you read the 1, for some reason you stopped and picked the wrong color. You should have read another bit in order to know whether to use the second possibility (code 10) or the third (code 11).
<br />
<br />Since the next bit is 0, you have to use the second possibility, which is color 0 (Mode[3]=3:1,<strong>0</strong>,2). Then the next bit is one, indicating that you should repeat color 0, which results in 33333300.
<br />
<br />EDIT: Are you by any chance using the codes tepples mentioned in that other thread? I'm using different codes. Whenever there are 2 possibilities I use 0 and 1, and whenever there are 3 possibilities I use 0, 10 and 11.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Thu Dec 24, 2009 12:06 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yeah I was using tepples' thing as a reference.
<br />
<br />So lemme get this straight:
<br />
<br />1 = repeat clr
<br />00 = table B
<br />010 = table C
<br />011 = table D
<br />
<br />is that right??
<br />
<br />
<br />EDIT:
<br />
<br />success!  After that change it works.
<br />
<br />yay
<br />
<br />Now I can work on a compressor (even though I'm super late.  If only I had more than 2 hours a day to work on this).
<br />
<br />I am confident I'll be able to achieve optimal compression, though  ;D

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Thu Dec 24, 2009 12:10 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Correct.
<br />
<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I am confident I'll be able to achieve optimal compression, though ;D<br /></div>
<br />Good luck!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Thu Dec 24, 2009 10:55 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">OK, I'm considering modifying the decoder to work with rendering enabled or disabled, and the choice is left to the programmer. When decompressing with rendering enabled, the maximum number of tiles you want to decode per frame must be informed. Does that sound good?</div>
<br />
<br />That would be really cool, because there is nothing else available that does that.  Paired with double-buffering, that could allow for some interesting animation possibilities by freeing up room for many more frames.  Perhaps not in action games, but almost anywhere else.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sat Dec 26, 2009 10:06 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />There are 9 instances of ReadBit.  You could make it half a macro and half a subroutine to save a 12-cycle jsr/rts pair for 7 of the 8 bits in a compressed byte. For a 4 KiB segment compressed to 2500 bytes, this saves 7 frames at the cost of 36 bytes.  Given how much you're already saving over the original Codemasters code, this <em>might</em> be worth it.
<br />
<br />FROM the following:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">+ReadBit:<br /><br />&nbsp; &nbsp;;read a bit from the stream and return it in the carry flag<br />&nbsp; &nbsp;asl BitBuffer<br />&nbsp; &nbsp;bne +Return<br />+&nbsp; &nbsp;lda &#40;InputStream&#41;, y<br />&nbsp; &nbsp;iny<br />&nbsp; &nbsp;bne +<br />&nbsp; &nbsp;inc InputStream+1<br />+&nbsp; &nbsp;rol<br />&nbsp; &nbsp;sta BitBuffer<br /><br />+Return:<br /><br />&nbsp; &nbsp;;return<br />&nbsp; &nbsp;rts<br /></div><br />TO the following: (I'm not too familiar with asm6, so this is a sort of ca65/asm6 amalgamation)<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.macro ReadBit<br />&nbsp; &nbsp;.local Return<br />&nbsp; &nbsp;asl BitBuffer<br />&nbsp; &nbsp;bne +Return<br />&nbsp; &nbsp;jsr +ReadByte<br />+Return<br />.endmacro<br /><br />+ReadByte:<br />&nbsp; &nbsp;lda &#40;InputStream&#41;, y<br />&nbsp; &nbsp;iny<br />&nbsp; &nbsp;bne +<br />&nbsp; &nbsp;inc InputStream+1<br />+&nbsp; &nbsp;rol<br />&nbsp; &nbsp;sta BitBuffer<br />&nbsp; &nbsp;rts<br /></div>
<br />
<br />On several other forums I used to be active on (pocketheaven, gbadev), there was seldom a new library release thread without constructive criticism about its license. From readme.txt:
<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Feel free to use this in your projects if you'd like. You can also modify the compressor or the decompressor if you think you can improve them in any way. I just ask that you let me know if you make any improvements to these programs.</div>
<br />I take it that was supposed to be a request, much like the "giftware" license of the Allegro library. Or is it a requirement? It's OK if it's a requirement as long as one can fulfill it by just publishing the source code of the modified compressor or decompressor; in that case, it acts like a weak copyleft like the Classpath license, MPL, or LGPL.
<br />
<br />(License discussion continues in <a href="http://nesdev.com/bbs/viewtopic.php?t=5882" class="postlink">another topic</a>.)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sun Dec 27, 2009 8:00 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I wonder if Disch was able to make a better encoder than mine.
<br />
<br />Disch, are you planning on changing anything about the format or are you just gonna improve the block-finding logic?
<br />
<br />If anyone has any ideas for improvements to the format itself, it would be better if we decided on a final format right away, so that we can improve encoders and decoders without breaking compatibility with the format.
<br />
<br />I made few changes to the original format, because I knew they would for sure save some extra bits, but if anyone thinks more radical changes (such as specifying block lengths with something else than unary codes) would be improve the compression ratios, we should discuss them.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Sun Dec 27, 2009 11:21 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I've been unmotivated this weekend, so I didn't work much.
<br />
<br />I don't plan on changing the format, no.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tomaitheous</b> [ Mon Dec 28, 2009 2:03 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">But then LZ77 works a lot better on platforms that have random access to VRAM (like Game Boy with rendering off), a work RAM big enough to hold a fairly large history (like Game Boy with rendering on or Super NES), or both (like GBA or PC). Methods with a static dictionary (e.g. Huffman, word encoding) and methods with a small state (e.g. RLE, CMM) work better when you have to decompress directly to a parallel port.</div>
<br />
<br /> Actually, LZSS works just fine with port based destination when you setup the sliding window as a ring buffer. I do just this for PCE because the of the ram requirements of hucards (and even CD projects were it's all ram environment). I even have a decoder that will decode packed pixel to planar every so many bytes on the fly along with the ring buffer and port destination. 4bit packed pixel tiles compress much better than planar (composite planar like the snes), but not sure how much this applies to the NES planar format.
<br />
<br /> Pucrunch is what I use, with a smaller LZ window. The ring buffer is all handled on the decompressor side.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Dec 28, 2009 2:37 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tomaitheous wrote:</div><div class="quotecontent"><div class="quotetitle">tepples wrote:</div><div class="quotecontent">But then LZ77 works a lot better on platforms that have [...] a work RAM big enough to hold a fairly large history[/b] (like Game Boy with rendering on or Super NES)</div><br />Actually, LZSS works just fine with port based destination when you setup the sliding window as a ring buffer.</div><br />The ring buffer would have to sit in "a work RAM big enough to hold a fairly large history". The NES has 2 KiB, and one-fourth of that is already spoken for (VRAM transfer buffer and stack at $0100-$01FF, and OAM transfer buffer at $0200-$02FF). Or do LZ77-based codecs still provide good compression even with a 256-byte window?<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">4bit packed pixel tiles compress much better than planar (composite planar like the snes), but not sure how much this applies to the NES planar format.</div>
<br />Have you tried compressing 2-bit packed pixel tiles? That's what CMM does. Even on PCE and SNES, 2-bit tiles often show up in things like fonts.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tomaitheous</b> [ Mon Dec 28, 2009 7:13 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent"><div class="quotetitle">tomaitheous wrote:</div><div class="quotecontent"><div class="quotetitle">tepples wrote:</div><div class="quotecontent">But then LZ77 works a lot better on platforms that have [...] a work RAM big enough to hold a fairly large history[/b] (like Game Boy with rendering on or Super NES)</div><br />Actually, LZSS works just fine with port based destination when you setup the sliding window as a ring buffer.</div><br />The ring buffer would have to sit in "a work RAM big enough to hold a fairly large history". The NES has 2 KiB, and one-fourth of that is already spoken for (VRAM transfer buffer and stack at $0100-$01FF, and OAM transfer buffer at $0200-$02FF). Or do LZ77-based codecs still provide good compression even with a 256-byte window?</div><br /><br /> I found doing a 512 byte window with Pucrunch to be not much different in size that say 1024 or even 8k LZ window. But then again, Pucrunch is more than just LZSS. LZ77 is too inefficient. Or do you mean LZSS (which is a slight modification to LZ77)? But also, I doubt I would do a NES project that didn't use the extra ram @ $6000.<br /><br /><br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">4bit packed pixel tiles compress much better than planar (composite planar like the snes), but not sure how much this applies to the NES planar format.</div><br />Have you tried compressing 2-bit packed pixel tiles? That's what CMM does. Even on PCE and SNES, 2-bit tiles often show up in things like fonts.</div>
<br />
<br /> Haven't tried it yet. For font stuff, I tend to do VWF setups. So the font stays in rom until I need to decompress a letter (usually RLZ compression in native planar format) to send off to vram.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Tue Dec 29, 2009 5:01 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tomaitheous wrote:</div><div class="quotecontent">Or do you mean LZSS (which is a slight modification to LZ77)?</div>
<br />By "LZ77" I refer to the entire LZ77 family of codecs based on (start, length) references to history, including LZSS, LZO, Pucrunch, Deflate, and the like, not just the first proposal that strictly alternated matches and literal symbols. For example, the GBA and DS BIOS calls that decompress a format equivalent to LZSS have "LZ77" in the name. But if an LZSS format with a 512-byte history works, great.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sat Jan 02, 2010 12:33 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />BUMP: I finally got a chance to try this out.
<br />
<br />To get the program to work on Ubuntu Karmic, I needed to add this at the top:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">#include &lt;sys/stat.h&gt;<br />long filelength&#40;int fileno&#41; &#123;<br />&nbsp; struct stat st;<br />&nbsp; if &#40;fstat&#40;fileno, &amp;st&#41; &lt; 0&#41; return -1;<br />&nbsp; return st.st_size;<br />&#125;<br /></div><br />And there were still warnings:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">compress.c: In function ‘readTiles’:<br />compress.c:85: warning: ignoring return value of ‘fread’, declared with attribute warn_unused_result<br />compress.c: In function ‘adjustLengths’:<br />compress.c:414: warning: ‘bestLength0’ may be used uninitialized in this function<br />compress.c:414: warning: ‘bestLength1’ may be used uninitialized in this function<br /></div>
<br />"Please inform the source and destination files." isn't so clear. A help message more along the conventions of well-known developer tools would be "usage: compress INFILE.chr OUTFILE.cmm"
<br />
<br />But I did manage to compress the 8192 bytes of my current project's CHR to 5337 bytes to give me an idea of what I could expect.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>3</strong> of <strong>5</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>