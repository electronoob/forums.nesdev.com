<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - 4th to 5th generation biggest leap?</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">4th to 5th generation biggest leap?</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=5&amp;t=11136">http://forums.nesdev.com/viewtopic.php?f=5&amp;t=11136</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tomaitheous</b> [ Wed May 14, 2014 8:41 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 4th to 5th generation biggest leap?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If the SNES was the base definition of what the 4th generation is defined by, then I guess it would (PCE seeming middle generation). But wouldn't the Genesis be the basis for the 4th generation, at minimum? The SNES is pretty far ahead of the Genesis as well, in the graphical department. But even then, the SNES falls behind both, in some aspects.<br /><br />There are some areas where the SNES falls short:<br />SNES and PCE both have 64k of vram, but PCE is actually much more flexible in its layout; tiles and sprites can be located and pointed to, freely anywhere in vram (included the tilemap area) - same with Genesis. Even the SAT (equiv OBJ table) can be located anywhere in vram (not exactly the same on Genesis, but still relocatable). The SNES has twice the sprite table size as the PCE, but the PCE is capable of showing all its sprite sizes per frame (16x16,16x32,16x64,32x16,32x32,32x64) - same with Genesis. The VDC in the PCE also allows writes to vram during active display. Even if the cpu ran 3 times as fast as it is (and even with graphics/vram data embedded as opcodes; ST1/ST2), it sill couldn't saturate the open slots during active display - let alone vblank. The PCE VDC also has the most flexible frame definition. You can define multiple frames inside a single NTSC frame, including multiple 'vblank' as game code would see it, as well resolution per scanline (three different dot clocks to chose, scaline length defines, etc). You can switch the display into 2bit pixel mode for either sprite or BG, on a scanline basis as well. It's extremely flexible. And PCE 32 subpalettes vs 16 on SNES.  <br /><br /> The display of the PCE, is what I consider a true 4th generation setup. It does away with the hindrance of the 3rd generation quirks and limitations. All regs are buffered per scanline and can be written to safely without worrying about mid line update problems. Regs aren't shared, so updating them mid screen won't effect the video output. The ports are true 16bit (two separate address locations to the cpu; you don't write to the same port twice). It has a clean X/Y position update system per scanline (NES is convoluted for both X/Y, SMS has no Y updating at all) with buffered regs. You can turn sprites/BG layers on/off easily per 'VDC' scanline (you can have more than one VDC scanline displayed per NTSC scanline). It actually has a real h-sync interrupt system for doing full screen video effects. And you can even generate an hsync interrupts on every scanline, including the ones in vblank (which are whole lines). I've done this to drive a 15.7khz sample playback routine.<br /><br /> Minus the 2nd BG layer, the PCE and Megadrive are very close in capabilities IMO. Especially given the one year separation between the consoles. <br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"> No native sample playback (no reverb).</div><br /> The PCE? It has 6 DACs that are directly writable at any point, individually, and with mono volume as well as pan volume for each individual channel in this mode. The TIMER interrupt is specifically for this; sample playback as well note timing/tempo that isn't locked to vsync. Compared to the Genesis, which has 1 writable DAC and no volume control or any method of playing sample output other than brute force/timed code of the z80. <br /><br /> As far as the SNES display, I always considered it much closer to the 32bit generation. The rotation/scaling, transparency, huge master palette, number of BG layers, etc. The PCE and Megadrive are pretty close and set the definition of the 4th generation IMO. It's the snes that has the intergenerational aspects to it (although the weakest of the three processors, is a bit weird). A lot of SNES RPGs looks like PS1 2D RPGs to me.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Wed May 14, 2014 9:42 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 4th to 5th generation biggest leap?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tomaitheous wrote:</div><div class="quotecontent">It has 6 DACs that are directly writable at any point, individually, and with mono volume as well as pan volume for each individual channel in this mode.<br /></div>I thought I'd remembered reading ccovell had problems with getting pop-free updates for the waveforms...<br /><br />In any case, I was actually secretly trying to get someone who clearly knew his way around the PCE to do a more in-depth comparison. :}<br />Also trying to give you a better rationale than &quot;it's just a fast 6502&quot;.<br /><br /><div class="quotetitle">tomaitheous wrote:</div><div class="quotecontent">You can turn sprites/BG layers on/off easily per 'VDC' scanline (you can have more than one VDC scanline displayed per NTSC scanline)<br /></div>What does that mean? Left-and-right split screen?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tomaitheous</b> [ Wed May 14, 2014 11:01 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 4th to 5th generation biggest leap?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I thought I'd remembered reading ccovell had problems with getting pop-free updates for the waveforms...</div><br /><br /> Direct sample playback, you set the individual channel into DDA mode, which means all writes to the waveform ram pointer/port - go directly to the DAC itself (volume and pan still applies to it). There's no popping or such. What Ccovell is referring to, is updating waveform ram mid note - to get timbre changing effects (i.e. that's not sample playback, that's timbre bending). That's different. That click come from the waveform position not transitioning into the same point when you update it (i.e. you don't know the position of the waveform pointer. You can reset it or leave it at the current position, but you can't read back its position). Bloody Wolf does this to get the trumpet sounds and it's gritty as a result. It also does it to make the 'Yeaaahhh' voice sound. You can do per-note timbre changing though, without audible clicks. And you can corrupt waveform ram by writing to the waveform pointer of the channel, while it's playing to get timbre changes (it outputs to the DAC as well as overwrite the current byte in the channel's waveform buffer). Though that last one usually ends up sounding metallic like some strange thin FM instrument.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">What does that mean? Left-and-right split screen?</div><br />Sorta. There are two video chips in the PCE; VCE  (鉄観音 or TETSU), and VDC (7up). I kid you not, and the cpu name is Dr. Pepper. It's in the docs. Anyway, the VCE houses the color ram, builds the hsync/vsync NTSC framing signals, outputs Y/C and RGB, and sets the speed for the VDC (dot clock). The VDC is main video chip (sprites/tilemaps/etc), and handles main display and outputs pixels via digital pixel bus to the VCE chip. The VDC can generate the hsync/vsync timing signals, or it can run in subordinate mode where it waits for said signals (this the mode it is setup for on the PCE). Either way, you have to define the screen within the VDC settings. The VDC has no idea what speed it's running at (dot clock), so you need to define the width and height of the screen when changing the dot clock. Horizontal resolution is defined in 8 pixel segments; hsync pulse width, hblank lead in, active line, hblank tail end. Vertical resolution is defined in scanlines; vsync width, top blanking lines, active display, end blanking lines. In both hsync and vsync areas of the VDC, it waits for the VCE to deliver the sync signals (which is why you set the 'width' of sync areas in the VDC) and once they are received, it snaps to the next part of the video. If by chance the VDC doesn't receive these external signals in that window of time, it'll just continue on to the next phase. Also, regardless of what phase the VDC is in, if it receives an hsync signal from the VCE, it will end the current scanline and start prepping the next (active scanline or not). Same with vsync signal from the VCE. The VDC reloads the internal SAT registers, from vram, at the end of the 'VDC' display. So if you have multiple vertical VDC frames inside a VCE frame, each one will have its own SAT (sprite attribute table). The VDC actually generates the interrupts on the CPU side.  Anyway, so that's how you can get the PCE to show more than one scanline per NTSC scanline. All VDC regs are buffered; regs related to horizontal display settings are read once per scanline and all regs for vertical settings are read once per 'vdc' frame. If you set your VDC timings just right (no cpu intervention required), you can get the VDC to automatically skip either BG or sprite, or both, scanlines without drawing the scanlines. Basically scaling either the BG or Sprite plane down by 50% vertically. Weird stuff.<br /><br /> On a side note: The system doesn't officially support interlaced modes, but there's a way to manually do it. The VCE has a filter bit in the control register. This bit toggles whether phase alternation for every other scanline, should be inverted every other frame. When on, the VCE outputs a 263 scanline ouput. When off, it generates a 262 scanline output. By using a VDC interrupt on the right scanline (in vblank), you change the frame to 262/263. For SDTV CRTs, this creates a stable interlaced display. For some LCDs and newer HD sets, it confuses them.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu May 15, 2014 5:52 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 4th to 5th generation biggest leap?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tomaitheous wrote:</div><div class="quotecontent">A lot of SNES RPGs looks like PS1 2D RPGs to me.</div><br />I wonder if that's why Sony Computer Entertainment America initially banned 2D games on the PlayStation, as an attempt to distinguish games for its console from games for the previous generation console from the company with which Sony had recently broken up. Notice that even Capcom had to make <em>Mega Man Legends</em> on PS1 before it was allowed to make <em>Mega Man 8</em> and <em>Mega Man X4</em>.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tomaitheous</b> [ Thu May 15, 2014 4:36 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 4th to 5th generation biggest leap?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I wouldn't doubt it. I couldn't remember the date for when the MMX games came out for the PS. I hadn't realized that MML had come out first.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>psycopathicteen</b> [ Fri May 16, 2014 8:26 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 4th to 5th generation biggest leap?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Doesn't the PCE have a limitation where the sprite line buffer is only 256 pixels long, or is it just 256 pixels before flickering?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tomaitheous</b> [ Mon May 19, 2014 8:30 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 4th to 5th generation biggest leap?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Wouldn't that be the same difference? It's 256 sprite pixels per VDC 'scanline', but in practical terms - yes, 256 pixels per scanline regardless of the resolution. And like other SNES and Genesis, horizontal off screen sprite pixels on the same scanline also factor into this. Sprites coords range 1024 pixels for X and 1024 pixels for Y.<br /><br /> That's one of the strengths of the SGX over the PCE; not just a second BG layer and 128k of vram, but twice the sprite pixel bandwidth means 512 sprite scanline pixels for 512x240 resolution mode. That, and 344x240 mode is more practical too.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>