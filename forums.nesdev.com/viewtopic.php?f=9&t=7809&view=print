<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Idea of High-Capacity Mapper</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Idea of High-Capacity Mapper</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=9&amp;t=7809">http://forums.nesdev.com/viewtopic.php?f=9&amp;t=7809</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>qbradq</b> [ Wed Jun 01, 2011 2:31 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Idea of High-Capacity Mapper</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hey all! It's time again for QBRADQ's mapper discussion of the week. Hurray!
<br />
<br />I've had an idea for some cartridge hardware that would be:
<br />
<br /><ol style="list-style-type: decimal"><li>Built from discrete logic</li><li>Include 32KB of PRG-RAM</li><li>Include 8KB of CHR-RAM</li><li>Support up to 16MB of data</li><li>Support up to 16MB of saved data without requiring a battery</li><li>Self-programmable</li></ol><br />So the general idea is that I would have an 8KB ROM at $E000-$FFFF that would serve as a kind of boot ROM, containing common code (like CPU / RAM / Mapper init), mapper interface routines and initial program code loading. I could also put in some sort of "load from a controler-to-usb cable" mode in there too.<br /><br />Then I would have 32KB of RAM mapped to $6000-$DFFF. This can be used for loading executable code and for general-purpose RAM.<br /><br />Finally a serial FLASH ROM would be accessed through a register in the $5000-$5FFF range. Mapper interface routines provided in the ROM will copy arbitrary amounts of data from ROM to RAM, and will be able to copy 256-byte pages from RAM to ROM.<br /><br />Other functions could be bolted on by adding some registers, such as name table mirroring select or bankable PRG / CHR RAM.<br /><br />The Pros:<br /><ol style="list-style-type: decimal"><li>Lots of RAM available</li><li>Reliable (and huge) save storage</li><li>Huge data access</li><li>No need to split data into banks, it's one continuous address space</li><li>Ability to load program code through controller port, no programmer required</li></ol><br />The Cons:<br /><ol style="list-style-type: decimal"><li>Very slow to load from ROM to RAM (compared to banking in a ROM page)</li><li>Must be able to fit all required data and code into 32KB.</li><li>This could be the birth of the NES loading screen <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" /></li></ol>
<br />
<br />This hardware would seem to be a good fit for my current programing approach. I basically load all of the data I need for a given level (including sprite defs, tile set info, etc) into WRAM using routines in the fixed bank, then swap game mode specific code into the low bank.
<br />
<br />What are ya'lls thoughts on this?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Wed Jun 01, 2011 2:36 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Sounds extremely similar to the Famicom Disk System to me.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Wed Jun 01, 2011 2:53 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Idea of High-Capacity Mapper</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">qbradq wrote:</div><div class="quotecontent"><ul><li>Support up to 16MB of data</li><li>Support up to 16MB of saved data without requiring a battery</li></ul></div>And use compactflash for that, because it'll be cheaper than large 5V NAND EEPROMs. And that sounds awfully like a powerpak.
<br />
<br />Don't get me wrong, it still sounds useful, but you should see these brainstormed mappers as the end themselves, rather than the means.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Banshaku</b> [ Wed Jun 01, 2011 4:13 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Idea of High-Capacity Mapper</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">qbradq wrote:</div><div class="quotecontent">Hey all! It's time again for QBRADQ's mapper discussion of the week. Hurray!</div>
<br />
<br />Basically you're becoming a nesdev "regular". lol <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>qbradq</b> [ Wed Jun 01, 2011 4:43 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Mappers are just so fun to talk about. I don't know what it is <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />
<br />
<br />I had never read much about the FDS. This is very similar. I suppose it's a solid-state FDS <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />
<br />
<br />Lidnariq,
<br />
<br />I am not quite sure I understood your comments. I was thinking of using Flash ROMs, not EEPROMs. You can get a 1MB serial Flash ROM for $1.61 USD at Mouser. An 8MB chip is $3.71, and a 16MB chip is $7.18. I seriously doubt anyone will find a use for 16MB on an NES project, unless it's a UNROM pirate cart <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Wed Jun 01, 2011 5:58 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />And I can find a 2000 MB serial flash for $1. Google keywords: <strong>2gb microsd</strong>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>qbradq</b> [ Wed Jun 01, 2011 6:37 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />That's an interesting thought. Data loading would be even slower when having to deal with the SD SPI interface and a FAT32 or FAT16 file system, but you could have a single cart that would be compatible with multiple games. The games could be distributed as a collection of files and placed on the SD card.
<br />
<br />The only down side is that you'd basically have to use the "load entire file to this address" methodology used on the FDS. Using a serial Flash ROM you can do byte-by-byte access much easier.
<br />
<br />All very interesting thoughts. I'll keep all this in mind if my project breaks that 512KB mark <img src="./images/smilies/icon_rolleyes.gif" alt=":roll:" title="Rolling Eyes" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>MottZilla</b> [ Wed Jun 01, 2011 8:36 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I really think you'd want more than 32KB of usable PRG. Banking is very helpful. Sure great games were made on the FDS. But why set such strange limits? Again with CHR, why limit yourself so much if you are designing something new? 
<br />
<br />Maybe if you had a way to design this and keeping it simple and cheap was an issue it would make sense then. If you need more than 512KB PRG-ROM, use MMC1. There are plenty of CHR bits to hijack to get more 256KB Pages.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Wed Jun 01, 2011 9:03 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I agree with MottZilla that having more PRG RAM than FDS has benefits. But do we need 256 KiB like the TGCD's Super System Card, or can we get away with half that?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>MottZilla</b> [ Wed Jun 01, 2011 10:05 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I think 128KB of bankable memory would be enough for NES if you mean a system with mass storage to load the 128KB of PRG-RAM. If you are going to do that though I'd recommend having 32kb (or more) of CHR-RAM with bank switching so you can get the benefits of quick CHR banking.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Wed Jun 01, 2011 10:19 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I like the serial memory idea, it's what I've wanted to go with on Squeedo rev3 when I do it (both serial dataflash and micro SD).  My plan, if/when the memory controller works, would copy the data off it nearly instantly (the dataflash would be faster and non-removable, which is why there would be both types).
<br />
<br />With the NES using it directly, I wonder if there would be much of a speed penalty with using micro SD compared to other serial flash.  Technically, you don't have to use FAT16/FAT32, if it helped any you could use your own custom formatting/filesystem (then have a PC program or something to make disk images and add/remove files).
<br />
<br />I definitely agree that 32kB is too small, 128kB SRAM doesn't cost much more and would be a lot more useful.  32kB for CHR seems like enough.
<br />
<br />BTW, the sound synth I'm working on (to use NES expansion port/controller port/FC exp port) is also supposed to include a large serial memory.  Cool thing with that is that multiple games should be able to use it, for saving or for loading.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Wed Jun 01, 2011 11:14 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">qbradq wrote:</div><div class="quotecontent">Lidnariq,<br /><br />I am not quite sure I understood your comments. I was thinking of using Flash ROMs, not EEPROMs. You can get a 1MB serial Flash ROM for $1.61 USD at Mouser. An 8MB chip is $3.71, and a 16MB chip is $7.18. I seriously doubt anyone will find a use for 16MB on an NES project, unless it's a UNROM pirate cart :D</div>AFAIK, flash ROMs are NOR EEPROMs... The pricing I saw on digikey was pretty awful -- ~$10 for a 8MB one. That said, I don't see a 5V-compatible flash rom on mouser for a sane price...
<br />
<br />Using something like compactflash (or any other parallel-bus flash) has the advantage that cpu-based reading isn't even slower. The big advantage to using something like CF (or SD or whatever) is that you can copy larger content using a card reader. (The downside is you now have to reimplement FAT)
<br />
<br />
<br />Tangenting, I've recently had this silly idea of adding a CDROM drive to the expansion port of the NES, much like the PC-Engine's CDROM. Same problem, same approximately-FDS, but with streaming audio from disk.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>infiniteneslives</b> [ Wed Jun 01, 2011 11:48 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You could solve a lot of the SD card formatting issues if you just had a simple microcontroller interfacing between the NES and SD card.  
<br />
<br />You'd just need to setup a way to ask the uC for specific data and it could retrieve it at high speed and provide a full byte per clock cycle to the NES through a register.  It could be similar for writing to the SD card kind of like what I'm trying to do with my project.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>qbradq</b> [ Thu Jun 02, 2011 5:28 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I had thought about using an MCU with a latch for data I/O, but it would still require all of the decoding logic and whatnot. It's not like I'm actually going to build this thing anyway <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />
<br />
<br />As for the 5V-compatible Flash ROM, I was not going to use 5V Flash. I was going to use 3.6V Flash and interface it with a 5V-compatible 3.3V latch. A latch is needed anyway, and this provides logic level translation. You can't beat that <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>MottZilla</b> [ Thu Jun 02, 2011 9:02 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">lidnariq wrote:</div><div class="quotecontent">Tangenting, I've recently had this silly idea of adding a CDROM drive to the expansion port of the NES, much like the PC-Engine's CDROM. Same problem, same approximately-FDS, but with streaming audio from disk.</div>
<br />
<br />You know if you want a "NES" like platform with the benefits of CDROM the answer IS the PC-Engine. It was designed with getting Famicom developers on board afterall with its similar CPU and likely other aspects of design. 
<br />
<br />All these ideas are fun to come up with but the more practical thing to do if you need more space for your NES game is my earlier suggestion. Take the MMC1 SUROM to the next level. Reuse more CHR bits to control a bigger PRG-ROM. There are 5 CHR bits that aren't needed at all if you are using CHR-RAM. So that should give you 32 different 256KB Pages of ROM you could control giving you 8 Megabytes of ROM. I highly doubt you need this much space for any such NES game. Or you could make more of an extension of SXROM so that you could have 32kb of bankable PRG-RAM but also 2 megabytes of PRG-ROM.
<br />
<br />All this can be done without creating any new mapper, just by rewiring an existing one of which is available new from RetroUSB. You could even try getting BunnyBoy to make a MMC1 PCB that is already capable of being wired this way for more PRG capacity.
<br />
<br />And again, I highly doubt you need 8 Megabytes of PRG-ROM. So this solution should work for you.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>