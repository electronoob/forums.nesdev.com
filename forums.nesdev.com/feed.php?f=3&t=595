<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=3&amp;t=595" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2005-09-25T13:59:37-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=3&amp;t=595</id>
<entry>
<author><name><![CDATA[Kinopio]]></name></author>
<updated>2005-09-25T13:59:37-07:00</updated>
<published>2005-09-25T13:59:37-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=595&amp;p=4908#p4908</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=595&amp;p=4908#p4908"/>
<title type="html"><![CDATA[PPU clarifications]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=595&amp;p=4908#p4908"><![CDATA[
Thanks for all the help guys. <br />That really made some things<br />clearer for me.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=109">Kinopio</a> — Sun Sep 25, 2005 1:59 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2005-09-24T18:22:11-07:00</updated>
<published>2005-09-24T18:22:11-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=595&amp;p=4860#p4860</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=595&amp;p=4860#p4860"/>
<title type="html"><![CDATA[PPU clarifications]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=595&amp;p=4860#p4860"><![CDATA[
As Disch said. The thing I want to find out is when the NMI takes effect when asserted at various times in an instruction. I imagine that even if it was just asserted at the beginning of the first clock of an instruction, it still wouldn't take effect until after that instruction completed (hmmm, I guess first clock of an instruction is kind of vague on a pipelined processor).<br /><br />Handling this in a PPU emulator is simple enough; in the $2002 read handler, set the VBL flag if the CPU time has gone over the current frame length. Oh, and of course skip setting the flag (but still generate the NMI?) if the CPU reads just as it's being set, whenever exactly that is. I need to devise a way to synchronize some code exactly with the VBL timing, then find out exact timing of this (along with a test ROM, since it's tricky to be sure it's emulated exactly).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Sat Sep 24, 2005 6:22 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2005-09-24T16:33:53-07:00</updated>
<published>2005-09-24T16:33:53-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=595&amp;p=4859#p4859</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=595&amp;p=4859#p4859"/>
<title type="html"><![CDATA[Re: PPU clarifications]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=595&amp;p=4859#p4859"><![CDATA[
I see... like the VBlank flag could be raised in the middle of an "LDA $2002" instruction ... but the NMI won't happen until after the instruction completes... right?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Sat Sep 24, 2005 4:33 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Quietust]]></name></author>
<updated>2005-09-24T16:25:33-07:00</updated>
<published>2005-09-24T16:25:33-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=595&amp;p=4858#p4858</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=595&amp;p=4858#p4858"/>
<title type="html"><![CDATA[Re: PPU clarifications]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=595&amp;p=4858#p4858"><![CDATA[
<div class="quotetitle">Disch wrote:</div><div class="quotecontent"><br />NMI is triggered AFTER VBlank is raised... there is some latency between the two.  I don't know how much latency exactly, but running 1 CPU instruction between the time $2002.7 is raised and when NMI is triggered works nicely.<br /></div><br /><br />Actually, there is no latency at all on the real hardware, but you will need SOME latency if you do not emulate the CPU and PPU completely synchronously with each other (cycle for cycle).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7">Quietust</a> — Sat Sep 24, 2005 4:25 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2005-09-24T14:58:54-07:00</updated>
<published>2005-09-24T14:58:54-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=595&amp;p=4857#p4857</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=595&amp;p=4857#p4857"/>
<title type="html"><![CDATA[Re: PPU clarifications]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=595&amp;p=4857#p4857"><![CDATA[
1)<br /><br />If either one of the bits is on... the PPU is active and rendering pixels normally throughout the frame.  If D3 is off, every background pixel will be transparent (so the background will not be visible), and if D4 is off, every sprite pixel will be transparent (so sprites will not be visible).<br /><br />If BOTH bits are off, the PPU is "turned off" and becomes inactive during frame rendering time.  When the PPU is off, it will not change Loopy_V at all like it normally would if it was switched on.  Games will switch off the PPU for large drawing routines... when all the drawing can't be done in VBlank.  For frames which the PPU is switched off... you render pixels based on palette entry 0 (ppu$3F00).. UNLESS the PPU address (Loopy_V) is pointing to a place in palette mem ($3Fxx or any mirrored region) -- in which case you render the color the PPU address points to (many Camerica games rely on this to quickly change the background color -- most notably Micro Machines and Bee 52)<br /><br /><br />2)<br /><br />VBlank flag is set at the very start of the first scanline of VBlank.  For a visual example... one frame consists of the following:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">-----------<br />20 scanlines of vblank<br /><br />-----------<br />pre-render scanline<br />-----------<br /><br /><br />240 rendered scanlines<br /><br /><br /><br />-----------<br />1 dummy scanline<br />-----------<br /></div><br /><br />The VBlank flag is raised, presumably on cycle 0 of the first scanline on that chart.<br /><br />NMI is triggered AFTER VBlank is raised... there is some latency between the two.  I don't know how much latency exactly, but running 1 CPU instruction between the time $2002.7 is raised and when NMI is triggered works nicely.<br /><br /><br />3)<br />Cycle 304.  Note this reload only happens if the PPU is switched on (D3 or D4 of $2001 on).  If the PPU is off, the address will not reload.<br /><br />Reference:<br /><!-- m --><a class="postlink" href="http://nesdev.com/bbs/viewtopic.php?p=3288&amp;highlight=304#3288">http://nesdev.com/bbs/viewtopi ... t=304#3288</a><!-- m --><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Sat Sep 24, 2005 2:58 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Kinopio]]></name></author>
<updated>2005-09-24T14:44:24-07:00</updated>
<published>2005-09-24T14:44:24-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=595&amp;p=4856#p4856</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=595&amp;p=4856#p4856"/>
<title type="html"><![CDATA[PPU clarifications]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=595&amp;p=4856#p4856"><![CDATA[
I've some trouble emulating the PPU in my<br />emulator and hope that I can get some help<br />and clarifications on some things from you guys here. <br /><br />1)<br />How does bit 3-4 in PPU register $2001 work?<br />I understand that they control if background/sprites<br />should be rendered, but how do they effect the PPU?<br />They seem to effect PPU's memory reads and if the<br />address (Loopy_v) should be updated with the temp<br />address (Loopy_t).<br /><br />What is done and what is not done by the PPU<br />depending on how these bits are set?<br /><br /><br />2)<br />When is the VBlank flag set (bit 7 in $2002)?<br />Is it on the last cycle in the scanline after<br />the 240 visible or on the first cycle in PPU's<br />VBlank period?<br /><br />Is NMI generated at the same cycle the flag is set?<br /><br /><br />3)<br />At which cycle in the dummy scanline is the PPU address<br /><br />(Loopy_v) loaded with the temp address (Loopy_t)?<br /><br />Any help appreciated.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=109">Kinopio</a> — Sat Sep 24, 2005 2:44 pm</p><hr />
]]></content>
</entry>
</feed>