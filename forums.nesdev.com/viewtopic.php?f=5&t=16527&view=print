<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Hypothetical non polygon based 3D?</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Hypothetical non polygon based 3D?</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=5&amp;t=16527">http://forums.nesdev.com/viewtopic.php?f=5&amp;t=16527</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>4</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Drew Sebastino</b> [ Sun Sep 24, 2017 10:05 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Hypothetical non polygon based 3D?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />That Doom video I posted had got me thinking about different techniques for drawing 3D graphics and how, disregarding lighting, they have been about the same since about Quake, (well, hardware rendering instead of software rendering) despite there being exponentially more processing power to work with. I thought about how in Adobe Illustrator and similar programs you can create vector drawings with curves alongside lines, and wondered, could the same idea be applied to 3D graphics? For example, if you were to model a sphere, you could use six vertices, one for each end of each axis. How computationally expensive would this hypothetical method be, if possible at all? Many 3D models I have seen have so many vertices in order to appear smooth that it seems like there has to be a more efficient way of making things appear rounded.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Sun Sep 24, 2017 10:34 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Hypothetical non polygon based 3D?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Espozo wrote:</div><div class="quotecontent">there has to be a more efficient way of making things appear rounded.</div><br /><br />There's a lot of ways.<br /><br />In terms of lighting, one idea is per-pixel lighting, which lets you &quot;interpolate&quot; the shape of the surface between vertices:<br /><a href="https://en.wikipedia.org/wiki/Phong_shading" class="postlink">https://en.wikipedia.org/wiki/Phong_shading</a><br /><br />Another lighting idea is using a texture map to indicate the surface shape:<br /><a href="https://en.wikipedia.org/wiki/Normal_mapping" class="postlink">https://en.wikipedia.org/wiki/Normal_mapping</a><br /><br />You can also interpolate new vertices between those of a lower-poly model, producing a more rounded silhouette:<br /><a href="https://en.wikipedia.org/wiki/Subdivision_surface" class="postlink">https://en.wikipedia.org/wiki/Subdivision_surface</a><br /><br />If you're talking about trying to render 2D curves and shapes specifically, there's many ideas for that too:<br /><a href="http://wdobbie.com/post/gpu-text-rendering-with-vector-textures/" class="postlink">http://wdobbie.com/post/gpu-text-rendering-with-vector-textures/</a>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>pubby</b> [ Sun Sep 24, 2017 10:39 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Hypothetical non polygon based 3D?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />This kinda exists today... except it's still triangles all the way down.<br /><br />You send a small amount of data to the GPU (e.g. 6 vertices), and then the GPU can generate all the triangles it wants from it. Doing things this way can be a good optimization because memory transfers are slow.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>adam_smasher</b> [ Sun Sep 24, 2017 10:53 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Hypothetical non polygon based 3D?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Have a look at <a href="https://www.youtube.com/watch?v=f1jzUpltOGo" class="postlink">Ecstatica</a>, a computer game sent to us from an alternate dimension where polygons do not exist (video in Polish for maximum otherworldliness).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Drew Sebastino</b> [ Sun Sep 24, 2017 10:57 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Hypothetical non polygon based 3D?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent">There's a lot of ways.</div><br />Normal mapping doesn't quite replace more polygons, as the edges of an object are still as jagged, and subdivision is part of the problem, as it just adds more vertices.<br /><br /><div class="quotetitle">pubby wrote:</div><div class="quotecontent">This kinda exists today... except it's still triangles all the way down.<br /><br />You send a small amount of data to the GPU (e.g. 6 vertices), and then the GPU can generate all the triangles it wants from it. Doing things this way can be a good optimization because memory transfers are slow.</div><br />Or maybe it doesn't. <img src="./images/smilies/icon_lol.gif" alt=":lol:" title="Laughing" /> Any particular reason why modern GPUs are &quot;adamant&quot; on using triangles? Isn't a modern GPU kind of like a massively parallel, limited instruction set CPU, and as such, drawing triangles is done &quot;in software&quot;?<br /><br /><div class="quotetitle">adam_smasher wrote:</div><div class="quotecontent">Have a look at <a href="https://www.youtube.com/watch?v=f1jzUpltOGo" class="postlink">Ecstatica</a>, a computer game sent to us from an alternate dimension where polygons do not exist (video in Polish for maximum otherworldliness).</div><br />Reminds me of this: <!-- m --><a class="postlink" href="https://www.youtube.com/watch?v=IzvPVkb5_08">https://www.youtube.com/watch?v=IzvPVkb5_08</a><!-- m -->

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Sun Sep 24, 2017 11:43 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Hypothetical non polygon based 3D?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Espozo wrote:</div><div class="quotecontent">Normal mapping doesn't quite replace more polygons, as the edges of an object are still as jagged, and subdivision is part of the problem, as it just adds more vertices.</div><br />I am not quite clear about what you want, then, but here's another try...<br /><br />You can use a texture with an alpha mask to cut curves off of polygons. You can render a sphere as a single quad with a normal map and a circular alpha cutout, for example.<br /><br />(This is sort of a combination of the 4th thing in my previous post, i.e. using textures to draw curves across polygons, and the 2nd thing, using textures to provide surface shape for lighting.)<br /><br /><br />There's lots of tricks for producing busy-volume objects with few polygons, typically used for things like trees, hair, etc.<br /><br />For example, maybe for a tree you just have two quads (like an X from above) but use <a href="https://en.wikipedia.org/wiki/Alpha_to_coverage" class="postlink">alpha to coverate</a> to blend away the face that's currently more edge-on from your viewpoint.<br /><br /><br />Your question about what you have CPU/GPU resources to do is not easily answerable. Depends on the situation. Sometimes it's better to throw more polygons at the model. Sometimes subdivision surfaces perform very well. Sometimes too much stuff in your pixel shader is worse than too many polygons. It's not really something that's easy to speculate on, but lowering polygons is far from the only way to try and improve GPU performance (and how much it can affect it really depends on the nature of the system we're talking about).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Oziphantom</b> [ Mon Sep 25, 2017 5:54 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Hypothetical non polygon based 3D?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Espozo wrote:</div><div class="quotecontent">Or maybe it doesn't. <img src="./images/smilies/icon_lol.gif" alt=":lol:" title="Laughing" /> Any particular reason why modern GPUs are &quot;adamant&quot; on using triangles? Isn't a modern GPU kind of like a massively parallel, limited instruction set CPU, and as such, drawing triangles is done &quot;in software&quot;?</div>Yes. Triangles are FLAT 100% dead flat every time, can't bend a triangle. This makes lighting easier, two triangles that have 2 matching vertices will share a 100% aligned side so there will be no cracks in the model. If you want to see where this goes wrong, look at a Saturn it uses Quads, and you see all the cracks, lighting issues and other problems with them in about 5mins of a 3D game on a Saturn, or Tomb Raider 1 ( and possibly 2 as well ) on the PS1 as it still uses Quads. Also any other primitive can be made out of triangles where as quads tend to force things to be squarish, hence TR on Saturn has a software Triangle Renderer to render Lara because you can't do a face in quads or boobs for that matter. <br /><br />The PSP has hardware Bézier patch rendering and I think I was the only person to ever use it on the device, but I'm sure there are other instances of it being used probably in 2D games though. In global lighting its nice, anything else and ohhh artefact city and then the Continuity problems, models crack, texture warping..  lovely idea just not so easy to control. <br /><br />There was a really old PC game, Ballz or something like it that use spheres for rendering as it was &quot;faster&quot; for the PC to render them, but its hard to make a solid shape out of spheres. <br />Alone in the Dark uses Ellipses and that is what gives it its distinctive look, for arms and legs top notch for the jacket and skirt not so much. I think Little Big Adventure also used ellipses but it might have been spheres. <br /><br />Yes we now are back to software rendering, and not hardware rendering. Hardware rendering is DX8 fixed pipeline or ES1.1 on the early Phones. Now with Shaders we are  Hardware Accelerated Software Rendering.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Mon Sep 25, 2017 8:43 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Hypothetical non polygon based 3D?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Oziphantom wrote:</div><div class="quotecontent">If you want to see where this goes wrong, look at a Saturn it uses Quads, and you see all the cracks, lighting issues and other problems with them in about 5mins of a 3D game on a Saturn, or Tomb Raider 1 ( and possibly 2 as well ) on the PS1 as it still uses Quads.</div><br />Let's clarify that &quot;cracks&quot; are fundamentally not an issue of quads, they're an issue of the rasterizer (or some problem, e.g., lack of precision, in calculating the vertex coordinates). It's perfectly possible to have a quad-based 3D model where each edge is shared.<br /><br /><div class="quotetitle">Espozo wrote:</div><div class="quotecontent">Isn't a modern GPU kind of like a massively parallel, limited instruction set CPU, and as such, drawing triangles is done &quot;in software&quot;?</div><br />The triangle rasterization is still done in specialized hardware. The programmable part comes into play in shading (doing vertex operations and calculating the pixel color).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Mon Sep 25, 2017 10:33 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Hypothetical non polygon based 3D?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">adam_smasher wrote:</div><div class="quotecontent">Have a look at <a href="https://www.youtube.com/watch?v=f1jzUpltOGo" class="postlink">Ecstatica</a>, a computer game sent to us from an alternate dimension where polygons do not exist (video in Polish for maximum otherworldliness).</div><br />The technique for rendering graphics looks very similar to Final Fatansy 7 (also 8, 9, Chrono Cross) : Pre-rendered background and 3d polygonal objects..<br /><br />I belive we *could* use that technique with actual sprites in order to have &quot;3d without polygons&quot;, but you'd have to pre-render sprites in all possible angles of view so it'd be a lot of work.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Mon Sep 25, 2017 10:49 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Hypothetical non polygon based 3D?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">The technique for rendering graphics looks very similar to Final Fatansy 7 (also 8, 9, Chrono Cross) : Pre-rendered background and 3d polygonal objects..</div><br />Yeah, but the main point I guess is that all polygons in Ecstatica are spheres/ellipsoids, while traditional 3D usually goes with triangles or quads.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I belive we *could* use that technique with actual sprites in order to have &quot;3d without polygons&quot;, but you'd have to pre-render sprites in all possible angles of view so it'd be a lot of work.</div><br /><a href="https://www.youtube.com/watch?v=PRCd2VVmLXw" class="postlink">Resident Evil on the GBC</a>?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Mon Sep 25, 2017 2:31 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Hypothetical non polygon based 3D?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Followup to the approach I was mentioning, i.e. putting a &quot;3D&quot; shape on a quad, is that it didn't usuall handle geometry intersection well. The problem was that the depth buffer value was determined by the geometry before the pixel shader, so no matter what fake shape you put on the quad, it still intersects other stuff like a flat card.<br /><br />I think with DX11 era, though, we can change depth in the pixel shader now, so the capability is there, but delaying the depth test until after the pixel shader is a bit of a performance hit by itself.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Mon Sep 25, 2017 3:21 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Hypothetical non polygon based 3D?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Oh yeah, I also forgot to mention &quot;<a href="https://en.wikipedia.org/wiki/Parallax_mapping" class="postlink">parallax mapping</a>&quot;, which is like putting a heightfield in a texture and having a mini-raytracer in the shader.<br /><a href="https://www.youtube.com/watch?v=6B-5a2HWqpw" class="postlink">https://www.youtube.com/watch?v=6B-5a2HWqpw</a><br /><br />Sort of taking the normal map idea to a further extreme.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Sep 25, 2017 4:57 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Hypothetical non polygon based 3D?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Is parallax mapping the same as the &quot;voxel&quot; (really height map) renderer in <a href="https://en.wikipedia.org/wiki/Comanche_(video_game_series)" class="postlink"><em>Comanche</em></a>, except on the GPU?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Mon Sep 25, 2017 5:20 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Hypothetical non polygon based 3D?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">Is parallax mapping the same as the &quot;voxel&quot; (really height map) renderer in <a href="https://en.wikipedia.org/wiki/Comanche_(video_game_series)" class="postlink"><em>Comanche</em></a>, except on the GPU?</div><br />Well, there's a lot of variations of the technique, but there's similarities, yes. The big difference is that you are rendering each pixel independently; I think most voxel engines are instead rendering each voxel shape individually, different order of operations, different stuff is being batched for efficiency, etc. The naive way is more like a raytracer technique.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>93143</b> [ Mon Sep 25, 2017 9:50 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Hypothetical non polygon based 3D?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Oziphantom wrote:</div><div class="quotecontent">The PSP has hardware Bézier patch rendering and I think I was the only person to ever use it on the device</div><br />Oh hey, it does.<br /><br />I know <a href="https://en.wikipedia.org/wiki/Non-uniform_rational_B-spline" class="postlink">NURBS</a> was a buzzword for a while, but clearly it never really took off.  Didn't the PS2 make a big deal over it, and then it turned out it sucked so no one used it?

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>4</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>