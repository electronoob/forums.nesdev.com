<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Streemerz NES port</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Streemerz NES port</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=22&amp;t=8697">http://forums.nesdev.com/viewtopic.php?f=22&amp;t=8697</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>3</strong> of <strong>12</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Tue Mar 27, 2012 9:28 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I tried HP Swfscan, and couldn't get any relevant scripts out of the game.  Just useless crap like the preloader.  I don't think there are any fully working AS3 decompilers yet.
<br />
<br />Even SWFMILL can't get a correct disassembly.
<br />
<br />I do know there are multiple DoAbcDefine tags, and that throws off some decomplers.
<br />
<br />I think it's probably time to break out the video recorder (camstudio), record some gameplay, and play it back frame-by-frame to get a good idea of what's going on.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Tue Mar 27, 2012 10:09 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I've had some luck with this in the past: <!-- m --><a class="postlink" href="https://sites.google.com/site/as3extractor/">https://sites.google.com/site/as3extractor/</a><!-- m -->
<br />
<br />Not that a pirate portable version of Sothink SWF Decompiler is terribly hard to find. I don't really mean to encourage piracy, but since this is a one time thing that will not result in any financial gain for you, I wouldn't worry so much.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Tue Mar 27, 2012 10:37 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">I've had some luck with this in the past: <!-- m --><a class="postlink" href="https://sites.google.com/site/as3extractor/">https://sites.google.com/site/as3extractor/</a><!-- m --></div>
<br />Thanks, this seems to work just fine! The extraction feature seems a little bit buggy, if I select stuff using space bar instead of clicking on it, it tells me I haven't selected anything. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /> If I try to extract everything, it chokes on the JSONDecoder class. And after I deselect that class... it chokes on something else. Oh well, I don't need to extract them since I can view them using that program.
<br />
<br />EDIT: Spoke too soon, the decompiled code isn't perfect. There's some stuff that's obviously wrong. But then again, so was in the code produced by Sothink SWF Decompiler. Just have to be careful, it should still be useful.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Tue Mar 27, 2012 1:23 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Here's another one you can try: <!-- m --><a class="postlink" href="http://code.google.com/p/asdec/">http://code.google.com/p/asdec/</a><!-- m -->
<br />
<br />I have these programs hanging around my HD, I don't really remember how good they are. I guess that having options is always good, since one program might do what the other doesn't, so they complement each other.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Thu Mar 29, 2012 8:10 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I added code to export the object data now. It's only exporting the object type and coordinates right now but it's not too hard to add the additional parameters which some of the object types need.
<br />
<br />I also generated the level lists for different game modes and the level information itself (it contains references to each screen and object list that the level uses, as well as global properties like music used in the level).
<br />
<br />Level data is almost complete now. Time to start working on the level loader.
<br />
<br /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">Here's another one you can try: <!-- m --><a class="postlink" href="http://code.google.com/p/asdec/">http://code.google.com/p/asdec/</a><!-- m --><br /><br />I have these programs hanging around my HD, I don't really remember how good they are. I guess that having options is always good, since one program might do what the other doesn't, so they complement each other.</div>
<br />Yep, this one gave pretty good results as well but some clear errors here as well. But yeah I'm going to cross verify the important stuff with the different programs if something seems shady.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Sun Apr 01, 2012 2:39 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">thefox wrote:</div><div class="quotecontent">Level data is almost complete now. Time to start working on the level loader.</div>
<br />Level loader done. Screen switcher also works (switches the screen when the player moves up/down). After I implement the doors the level lists will be fully traversable from beginning to end.
<br />
<br />There was a minor bump in the road when I noticed that Nintendulator doesn't support CHR-RAM with FME-7 (which is the mapper I'm currently using for testing), but it was pretty easy to modify the Nintendulator mapper sources to fix it.
<br />
<br />Next on the TODO list is object support. I think I'll start with The Door. Then I also need to start organizing the sprite tile data to see how much space it'll take, what tiles need to be available at any given time and what palettes they need.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Sun Apr 01, 2012 9:32 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Doors work now, floated all the way through all of the levels with my Shatterhand sprite until I got stuck in a wall in the last level because my code doesn't handle the level start position properly yet.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Tue Apr 03, 2012 10:38 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I worked on the sprites today and yesterday. First I copy pasted them all to a single image and started trying to figure out the palette sets. I managed to get a pretty good compromise once again. The "Superb Joe" and Leopardman sprites are problematic though, since some of the colors they use aren't used anywhere else. Technically they can be drawn with the current palette sets, but the sprites would be layered and end up using colors from three different palette sets, so it would probably flicker like hell, especially since Superb Joe and Leopardman need to be on screen simultaneously.
<br />
<br />Anyway, next I assigned the palettes to each spritesheet, split them up with Imagemagick, and fed them to my sprite converter. Then I had a bunch of .SPR (the sprite definition) and .CHR files. I took the most common sprites (excluding the Master Y, Dr. Tary, Leopardman and Superb Joe sprites, since those won't be needed simultaneously with the normal player sprite) and combined them to a single .CHR file, optimized the tileset and guess what: it came out at EXACTLY 256 tiles (4KB). Pretty funny coincidence. Here's an image of the tileset in its current state (the tiles are in pseudo random order due to the way the optimizer works):
<br />
<br /><img src="http://thefox.aspekt.fi/streemerz/streemerz-sprite-tiles.png" alt="Image" />
<br />
<br />You may notice that some of the tiles are very similar, but not quite. This is a small problem that occurs when using the sprite converter. It works on individual images, so it doesn't always produce optimal results if the size of the global tileset is a concern. Since it's a genetic algorithm it's also somewhat random in how the sprites are placed (several placements can give the "optimal" result, i.e. the same amount of sprites used).
<br />
<br />There are some ways to fix this problem. I could do a first pass, looking for similarities in images, split them up from those areas, then convert, and then recombine them. This should produce a little bit smaller final tileset, maybe with the cost that the metasprites would use some more 8x8 sprites.
<br />
<br />Another way to fix it would be to modify the genetic algorithm so that placements which re-use existing tiles (from the global tileset) get some extra "fitness" points. I'm probably not going to bother with that for now.
<br />
<br />One way to get more wiggle room in the sprite bank would be of course to upload some of the sprite frames dynamically. Player sprites would be a good candidate for this. They take 8 tiles in the worst case I think, so that would be 8 * 16 bytes to be uploaded per frame, so 128 * 8 = 1024 CPU cycles with the fastest possible code. Considering the only other PPU uploads I need are the OAM and the palette, it should be very much doable.
<br />
<br />I should modify my sprite converter (image -&gt; sprite definition) tool to support 8x16 sprites, just to see what kind of results that would give.
<br />
<br />...
<br />
<br />On another topic, I've been thinking about how to implement the "ghost" in the original game. You see, there's a 5 minute time trial mode in the Flash game. If you complete it, the next time you'll race it you'll see a ghost run of your fastest run, with Leopardman (:)) playing the role of the ghost. Or so I've been told, I haven't actually been able to beat the time trial in 5 minutes yet.
<br />
<br />So the problem is how to get 5 minutes worth of controller input / other state data squeezed so that it fits in the WRAM. (I think WRAM is absolutely necessary for this, especially given that there has to be two copies of the data -- one for the current run and one for the fastest run). The data would need to be compressed and decompressed in real time. Compressing just the controller input wouldn't be enough, because we don't have easy access to collision etc data of each screen all the time (and the player might be at a completely different screen than the ghost).
<br />
<br />This is certainly not top priority, but it's fun to think about.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Tue Apr 03, 2012 10:59 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">thefox wrote:</div><div class="quotecontent">So the problem is how to get 5 minutes worth of controller input / other state data squeezed so that it fits in the WRAM. (I think WRAM is absolutely necessary for this, especially given that there has to be two copies of the data -- one for the current run and one for the fastest run). The data would need to be compressed and decompressed in real time.</div><br />I have routines in my game to record and playback RLE encoded controller data, just tell me if you want me to post them.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Compressing just the controller input wouldn't be enough, because we don't have easy access to collision etc data of each screen all the time (and the player might be at a completely different screen than the ghost).</div>
<br />Yeah, this is the real issue. You might have to run two game sessions side by side! I'm sure there will be enough RAM for this (since you're using WRAM), it's the processing time I'm worried about.
<br />
<br />Actually I'm not even sure how this can work in the original game... I believe that enemies and objects do not "live" until you enter a room, so how can the ghost enter a screen before you do and interact with the objects in there?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Tue Apr 03, 2012 1:13 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">I have routines in my game to record and playback RLE encoded controller data, just tell me if you want me to post them.</div><br />Yeah sure, that would be nice to have. What kind of compression rate do you get with it generally speaking?<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Yeah, this is the real issue. You might have to run two game sessions side by side! I'm sure there will be enough RAM for this (since you're using WRAM), it's the processing time I'm worried about.</div><br />About WRAM, I was thinking about making the game so that it can work without WRAM, but if WRAM it would have some extra goodies like the ghost thing we're talking about here.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Actually I'm not even sure how this can work in the original game... I believe that enemies and objects do not "live" until you enter a room, so how can the ghost enter a screen before you do and interact with the objects in there?</div>
<br />As far as I know, it simply stores the coordinates and the player sprite map index for each frame and probably some other state info for the streemer (this mode is capped at 5 minutes too, so it'll never generate a huge log). I don't think there's any interaction with the objects (and the only object I can think of that would be problematic regarding that is the breakable block, but that's not used in this level... and in any case it would simply just look funny).
<br />
<br />I guess the log in the NES version would have to be stored on screen by screen basis (together with some state info for the beginning of the screen). If the player enters the screen while the ghost is in it, it would need to "rewind" so the ghost time matches the players time. If the ghost is not on the same screen as the player, it can simply step to the next frame. I don't know, we'll see if any of this is practical...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Tue Apr 03, 2012 1:21 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Player sprites would be a good candidate for this. They take 8 tiles in the worst case I think, so that would be 8 * 16 bytes to be uploaded per frame, so 128 * 8 = 1024 CPU cycles with the fastest possible code. Considering the only other PPU uploads I need are the OAM and the palette, it should be very much doable. </div><br />Yeah, five 32-byte copies from $0100-$019F to the PPU plus an OAM copy from $0200 will easily fit into vblank. If it's good enough for Battletoads... But then you have to make room for copying in the ghost's tile. And you don't need all rooms' sprites loaded at once because you can do like Battle Kid and load only those enemy sprites that a given room uses.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">So the problem is how to get 5 minutes worth of controller input / other state data squeezed so that it fits in the WRAM. (I think WRAM is absolutely necessary for this, especially given that there has to be two copies of the data -- one for the current run and one for the fastest run).</div>
<br />How many keypresses are there in a typical run? If there are fewer than about 2,000 keypresses, then a single run can fit into 4 KiB.  At 300 seconds, that'd be 6 presses per second.  Each byte of the controller bytecode would look like this:
<br />
<br />7654 3210: ccct tttt
<br />t: number of frames to wait before processing next command
<br />c: command number
<br />
<br />Commands:
<br />0: Do nothing
<br />1: Release all buttons
<br />2: Toggle button A
<br />3: Toggle button B
<br />4: Toggle button Up
<br />5: Toggle button Down
<br />6: Toggle button Left
<br />7: Toggle button Right
<br />
<br />Another way is to just sample X and Y every few frames, then interpolate at playback time.  At 300 seconds and 4 samples per second, that's 2.4 KiB. This even solves tokumaru's problem of the other player interacting with enemies.
<br />
<br />Would it be hard to make ghost support and other character support a compile time option?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Tue Apr 03, 2012 2:25 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">thefox wrote:</div><div class="quotecontent">Yeah sure, that would be nice to have. What kind of compression rate do you get with it generally speaking?</div><br />I'm afraid that RLE will not be enough enough for 5 minutes... Sorry, but I can't give an idea of how well it compresses, but I really haven't tested it much!<br /><br />Here's the encoder function:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">;-- SUBROUTINE --------------------------------------------------<br />;DESCRIPTION:<br />; Logs the buttom presses in a compressed format to an array that<br />; can later be used to demonstrate the levels in action.<br />;INPUT:<br />; DemoStatus: indicates the operation to execute;<br />; DemoData: address of the controller data;<br />; ControllerBuffer: current status of the controller;<br />;----------------------------------------------------------------<br />RecordDemo:<br /><br />&nbsp; &nbsp;;skip if this is not the first frame<br />&nbsp; &nbsp;lda DemoStatus<br />&nbsp; &nbsp;cmp #$ff<br />&nbsp; &nbsp;bne +CompareButtons<br /><br />&nbsp; &nbsp;;indicate that a demo is being recorded<br />&nbsp; &nbsp;dec DemoStatus<br /><br />&nbsp; &nbsp;;initialize the output pointer and start outputting data<br />&nbsp; &nbsp;lda #$00<br />&nbsp; &nbsp;sta DemoData+0<br />&nbsp; &nbsp;lda #$60<br />&nbsp; &nbsp;sta DemoData+1<br />&nbsp; &nbsp;bne +WriteNewPair ;always<br /><br />+CompareButtons:<br /><br />&nbsp; &nbsp;;branch if the button combination changed<br />&nbsp; &nbsp;ldy #$01<br />&nbsp; &nbsp;lda &#40;DemoData&#41;, y<br />&nbsp; &nbsp;cmp ControllerBuffer<br />&nbsp; &nbsp;bne +AdvancePointer<br /><br />&nbsp; &nbsp;;increment the number of frames for which the combination is to be used<br />&nbsp; &nbsp;dey<br />&nbsp; &nbsp;lda &#40;DemoData&#41;, y<br />&nbsp; &nbsp;beq +AdvancePointer<br />&nbsp; &nbsp;adc #$00<br />&nbsp; &nbsp;sta &#40;DemoData&#41;, y<br /><br />&nbsp; &nbsp;;return<br />&nbsp; &nbsp;rts<br /><br />+AdvancePointer:<br /><br />&nbsp; &nbsp;;advance 2 bytes<br />&nbsp; &nbsp;clc<br />&nbsp; &nbsp;lda DemoData+0<br />&nbsp; &nbsp;adc #$02<br />&nbsp; &nbsp;sta DemoData+0<br />&nbsp; &nbsp;bcc +WriteNewPair<br />&nbsp; &nbsp;inc DemoData+1<br /><br />+WriteNewPair:<br /><br />&nbsp; &nbsp;;output the duration and the combination of buttons<br />&nbsp; &nbsp;ldy #$00<br />&nbsp; &nbsp;lda #$01<br />&nbsp; &nbsp;sta &#40;DemoData&#41;, y<br />&nbsp; &nbsp;iny<br />&nbsp; &nbsp;lda ControllerBuffer<br />&nbsp; &nbsp;sta &#40;DemoData&#41;, y<br /><br />+Done:<br /><br />&nbsp; &nbsp;;return<br />&nbsp; &nbsp;rts</div><br /><br />And here's the decoder (it's not a function, but it's really simple and easy to figure out):<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">;----------------------------------------------------------------<br />; Demo playback - START<br />;----------------------------------------------------------------<br /><br />&nbsp; &nbsp;;skip if the level is not in demo mode<br />&nbsp; &nbsp;bit DemoStatus<br />&nbsp; &nbsp;bpl +SkipDemo<br /><br />&nbsp; &nbsp;;overwrite the controller status, except for the start button<br />&nbsp; &nbsp;dec DemoCount<br />&nbsp; &nbsp;bne +<br />&nbsp; &nbsp;ldy #$01<br />&nbsp; &nbsp;lda &#40;DemoData&#41;, y<br />&nbsp; &nbsp;sta DemoCount<br />&nbsp; &nbsp;clc<br />&nbsp; &nbsp;lda DemoData+0<br />&nbsp; &nbsp;adc #$02<br />&nbsp; &nbsp;sta DemoData+0<br />&nbsp; &nbsp;bcc +<br />&nbsp; &nbsp;inc DemoData+1<br />+&nbsp; &nbsp;ldy #$00<br />&nbsp; &nbsp;lda ControllerBuffer<br />&nbsp; &nbsp;and #BUTTON_STRT<br />&nbsp; &nbsp;ora &#40;DemoData&#41;, y<br />&nbsp; &nbsp;sta ControllerBuffer<br /><br />+SkipDemo:<br /><br />;----------------------------------------------------------------<br />; Demo playback - END<br />;----------------------------------------------------------------</div><br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I was thinking about making the game so that it can work without WRAM, but if WRAM it would have some extra goodies like the ghost thing we're talking about here.</div><br />It would be really cool if the program could detect the presence of WRAM to enable the goodies, but still work without them on carts without WRAM.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I don't think there's any interaction with the objects (and the only object I can think of that would be problematic regarding that is the breakable block, but that's not used in this level... and in any case it would simply just look funny).</div>
<br />So balls and such do not affect the ghost?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Tue Apr 03, 2012 9:55 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">How many keypresses are there in a typical run? If there are fewer than about 2,000 keypresses, then a single run can fit into 4 KiB.</div><br />Not sure, we'll find out later.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Another way is to just sample X and Y every few frames, then interpolate at playback time.  At 300 seconds and 4 samples per second, that's 2.4 KiB. This even solves tokumaru's problem of the other player interacting with enemies.</div><br />Yeah that might work.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Would it be hard to make ghost support and other character support a compile time option?</div><br />Shouldn't be too hard, I'll have to see later if there's any benefit to doing that (to have stripped down versions of the game etc).<br /><br /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">So balls and such do not affect the ghost?</div>
<br />Yeah. Well, the effects from those from the previous run are still stored in the log through the X and Y coords, so it doesn't matter. Of course it will look funny with any moving object (which might be out of sync) etc, but there's no way to get around that.
<br />
<br />Anyway, I'm going to leave this whole ghost ordeal at rest for now, and start implementing the level objects.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bananmos</b> [ Wed Apr 04, 2012 6:12 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">You may notice that some of the tiles are very similar, but not quite. This is a small problem that occurs when using the sprite converter. It works on individual images, so it doesn't always produce optimal results if the size of the global tileset is a concern. Since it's a genetic algorithm it's also somewhat random in how the sprites are placed (several placements can give the "optimal" result, i.e. the same amount of sprites used).<br /><br />There are some ways to fix this problem. I could do a first pass, looking for similarities in images, split them up from those areas, then convert, and then recombine them. This should produce a little bit smaller final tileset, maybe with the cost that the metasprites would use some more 8x8 sprites.<br /><br />Another way to fix it would be to modify the genetic algorithm so that placements which re-use existing tiles (from the global tileset) get some extra "fitness" points. I'm probably not going to bother with that for now.</div>
<br />
<br />I'm having the exact same issues in my sprite optimizing tool <a href="http://sourceforge.net/apps/mediawiki/tilificator/index.php?title=Tilificator_Tutorial" class="postlink">Tilificator</a> and have had similar ideas (not implemented yet) on solving it. I'd be interested to know what solution you might implement :)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>mic_</b> [ Wed Apr 04, 2012 11:06 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I've used the <a href="http://members.ozemail.com.au/~dekker/NEUQUANT.HTML" class="postlink">NeuQuant algorithm</a> frequently for color quantization of images. I wonder if it'd be difficult (and practical) to modify that algorithm so that each neuron represents an 8x8 tile instead of an RGB color - i.e. the output would be the N "best" tiles out of a larger set of tiles.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>3</strong> of <strong>12</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>