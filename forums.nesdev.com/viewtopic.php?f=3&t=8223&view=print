<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - $2007 memory behavior</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">$2007 memory behavior</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=8223">http://forums.nesdev.com/viewtopic.php?f=3&amp;t=8223</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bisqwit</b> [ Tue Oct 18, 2011 8:34 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>$2007 memory behavior</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I understand that when reading from $2007, palette requests are served immediately because they are onboard in the PPU (same goes for OAM access through $2004), but all other accesses need to be routed through the I/O bus, which means that the actual result is not available when the CPU asks for it, but one PPU cycle later, available on the next read*.
<br />The value that the PPU loads from the I/O is available in some kind of cache internal to the PPU. Nintendulator calls it "buf2007", Nestopia calls it "io.buffer".
<br />
<br />However, my question is: Which actions overwrite the buffer? Is the buffer affected, for instance, when writing to $2007? How about, is it affected when the PPU internally does memory access during the screen rendering? How long is the value stored? In Nestopia and Nintendulator the buffer is maintained indefinitely and only affected by $2007 reads, but lacking documentation on the matter, I cannot trust that this behavior is correct. Both of these should be easy to test on real hardware, because you do not need to analyze the meaning of the value that is read, only whether it differs from what it <em>would</em> be if the previous $2007 read was stored indefinitely.
<br />
<br />*) Presumably, $2007 writes are also delayed by ½ .. 1 cycle for the same reason.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>beannaich</b> [ Tue Oct 18, 2011 2:51 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: $2007 memory behavior</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bisqwit wrote:</div><div class="quotecontent">Which actions overwrite the buffer?</div><br />None, to my knowledge. That buffer supposedly is only used for reading from $2007. It's contents are however filled with VRAM on palette reads. There is a test ROM for that as well.<br /><br /><div class="quotetitle">Bisqwit wrote:</div><div class="quotecontent">Presumably, $2007 writes are also delayed by ½ .. 1 cycle for the same reason.</div>
<br />AFAIK, only the reads are delayed, since they have to be fetched from external memory, and that buffer is a function of design to sort of work around this.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ReaperSMS</b> [ Tue Oct 18, 2011 3:29 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The delay on write he's mentioning would be the one inherent in the PPU needing two cycles to access memory, so the data from the CPU probably can't go directly out. This doesn't matter much, as there's pretty much nothing that could actually detect that short of a scope/analyzer.
<br />
<br />You can't write during rendering, and if the PPU isn't rendering, the only thing doing any reading is $2007 access, which you can't do in less than 3 PPU cycles.
<br />
<br />One possibility comes to mind that would remove the need for any real delay or buffering on the read, but it certainly isn't testable without an analyzer. When rendering is disabled, either via $2001 or vblank, the PPU could be constantly latching the $2006 address, so that when you write to $2007, it could switch the ALE pin off and drive the data out AD0-7 more or less immediately. Determining that would take an analyzer, or some otherwise custom hardware to record or display the PPU output pins. Kevtris had a board that could do something like that at one point.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Tue Oct 18, 2011 3:42 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />An auto-prefetch on the second write to $2006 would probably have taken too many gates compared to how often $2007 is actually read.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ReaperSMS</b> [ Tue Oct 18, 2011 4:01 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Not so much an auto-prefetch, as just having the A13-8/AD7-0 lines default to the $2006 address.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bisqwit</b> [ Wed Oct 19, 2011 12:06 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: $2007 memory behavior</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">beannaich wrote:</div><div class="quotecontent"><div class="quotetitle">Bisqwit wrote:</div><div class="quotecontent">Which actions overwrite the buffer?</div><br />None, to my knowledge. That buffer supposedly is only used for reading from $2007. It's contents are however filled with VRAM on palette reads. There is a test ROM for that as well.</div>
<br />So it is like a dedicated register only used for that purpose? The PPU has an extra 8 bits of RAM (or register or whatever is the right term) for that single purpose? Nothing else updates it?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>beannaich</b> [ Fri Oct 21, 2011 8:35 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bisqwit wrote:</div><div class="quotecontent">So it is like a dedicated register only used for that purpose? The PPU has an extra 8 bits of RAM (or register or whatever is the right term) for that single purpose? Nothing else updates it?</div>
<br />I can't say definitively, because I haven't actually seen a RP2C02 datasheet. But, I have never run into any situation where anything needed to use that buffer for a purpose other than $2007 reads.
<br />
<br />To sum up:
<br />The buffer isn't directly accessible to the programmer. It's internal to the PPU, and the PPU only seems to use it to buffer reads to external memory. Whether or not it also uses the register to buffer writes, I can't say, but what I can say is that emulators work perfectly well only using the buffer for $2007 reads. That's not to say that the behavior is accurate, but it's as good as you can get without decapping RP2C02.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Oct 21, 2011 9:48 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />One can do better:
<br />read, write, then read to see if it changes the buffer contents
<br />read, render for a frame, then read to see if it changes the buffer contents

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bisqwit</b> [ Fri Oct 21, 2011 11:47 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">beannaich wrote:</div><div class="quotecontent">The buffer isn't directly accessible to the programmer.</div>
<br />Sure it is! Just issue a VRAM read, and only use the first result and don't wait for the second result where the buffer has been replaced with the data you requested.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>beannaich</b> [ Fri Oct 21, 2011 1:47 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bisqwit wrote:</div><div class="quotecontent"><div class="quotetitle">beannaich wrote:</div><div class="quotecontent">The buffer isn't directly accessible to the programmer.</div><br />Sure it is! Just issue a VRAM read, and only use the first result and don't wait for the second result where the buffer has been replaced with the data you requested.</div><br />That is an indirect way of accessing it, it also won't yield anything of use.<br /><br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">One can do better:<br />read, write, then read to see if it changes the buffer contents<br />read, render for a frame, then read to see if it changes the buffer contents</div>
<br />I assume someone has already tested this?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bisqwit</b> [ Fri Oct 21, 2011 1:56 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">beannaich wrote:</div><div class="quotecontent">That is an indirect way of accessing it, it also won't yield anything of use.</div>
<br />As in "I don't know what it yields but prolly nothing useful", or "I know it just gives the same value you would have gotten earlier if you read it earlier"?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>beannaich</b> [ Fri Oct 21, 2011 2:04 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bisqwit wrote:</div><div class="quotecontent">As in "I don't know what it yields but prolly nothing useful", or "I know it just gives the same value you would have gotten earlier if you read it earlier"?</div>
<br />The former. It's useless to rely on that read regardless of whether the PPU initializes the buffer to a known state or not, because that value is irrelevant to your program. Say it returns a garbage value after reset, it should be obvious that you can't rely on a random (or pseudo-random) value for anything other than a seed for a RNG (typically). Say it's initialized to 00h, what good does that do you? Either way, the $2007 read buffer is just that, a buffer for PPU $2007. It's only use is to interact with PPU memory, and it's not directly modifiable.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bisqwit</b> [ Fri Oct 21, 2011 2:09 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">beannaich wrote:</div><div class="quotecontent"><div class="quotetitle">Bisqwit wrote:</div><div class="quotecontent">As in "I don't know what it yields but prolly nothing useful", or "I know it just gives the same value you would have gotten earlier if you read it earlier"?</div><br />The former. It's useless to rely on that read regardless of whether the PPU initializes the buffer to a known state or not, because that value is irrelevant to your program.</div>
<br />This is NESemdev, not NESdev. I have no intention of writing NES programs that rely on the value read; I only seek to know what is the <em>proper</em> way to implement in the emulator (as opposed to the lazy way that enables all currently known games to work).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Fri Oct 21, 2011 3:16 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I've never seen any documentation about the behavior you were asking about. My personal <em>guess </em>is the buffer is used for this specific purpose only. But like you said, it would be easy to write a test ROM test this, why are so few emulator authors actually doing that?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>beannaich</b> [ Fri Oct 21, 2011 4:16 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bisqwit wrote:</div><div class="quotecontent">This is NESemdev, not NESdev. I have no intention of writing NES programs that rely on the value read; I only seek to know what is the <em>proper</em> way to implement in the emulator (as opposed to the lazy way that enables all currently known games to work).</div><br />I was attempting to answer your question giving examples as to why the behavior makes sense, as it's currently all we have. But if you'd like to continue to give attitude, then I can stop responding to your questions.<br /><br />For the time being, the buffer is for $2007 reads only, and I don't hold out much hope for a test ROM showing that it does much else.<br /><br /><div class="quotetitle">thefox wrote:</div><div class="quotecontent">I've never seen any documentation about the behavior you were asking about. My personal <em>guess </em>is the buffer is used for this specific purpose only. But like you said, it would be easy to write a test ROM test this, why are so few emulator authors actually doing that?</div>
<br />I would guess no one is really interested because it most likely is only used for a specific purpose, as you guessed. I think by now if there were another use, a game would have made use of it, or it would have been discovered. There isn't enough mystery surrounding it to warrant a test ROM, as easy as it would be to make one. I would gladly do it, if I had a power pak. I have an NTSC front loading NES sitting around collecting dust, but no way to run homebrew code on it.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>