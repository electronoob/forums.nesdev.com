<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Nessemble - new NES assembler</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Nessemble - new NES assembler</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=16387">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=16387</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>snarf2888</b> [ Sun Aug 20, 2017 9:25 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Nessemble - new NES assembler</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hey all. Long time lurker on these forums, first time poster.<br /><br />I'd like to let you all know about a new NES assembler that I just completed called <a href="http://www.nessemble.com" class="postlink">Nessemble</a>.<br /><br />It functions very similarly to nesasm, but with a bunch of extra bells and whistles including:<br /><br /><ul><li>`.incpng` pseudo instruction to include images without first converting to CHR data</li><li>Built-in disassembler to better analyze existing NES ROMs</li><li>Support for scripting to extend existing functionality</li></ul><br />I'd love to know what everyone thinks. Regardless of its usefulness alongside existing assemblers, it was fun to create and might be useful to someone.<br /><br />Please feel free to check out the <a href="http://www.nessemble.com" class="postlink">website</a> and contribute/raise issues on <a href="https://github.com/kevinselwyn/nessemble" class="postlink">GitHub</a>.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>qalle</b> [ Sun Aug 20, 2017 2:42 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Nessemble - new NES assembler</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Welcome.<br /><br />Some quick comments on the documentation:<br /><ul><li>Operator precedence and associativity (left/right) are not defined.</li><li><tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">NOP</tt> and <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">SBC</tt> are listed under illegal/undocumented mnemonics.</li><li>The syntax seems to have been influenced by NESASM, which I'm not a fan of (especially the need to explicitly mark zero page operands with &quot;&lt;&quot;).</li><li><tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.org</tt> stands for &quot;origin&quot;, not &quot;organize&quot;.</li><li>The following pseudo-instructions would be useful: define 16-bit big-endian word, define 32-bit little-endian dword, define 32-bit big-endian dword.</li></ul><br />Sorry if I sound too negative. Those were just details that caught my eye.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sun Aug 20, 2017 3:34 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Nessemble - new NES assembler</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Not a big fan of the similarities to NESASM (LOW()/HIGH(), &lt; for ZP, [] for indirection), but there are some cool additions. There are some errors in the documentation (I don't mind you calling .org &quot;organize&quot;, it's your assembler after all), such as saying 2KB == 0x2000 and 4KB == 0x4000.<br /><br />Also, it's not clear to me how the BANK() function works... In NESASM, banks are always 8KB, so if the mapper you're using works with 16 or 32KB banks you have to divide the value provide by NESASM by 2 or 4. Also, in NESASM, it doesn't look like BANK() is useful for referencing CHR banks, since the bank counter doesn't reset after the PRG-ROM and CHR banks can be as small as 1KB. Can your assembler get around these problems?<br /><br />Can Nessemble generate NES 2.0 headers? Can you disable headers altogether, allowing it to be used for developing games for other 6502 platforms (such as the 2600)?<br /><br />As I see it, the main drawback of NESASM is not its quirky syntax, but the annoying imposition of having to divide the whole program in 8KB chunks. The main drawback of ASM6, on the other hand, is not having any sort of built-in bank management (i.e. BANK() function), which makes inter-bank references that much harder to manage. If you can offer something that doesn't impose such arbitrary limitations and can make the management of multi-bank ROMs easier, Nessemble has the potential of becoming the go-to assembler for creating ROMs without hassle. That is, as long as it's featured in a newbie-friendly tutorial that we can recommend, otherwise I can only see Nerdy Nights producing more and more NESASM users.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>klr128</b> [ Mon Aug 21, 2017 3:36 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Nessemble - new NES assembler</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />[FR]<br />Bonjour,<br />vous avez un bugs à l'adresse: <!-- m --><a class="postlink" href="http://www.nessemble.com/documentation/">http://www.nessemble.com/documentation/</a><!-- m --><br />Le lien du texte : &quot;Edit on GitHub &quot; pointe vers la cible : <!-- m --><a class="postlink" href="https://github.com/kevinselwyn/nessemble/edit/master/docs/index.md">https://github.com/kevinselwyn/nessembl ... s/index.md</a><!-- m --><br />Je pense que la cible devrai être: <!-- m --><a class="postlink" href="https://github.com/kevinselwyn/nessemble">https://github.com/kevinselwyn/nessemble</a><!-- m --><br /><br />[ENG]<br />Hello,<br />You have a bug at: <!-- m --><a class="postlink" href="http://www.nessemble.com/documentation/">http://www.nessemble.com/documentation/</a><!-- m --><br />The text link on the web page : &quot;Edit on GitHub&quot; target to : <!-- m --><a class="postlink" href="https://github.com/kevinselwyn/nessemble/edit/master/docs/index.md">https://github.com/kevinselwyn/nessembl ... s/index.md</a><!-- m --><br />I think the target is: <!-- m --><a class="postlink" href="https://github.com/kevinselwyn/nessemble">https://github.com/kevinselwyn/nessemble</a><!-- m -->

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>snarf2888</b> [ Mon Aug 21, 2017 7:22 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Nessemble - new NES assembler</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thanks for the feedback so far!<br /><br />qalle, great tips on the documentation. I'll note that `NOP` and `SBC` both have undocumented opcodes, which would probably make the undocumented versions unreachable because the assembler would use the documented ones. Also, the additional pseudo-instructions you mentioned could easily be added with a little bit of scripting. And tokumaru says I can define `.org` as &quot;organize&quot; <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" /> Although, I've looked at other assemblers, which ones define it as &quot;origin&quot;, out of curiosity?<br /><br />tokumaru, I'll look into some of the banking functionality. I'll admit that I haven't tried to make anything substantial with the assembler yet, but I'm sure pain points will emerge when I do. Also, I'll definitely add NES 2.0 support. If you use `--format RAW` when invoking the assembler, it will output a headerless ROM making 2600 development (theoretically) possible.<br /><br />klr128, good catch. Merci.<br /><br />Thanks, all!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Pokun</b> [ Mon Aug 21, 2017 7:42 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Nessemble - new NES assembler</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'm curious why indirection brackets () conflicts with mathematical brackets on some assemblers but not others? Or are they separate for clarity reasons? Personally I prefer () for indirection because [] are very tedious to type on many non-English keyboards (as we just discussed in <a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=16375&amp;start=15#p202918" class="postlink">another thread</a>).<br /><br />Also while I'm not totally against NESASM's zeropage addressing notation, I think CA65 is doing it the best way. It automatically chooses zeropage addressing when a zeropage address is used, which can be overridden by a prefix before the address if one needs to.<br />Non-automatic zeropage addressing could be annoying if one needs to move lots of variables from the zeropage.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Aug 21, 2017 8:05 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Nessemble - new NES assembler</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">snarf2888 wrote:</div><div class="quotecontent">And tokumaru says I can define `.org` as &quot;organize&quot; <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" /> Although, I've looked at other assemblers, which ones define it as &quot;origin&quot;, out of curiosity?</div><br />Probably just about every single one of them, including emulators for architectures other than 6502. Google <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">assembly org origin</tt> returns <a href="http://dewkumar.blogspot.com/2012/01/what-is-org-origin-directive-in.html" class="postlink">this page</a>, for example.<br /><br />I'm curious why indirection brackets () conflicts with mathematical brackets on some assemblers but not others? Or are they separate for clarity reasons?<br />I imagine it makes the parser simpler. Just matching <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">lda &#40;some_arbitrary_string&#41;,Y</tt> won't work; you have to match <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">lda &#40;some_full_expression&#41;,Y</tt>, which means it has to be applied after the stage of the parser that recognizes expressions. And the expression part of the parser has to be smart enough not to swallow the outermost parentheses.<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">; These should assemble the same way, using aaaa,Y addressing mode<br />lda 3*4+2*5,Y<br />lda (3*4)+(2*5),Y<br /><br />; This should assemble differently, using (dd),Y addressing mode<br />lda (3*4+2*5),Y<br /></div><br />Perhaps the author of the MagicKit assemblers (PCEAS and NESASM) thought brackets would simplify the parser and wasn't considering the francophone minority, as more developers were in Japanese- or English-speaking countries when the TG16 and NES were popular.<br /><br />The other issue is that the 65816 uses brackets for &quot;indirect long&quot; addressing modes, which use the data bank in the pointer instead of the data bank from the data bank register.<br /><br /><div class="quotetitle">Pokun wrote:</div><div class="quotecontent">Non-automatic zeropage addressing could be annoying if one needs to move lots of variables from the zeropage.</div><br />This feature arises from MagicKit's early focus on the HuC6280, the CPU of the TG16. Its direct page is at $2000-$20FF instead of $0000-$00FF. The direct page of the SPC700 (Super NES audio CPU) is at $0000-$00FF or $0100-$01FF depending on P bit 5. The direct page of the LR35902 (Game Boy CPU) is at $FF00-$FFFF, though that one's based on an 8080 rather than a 6502. And the direct page of the 65816 can be moved to start at any location in bank 0 ($000000-$00FFFF), though if direct page doesn't start on a 256-byte boundary, each direct page instruction incurs an extra cycle of index addition penalty.<br /><br />On the HuC6280, for example, which address should <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">lda $02</tt> read? Should it read $0002 in absolute mode? Or should it read $2002 in direct page mode?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>snarf2888</b> [ Mon Aug 21, 2017 8:26 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Nessemble - new NES assembler</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I had parsing problems with [] vs (). I _wanted_ to use () for indirect addressing et al., but it was simpler for the assembler to parse [].<br /><br />Regarding the zeropage syntax, I also dislike having to use &lt;, but automagically figuring out if an address is zeropage was difficult for my assembler, especially when it came to using labels (since label addresses are gathered during the first pass of the assembler). In the end, I wanted people to opt in to optimizing and using zeropage addressing instead of trying to think for the programmer.<br /><br />Turns out, it's difficult to write parsers.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>zzo38</b> [ Mon Aug 21, 2017 8:49 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Nessemble - new NES assembler</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I do have a suggestion about the extending. If a JavaScript code returns a ArrayBuffer, Uint8Array, or DataView, it should accept that too rather than only a string. (Similar things can be supported in Scheme and Lua if they have similar features, but I don't know if they do.)<br /><br />The = syntax for defining constants within the assembly code does not seem to be documented, although that is what seems to be the case by looking at the source codes; apparently also a label name by itself with no colon or anything else defines a constant 1, which should also be documented if that is in fact the case.<br /><br />Also, I do happen to like the MagicKit-style addressing modes, even if some people do not.<br /><br />Adding additional functions for use with JavaScript-based extensions can also be helpful, such as (could be added into a &quot;Nessemble&quot; global object; you could use a code such as <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">const N=Nessemble;</tt> if you wanted an abbreviation):<ul><li><tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">include&#40;filename&#41;</tt> for including another JavaScript code from another file.</li><li><tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">loadText&#40;filename&#41;</tt> for reading another file as text.</li><li><tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">loadBinary&#40;filename&#41;</tt> for reading another file as a ArrayBuffer.</li><li><tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">save&#40;filename,data&#41;</tt> for writing data (either a string or a ArrayBuffer or typed array or DataView) to another file.</li><li><tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">addSymbol&#40;name,value,type&#41;</tt> to add a symbol.</li><li><tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">pass&#40;&#41;</tt> to determine which pass of the assembler it is.</li><li><tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">address&#40;&#41;</tt> to tell you the current address.</li><li><tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">romArray&#40;&#41;</tt> to retrieve a Uint8Array for the ROM.</li></ul>(and so on; possibly not all of them will be implemented at once, but some versions might implement sone.)<br /><br />Another suggestion can be ability to omit the word <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.macro</tt> when calling a macro in cases where it is unambiguous, like other assemblers will do too.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>qalle</b> [ Mon Aug 21, 2017 10:30 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Nessemble - new NES assembler</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">snarf2888 wrote:</div><div class="quotecontent">I had parsing problems with [] vs (). I _wanted_ to use () for indirect addressing et al., but it was simpler for the assembler to parse [].</div><br /><br />Ophis uses [] as mathematical brackets and () for indirect addressing modes: <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">lda &#40;[1+1]*3&#41;,y</tt> (which I like).<br /><br /><div class="quotetitle">snarf2888 wrote:</div><div class="quotecontent">...automagically figuring out if an address is zeropage was difficult for my assembler, especially when it came to using labels...</div><br />The reason why I abandoned my assembler project.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Pokun</b> [ Mon Aug 21, 2017 11:48 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Nessemble - new NES assembler</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent"><div class="quotetitle">Pokun wrote:</div><div class="quotecontent">Non-automatic zeropage addressing could be annoying if one needs to move lots of variables from the zeropage.</div><br />This feature arises from MagicKit's early focus on the HuC6280, the CPU of the TG16. Its direct page is at $2000-$20FF instead of $0000-$00FF. The direct page of the SPC700 (Super NES audio CPU) is at $0000-$00FF or $0100-$01FF depending on P bit 5. The direct page of the LR35902 (Game Boy CPU) is at $FF00-$FFFF, though that one's based on an 8080 rather than a 6502. And the direct page of the 65816 can be moved to start at any location in bank 0 ($000000-$00FFFF), though if direct page doesn't start on a 256-byte boundary, each direct page instruction incurs an extra cycle of index addition penalty.<br /><br />On the HuC6280, for example, which address should <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">lda $02</tt> read? Should it read $0002 in absolute mode? Or should it read $2002 in direct page mode?</div><br />Wouldn't LDA $02 simply read $2002 in zero page mode and $0002 in absolute mode since only in direct page mode the upper byte is implied? But I guess that there might not just be one right answer. The relocatable direct page of 65816 and SPC700 would require an assembler directive where the programmer tells the assembler where the DP is for automatic direct page addressing I guess.<br /><br />I'm not sure how Gameboy assemblers normally handle the LDH instruction though. But on the Gameboy the &quot;direct page&quot; is used for a relocated OAM-DMA subroutine, stack, hardware registers and as a fast direct page-like RAM, so there's not a lot of direct page variables to move around in the first place. I think RGBASM uses LDH as forced direct page addressing no matter if the upper byte ($FF) is used or not, but I haven't tested it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>kuja killer</b> [ Tue Aug 22, 2017 10:11 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Nessemble - new NES assembler</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />what about copying the &quot;auto zero page&quot; thing from the nesasm 2.51 so people dont have to type the &lt; thing for zero page stuff ??<br /><br /><!-- m --><a class="postlink" href="http://www.2a03.jp/~minachun/nesasm/nesasm_x86.html">http://www.2a03.jp/~minachun/nesasm/nesasm_x86.html</a><!-- m --><br /><br />I personally only use this type of NESASM for my megaman odyssey. Cause i hate the whole idea of typing those annoying &lt; things in front of zero page addresses and label names.<br /><br />This autozp version does not make you do that. so i only use that.<br /><br />Why was it &quot;never&quot; added to the version 3 anyway ??

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>snarf2888</b> [ Tue Aug 22, 2017 3:53 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Nessemble - new NES assembler</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">snarf2888 wrote:</div><div class="quotecontent">I wanted people to opt in to optimizing and using zeropage addressing instead of trying to think for the programmer.</div><br /><br />Programmers should be accountable for writing code optimized to their liking, even at such a low level.<br /><br />I can't speak to `.autozp`, but nesasm is an entirely different assembler than Nessemble. Feel free to <a href="https://github.com/kevinselwyn/nessemble" class="postlink">check out the code</a> and submit a pull request for new features.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Tue Aug 22, 2017 4:29 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Nessemble - new NES assembler</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The problem is that 99.9% of the time you DO want ZP addressing (who doesn't want faster code?), and having to type &quot;&lt;&quot; for every freaking ZP variable is incredibly annoying, considering that, at least for me, the bulk of the variables are there, while arrays and things that are referenced less often occupy the other pages. The only time you intentionally need to slow down the access to ZP variables is in timed code, which doesn't have much use on the NES outside of raster effects (and even then there are often other choices to waste 1 extra cycle). On the 2600 it's more common for me to need to access variables using 4 cycles (all of the RAM is in ZP on the 2600!), but it's still the exception.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>kuja killer</b> [ Tue Aug 22, 2017 9:46 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Nessemble - new NES assembler</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">and having to type &quot;&lt;&quot; for every freaking ZP variable is incredibly annoying, .</div><br /><br />yea exactly my point earlier. there's some bugs apparently with this 2.51 that were fixed in the version 3.whatever .. but i'll stay with this older one, cause of the autozp, sole reason only.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>