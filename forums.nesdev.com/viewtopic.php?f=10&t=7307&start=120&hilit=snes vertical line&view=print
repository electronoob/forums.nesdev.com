<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Hello World</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Hello World</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=7307">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=7307</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>9</strong> of <strong>18</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FinalZero</b> [ Wed Aug 03, 2011 1:38 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.repeat 8 <br />&nbsp; &nbsp; lda GamepadARaw ; Bit 0&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; == Current Button Status <br />&nbsp; &nbsp; shr&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; Bit 0 of Raw&nbsp; &nbsp; &nbsp;-&gt; Carry <br />&nbsp; &nbsp; rol GamepadA&nbsp; &nbsp; ; Bit 0 of Storage &lt;- Carry <br />.endrepeat</div><br />How would I even do this part in C?<br /><br /><div class="quotetitle">Shiru wrote:</div><div class="quotecontent">I think it is a good idea to <a href="http://wiki.cc65.org/doku.php?id=cc65:parameter_passing_and_calling_conventions" class="postlink">read docs</a> about things like this.<br /><br />For function like gamepad read, which does on have input params and has an output param, it could look like this in assembly:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp;.export _pad_check<br />_pad_check:<br />&nbsp;... your code put result in A<br />&nbsp;rts</div><br /><br />In C you need to have a prototype for the function:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">unsigned char __fastcall__ pad_check&#40;void&#41;;</div></div>
<br />I see that the assembly version names have leading underscores. I can't find the documentation, but I was just reading that one shouldn't do that, and there was some other way to do it. Do you know what I'm talking about?
<br />
<br />Also, are you sure that you need to export from the asm file? I get an error: "Symbol '_readGamepadA' is already an import" when I try to export it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Shiru</b> [ Wed Aug 03, 2011 2:25 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You want me to rewrite your assembly code into C or you just have a problem with something certain? If you don't know how to read/write a memory location from C, just use a pointer, like:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">unsigned char i=*&#40;unsigned char*&#41;0x4016;//read<br />*&#40;unsigned char*&#41;0x4016=0;//write</div>
<br />
<br />I don't know about 'some other way' and don't see any problem with _, it works fine.
<br />
<br />I don't know structure of your project, in my project .export is needed.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FinalZero</b> [ Wed Aug 03, 2011 2:48 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">You want me to rewrite your assembly code into C or you just have a problem with something certain? If you don't know how to read/write a memory location from C, just use a pointer, like:</div><br />No, I already know how to do that. I meant the loading, shifting, and rolling. C doesn't have a rolling operator for some reason. (I think it's because of portability issues iirc.)<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I don't know about 'some other way' and don't see any problem with _, it works fine. </div><br />He said it was because it might not work in future versions. He might change how names are mangled.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I don't know structure of your project, in my project .export is needed.</div>
<br />I'm looking at your source code for Alter Ego, and it is helpful.
<br />
<br />Okay, Gamepad.h has 3 things in it:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">#define gamepadARaw 0x4016<br />byte gamepadA, gamepadAOld;<br />void fastcall readGamepadA&#40;void&#41;;</div>
<br />Main.c includes Gamepad.h. Gamepad.s includes Main.s, because it needs to use gamepadARaw, gamepadA, and gamepadAOld. So while it's exporting _read, it's also importing it from Gamepad.h through Main.c through Main.s. Anyways, I just put the variables/memory locations in question in Gamepad.s, since Main.c doesn't need them.
<br />
<br />* * *
<br />
<br />Also, I've discovered that leaving out void in a function definition's parameter list means it's variadic. *sigh*

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Shiru</b> [ Wed Aug 03, 2011 2:53 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Loading - reading a pointer. Shift &lt;&lt; or &gt;&gt;. ROL just involves a bit more logic. In this exact case you don't even need ROL. Like,
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">i=*&#40;unsigned char*&#41;GamedapARaw;<br />GamepadA=&#40;GamepadA&lt;&lt;1&#41;|&#40;i&amp;1&#41;;</div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FinalZero</b> [ Wed Aug 03, 2011 3:36 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thanks.
<br />
<br />So, my latest error is a linker one: "Error: Input file 'nes.lib' not found". However, I'm confused because I've already set CC65_HOME.
<br />
<br />Anyways, cheating and just putting nes.lib in the same directory, it's now complaining about the header segment overflowing, though I don't know why...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Wed Aug 03, 2011 3:58 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">FinalZero wrote:</div><div class="quotecontent">Also, I use "byte" as a typedef for "unsigned char" (and "ushort" for "unsigned short", etc). The latter is just too long to type.</div><br />I've seen u8, s8, u16, s16, u32, s32 used in the GBAdev community. Once GCC began to support C99 stdint.h, these became defined in terms of uint8_t and friends.<br /><br /><div class="quotetitle">FinalZero wrote:</div><div class="quotecontent">I meant the loading, shifting, and rolling. C doesn't have a rolling operator for some reason. (I think it's because of portability issues iirc.)</div>
<br />This (untested) exercises parts of my brain that I haven't used since the GBA was popular:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">#define P1 &#40;*&#40;volatile unsigned char *&#41;0x4016&#41;<br />#define P2 &#40;*&#40;volatile unsigned char *&#41;0x4017&#41;<br /><br />uint8_t read_pad1&#40;void&#41; &#123;<br />&nbsp; uint8_t out = 0;<br /><br />&nbsp; P1 = 1;<br />&nbsp; P1 = 0;<br />&nbsp; for &#40;uint8_t x = 8; x &gt; 0; --x&#41; &#123;<br />&nbsp; &nbsp; uint8_t newBit = &#40;P1 &amp; 0x03&#41; ? 1 : 0;<br />&nbsp; &nbsp; out = &#40;out &lt;&lt; 1&#41; | newBit;<br />&nbsp; &#125;<br />&nbsp; return out;<br />&#125;<br /></div>
<br />If the header segment is overflowing, perhaps someone or something forgot to switch to the code segment.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FinalZero</b> [ Wed Aug 03, 2011 4:15 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">these became defined in terms of uint8_t and friends. </div><br />Ick, ugly. I don't see anything wrong with how C# decided to name it's primitives.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><div class="codetitle"><b>Code:</b></div><div class="codecontent">volatile</div></div><br />I thought volatile didn't do anything in cc65.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">If the header segment is overflowing, perhaps someone or something forgot to switch to the code segment.</div>
<br />No, I checked that right away. I've since discovered why, after looking at the map file. nes.lib apparently has a header segment and places some code there. 'Twas simply a name clash.
<br />
<br />* * *
<br />
<br />I still can't link though. "Unresolved external __BSS_RUN__ in: zerobss.s" and 10 more similar to it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FinalZero</b> [ Fri Aug 05, 2011 6:10 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Another question: What size does cc65 make enums? Please don't tell me they're int's by default. Is there a way to specify the size? This is long-overdue imo; at least they're adding it to C++0x. Hopefully C starts supporting it too.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Fri Aug 05, 2011 9:01 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Shiru wrote:</div><div class="quotecontent">Also, signed types are slow, avoid to use them;</div><br />True, this is why CC65 char defaults to unsigned. That is, char == unsigned char.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">and <strong>local vars are slow</strong> to, so it is better to have global vars for common things like loop counters.</div><br />True, unless the "make local variables static" compiler switch is used. Still it's a good idea to have some global general use variables to avoid wasting memory.<br /><br /><div class="quotetitle">FinalZero wrote:</div><div class="quotecontent">I see that the assembly version names have leading underscores. I can't find the documentation, but <strong>I was just reading</strong> that one shouldn't do that, and there was some other way to do it. Do you know what I'm talking about?</div><br />Read where? I don't think there's any other way to do it.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Also, I've discovered that leaving out void in a function definition's parameter list means it's variadic. *sigh*</div><br />That's normal C behavior.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I thought volatile didn't do anything in cc65.</div><br />It doesn't yet, but might be changed in the future.<br /><br /><div class="quotetitle">FinalZero wrote:</div><div class="quotecontent">Another question: What size does cc65 make enums? </div>
<br />I think they're int, but it doesn't really matter a whole lot. You can assign enumerated values to unsigned chars.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Fri Aug 05, 2011 9:57 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />One thing I don't understand is why they use indirect adressing for the C stack.
<br />If only they would optionally allow to limit the stack to 256-bytes (or less) and acess it with indexed adressing. It would save 2 cycles on every read and 1 cycle on every write.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FinalZero</b> [ Fri Aug 05, 2011 9:58 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">That's normal C behavior.</div><br />So now I know. I do most of my programming in C++, and it seems that I'm always ambushed by something that works differently in C.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Read where? I don't think there's any other way to do it.</div>
<br />It was either in the mailing correspence or on the website.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Aug 05, 2011 10:15 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">One thing I don't understand is why they use indirect adressing for the C stack.</div>
<br />Because standard practice in C, especially in existing programs originally developed for platforms other than the NES, is to use a stack far bigger than 256 bytes.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FinalZero</b> [ Fri Aug 05, 2011 10:27 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Anyways, can I get help with my linker error? I can't even find a file named "zerobss.s", "copydata.s", "condes.s", or "crt0.s".
<br />
<br />* * *
<br />
<br />Edit: I found what I was talking about earlier. It seems he was talking about inline assembly only.
<br />
<br /><div class="quotetitle">http://www.cc65.org/doc/cc65-9.html wrote:</div><div class="quotecontent">Note: Do not embed the assembler labels that are used as names of global variables or functions into your asm statements. Code like this<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;int foo;<br />&nbsp; &nbsp; &nbsp; &nbsp; int bar &#40;&#41; &#123; return 1; &#125;<br />&nbsp; &nbsp; &nbsp; &nbsp; __asm__ &#40;&quot;lda _foo&quot;&#41;;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;/* DON'T DO THAT! */<br />&nbsp; &nbsp; &nbsp; &nbsp; ...<br />&nbsp; &nbsp; &nbsp; &nbsp; __asm__ &#40;&quot;jsr _bar&quot;&#41;;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;/* DON'T DO THAT EITHER! */</div><br />may stop working if the way, the compiler generates these names is changed in a future version. Instead use the format specifiers from the table above:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;__asm__ &#40;&quot;lda %v&quot;, foo&#41;;&nbsp; &nbsp; &nbsp; &nbsp; /* OK */<br />&nbsp; &nbsp; &nbsp; &nbsp; ...<br />&nbsp; &nbsp; &nbsp; &nbsp; __asm__ &#40;&quot;jsr %v&quot;, bar&#41;;&nbsp; &nbsp; &nbsp; &nbsp; /* OK */</div></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FinalZero</b> [ Mon Sep 12, 2011 12:35 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Because standard practice in C, especially in existing programs originally developed for platforms other than the NES, is to use a stack far bigger than 256 bytes.</div>
<br />Doesn't the NES already have a stack at $0100–$01FF ? Why does C use it's stack for? Is it just stored in normal memory, or someplace special?
<br />
<br />* * *
<br />
<br />I was looking at: <!-- m --><a class="postlink" href="http://en.wikibooks.org/wiki/NES_Programming">http://en.wikibooks.org/wiki/NES_Programming</a><!-- m -->
<br />
<br />Can someone explain $4020–$5FFF in more depth? Were there ever any roms that were had more than $FFFF space?
<br />
<br />Doesn't the size of the $6000–$7FFF region depend on the mapper/cart?
<br />
<br />Is $8000–$FFFF the space the game code actually resides? Is that were the linker has to be directed to put things?
<br />
<br />Do these things apply to all mappers? or just a certain one?
<br />
<br />What kind of things are typically stored in the zeropage segment/range?
<br />
<br />* * *
<br />
<br />Also, addressing modes in ca65. Is the following right?:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">LDA $00F8 ; Absolute<br />LDA $F8 ; Zero Page</div>
<br />It'll detect whether a byte or 2 bytes are given to it?
<br />
<br />* * *
<br />
<br />Also also, what do "prg" and "chr" stand for exactly? "program" and "character"?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Mon Sep 12, 2011 3:50 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">FinalZero wrote:</div><div class="quotecontent">Doesn't the NES already have a stack at $0100–$01FF ? Why does C use it's stack for? Is it just stored in normal memory, or someplace special?</div><br />Yes, it's stored in normal RAM. The reason is, like tepples said, that for many applications the default 256 byte stack of 6502 is not big enough.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Can someone explain $4020–$5FFF in more depth? Were there ever any roms that were had more than $FFFF space?</div><br />Cart can theoretically map anything it wants at 4020-5FFF (RAM/ROM/your momma), but most commercial carts don't put anything in there.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Doesn't the size of the $6000–$7FFF region depend on the mapper/cart?</div><br />I don't understand the question. Size of that region is always 8K. Again, THEORETICALLY, a cart can have bank switching features that allows to switch RAM/ROM/your momma in that region. For example, FME-7 allows to map ROM in that area as well. For the most part, that area is used for 8K RAM expansion, that's included in the cart.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Is $8000–$FFFF the space the game code actually resides? Is that were the linker has to be directed to put things?</div><br />Yes, most of the time the code runs in that area of the memory.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">What kind of things are typically stored in the zeropage segment/range?</div><br />Pointers, mostly (to use with the (ind),y addressing, e.g. LDA (foo),y).<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Also, addressing modes in ca65. Is the following right?:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">LDA $00F8 ; Absolute<br />LDA $F8 ; Zero Page</div><br />It'll detect whether a byte or 2 bytes are given to it?</div><br />Nope, you have to use LDA a:$F8 to tell the address is absolute.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Also also, what do "prg" and "chr" stand for exactly? "program" and "character"?</div>
<br />Yup.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>9</strong> of <strong>18</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>