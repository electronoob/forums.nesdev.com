<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=2&amp;t=4824" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2009-02-04T14:34:18-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=2&amp;t=4824</id>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2009-02-04T14:34:18-07:00</updated>
<published>2009-02-04T14:34:18-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4824&amp;p=42820#p42820</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4824&amp;p=42820#p42820"/>
<title type="html"><![CDATA[Things to consider for enemy attributes]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4824&amp;p=42820#p42820"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Bregalad, when you say width and height of the collision detection, does this mean you use the center of the character as a reference point?<br /></div><br />Well, by default when a new enemy appear on screen my "NewEnemy" routine makas the top = YPos-Height, Bottom = YPos+8, Left = XPos-Width, Right = XPos+Width.<br />So my reference is the center horizontally, and 8 pixels above the bottom vertically. This is because I use top-down view, and that 8 pixel is about the height of stuff, when colliding with the background the top is ignored and YPos is used directly instad, so that the head of player/ennemies can go into obscacle, but it will stop where the feets are.<br /><br />If I were to do a plaftormer I would probably also make the center as a reference vertically to simplify things up.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Wed Feb 04, 2009 2:34 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Celius]]></name></author>
<updated>2009-02-04T12:28:54-07:00</updated>
<published>2009-02-04T12:28:54-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4824&amp;p=42817#p42817</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4824&amp;p=42817#p42817"/>
<title type="html"><![CDATA[Things to consider for enemy attributes]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4824&amp;p=42817#p42817"><![CDATA[
I would guess the top left corner is a reference point, and "height" actually extends downward, since we're working with the (whatever the hell it's called) coordinate system where X increases left to right, and Y increases top to bottom.<br /><br />But I forgot to list that in the things I keep track of. Each object pretty much has it's own bounding box with a width and height. I usually use the top left corner as a reference point for this, where the enemy's right border edge would be something like "XCoordinate + 24".<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=138">Celius</a> — Wed Feb 04, 2009 12:28 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Roth]]></name></author>
<updated>2009-02-04T12:17:20-07:00</updated>
<published>2009-02-04T12:17:20-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4824&amp;p=42815#p42815</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4824&amp;p=42815#p42815"/>
<title type="html"><![CDATA[Things to consider for enemy attributes]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4824&amp;p=42815#p42815"><![CDATA[
Thanks guys, this will be great food for thought : )<br /><br />Bregalad, when you say width and height of the collision detection, does this mean you use the center of the character as a reference point?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=174">Roth</a> — Wed Feb 04, 2009 12:17 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2009-02-04T02:41:14-07:00</updated>
<published>2009-02-04T02:41:14-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4824&amp;p=42800#p42800</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4824&amp;p=42800#p42800"/>
<title type="html"><![CDATA[Things to consider for enemy attributes]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4824&amp;p=42800#p42800"><![CDATA[
Well, I handle this so that each enemy has in ROM some data for it :<br /><br />- Sprite Animations<br />- Color used (for palette swapping)<br />- AI start adress<br />- Width and height of collision detection<br />- Score points rewarded<br />- Vunlerability against various weapons<br /><br />In RAM I handle :<br />- X, Y position<br />- Software stack containing AI adress (automatically changes every frame with some stack tweaking, as discussed <a href="http://nesdev.com/bbs/viewtopic.php?t=493&amp;highlight=ennemy" class="postlink">here</a>)<br />- Stack poitger<br />- What animation frame is currently used<br />- Which direction the ennemy is facing<br />- Health<br />- Some more general-purpose variables<br />- Topleft, topright, bottomleft and bottomright coordinates (I've added them later so that ennemies can change their own shape if they want). Are normally initialized once and never touched again, but I touch them for bosses<br /><br />I set the coordinate in RAM zero page variable each frame, they're not part of the enemy's stat.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Wed Feb 04, 2009 2:41 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Celius]]></name></author>
<updated>2009-02-03T21:28:19-07:00</updated>
<published>2009-02-03T21:28:19-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4824&amp;p=42795#p42795</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4824&amp;p=42795#p42795"/>
<title type="html"><![CDATA[Things to consider for enemy attributes]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4824&amp;p=42795#p42795"><![CDATA[
For my game, all of the objects in the room are given a variable chunk of RAM. I use SRAM, so I have more RAM to work with than normal. I assign 2k of RAM to be distributed among all the enemies in the room. Some are more complex than others and need more RAM to work with, so this is why I decided to allow enemies to have variable sized RAM given to them. But in general, here's how my enemy's chunks of RAM will look:<br /><br />00 - Address of AI code Low<br />01 - Address of AI code High<br />02 - Size of RAM dedicated to enemy<br />03 - X Coordinate (precision)<br />04 - X Coordinate Low<br />05 - X Coordinate High<br />06 - Y Coordinate (precision)<br />07 - Y Coordinate Low<br />08 - Y Coordinate High<br />09 - Health Low<br />0A - Health High<br />0B - Mana (maybe, I haven't decided on having this yet)<br />0C - Current Graphic<br />0D - Direction Facing<br />;A bunch of other counting variables are used too.<br /><br />What's great is that I handle all of my enemies with their own AI code. So any stats like strength, magic power, etc. are all hard coded into the AI code. But the thing about this is that once a room is entered, objects can neither be created nor destroyed. Since this is the case, if a skeleton wants to throw a bone at you, it has to use its own RAM to keep track of the bone's coordinates, and to check if the bone hit the player the skeleton has to do that in its AI code. So a skeleton may reserve 32 bytes of RAM or so for itself, because it has to save room for the bone it will throw.<br /><br />And I don't need to keep track of "states", because I can change the "address" bytes to point to a different section of code depending on what the enemy is doing.<br /><br />Anyways, that's the story about RAM usage. There are attributes to an enemy which I may not store in RAM, but generally they still exist:<br /><br />Max Health (8 or 16 bits)<br />Max MP (8 or 16 bits, maybe I'll use it, maybe I won't)<br />Strength<br />Magic Power<br />Defense<br />Elemental Weakness<br />Items to drop<br />Address of graphics data<br />Money to drop<br /><br />But again, there are really no strict guidelines to the way I have things set up. I could make an enemy that has 64 bits worth of HP or 128 bits worth of MP, though it would be ridiculous. Since things like candles (Castlevania candles) are considered objects, they have their own AI code too, but they only need like 6-8 bytes to keep all their information, and I won't need to waste time/space defining HP or MP of a candle. Unfortunately, I will still need to have 16-bit coordinates for them because the rooms are multiple screens in size. For them I will probably have:<br /><br />00 - Size of chunk<br />01 - Address Low<br />02 - Address High<br />03 - X Coordinate Low<br />04 - X Coordinate High<br />05 - Y Coordinate Low<br />06 - Y Coordinate High<br /><br />And even though they don't move, I still need to keep to reserve space for the coordinates also because they drop items, and those coordinates can be replaced with those of the items they drop.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=138">Celius</a> — Tue Feb 03, 2009 9:28 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Sivak]]></name></author>
<updated>2009-02-03T20:25:37-07:00</updated>
<published>2009-02-03T20:25:37-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4824&amp;p=42793#p42793</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4824&amp;p=42793#p42793"/>
<title type="html"><![CDATA[Things to consider for enemy attributes]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4824&amp;p=42793#p42793"><![CDATA[
In my game, each enemy is assigned 16 variables and there can be 16 enemies/objects total on-screen, basically taking up a full 256 chunk.  I use $0300-$03FF for enemy stuff.<br /><br />Anyway, the variables I use are as follows:<br /><br />0 - Type<br />1 - State (reads from each individual enemy's table of stuff and has them behave accordingly).  State 0 initializes the enemy and sets the various other variables.<br />2 - Hit box left<br />3 - Hit box right<br />4 - Hit box top<br />5 - Hit box bottom<br />6 - Health (can be used for other things if I need another var and health is a non-issue)<br />7 - Sprite X (sprites can be drawn in a different spot relative to the hitbox)<br />8 - Sprite Y<br />9 - Sprite Attribute<br />A - Tile.  This mainly functions as an index as things can be animated.  For bullets I just use it to be the actual tile in memory, however.<br />B - State after init.  Some enemies might start out doing an assortment of things, so this will tell it where to go from there.  The ball enemies, for example, can start out by moving in one of 4 directions as well as a certain speed.  This would tell which of those I would want it to go to.<br />C, E, D, and F:  Extra variables.  Can be used for whatever.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3374">Sivak</a> — Tue Feb 03, 2009 8:25 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Roth]]></name></author>
<updated>2009-02-03T20:17:49-07:00</updated>
<published>2009-02-03T20:17:49-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4824&amp;p=42792#p42792</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4824&amp;p=42792#p42792"/>
<title type="html"><![CDATA[Things to consider for enemy attributes]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4824&amp;p=42792#p42792"><![CDATA[
Okay, so I'm trying to think of things that I should consider for enemy attributes. When I say attributes, I mean all of the information that the enemy will need. What kinds of things do you guys store data-wise? Do you have bytes set aside to define the top, bottom, left, and right of their hit detection, or do you do a routine that draws their hitbox when they first appear on screen? Do you have a byte set up for which direction they are facing, like a direction state? A byte for what they are doing at that time, like moving, standing still, be destroyed, etc.?<br /><br />I'd really like to know how everyone else handles this. I'd like to come up with a couple of routines that can handle all the enemies, but I don't know if that will be possible or not.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=174">Roth</a> — Tue Feb 03, 2009 8:17 pm</p><hr />
]]></content>
</entry>
</feed>