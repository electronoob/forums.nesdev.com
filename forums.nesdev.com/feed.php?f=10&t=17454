<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=10&amp;t=17454" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2018-08-16T20:42:58-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=10&amp;t=17454</id>
<entry>
<author><name><![CDATA[DocWaluigean]]></name></author>
<updated>2018-08-16T20:42:58-07:00</updated>
<published>2018-08-16T20:42:58-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17454&amp;p=223627#p223627</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17454&amp;p=223627#p223627"/>
<title type="html"><![CDATA[Re: Hello, new here, and need best recommandations.]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17454&amp;p=223627#p223627"><![CDATA[
<div class="quotetitle">Kasumi wrote:</div><div class="quotecontent"><br />I responded to one of your posts at 1:10 am. At 1:50 am, was my second response. That's 40 minutes to write just the second post. I also had to read your posts in order to respond. (Maybe obvious, but I feel like people often forget this.) Probably at least an hour of work went into those posts. I could have done anything else in that time.<br /><br />I've helped people who post source code with basically no context, which means I have to read all their source code which usually does not take a small amount of time.<br /><br />You have trouble believing some people are here to help? It's a mixed bag of personalities, sure. But that's the only way it can work. I'm not trying to guilt you too much, but I think it's worth <em>really</em> thinking about the collective time we all spent to create about 35 posts worth of guidance. Imagine if one person decided to do that for you, for free.<br /><br />If you want a tutor without paying, well, you've got it. You've got <em>pages</em> of help you didn't pay for. Maybe some of it's a little tough love, but again. Really think about what you've received here already. <em>This is extra!</em> This is <em>in addition</em> to the <em>free resources</em> that already exist. Like that often repeated answer of easy6502. You think it's bad when we recommend easy6502 a lot? The alternative is rewriting easy6502! It's much easier to answer your questions about it than rewrite it.<br /><br />What are your questions about it? Where are you stuck? These are not rhetorical questions!<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Also, if I tried to re-reading in the same place, it will feel like I ain't progressing and demotivation increases as I get stuck.<br /></div><br />Then ask. If there's anything about my posts you don't understand. ASK! I spent the hour because I want to help. If you don't understand the help, do you really think I'd rather have you struggle in silence after already investing in you? Ask! <br /><br />And the beauty of this is that if I ever start to feel drained by the time spent, there's an army of people just as knowledgeable or more knowledgeable who can fill my shoes while I recharge. Tokumaru and I were basically <em>racing</em> to help you first! Think about it!<br /><br />I'll leave you with this: <!-- m --><a class="postlink" href="https://forums.nesdev.com/viewtopic.php?f=10&amp;t=7451&amp;start=1290&amp;hilit=metatile">https://forums.nesdev.com/viewtopic.php ... t=metatile</a><!-- m --> This is a 97 page thead spanning 7 years that primarily serves the purpose of helping just one person. I'll even say I've lost my patience in the thread   <img src="http://forums.nesdev.com/images/smilies/icon_sad.gif" alt=":(" title="Sad" /> , but honestly we mostly really do just want to help.</div><br /><br />For people with difficulties to explain well, one part of me say it's very aggressive, and I should give up. Another part is I deserve this replies, and another say it's tough love, like you said, and so on and so on.<br /><br />Let me try and explain. Even though my reaction has partial negativity reading it, it's somewhat difficult to explain it, because I could just not reply it, but in turn, gives the feeling that I'm like everyone who gives up so easily, which I never want to be those.<br /><br />I have one of the biggest questions where it's incredibly obvious to know, yet I chose to ask it, and go deeper. I could tell you that I may get offended or criticized just for leeching or pulling many strings just to finally understand something. I'm not saying you do or something, but you want me to try and go full on questions and expect offensive replies about my knowledge or something, when I want to understand much deeper than before? There's a Japanese communities with more love on NES/FCU and they go ironman on everything, especially this 3 videos: <!-- m --><a class="postlink" href="https://youtu.be/FuQc1xpx78c?t=0s">https://youtu.be/FuQc1xpx78c?t=0s</a><!-- m --> <!-- m --><a class="postlink" href="https://www.youtube.com/watch?v=hi4MM1E5f7E">https://www.youtube.com/watch?v=hi4MM1E5f7E</a><!-- m --> <!-- m --><a class="postlink" href="https://www.youtube.com/watch?v=xMB5FK2YMVA">https://www.youtube.com/watch?v=xMB5FK2YMVA</a><!-- m --> yet I do not see super friendly tutorials that can work with even a toddler worldwide[?].<br />It made me feel so ashamed that no one feels the love to put enjoyment in coding as those communities, and I really want to boost the qualities of games, especially NES, by making 6502 much easier to learn. But the way of explaining has chances of criticizing me. It could made me feel demotivated to even figure out making tutorials about it. Even though I know chances of ignorance may shown about what I'm talking about.<br /><br />I'm a little confused on how to explain well to you.<br /><br />---<br /><br /><div class="quotetitle">Sumez wrote:</div><div class="quotecontent"><br /><div class="quotetitle">DocWaluigean wrote:</div><div class="quotecontent">I'm even willing to make a tutorial that's more comprehend-able than BunnyBoy if I understand everything.<br /></div><br /><br />I have never read Nerdy Nights, so I might be completely wrong about this, but is it possible that it was never a particularly good tutorial to begin with? Either way, programming for the NES is not so much about programming, as it's about understanding the hardware, and it's hard for any tutorial to cover this. You need documentation if you don't want to end up with more questions than you have answers.<br /><br />To be honest, I never even heard of Nerdy Nights before I had already learned what it attempts to teach. But whenever it's brought up, it's usually among newcomers who have been following it, and have a ton of questions based on it. Questions which are all answered on the Nesdev wiki, too.<br />As far as I'm aware, it was written quite some time ago, and doesn't really follow a lot of the standards that are usually recommended procedure (such as separating game logic from NMI), as well as relying on Nesasm, which a lot of people aren't fans of (I am not familiar with this either, but I like CA65 well enough to never move away from it).<br /><br />I think a big source of the problem is that people open up the tutorial and expect to learn everything from it. It's no wonder they come out with questions. I can't imagine any tutorial being thorough enough to make you understand everything going on in a piece of video game hardware, but what do I know.<br /><br />Here's what I did.<br />My approach might not be good for everyone, but it worked for me. I basically familiarized myself with every major aspect of the NES hardware (aside from sound generation) before picking up an assembler. That doesn't mean knowing all the ins and outs, but it meant being familiar with the concepts before eventually running into them. If you don't know what a nametable, OAM buffer or attributes are, you're not gonna get far. I browsed through all the most interesting pages of the Nesdev wiki, learning how stuff worked. This was primarily video output, but the NMI and controller reading was of course important too. I just did this here and there in my spare time, over a few days. At the point, this was my end goal, so maybe that made it easier for me, but it wasn't until I realised how basic the hardware actually was that I figured I should take it further and try making something.<br /><br />Then I learned 6502 independently from the NES hardware, which was pretty much required, but also pretty simple (<a href="https://skilldrick.github.io/easy6502/" class="postlink">this guide is excellent</a>), and finally I just downloaded a blank template of a working NES game, and mucked about in it for a few hours. <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br />Those last two steps was just one evening, but depending on how familiar you are with programming in general, it can take however long you feel is necessary. And of course it took me probably another week to get something really working and playable, but at that point the thing I had made was entirely my own thing, not following somebody's tutorial. And I never had any questions, because everything I made was based on individual and well documented examples from the Nesdev Wiki. Ok, so I did have a lot of stuff that I needed to look up, but nothing that hadn't already been discussed in details, so it was pretty easy to search for older forum threads.<br /><br />That said, everyone here is happy to answer questions, and like you said yourself - the only stupid question is the one that remains unasked. People don't mock people for their lack of knowledge, unless said people act like they know it all despite of it.</div><br /><br />I see. I got almost no replies about hardware understanding, since I want to make NES programs first before hardware. Possibly obvious replies from every beginner. only replies is if anyone from outside Japan ever make usage of custom sound chips made?<br /><br /><!-- m --><a class="postlink" href="http://wiki.nesdev.com/w/index.php/Nesdev_Wiki">http://wiki.nesdev.com/w/index.php/Nesdev_Wiki</a><!-- m --> NESDev Wiki has so many unfinished content, it's very frustrating to do things myself, &quot;to be written&quot;... I been NESDev for around decade, and it almost never changes.....<br /><br />Possibly, those people got big dreams to achieves, yet failed short after certain issues. Life? Emotions? other things. I agree on what you said though.<br /><br />Nametable is [the final ingredients before converting into usable applications?] And I'm sort of understanding what you said.<br /><br />Your literally lucky you understand things that I don't.  <img src="http://forums.nesdev.com/images/smilies/Mfr_icon_homebrew.png" alt=":beer:" title="Beer" />   <img src="http://forums.nesdev.com/images/smilies/icon_cry.gif" alt=":cry:" title="Crying or Very sad" />  <img src="http://forums.nesdev.com/images/smilies/Mfr_icon_homebrew.png" alt=":beer:" title="Beer" /> I'm jealous.<br /><br /><em>I see.. tell me if it's alright to go overboard. Because maybe I have to draw pictures and everything I can so I can see if it looks correct.</em><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9247">DocWaluigean</a> — Thu Aug 16, 2018 8:42 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Sumez]]></name></author>
<updated>2018-08-13T05:12:25-07:00</updated>
<published>2018-08-13T05:12:25-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17454&amp;p=223418#p223418</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17454&amp;p=223418#p223418"/>
<title type="html"><![CDATA[Re: Hello, new here, and need best recommandations.]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17454&amp;p=223418#p223418"><![CDATA[
<div class="quotetitle">DocWaluigean wrote:</div><div class="quotecontent"><br />I'm even willing to make a tutorial that's more comprehend-able than BunnyBoy if I understand everything.<br /></div><br /><br />I have never read Nerdy Nights, so I might be completely wrong about this, but is it possible that it was never a particularly good tutorial to begin with? Either way, programming for the NES is not so much about programming, as it's about understanding the hardware, and it's hard for any tutorial to cover this. You need documentation if you don't want to end up with more questions than you have answers.<br /><br />To be honest, I never even heard of Nerdy Nights before I had already learned what it attempts to teach. But whenever it's brought up, it's usually among newcomers who have been following it, and have a ton of questions based on it. Questions which are all answered on the Nesdev wiki, too.<br />As far as I'm aware, it was written quite some time ago, and doesn't really follow a lot of the standards that are usually recommended procedure (such as separating game logic from NMI), as well as relying on Nesasm, which a lot of people aren't fans of (I am not familiar with this either, but I like CA65 well enough to never move away from it).<br /><br />I think a big source of the problem is that people open up the tutorial and expect to learn everything from it. It's no wonder they come out with questions. I can't imagine any tutorial being thorough enough to make you understand everything going on in a piece of video game hardware, but what do I know.<br /><br />Here's what I did.<br />My approach might not be good for everyone, but it worked for me. I basically familiarized myself with every major aspect of the NES hardware (aside from sound generation) before picking up an assembler. That doesn't mean knowing all the ins and outs, but it meant being familiar with the concepts before eventually running into them. If you don't know what a nametable, OAM buffer or attributes are, you're not gonna get far. I browsed through all the most interesting pages of the Nesdev wiki, learning how stuff worked. This was primarily video output, but the NMI and controller reading was of course important too. I just did this here and there in my spare time, over a few days. At the point, this was my end goal, so maybe that made it easier for me, but it wasn't until I realised how basic the hardware actually was that I figured I should take it further and try making something.<br /><br />Then I learned 6502 independently from the NES hardware, which was pretty much required, but also pretty simple (<a href="https://skilldrick.github.io/easy6502/" class="postlink">this guide is excellent</a>), and finally I just downloaded a blank template of a working NES game, and mucked about in it for a few hours. <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br />Those last two steps was just one evening, but depending on how familiar you are with programming in general, it can take however long you feel is necessary. And of course it took me probably another week to get something really working and playable, but at that point the thing I had made was entirely my own thing, not following somebody's tutorial. And I never had any questions, because everything I made was based on individual and well documented examples from the Nesdev Wiki. Ok, so I did have a lot of stuff that I needed to look up, but nothing that hadn't already been discussed in details, so it was pretty easy to search for older forum threads.<br /><br />That said, everyone here is happy to answer questions, and like you said yourself - the only stupid question is the one that remains unasked. People don't mock people for their lack of knowledge, unless said people act like they know it all despite of it.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7819">Sumez</a> — Mon Aug 13, 2018 5:12 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Kasumi]]></name></author>
<updated>2018-08-13T02:42:38-07:00</updated>
<published>2018-08-13T02:42:38-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17454&amp;p=223415#p223415</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17454&amp;p=223415#p223415"/>
<title type="html"><![CDATA[Re: Hello, new here, and need best recommandations.]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17454&amp;p=223415#p223415"><![CDATA[
I responded to one of your posts at 1:10 am. At 1:50 am, was my second response. That's 40 minutes to write just the second post. I also had to read your posts in order to respond. (Maybe obvious, but I feel like people often forget this.) Probably at least an hour of work went into those posts. I could have done anything else in that time.<br /><br />I've helped people who post source code with basically no context, which means I have to read all their source code which usually does not take a small amount of time.<br /><br />You have trouble believing some people are here to help? It's a mixed bag of personalities, sure. But that's the only way it can work. I'm not trying to guilt you too much, but I think it's worth <em>really</em> thinking about the collective time we all spent to create about 35 posts worth of guidance. Imagine if one person decided to do that for you, for free.<br /><br />If you want a tutor without paying, well, you've got it. You've got <em>pages</em> of help you didn't pay for. Maybe some of it's a little tough love, but again. Really think about what you've received here already. <em>This is extra!</em> This is <em>in addition</em> to the <em>free resources</em> that already exist. Like that often repeated answer of easy6502. You think it's bad when we recommend easy6502 a lot? The alternative is rewriting easy6502! It's much easier to answer your questions about it than rewrite it.<br /><br />What are your questions about it? Where are you stuck? These are not rhetorical questions!<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Also, if I tried to re-reading in the same place, it will feel like I ain't progressing and demotivation increases as I get stuck.<br /></div><br />Then ask. If there's anything about my posts you don't understand. ASK! I spent the hour because I want to help. If you don't understand the help, do you really think I'd rather have you struggle in silence after already investing in you? Ask! <br /><br />And the beauty of this is that if I ever start to feel drained by the time spent, there's an army of people just as knowledgeable or more knowledgeable who can fill my shoes while I recharge. Tokumaru and I were basically <em>racing</em> to help you first! Think about it!<br /><br />I'll leave you with this: <!-- l --><a class="postlink-local" href="https://forums.nesdev.com/viewtopic.php?f=10&amp;t=7451&amp;start=1290&amp;hilit=metatile">viewtopic.php?f=10&amp;t=7451&amp;start=1290&amp;hilit=metatile</a><!-- l --> This is a 97 page thead spanning 7 years that primarily serves the purpose of helping just one person. I'll even say I've lost my patience in the thread   <img src="http://forums.nesdev.com/images/smilies/icon_sad.gif" alt=":(" title="Sad" /> , but honestly we mostly really do just want to help.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3504">Kasumi</a> — Mon Aug 13, 2018 2:42 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[DocWaluigean]]></name></author>
<updated>2018-08-12T21:25:17-07:00</updated>
<published>2018-08-12T21:25:17-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17454&amp;p=223410#p223410</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17454&amp;p=223410#p223410"/>
<title type="html"><![CDATA[Re: Hello, new here, and need best recommandations.]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17454&amp;p=223410#p223410"><![CDATA[
<div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><br />I haven't been following this thread closely, but it's not like us to call anyone a moron or anything of the kind. We're always willing to help those who demonstrate they're making progress. What nobody here likes is when we do our best to explain something to someone, taking time from other things we could be doing for ourselves (e.g. working on our own projects, spending time with our families, etc.), and the person's reply makes it clear they didn't even read it all.<br /></div><br /><br /><!-- m --><a class="postlink" href="https://forums.nesdev.com/viewtopic.php?f=5&amp;t=6313">https://forums.nesdev.com/viewtopic.php?f=5&amp;t=6313</a><!-- m --> <br /><br />I obviously know this person is acting...disrespectfully strange, but I am feeling a little offended when I think about the people calling offensive terms, where despite being on internet, and expect to be civilized, it just gives me impressions where people would just attack me if I was in similar position as him and I was trying to talk what I want to say, like uncomfortable term koitsu gave me, just because I tried to get straight-of-straight information instead of reusing the same answers everyone gets; bunnyboy and Easy6502. Until I signed up, I don't feel comfortable asking for help or try to learn NES by asking. Call me or anyone autism who feel the same way, but I rather never let it be exposed on my appearances. <br /><br /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><br />What we don't like is when people try to take shortcuts. There are no shortcuts... quite the opposite, really! If you're reading a post or a document, and all the information is flying over your head, you don't just skip and go &quot;yeah, this is not working for me, let's see what's next&quot;. You can't go forward if you don't understand what came before. You have to keep reading, over and over until something makes sense. Once something makes sense, read again and more things will make sense.<br /></div><br /><br />The thing about this is when I/anyone were to read documents like &quot;Programmanual&quot; and come across sentences that confuses the 6502 with other reference things, it could throw off easily with certain grammar or pronunciations. The only shortcuts I can think of is using mnemonics or &quot;cheat sheets&quot; that tells you what the code does and copy-paste the specific code to make things faster. <br /><br />Also, if I tried to re-reading in the same place, it will feel like I ain't progressing and demotivation increases as I get stuck. I'm not like average person who could easily understand it; it could take them 2 weeks at most to understand, this could take me about 8 months at most. Maybe I'm wrong or right, but the fact I'm stuck in Week 3 for many times, rarely going to Week 4 or 5, but revert back to week 3, just made me upset.<br /><br /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><br />We're here to help, we can explain things in a different way, we just don't have the time to rewrite every document and tutorial so they're perfect for everyone, and we don't have time to private tutor each person that comes to the forum saying that the information that currently exists is not in line with their favorite way of studying.<br /><br />Coding games is not an easy task, you'll have to adapt and overcome several hardships, so consider this the first of many problems to overcome. You'll have to adapt and make do with the documentation that exists, because no one will rewrite it all overnight. We'll be here to help when things don't make sense.<br /></div><br /><br />I'm a little unsure about this. It's either I feel I refused to accept this paragraph, or I'm trying too hard to accept and understand, that the fact I tried to learn on something I'm stuck on for long time. I could say, &quot;Maybe I want to be the one who'll rewrite it all overnight if I get real tutor and help.&quot;, but it'll just be repeating myself and encourages frown against me.<br /><br />If that's true about help, where did the &quot;elitist&quot; and &quot;strict&quot; ideologies come from...?<br /><br />So what if I write to write a storyboard / script of how to learn NES 6502 programming, and I need some form of clarifications?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9247">DocWaluigean</a> — Sun Aug 12, 2018 9:25 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2018-08-12T21:05:34-07:00</updated>
<published>2018-08-12T21:05:34-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17454&amp;p=223409#p223409</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17454&amp;p=223409#p223409"/>
<title type="html"><![CDATA[Re: Hello, new here, and need best recommandations.]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17454&amp;p=223409#p223409"><![CDATA[
I haven't been following this thread closely, but it's not like us to call anyone a moron or anything of the kind. We're always willing to help those who demonstrate they're making progress. What nobody here likes is when we do our best to explain something to someone, taking time from other things we could be doing for ourselves (e.g. working on our own projects, spending time with our families, etc.), and the person's reply makes it clear they didn't even read it all.<br /><br />What we don't like is when people try to take shortcuts. There are no shortcuts... quite the opposite, really! If you're reading a post or a document, and all the information is flying over your head, you don't just skip and go &quot;yeah, this is not working for me, let's see what's next&quot;. You can't go forward if you don't understand what came before. You have to keep reading, over and over until something makes sense. Once something makes sense, read again and more things will make sense.<br /><br />We're here to help, we can explain things in a different way, we just don't have the time to rewrite every document and tutorial so they're perfect for everyone, and we don't have time to private tutor each person that comes to the forum saying that the information that currently exists is not in line with their favorite way of studying.<br /><br />Coding games is not an easy task, you'll have to adapt and overcome several hardships, so consider this the first of many problems to overcome. You'll have to adapt and make do with the documentation that exists, because no one will rewrite it all overnight. We'll be here to help when things don't make sense.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Sun Aug 12, 2018 9:05 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[DocWaluigean]]></name></author>
<updated>2018-08-12T19:55:34-07:00</updated>
<published>2018-08-12T19:55:34-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17454&amp;p=223406#p223406</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17454&amp;p=223406#p223406"/>
<title type="html"><![CDATA[Re: Hello, new here, and need best recommandations.]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17454&amp;p=223406#p223406"><![CDATA[
<div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><br /><div class="quotetitle">DocWaluigean wrote:</div><div class="quotecontent">I'm even willing to make a tutorial that's more comprehend-able than BunnyBoy if I understand everything.<br /></div><br />You'd be surprised by how many people have said that, but either &quot;forgot&quot; or just gave up on NES development.<br /><br />It's not easy to word this stuff in simpler terms, because this really isn't a simple subject. You can't replace terms like registers, mirroring, addressing, etc. by simpler ones because they describe unique things and behaviors that don't necessarily have counterparts that are easier to comprehend. We can EXPLAIN all the terms and behaviors individually so that when you see them at a later time they won't sound like alien concepts, but programming knowledge is something you build progressively, you have to understand one layer before moving on to the next, you can't skip to the topmost layer and expect things to be worded in a way that circumvents everything established in the layers below.</div><br /><br />As sadly as I have to agree on the term, there is a form of ambitions in certain people that made them attempt to do those kinds. For many people on &quot;forgot&quot; or just gave up, they didn't find motivations or ambitions, since &quot;it's a waste of time to make tutorial for a dead old program&quot; beliefs or other things. <br />For me, I have big one, that every time I felt quitting, I only went to sleep to calm myself down, because I feel upset so much for a while since no tutor or any road is there for me. I waited time to try again, and try to explain much differently. The road I always get stuck is 6502 Processor Overview in Week 3. <br /><br />As I'm predicting you hear this term also, I'm not like any people who have said those kinds. I find much more values in NES programming than before more and more, especially NIKI homebrew games, Mario Adventure 3: Mushroom Mayhem, yet I often struggles with coding without forms of learning styles like mnemonics. It's odd that I understand partially in BASIC, Java[Script], and C#, yet I struggle the most in 6502, even though I feel it's one of hard-to-learn coding languages and it's obvious.<br /><br />There's a learning styles called VARK where it shows some kind of learning styles for people who learns best of: Visual, Aural, Read/Write, and Kinesthetic. For me, it's possible for, at most, all 4 of it.<br /><br />Maybe I can't explain well or get you guys to understand where I come from because despite my native tongue is Spanish, I use English majority of my life, and I can't use grammar terms correctly many times. But I can tell ya, I'm a fast learner when I understand something, I really strive for good qualities on something. <br /><br />As I know tutor is highly discourages or not possible much here because &quot;they have lives&quot; or &quot;they do it for money for teaching&quot;, I want to let ya know I'm serious on tutoring, and I'm willing to record and understand details by details to make NES tutorials so good, even children can learn more than what they could do in NESMaker.<br />It just a good communications between student and tutors for support is really needed to help me understand as &quot;God-Tier&quot; as Shiru, NIKI, and DahrkDaiz, who got me into this homebrew business in the first place. <br /><br />If you feel I'm not even trying. despite the fact that to other eyes, I may be another person who doesn't care or gives up easily: <br /><br />-I understood completely with basics of Binary, HEX, and decimals/ natural numbers. <br />-I understood that the address $ is like a room where you place the codes, and certain &quot;rooms&quot; inside does specific jobs, like the sprite-color decision &quot;room.&quot;<br />-I at least know what Mapper does in certain types, from increasing tile size, to the abilities of making beautiful music using N106. <br />-INC means increment, which is mathematical technique in increasing number by 1, unless stated.  <br />-I understood that graphic limit is set to 13 colors, with one transparent for each &quot;4&quot; colors, which is 3 colors and 1 transparent, and the screen is 256 X 240, but issues in vertical lines is 256 X 224<br />and other things about 8X8, 16X16 Sprite limit, where vertical mirror is possible, but not horizontal mirror. <br />- $ and # symbol is different, where $ is the address, and # is the number-number. <br />-I somewhat partially understood that A, X, Y is a type of register that &quot;allows you to store numbers [Address? Digits/HEX?] temporary&quot; like forms of transport from one address to another, OR some kind of math abilities that allows you to carry the number using &quot;LDA&quot; and &quot;STA&quot; stuff. <br />-I partially understood about high-power and low-power byte like what they said on Nerdy Night Week 4: <br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">The palettes start at PPU address $3F00 and $3F10. To set this address, PPU address port $2006 is used. This port must be written twice, once for the high byte then for the low byte:<br /><br />  LDA $2002    ; read PPU status to reset the high/low latch to high<br />  LDA #$3F<br />  STA $2006    ; write the high byte of $3F10 address<br />  LDA #$10<br />  STA $2006    ; write the low byte of $3F10 address</div><br /><br /><br />If I understand the code from BASIC languages with certain opcodes on what it does, like DEC and INC, the same way with the C# programming beginners where they did the &quot;Application &gt; NameSpace &gt; Assembly &gt; Codes&quot;, then I have compatibility to understand 6502 languages, but I tend to struggle with certain information that doesn't comprehend to me because it isn't explain well for me, or because, dare I say it, &quot;It's boring to try and read it and remember it.&quot;<br /><br />I just want to put this down just to tell ya what kind of person I am. You could think I'm &quot;autistic moron&quot; or anything like that, or anything that people who has elitist personality could put me down, but I just want to let ya know I'm really trying hard to figure out on codes yet struggle on obstacles, and I'm serious and determined to learn, that I'm willing to be perfect attendances for tutors. Discord, other ways, I'm in.<br /><br />Even though I know it's high chance that response is very obvious that no tutors is here, or potentially discourages to try to tutor. If there isn't any forms of tutor that can help me learn in very well styles that I could rival Shiru and/or DahrkDaiz in terms of creative codes, I might as well ask so many ridiculous questions on something that's potentially easy here like I did. <br /><br />It's getting late here atm. So I hope I don't make any errors to explain.<br /><br />EDIT: I don't ever want anyone, young or old, to go through struggles what I gone through that gives up easily.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9247">DocWaluigean</a> — Sun Aug 12, 2018 7:55 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2018-08-12T00:35:52-07:00</updated>
<published>2018-08-12T00:35:52-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17454&amp;p=223349#p223349</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17454&amp;p=223349#p223349"/>
<title type="html"><![CDATA[Re: Hello, new here, and need best recommandations.]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17454&amp;p=223349#p223349"><![CDATA[
<div class="quotetitle">Kasumi wrote:</div><div class="quotecontent"><br />6502 itself is way easier than the NES hardware, so if you can get working there you might have more progress.<br /></div><br />I fully agree.<br /><br />Back when I started, I only knew how to program in QBASIC, and assembly didn't make any sense to me. Learning about hardware architecture and the NES registers at the same time I was learning assembly ended up being way too confusing, and I actually did give up for a few years.<br /><br />On my second try, I put the NES aside and studied only 6502 assembly, using a simulator, and I didn't move forward until I understood what every instruction did and I was able to code actual algorithms (multiplication, division, sorting, etc.) in that language. Only then did I try to make an NES ROM again.<br /><br />You see, talking to the NES is like other kinds of communication. Say you are the manager in a company that makes boxes. You must know how boxes are made, so you can tell the workers what they have to do, and you must speak the same language as the workers, so you can effectively communicate the instructions to them. If you don't speak the same language, and you don't know how to make boxes, it will be extra hard to end up with something that resembles a box in the end.<br /><br />So yeah, learn assembly first of you can, without the specificities of the NES getting in the way. Then, when you know HOW to communicate, focus on learning WHAT to say to the NES so it does what you want.<br /><br />And don't forget that in order to make games, you not only need to know the language and the architecture of the environment you're coding for, but also the general concepts of game programming, which are universal to any programming language, such as animation, object management, physics, collision, and so on.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Sun Aug 12, 2018 12:35 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Kasumi]]></name></author>
<updated>2018-08-11T23:50:34-07:00</updated>
<published>2018-08-11T23:50:34-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17454&amp;p=223346#p223346</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17454&amp;p=223346#p223346"/>
<title type="html"><![CDATA[Re: Hello, new here, and need best recommandations.]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17454&amp;p=223346#p223346"><![CDATA[
Tokumaru covered the other post WAY more succinctly than what I was working on.  <img src="http://forums.nesdev.com/images/smilies/Mfr_icon_homebrew.png" alt=":beer:" title="Beer" /> <br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Because of &quot;peer pressure&quot; situations, I can't even ask any questions about .dw, .nmi, and other situations.<br /></div><br />I think both Tokumaru and I covered this a bit. <br /><br />.dw will add a 16byte number you give it to the ROM. <br />.db will add an 8 bit number you give it to the ROM. <br /><br />I had mentioned that the CPU looks for addresses starting at $FFFA to know where to start executing code in certain situations. There's no further explanation beyond, &quot;That's how the CPU was designed.&quot; It has to start <em>some</em> known place or software couldn't be run reliably on it. You can use .dw with a label. So if your code looks like:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">  .org $E000<br />reset:<br />  jmp reset<br /><br />NMI:<br />  rti<br />IRQ:<br />  rti<br /><br />  .org $FFFA<br />  .dw NMI<br />  .dw reset<br />  .dw IRQ<br /></div><br />When you turn the NES on, it will start executing code at $E000. (The reset label.) The NMI (on NES) can happen once every 60th of a second if you have it enabled. This is one thing that allows games on NES to run at a consistent speed.<br /><br />When a frame is about to start (every 60th of a second) the CPU will stop what it was doing, and go to the address (label) at $FFFA. The RTI will send it back to what it was doing before this happened. The NMI is an &quot;interrupt&quot; (Non Maskable Interrupt). Precisely because it interrupts whatever the CPU was doing and jumps somewhere else. And again, the RTI allows it to return to what it was doing before the interrupt happened.<br /><br />If some of that doesn't make sense, that's okay for now. You mentioned easy6502. Is there some part you're stuck on in that tutorial? If so, feel free to ask about it. 6502 itself is way easier than the NES hardware, so if you can get working there you might have more progress. There's less to do to get visual output that shows the code is working on the easy6502 website.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3504">Kasumi</a> — Sat Aug 11, 2018 11:50 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2018-08-11T23:46:13-07:00</updated>
<published>2018-08-11T23:46:13-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17454&amp;p=223345#p223345</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17454&amp;p=223345#p223345"/>
<title type="html"><![CDATA[Re: Hello, new here, and need best recommandations.]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17454&amp;p=223345#p223345"><![CDATA[
<div class="quotetitle">DocWaluigean wrote:</div><div class="quotecontent"><br />I'm even willing to make a tutorial that's more comprehend-able than BunnyBoy if I understand everything.<br /></div><br />You'd be surprised by how many people have said that, but either &quot;forgot&quot; or just gave up on NES development.<br /><br />It's not easy to word this stuff in simpler terms, because this really isn't a simple subject. You can't replace terms like registers, mirroring, addressing, etc. by simpler ones because they describe unique things and behaviors that don't necessarily have counterparts that are easier to comprehend. We can EXPLAIN all the terms and behaviors individually so that when you see them at a later time they won't sound like alien concepts, but programming knowledge is something you build progressively, you have to understand one layer before moving on to the next, you can't skip to the topmost layer and expect things to be worded in a way that circumvents everything established in the layers below.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Sat Aug 11, 2018 11:46 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2018-08-11T23:33:04-07:00</updated>
<published>2018-08-11T23:33:04-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17454&amp;p=223344#p223344</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17454&amp;p=223344#p223344"/>
<title type="html"><![CDATA[Re: Hello, new here, and need best recommandations.]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17454&amp;p=223344#p223344"><![CDATA[
<div class="quotetitle">DocWaluigean wrote:</div><div class="quotecontent"><br />But why is it in $C000 instead of $8000<br /></div><br />Because this is probably a 16KB program, and the NES CPU can see 32KB of code, so the same code appears twice in that space. This means that either $8000 or $C000 will work fine, you can use whichever you like best, because in the end, THE CODE WILL APPEAR AT BOTH ADDRESSES. Most people like to think of the program as being aligned to the upper end of the address space though, because the CPU vectors are traditionally accessed at $FFFA-$FFFF, the very end of the ROM area. But like I said, you can use $8000 as the origin for your 16KB program if you prefer, because the vectors will appear at both $BFFA-$BFFF and $FFFA-$FFFF, where the CPU will actually look for them.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />But for the Cartridge ROM, why isn't there an overview for the entire Address beside PPU?<br /></div><br />Here's the memory map for the CPU: <!-- m --><a class="postlink" href="https://wiki.nesdev.com/w/index.php/CPU_memory_map">https://wiki.nesdev.com/w/index.php/CPU_memory_map</a><!-- m --><br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />LDX #$40<br />  STX $4017    ; disable APU frame IRQ<br />  LDX #$FF<br />Why is it arranged like this instead &quot;LDX, LDX, STX&quot;?<br /></div><br />Because programming is basically moving numbers around and doing math operations on them. For moving data around, we need to use the CPU registers (A, X, Y). We need to send a number/code to the APU, telling it to disable frame IRQs, so we put this number in a register (LDX), and then store that register (STX) in the appropriate APU port. That part is done, we can now use X for other stuff, so we put the next value we'll use in it, $FF, that we'll use to initialize the stack pointer. This is just moving data around. If you mess up the order, you'll end up putting the wrong values in the wrong places.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />high and low power style<br /></div><br />What is &quot;high and low power style&quot;?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Sat Aug 11, 2018 11:33 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Kasumi]]></name></author>
<updated>2018-08-11T23:10:24-07:00</updated>
<published>2018-08-11T23:10:24-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17454&amp;p=223342#p223342</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17454&amp;p=223342#p223342"/>
<title type="html"><![CDATA[Re: Hello, new here, and need best recommandations.]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17454&amp;p=223342#p223342"><![CDATA[
Ninja'd by tokumaru, but the information presented is slightly different, so sure, I'll still post. <br /><div class="quotetitle">DocWaluigean wrote:</div><div class="quotecontent"><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent"> <br />  .inesprg 1   ; 1x 16KB PRG code<br />  .ineschr 1   ; 1x  8KB CHR data<br />  .inesmap 0   ; mapper 0 = NROM, no bank swapping<br />  .inesmir 1   ; background mirroring<br /></div><br /><br />-So the iNES header is an information. But I'm assuming this ines only works in the ASM6.<br /></div><br />On an actual NES catridge, hardware dictates behavior. An NES ROM mostly contains the software. Because there are so many different cartridge types with different hardware, an NES ROM also has a 16 byte &quot;header&quot; that describes the hardware so emulators can properly run it. <br /><br />The .ines commands are for creating this header. They only work with NESASM, not ASM6. In ASM6 you have to build the header manually. <br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />-Is there a limit to numbers for each codes beside inesmap? I'm sure you can go up to inesmap 255 something with Namco mapper, Konami mapper, Sunsoft mapper, etc.<br /></div><br />The limit is different for every cartridge type. I don't know of one offhand that allows 255. That's just shy of 4 Megabytes! (16 kilobytes * 255)<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />-So PRG code is &quot;assign scripts to sprites, by limit&quot;? and CHR data &quot;the amount of sprite and tile banks&quot;? ineschr 1 = 1 bank of tiles/sprites? can it go up to over 128?<br /></div><br />PRG is just bytes of data the CPU can easily access. You can store code there, levels/text/music/other data there, or even graphics there. (Assuming you are using CHR RAM.)<br /><br />CHR is bytes of data the PPU can easily access. The amount of sprite and tile banks is a good way to think about it.<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />-Obviously a good idea to ignore for now, but is there importances for inesmir 1?<br /></div><br />NES has 4 screens worth of &quot;tilemap&quot; laid out in a 2 by 2 square. (That essentially repeats forever.) However, there can only be 2 unique screens usually. The other two are copies or &quot;mirrors&quot;.<br /><br />Super Mario Bros. has the top and bottom rows of the 2by2 square &quot;mirrored&quot; because it scrolls horizontally. This allows it to easily update the level offscreen to the right of the scroll edge.<br /><br />Ice Climber has the left and right columns of the 2 by 2 square &quot;mirrored&quot; because it scrolls vertically. This allows it to easily update the level offscreen above the top of the scroll edge.<br /><br />.inesmir 0 denotes Ice Climber Style.<br />.inesmir 1 denotes Super Mario Bros. style.<br /><br />Some cartridge types effectively ignore this.<br /><br />---<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Universal question: <span style="text-decoration: underline">At which part is needed to show the entire gray screen? Up to ines? need bank 0, 1, and 2 to make a correct blank NES? </span><br /></div><br /><br />You need at least two NESASM banks to create a totally blank ROM, but you will probably want three, yes. <br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.inesprg 1<br />   .ineschr 1<br />   .inesmir 0<br />   .inesmap 0<br /><br />   .code<br />   .bank 0<br />   .org $C000<br /><br />   <br />   .bank 1<br />   .org $E000 <br /><br />   <br /><br />   .org $FFFA<br />   .dw 0;This is where you'd put the label where the CPU should jump to when an NMI happens<br />   .dw 0;This is where you'd put the label where the CPU should jump to when the console is reset<br />   .dw 0;This is where you'd put the label where the CPU should jump to when an IRW happens<br /><br />   .bank 2<br />   .org $0000<br /></div><br />Should give you an entirely blank ROM. .org tells the assembler where in memory the bytes that follow are meant to go. $FFFA is where it expects certain addresses. This is how the CPU knows where the game starts on reset, for example. You don't technically <em>need</em> that for a blank ROM, but you may as well have it.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3504">Kasumi</a> — Sat Aug 11, 2018 11:10 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2018-08-11T23:10:48-07:00</updated>
<published>2018-08-11T23:08:15-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17454&amp;p=223341#p223341</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17454&amp;p=223341#p223341"/>
<title type="html"><![CDATA[Re: Hello, new here, and need best recommandations.]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17454&amp;p=223341#p223341"><![CDATA[
<div class="quotetitle">DocWaluigean wrote:</div><div class="quotecontent"><br />-So the iNES header is an information. But I'm assuming this ines only works in the ASM6.<br /></div><br />The .ines*** directives only exist in NESASM. In most other assemblers people just create the header using .db/.byte statements. It's also possible to create macros that simulate NESASM's directives.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />-Is there a limit to numbers for each codes beside inesmap? I'm sure you can go up to inesmap 255 something with Namco mapper, Konami mapper, Sunsoft mapper, etc.<br /></div><br />Mapper numbers are normally assigned by whoever discovers/creates them. The wiki has a list of the most popular mappers: <!-- m --><a class="postlink" href="https://wiki.nesdev.com/w/index.php/List_of_mappers">https://wiki.nesdev.com/w/index.php/List_of_mappers</a><!-- m --><br /><br />The limits for the other fields will depend on the mapper. Each mapper supports different amounts of PRG and CHR stand use different techniques for bankswitching them.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />-So PRG code is &quot;assign scripts to sprites, by limit&quot;?<br /></div><br />The PRG field is the amount of PRoGram-ROM, measured in units of 16KB. This is the memory used to hold the game program, the code that the CPU runs to make stuff happen. All the game logic is here, along with all the data used by the game (e.g. levels, music, etc.).<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />and CHR data &quot;the amount of sprite and tile banks&quot;?<br /></div><br />Yes, that's the amount of CHaRacter-ROM, measured in units of 8KB (512 tiles).<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />ineschr 1 = 1 bank of tiles/sprites? can it go up to over 128?<br /></div><br />Don't get too hung up on the term &quot;bank&quot; here, since the size of a bank varies from mapper to mapper. CHR-ROM banks can be any of 8KB, 4KB, 2KB or 1KB, but the INES header always measures the total amount in multiples of 8KB, regardless of the mapper.<br /><br />How high you can go will depend on the mapper. 128 x 8KB would be 1MB, and not many mappers support that. Another thing to keep in mind is that even though the total amount of tiles can be significantly high, you can't use any tile you want whenever you want, because the NES still only sees a small number of them at a time. The way in which you select which tiles will be usable at any given time will depend on the mapper.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />-Obviously a good idea to ignore for now, but is there importances for inesmir 1?<br /></div><br />The NES has a virtual background space of 4 screens arranged in a 2x2 grid, but it only has enough memory to hold 2 screens, which means that 2 of those 4 will have to be repeats. The mirroring setting selects whether the screens will repeat horizontally or vertically.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Universal question: <span style="text-decoration: underline">At which part is needed to show the entire gray screen? Up to ines?<br /></div><br />I don't understand the question. What do you mean by &quot;entire gray screen&quot;?<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />need bank 0, 1, and 2 to make a correct blank NES? </span><br /></div><br />Memory chips are only manufacred in sizes that are powers of 2 (e.g. 8KB, 16KB, 32KB, 64KB, 128KB, etc.), so you need to have a number of banks that adds up to a power of 2 in order to represent a valid memory chip, even if they are empty.<br /><br />Do note that NESASM's .bank directive creates banks that are 8KB in size, while the INES header counts banks that are 16KB. So in this case, NESASM banks 0 and 1 would be the one 16KB bank defined via .inesprg, and bank 2 is the one 8KB bank defined via .ineschr.<br /><br />Like I said, don't focus too much on the work &quot;bank&quot; as used by NESASM and the INES header, because the actual size of the banks is defined by the bankswitching scheme of the mapper you use. Just think of INES banks as units for counting, and NESASM's banks as blocks of 8KB, which won't necessarily be manipulated individually.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Sat Aug 11, 2018 11:08 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[DocWaluigean]]></name></author>
<updated>2018-08-11T22:25:06-07:00</updated>
<published>2018-08-11T22:25:06-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17454&amp;p=223340#p223340</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17454&amp;p=223340#p223340"/>
<title type="html"><![CDATA[Re: Hello, new here, and need best recommandations.]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17454&amp;p=223340#p223340"><![CDATA[
<div class="codetitle"><b>Code:</b></div><div class="codecontent">;;;;;;;;;;;;;;  <br />  <br />  <br />  <br />  .bank 1<br />  .org $FFFA     ;first of the three vectors starts here<br />  .dw NMI        ;when an NMI happens (once per frame if enabled) the <br />                   ;processor will jump to the label NMI:<br />  .dw RESET      ;when the processor first turns on or is reset, it will jump<br />                   ;to the label RESET:<br />  .dw 0          ;external interrupt IRQ is not used in this tutorial<br />  <br />  <br />;;;;;;;;;;;;;;  <br />  <br />  <br />  .bank 2<br />  .org $0000<br />  .incbin &quot;mario.chr&quot;   ;includes 8KB graphics file from SMB1 </div><br /><br />---<br /><br />Because of &quot;peer pressure&quot; situations, I can't even ask any questions about .dw, .nmi, and other situations. <br /><br />-------<br /><br />I know you guys literally sick and tired of hearing this about anyone like me requesting for a private tutor, but there's people like me who has capacities to do something very complex, like 3D modelling, ideas, free-writing storytellings, etc. But can't understand forms of writings and tutorials that keeps backing away from learning NES assembly languages. <br /><br />As for people who said, &quot;please do some research on your own now.&quot;, there's people like me who literally tried to comprehend writings from Bunnyboy, Easy6502, etc. that literally needs help, whose real serious in learning about this stuff. I got lucky on understanding what binary, HEX, and decimals do, and nearly all forms of Codes Layout, but further readings just threw me off with words that I can't put two and two together. I'm even willing to make a tutorial that's more comprehend-able than BunnyBoy if I understand everything.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9247">DocWaluigean</a> — Sat Aug 11, 2018 10:25 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[DocWaluigean]]></name></author>
<updated>2018-08-11T22:16:53-07:00</updated>
<published>2018-08-11T22:16:53-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17454&amp;p=223339#p223339</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17454&amp;p=223339#p223339"/>
<title type="html"><![CDATA[Re: Hello, new here, and need best recommandations.]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17454&amp;p=223339#p223339"><![CDATA[
<div class="codetitle"><b>Code:</b></div><div class="codecontent">.bank 0<br />  .org $C000 <br />RESET:<br />  SEI          ; disable IRQs<br />  CLD          ; disable decimal mode<br />  LDX #$40<br />  STX $4017    ; disable APU frame IRQ<br />  LDX #$FF<br />  TXS          ; Set up stack<br />  INX          ; now X = 0<br />  STX $2000    ; disable NMI<br />  STX $2001    ; disable rendering<br />  STX $4010    ; disable DMC IRQs<br /><br />vblankwait1:       ; First wait for vblank to make sure PPU is ready<br />  BIT $2002<br />  BPL vblankwait1<br /><br />clrmem:<br />  LDA #$00<br />  STA $0000, x<br />  STA $0100, x<br />  STA $0200, x<br />  STA $0400, x<br />  STA $0500, x<br />  STA $0600, x<br />  STA $0700, x<br />  LDA #$FE<br />  STA $0300, x<br />  INX<br />  BNE clrmem<br />   <br />vblankwait2:      ; Second wait for vblank, PPU is ready after this<br />  BIT $2002<br />  BPL vblankwait2<br /><br /><br />  LDA #%10000000   ;intensify blues<br />  STA $2001<br /><br />Forever:<br />  JMP Forever     ;jump back to Forever, infinite loop<br />  <br /> <br /><br />NMI:<br />  RTI<br /></div><br /><br /><br /><br />-----<br /><br />-Obviously the $C000 is in the cartridge ROM section, which is fine. But why is it in $C000 instead of $8000, which is more organize than in the middle of those code? I know in some sections, the address represent something for the NES &quot;lever and buttons&quot;, like $3F10 - $3F1F is the address section for color palettes. But for the Cartridge ROM, why isn't there an overview for the entire Address beside PPU? <br /><br />-I been looking further before reading back on Nerdy Nights, <br /> LDX #$40<br />  STX $4017    ; disable APU frame IRQ<br />  LDX #$FF<br />Why is it arranged like this instead &quot;LDX, LDX, STX&quot;? Obviously high and low power style, but why? For new people, it could mess up a code like this... I don't want to be judgeful, but coding is one of the hardest things I ever got to learn in my life.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9247">DocWaluigean</a> — Sat Aug 11, 2018 10:16 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[DocWaluigean]]></name></author>
<updated>2018-08-11T22:03:53-07:00</updated>
<published>2018-08-11T22:03:53-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17454&amp;p=223338#p223338</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17454&amp;p=223338#p223338"/>
<title type="html"><![CDATA[Re: Hello, new here, and need best recommandations.]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17454&amp;p=223338#p223338"><![CDATA[
Onto Night 3; This is going to be ridiculous because I may ask so many questions. I will try this one from background.asm in the Nerdy Nights Week 3.<br /><br /><span style="text-decoration: underline">Remember - the only dumb question is the question that remains unasked.</span><br /><br />---<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent"> <br />  .inesprg 1   ; 1x 16KB PRG code<br />  .ineschr 1   ; 1x  8KB CHR data<br />  .inesmap 0   ; mapper 0 = NROM, no bank swapping<br />  .inesmir 1   ; background mirroring<br /></div><br /><br />-So the iNES header is an information. But I'm assuming this ines only works in the ASM6. <br /><br />-Is there a limit to numbers for each codes beside inesmap? I'm sure you can go up to inesmap 255 something with Namco mapper, Konami mapper, Sunsoft mapper, etc.<br /><br />-So PRG code is &quot;assign scripts to sprites, by limit&quot;? and CHR data &quot;the amount of sprite and tile banks&quot;? ineschr 1 = 1 bank of tiles/sprites? can it go up to over 128?<br /><br />-Obviously a good idea to ignore for now, but is there importances for inesmir 1?<br /><br />---<br /><br />Universal question: <span style="text-decoration: underline">At which part is needed to show the entire gray screen? Up to ines? need bank 0, 1, and 2 to make a correct blank NES? </span><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9247">DocWaluigean</a> — Sat Aug 11, 2018 10:03 pm</p><hr />
]]></content>
</entry>
</feed>