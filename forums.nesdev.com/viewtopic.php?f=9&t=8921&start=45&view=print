<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - NROM larger than 32K?</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">NROM larger than 32K?</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=9&amp;t=8921">http://forums.nesdev.com/viewtopic.php?f=9&amp;t=8921</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>4</strong> of <strong>13</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Shiru</b> [ Wed May 23, 2012 4:48 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yes, I think extending CNROM the same way would be a good idea. It is also easy to use with a HLL, since only CHR is bankswitched.
<br />
<br />To make 'fullscale' tests we first need to modify an emulator. Since this is a 'chicken or the egg' situation, chances to get an active emulator developer interested in this are low (no software to test against and no reason to bother with yet). So I plan to do it by myself. Hopefully this won't be too difficult, it does not seem so at least.
<br />
<br />Since the last quarter of a 64K ROM going to be empty, there is not much sense to store it in an iNES file. On the other hand, a ROM burner software may require to pad it to 64K to be used - don't know for sure.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Wed May 23, 2012 5:56 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I wrote a simple test program to see what various emulators do with oversize iNES mapper 0 images.
<br />- Nintendulator and Nestopia always map the first 32kB to the aperture
<br />- FCEUX maps the first and last 16kB to $8000 and $c000 when it's a power of two. The emulated machine crashes when it's 3.
<br />
<br />The actual layout on the physical ROM would be
<br />$8000-$FFFF are in addresses 0x0000 to 0x7FFF
<br />$4800-$7FFF are in addresses 0xC800 to 0xFFFF
<br />0x8000 through 0xC7FF wouldn't be addressable, i.e. <strong>the padding's in the middle</strong>.
<br />
<br />I'm still undecided whether the right iNES representation is the contents of the ROM verbatim or the linear 48kB as seen by the CPU. I vaguely feel like the latter is slightly more correct, but the former has the advantage that the interrupt vectors are in the correct place in emulators that truncate to the first 32kB, and just discards the remaining 14kB.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Wed May 23, 2012 6:26 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">lidnariq wrote:</div><div class="quotecontent">I'm still undecided whether the right iNES representation is the contents of the ROM verbatim or the linear 48kB as seen by the CPU. I vaguely feel like the latter is slightly more correct, but the former has the advantage that the interrupt vectors are in the correct place in emulators that truncate to the first 32kB, and just discards the remaining 14kB.</div>
<br />Storing the banks in an order that doesn't match the linear order in address space has precedent. Mapper 40, for example, has bank 6 at $6000-$7FFF and banks 4, 5, &lt;switchable&gt;, and 7 in $8000-$FFFF. In addition, having an odd number of 16 KiB units would more distinctly identify this variant of NROM/CNROM/CPROM.
<br />
<br />I'll have to try making 8 KiB stubs that allow testing some of these programs on a PowerPak or an SNROM board. It'd switch to bank 1, copy $A000-$BFFF to $6000-$7FFF, copy $C000-$DFFF to CHR RAM, switch to bank 0, and finally jump to the reset code. Either way, there'll have to be a Barbie stub at $FFF0-$FFF9 to guarantee power-on behavior:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">fff0:<br />&nbsp; sei<br />&nbsp; ldx #$FF<br />&nbsp; stx $FFF2<br />&nbsp; jmp real_reset<br />&nbsp; .addr nmi_handler, fff0_entry, irq_handler</div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>infiniteneslives</b> [ Wed May 23, 2012 7:10 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Shiru wrote:</div><div class="quotecontent">To make 'fullscale' tests we first need to modify an emulator. Since this is a 'chicken or the egg' situation, chances to get an active emulator developer interested in this are low (no software to test against and no reason to bother with yet). </div>
<br />
<br />Not sure if you noticed or not since I ninja'd you on the previous page.  But I can easily test this in hardware right now with the NESDEV1.  At least that way the emulator could compare to the actual NES, which is really how it should be done to verify proof of concept.
<br />
<br />If someone provides a test rom I can run it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Shiru</b> [ Thu May 24, 2012 3:17 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />To make test on the hardware we need to write and debug test code. An emulator support is needed to do it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Thu May 24, 2012 3:49 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />What about hacking a FDS games that runs code at $6000-$BFFF into your extension of NROM ?
<br />
<br />There is also quite a lot of emus which are open souce, so you could easily modify one of them to get the oversize NROM configuration you want.
<br />
<br />Also I'd add that if NROM were to have a larger PRG-ROM than 32k, since it would be mapped linearly in the adress space the data should definitely be mapped linearly in the .nes ROM too.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Shiru</b> [ Thu May 24, 2012 4:05 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Modifying an open source emulator is exactly what I'm going to do. I just need some time to do this.
<br />
<br />Linear layout that corresponds to the NES address space has a drawback that you can't just burn this headerless file into a ROM chip, you need to convert it first - extra tool and knowledge required. Layout that corresponds to the ROM address space is free from this drawback. On the other hand it complicates romhacking, so this is definitely something to think well beforehand.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Thu May 24, 2012 4:35 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Huh ?
<br />You'll need two EPROMs anyways because there is no 48k EPROM arround.
<br />
<br />What makes the most sense is to have in the iNES file first the 16k that goes in the first EPROM at $4000-$7FFF (but adresses $4000-$4xxx should be blocked by some kind of hardware to prevent bus conflicts - anyways those adresses will still exist in the EPROM and in the iNES files - and then data in the second EPROM at $8000-$FFFF, like usual.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Shiru</b> [ Thu May 24, 2012 4:47 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I said it in the very first post - 64K ROM chip with wasted 16K (18K in the latest design).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Thu May 24, 2012 5:16 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />This doesn't change anything - just that since data is wasted it won't be present in the ROM image. The used 48k should still be present, and linear, in the ROM.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Shiru</b> [ Thu May 24, 2012 5:19 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Bregalad, please read the thread. The discrete logic design makes layout non linear, with 32K halves swapped. If it would be linear, there would be no talk about non linear layout at all.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Thu May 24, 2012 5:53 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I don't think it changes anything if 32k halves are swapped. The NES can't see the difference, so you won't see a difference when you dump the ROM - therefore it should still be contiguous in the ROM image. You'd have to make it non-contiguous when programing the EPROM though - but that's another story.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Shiru</b> [ Thu May 24, 2012 5:57 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />That is not another story. That is a very important thing to consider beforehand.
<br />
<br />Whether you'll see the difference or not is depends from method of dumping, and dumping itself is certainly way less important thing than burning. You know, you need to make something first to have something to dump.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu May 24, 2012 6:12 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />What we're trying to iron out is whether the $8000-$FFFF data appears before or after the $4800-$7FFF data in an iNES image with three 16 KiB banks. Either way, the PRG part is going to have to be rearranged before burning.
<br />
<br />If $8000-$FFFF appears before $4800-$7FFF, then the PRG part is laid out as follows:
<br />Bank 0: $8000-$BFFF
<br />Bank 1: $C000-$FFFF
<br />Bank 2: 2048 bytes of padding, then $4800-$7FFF
<br />
<br />In this case, you have to double up bank 2 before burning it to the 27C512 EPROM. Then the EPROM sees PRG /CE as A15, and all is well; reads of $4800-$7FFF come from the doubled-up copy.
<br />
<br />If $8000-$FFFF appears before $4800-$7FFF, then the PRG part is laid out as follows:
<br />Bank 0: 2048 bytes of padding, then $4800-$7FFF
<br />Bank 1: $8000-$BFFF
<br />Bank 2: $C000-$FFFF
<br />
<br />In this case, you have to move bank 0 to the end of the image and <em>then</em> double it up before burning it to the EPROM.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Shiru</b> [ Thu May 24, 2012 6:26 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />We can just use the first variant but double up the bank 2 in the iNES image, having 4 banks there. Kind of overdump, but these days extra 16K on a hard disk is nothing important, and the files are usually stored zipped anyway.
<br />
<br />Although doubling is a problem for authoring tools, and it is better to simply have all zeroes in bank 2. I mean, it is easier to make an assembler generate a file with padding in the middle rather than make it to double a bank.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>4</strong> of <strong>13</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>