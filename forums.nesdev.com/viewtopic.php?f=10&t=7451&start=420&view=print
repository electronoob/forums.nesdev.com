<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - 8x16 and whatever else unreg wants to know</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">8x16 and whatever else unreg wants to know</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=7451">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=7451</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>29</strong> of <strong>83</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Wed Nov 09, 2011 1:49 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">unregistered wrote:</div><div class="quotecontent">Read my psuedocode: <div class="codetitle"><b>Code:</b></div><div class="codecontent">1.&#41; read list of metatiles<br />2.&#41; read &quot;start&quot; screen<br />3.&#41; display '&nbsp; &nbsp; '</div><br /><br />#1 isnt required because it is already listed as .db statements so all I have to do is include it.<br />#2 isnt required  for the same reason.. i think.<br /><br />So my question is about line #3.  I'm worrying about changing the label names inside each list of metatiles.  Is there a way to include each file without making label-name changes?<br />...Um that was about line #1... sorry (could you answer it though? <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /> )</div><br /> <br /><div class="quotetitle">3gengames wrote:</div><div class="quotecontent">What are you trying to do? Is this for selecting on the main menu "Start" or then "Continue" or something, or trying to add it to the screen like "Level one!" then a little later "Go!" or something on the screen?</div>
<br />
<br />No, sorry, my sister named each screen that you start on "...start."  I was refering to that.  Reading the "start" screen's metatile  240 byte representation...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Wed Nov 09, 2011 2:28 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Just text on the screen I'd maybe find a way to do that dynamically. I mean, mostly text isn't used in a game environment per say. I hope that may help some. Unless you need text on the screen in your game and adding it dynamically would be too hard/too CPU intensive.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Wed Nov 09, 2011 3:37 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">3gengames wrote:</div><div class="quotecontent">Just text on the screen I'd maybe find a way to do that dynamically. I mean, mostly text isn't used in a game environment per say. I hope that may help some. Unless you need text on the screen in your game and adding it dynamically would be too hard/too CPU intensive.</div>
<br />How would you add text dynamically?  <img src="./images/smilies/icon_confused.gif" alt=":?" title="Confused" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Wed Nov 09, 2011 4:03 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Via a subroutine that adds it on to the screen when needed or have it put it on the background when you hit a certain part of the map, rewriting the meta tiles being written on the screen. Having metatiles just for some text messages might work good enough, but anything bigger and it'd create way too many.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Kasumi</b> [ Wed Nov 09, 2011 4:55 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Forgive me if I'm dense, but I'm still confused with what you're trying to do.
<br />
<br />You have completed the following steps, correct?
<br />
<br />1. Made a series of .db statements for your metatiles.
<br />2. Made a .db statement with the label "start:" for each (starting) screen? (I am led to believe this from the following quote)
<br />
<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">No, sorry, my sister named each screen that you start on "...start." I was refering to that. Reading the "start" screen's metatile 240 byte representation...</div><br />So if this is your only question:<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Is there a way to include each file without making label-name changes?</div>
<br />No. You can't have two labels with the same name. That said, it's not that hard to fix with a find replace (usually ctrl+h) in each file. (Assuming I understand your problem correctly)
<br />
<br />Edit: And btw, if I were you I would get a hex editor and make binary files for large collections of data. 
<br />
<br />Then you just do something like
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">label:<br />&nbsp; &nbsp; &nbsp;.incbin &quot;metatileset00.bin&quot;<br /></div><br /><br />instead of <br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">label:<br />&nbsp; &nbsp; &nbsp;.db $00, $00, $01;etc, etc, etc<br /></div>
<br />
<br />So you are now trying to display the start screen? Or you already have the start screen displayed want to display text over the start screen? (which is the understanding of the problem I believe 3gengames got)
<br />
<br />Please explain fully, since "Display '     ' " was very ambiguous. Assume I have no knowledge of what you are trying to accomplish <em>OR</em> what you have already done.
<br />
<br />Edit2: Ooh, and can you post your metatile definition file? Something tells me you might be doing something in a much harder way than you need to.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Wed Nov 09, 2011 6:37 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Kasumi, please forgive me... I'm so sorry it is so confusing.  <img src="./images/smilies/icon_sad.gif" alt=":(" title="Sad" />
<br />
<br /><div class="quotetitle">Kasumi wrote:</div><div class="quotecontent">You have completed the following steps, correct?<br /><br />1. Made a series of .db statements for your metatiles.</div><br />yes<br /><div class="quotetitle">Kasumi wrote:</div><div class="quotecontent">2. Made a .db statement with the label "start:" for each (starting) screen?</div><br />No, my sister has labeled each level's starting screen with "start" at the end.  I was just referring to that screen... for any one level. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /> <br /><br /><div class="quotetitle">Kasumi wrote:</div><div class="quotecontent">So if this is your only question: <br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Is there a way to include each file without making label-name changes?</div><br />No. You can't have two labels with the same name. That said, it's not that hard to fix with a find replace (usually ctrl+h) in each file... ...Edit: And btw, if I were you I would get a hex editor and make binary files for large collections of data. <br /></div><br />Ah, that sounds interesting <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />, thank you for mentioning it and thank you for answering my question! <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br /><div class="quotetitle">Kasumi wrote:</div><div class="quotecontent">Please explain fully, since "Display ' ' " was very ambiguous. Assume I have no knowledge of what you are trying to accomplish OR what you have already done. </div><br /><br />"<span style="color: orange">Display '    '</span>" was easier to type for me than '<span style="color: orange">Display "start" screen</span>.'... right now I'm about to try displaying the 240 byte "start" screen.<br /><br /><div class="quotetitle">Kasumi wrote:</div><div class="quotecontent">Edit2: Ooh, and can you post your metatile definition file? Something tells me you might be doing something in a much harder way than you need to.</div>
<br />That is very kind of you  <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />, but my sister said wait.  And she created our metatile definition file... so it's her decision.
<br />
<br />edit: 3gengames, thanks for responding! <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />  Sorry, I was planning on including this message to you in my post... but then I got very distracted and forgot.  Now it's time to sleep.  Good night.  <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Kasumi</b> [ Wed Nov 09, 2011 7:25 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Ah, I get it. So like:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">start:<br />&nbsp; &nbsp; &nbsp;.db ;bytes for screen 0<br />start:<br />&nbsp; &nbsp; &nbsp;.db ;bytes for screen 1<br /></div><br />Yeah, can't be done that way. How would the assembler know what label lda start refers to when there are two "start"s? Personally, I name them screenX_Y. X is the set number, Y is the actual screen number in hex. <br /><br />Displaying a screen is where it starts to get a little tough. <br /><br />To update tiles in a nametable, you use $2006, and $2007. Easy mode involves no scrolling (for now). <br /><br />First disable rendering and set the PPU to increment by one by writing the relevant bits to $2000. <br /><br />Then write the address of a name table to $2006 in two writes. <br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">;No indentation for the instructions, but you'll get the point.<br />lda #$20<br />sta $2006;Sets the high byte of the address $2007 will write to.<br />lda #$00<br />sta $2006;Sets the low byte of the address $2007 will write to.<br /><br />sta $2007;Writes #$00 to PPU address $2000. &#40;which is the first tile of the first name table&#41;<br />lda #$FF<br />sta $2007;Writes #$FF to PPU address $2001. &#40;which is the tile to the right of the first tile&#41;<br /></div>
<br />
<br />You'll see that every write increases the destination address by one. This is so you don't have to keep setting $2006 which is slow. It's also possible to make the destination address increase by 32 each write. This is so you can write a column of tiles. (256/8 = 32 tiles across. So each write will give you the address of the tile below the last one written)
<br />
<br />In any case:
<br />
<br />You know that your metatiles contain a reference to 4 actual tiles. 
<br />
<br />After setting the name table address with $2006: 
<br />
<br />1. You load the first metatile in your screen's index number. 
<br />2. You load the top left tile of that metatile using the index. 
<br />3. You write this to $2007. 
<br />4. You load the top right tile of that metatile using the index.
<br />5. You write this to $2007.
<br />6. load the second metatile in your screen's index number.
<br />(Why? Because the other two tiles in the first metatile refer to the row of tiles BELOW the one you're dealing with)
<br />7. Repeat steps 2-5.
<br />8. Load the third tile... etc etc etc until the entire of the first row is written
<br />9. Load the first metatile in your screen's index number AGAIN.
<br />10. Load the BOTTOM left tile of that metatile using the index.
<br />11. You write this to $2007. 
<br />
<br />And from there you should be able to figure out the rest for tiles, but probably not attributes. Reenable rendering when you're done writing to $2007, and you'll see the result. 
<br />
<br />There are ways to load each metatile in the screen only once, but make some code that is easy to do and works before you get clever.
<br />
<br />For attributes, you do kind of the same thing. Write the address of the attribute tile you want to update to $2006, then write the actual attribute to $2007. Because of your metatile format, this might actually be really easy for you to figure out. (It's hard as hell to do in my format  <img src="./images/smilies/icon_lol.gif" alt=":lol:" title="Laughing" /> ...  I digress)
<br />
<br />That's... about all I will say. Good luck! Try it, and post some code if you get stuck! I've never asked, will your game scroll? If yes, hopefully only in one direction at a time? If no..  <img src="./images/smilies/icon_confused.gif" alt=":?" title="Confused" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Thu Nov 10, 2011 5:07 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />For working with different sets of data (i.e. the different screens of different levels) you have to use pointers, <a href="http://nesdev.com/bbs/viewtopic.php?p=85297#85297" class="postlink">I already told you that.</a> That example was for different sets of collision tables, but the principle is exactly the same for everything else.
<br />
<br />A pointer is an address you can modify dynamically, so if you use pointers to access the data you can have the same code work with different sets of data just by modifying the pointer dynamically.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Fri Nov 11, 2011 1:48 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">For working with different sets of data (i.e. the different screens of different levels) you have to use pointers, <a href="http://nesdev.com/bbs/viewtopic.php?p=85297#85297" class="postlink">I already told you that.</a> That example was for different sets of collision tables, but the principle is exactly the same for everything else.<br /><br />A pointer is an address you can modify dynamically, so if you use pointers to access the data you can have the same code work with different sets of data just by modifying the pointer dynamically.</div>
<br />
<br />Thank you for telling me again tokumaru!  <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />  It suddenly makes sense after I spent time understanding this part of 6502.txt:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; 10&#41; Post-indexed indirect-<br />&nbsp; In this mode the contents of a zero-page address &#40;and the following byte&#41;<br />&nbsp; give the indirect addressm which is added to the contents of the Y-register<br />&nbsp; to yield the actual address of the operand. Again, inassembly language,<br />&nbsp; the instruction is indicated by parenthesis.<br />&nbsp; eg.&nbsp; LDA &#40;$4C&#41;, Y<br />&nbsp; Note that the parenthesis are only around the 2nd byte of the instruction<br />&nbsp; since it is the part that does the indirection.<br />&nbsp; Assume the following -&nbsp; &nbsp; &nbsp; &nbsp; byte&nbsp; &nbsp; &nbsp; &nbsp;value<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $004C&nbsp; &nbsp; &nbsp; $00<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $004D&nbsp; &nbsp; &nbsp; $21<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Y-reg.&nbsp; &nbsp; &nbsp;$05<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $2105&nbsp; &nbsp; &nbsp; $6D<br />&nbsp; Then the instruction above executes by:<br />&nbsp; &#40;i&#41;&nbsp; &nbsp;getting the address in bytes $4C, $4D = $2100<br />&nbsp; &#40;ii&#41;&nbsp; adding the contents of the Y-register = $2105<br />&nbsp; &#40;111&#41; loading the contents of the byte $2105 - i.e. $6D into the<br />&nbsp; &nbsp; &nbsp; &nbsp; accumulator.<br />&nbsp; Note: only the Y-register is used in this mode.</div> and then I reread your post you linked to <span style="color: green">many times</span>.  Awesome to understand and know; now I need to use it! <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />
<br /><span style="color: green">added in edit</span>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Sat Nov 12, 2011 11:50 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Kasumi wrote:</div><div class="quotecontent">Displaying a screen is where it starts to get a little tough. <br /><br />To update tiles in a nametable, you use $2006, and $2007. Easy mode involves no scrolling (for now). <br /><br />First disable rendering and set the PPU to increment by one by writing the relevant bits to $2000. <br /><br />Then write the address of a name table to $2006 in two writes. <br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">;No indentation for the instructions, but you'll get the point.<br />lda #$20<br />sta $2006;Sets the high byte of the address $2007 will write to.<br />lda #$00<br />sta $2006;Sets the low byte of the address $2007 will write to.<br /><br />sta $2007;Writes #$00 to PPU address $2000. &#40;which is the first tile of the first name table&#41;<br />lda #$FF<br />sta $2007;Writes #$FF to PPU address $2001. &#40;which is the tile to the right of the first tile&#41;<br /></div><br /><br />You'll see that every write increases the destination address by one. This is so you don't have to keep setting $2006 which is slow. It's also possible to make the destination address increase by 32 each write. This is so you can write a column of tiles. (256/8 = 32 tiles across. So each write will give you the address of the tile below the last one written)<br /><br />In any case:<br /><br />You know that your metatiles contain a reference to 4 actual tiles. <br /><br />After setting the name table address with $2006: <br /><br />1. You load the first metatile in your screen's index number. <br />2. You load the top left tile of that metatile using the index. <br />3. You write this to $2007. <br />4. You load the top right tile of that metatile using the index.<br />5. You write this to $2007.<br />6. load the second metatile in your screen's index number.<br />(Why? Because the other two tiles in the first metatile refer to the row of tiles BELOW the one you're dealing with)<br />7. Repeat steps 2-5.<br />8. Load the third tile... etc etc etc until the entire of the first row is written<br />9. Load the first metatile in your screen's index number AGAIN.<br />10. Load the BOTTOM left tile of that metatile using the index.<br />11. You write this to $2007. <br /><br />And from there you should be able to figure out the rest for tiles, but probably not attributes. Reenable rendering when you're done writing to $2007, and you'll see the result. <br /><br />There are ways to load each metatile in the screen only once, but make some code that is easy to do and works before you get clever.<br /><br />For attributes, you do kind of the same thing. Write the address of the attribute tile you want to update to $2006, then write the actual attribute to $2007. Because of your metatile format, this might actually be really easy for you to figure out. (It's hard as hell to do in my format  <img src="./images/smilies/icon_lol.gif" alt=":lol:" title="Laughing" /> ...  I digress)<br /><br />That's... about all I will say. Good luck! Try it, and post some code if you get stuck!</div><br /><br />Kasumi, thank you so much for this detailed explanation; loading a screen doesn't seem a little tough anymore! <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />  <br /><br />It's about to become interesting though... I have to remove the loading of the nametables and replace that with a combination of your post and tokumaru's post he linked me to in this thread.  Yes, this is taking me a long time to complete, but I feel blessed by yall's help... so thank you tokumaru and Kasumi! <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /><br /><br /><br /><div class="quotetitle">Kasumi wrote:</div><div class="quotecontent">I've never asked, will your game scroll? If yes, hopefully only in one direction at a time? If no..  <img src="./images/smilies/icon_confused.gif" alt=":?" title="Confused" /></div>
<br />
<br />Yes, it will scroll only horizontally. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Thu Dec 15, 2011 1:37 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />So now I have two arrays... <span style="color: cyan">firstRow</span> and <span style="color: cyan">secondRow</span>.  Each are 32bytes wide.  There's also an array called <span style="color: cyan">screenArray</span>; it is 240 bytes wide.  I want <span style="color: cyan">screenArray</span> to hold the contents of <span style="color: cyan">firstRow</span> and <span style="color: cyan">secondRow</span>.  I dont know how to do this in 6502 assembly; could you help me with this? : )
<br />
<br />edit: ...would I have to create two for loops like 
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">for &#40;int x := 0; x &lt; 32; x++&#41; &#123;<br />&nbsp; &nbsp; screenArray&#91;x&#93; = firstRow&#91;x&#93;;<br />&#125;<br /><br />for &#40;int x := 33; x &lt; 64; x++&#41; &#123;<br />&nbsp; &nbsp; screenArray&#91;x&#93; = secondRow&#91;x&#93;;<br />&#125;</div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Kasumi</b> [ Thu Dec 15, 2011 3:21 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Load the values in firstRow and secondRow, and store them to screenArray?
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">loop:<br />&nbsp; &nbsp;ldx #$1F<br />&nbsp; &nbsp;lda firstRow,x<br />&nbsp; &nbsp;sta screenArray,x<br />&nbsp; &nbsp;dex<br />&nbsp; &nbsp;bpl loop<br />loop2:<br />&nbsp; &nbsp;ldx #$1F<br />&nbsp; &nbsp;lda secondRow,x<br />&nbsp; &nbsp;sta screenArray+32,x<br />&nbsp; &nbsp;dex<br />&nbsp; &nbsp;bpl loop2<br /></div><br /><br />edit: Oooh, here's a faster way to do the above:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">loop:<br />&nbsp; &nbsp;ldx #$1F<br />&nbsp; &nbsp;lda firstRow,x<br />&nbsp; &nbsp;sta screenArray,x<br /><br />&nbsp; &nbsp;lda secondRow,x<br />&nbsp; &nbsp;sta screenArray+32,x<br />&nbsp; &nbsp;dex<br />&nbsp; &nbsp;bpl loop<br /></div><br /><br />Whenever you want to load one thing and put it someplace else, just use lda and sta. There's no trick to it. <br /><br />Bonus:<br /><br />If firstRow and secondRow are stored like this:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">firstRow:<br />&nbsp; &nbsp;.db $00 $01 ;etc etc 32 bytes<br />secondRow:<br />&nbsp; &nbsp;.db $20 $21<br />;That is, they are stored such that there are no bytes between them<br /></div><br /><br />You can just do this:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;ldx #$3F<br />loop:<br />&nbsp; &nbsp;lda firstRow,x<br />&nbsp; &nbsp;sta screenArray,x<br />&nbsp; &nbsp;dex<br />&nbsp; &nbsp;bpl loop<br /></div>
<br />Though actually, that's slower than the above.
<br />
<br />Edit in response to your edit:  <img src="./images/smilies/icon_surprised.gif" alt=":o" title="Surprised" /> 
<br />
<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">edit: ...would I have to create two for loops like<br />Code:<br /><br />for (int x := 0; x &lt; 32; x++) {<br />    screenArray[x] = firstRow[x];<br />}<br /><br />for (int x := 33; x &lt; 64; x++) {<br />    screenArray[x] = secondRow[x];<br />}<br /></div>
<br />Almost. 
<br />
<br />secondRow is 32 bytes long. secondRow[0] refers to the first byte of secondRow. So that second loop can't work. X starts at 33 (which would be secondRow[33]) which is either the third row's data, or unknown data.
<br />
<br />Also, you can't start X at 33. You stopped at a value &lt; 32 in the first loop, therefore you have never written the 32nd byte of screenArray if X starts at 33 in the second loop.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Thu Dec 15, 2011 3:46 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />YES!! Thank you so much Kasumi! <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />  Spent a  long time on my edit... sorry, I didn't see your post.
<br />
<br />edit:  Ahhh!  Ok, thank you, I see what you are saying. <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />
<br />for the second loop:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent"><br />for &#40;int x=0; x&lt;32; x++&#41; &#123;<br />&nbsp; &nbsp; screenArray&#91;x+ #32&#93; = secondRow&#91;x&#93;;<br />&#125;</div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Kasumi</b> [ Thu Dec 15, 2011 4:18 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yep, you got it.
<br />
<br />Just some additional info: The reason I went down in my asm code, not up (like the C code) is to avoid an extra instruction.
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;ldx #$00;If you go up in a loop like this<br />loop:;You need a cmp.<br />&nbsp; &nbsp;lda firstRow,x<br />&nbsp; &nbsp;sta screenArray,x<br />&nbsp; &nbsp;inx<br />&nbsp; &nbsp;cpx #$40;If X is &lt; #$20<br />&nbsp; &nbsp;bcc loop;Go back to loop<br /></div><br /><br />That cpx takes 2 cycles every time. That loop runs 64 times. That's 128 cycles of unnecessary action. <br /><br />Avoiding extra actions is also why this was faster than the first and last thing I posted:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">loop:<br />&nbsp; &nbsp;ldx #$1F<br />&nbsp; &nbsp;lda firstRow,x<br />&nbsp; &nbsp;sta screenArray,x<br />&nbsp;<br />&nbsp; &nbsp;lda secondRow,x<br />&nbsp; &nbsp;sta screenArray+32,x<br />&nbsp; &nbsp;dex<br />&nbsp; &nbsp;bpl loop <br /></div>
<br />The first thing I posted had two loops, so dex was done 64 times compared to the 32 for this. The second thing would have also run dex 64 times. 
<br />
<br />Not that you should worry about optimization a lot right now, but when you're writing loops keep that sort of thing in the back of your mind.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Thu Dec 15, 2011 5:17 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Kasumi wrote:</div><div class="quotecontent">Just some additional info: The reason I went down in my asm code, not up (like the C code) is to avoid an extra instruction.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;ldx #$00;If you go up in a loop like this<br />loop:;You need a cmp.<br />&nbsp; &nbsp;lda firstRow,x<br />&nbsp; &nbsp;sta screenArray,x<br />&nbsp; &nbsp;inx<br />&nbsp; &nbsp;cpx #$40;If X is &lt; #$20<br />&nbsp; &nbsp;bcc loop;Go back to loop<br /></div><br /><br />That cpx takes 2 cycles every time. That loop runs 64 times. That's 128 cycles of unnecessary action. <br /><br />Avoiding extra actions is also why this was faster than the first and last thing I posted:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">loop:<br />&nbsp; &nbsp;ldx #$1F<br />&nbsp; &nbsp;lda firstRow,x<br />&nbsp; &nbsp;sta screenArray,x<br />&nbsp;<br />&nbsp; &nbsp;lda secondRow,x<br />&nbsp; &nbsp;sta screenArray+32,x<br />&nbsp; &nbsp;dex<br />&nbsp; &nbsp;bpl loop <br /></div><br />The first thing I posted had two loops, so dex was done 64 times compared to the 32 for this. The second thing would have also run dex 64 times. <br /><br />Not that you should worry about optimization a lot right now, but when you're writing loops keep that sort of thing in the back of your mind.</div>
<br />
<br />Kasumi, thank you!<span style="color: green"><strong>!!!!!!</strong></span> <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />  I'll <strong><span style="color: green">try to</span></strong> keep that in the back of my mind. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />
<br /><span style="color: green"><strong>*edited</strong></span>

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>29</strong> of <strong>83</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>