<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - How to describe a circle trajectory on nes?</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">How to describe a circle trajectory on nes?</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=16867">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=16867</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>psycopathicteen</b> [ Fri Dec 29, 2017 6:08 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: How to describe a circle trajectory on nes?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I was responding to your above post.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Yes, it's due to the family of identities that relate multiplication to sum and difference, e.g.:<br /><br />cos(a) * cos(b) = (cos(a+b) + cos(a-b)) / 2<br /><br />So if you have a cosine/sine table, you can get the multiplied result with a few sums, a few lookups, and a shift. Each step loses some precision, yes. I've half-written an NES demo experimenting with this concept but I haven't gotten around to finishing it yet.<br /></div><br /><br />1024 angle steps gives you no gaps in amplitude for 8-bit values.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Fri Dec 29, 2017 6:19 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: How to describe a circle trajectory on nes?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">psycopathicteen wrote:</div><div class="quotecontent">1024 angle steps gives you no gaps in amplitude for 8-bit values.</div><br />Oh, well the precision of your angle is one thing, and the precision of the sine/cosine result is another, and both of them have a bearing on how precise things are. Being able to represent every integer output value is not sufficient to make it completely precise (to that output grandularity). So, 1024 steps is more accurate than 256, but there's lots of precision lost from the 8-bit output quantization too, so you'd also get improvements from making the output wider too. There's not really a clear break point to me for precision, it's a big pile of tradeoffs.<br /><br /><div class="quotetitle">MartsINY wrote:</div><div class="quotecontent">In real life, I would simply use sinus for the first unknown, then pythagore for the second one.</div><br />From the way you described this, might be worth pointing out that cos(x) = sin(x+90Â°) so if you have sine you have cosine available as well. If it's a table lookup, one table does both.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>psycopathicteen</b> [ Sat Dec 30, 2017 11:20 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: How to describe a circle trajectory on nes?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />This has some nice multiplication algorithms.  It uses some self modifying code, so you might want to change abs,x to (dp),y for it to run on the NES.<br /><br /><!-- m --><a class="postlink" href="http://codebase64.org/doku.php?id=base:seriously_fast_multiplication">http://codebase64.org/doku.php?id=base: ... iplication</a><!-- m -->

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>bogax</b> [ Sun Jan 07, 2018 10:47 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: How to describe a circle trajectory on nes?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Here's <a href="http://forum.6502.org/viewtopic.php?p=23964#p23964" class="postlink">code</a> (6502.org) for a simple parabolic approximation of a sine wave.<br /><br />If you run two instances 90 degrees apart that will give you something like a circle.<br /><br />Of course, it's incremental not random access.<br /><br />There's an <a href="http://atariage.com/forums/topic/263420-plot-a-circle/#entry3723112" class="postlink">example here</a> (AtariAge) in Batari Basic.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>zzo38</b> [ Sun Jan 07, 2018 11:39 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: How to describe a circle trajectory on nes?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />One algorithm I know for drawing (approximately) circles is Minsky's circle algorithm, which works like:<div class="codetitle"><b>Code:</b></div><div class="codecontent">for(;;) {<br />&nbsp; y-=epsilon*x;<br />&nbsp; x+=epsilon*y;<br />&nbsp; plot(x,y);<br />}<br /></div><br />The value <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">epsilon</tt> is less than one. If it is 1/256 then you do not need to implement multiplication/division; you can just use the carrying (you do not even need bit shifting). Note that these coordinates are signed numbers, which complicates the implementation a bit.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>kuja killer</b> [ Mon Jan 08, 2018 7:01 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: How to describe a circle trajectory on nes?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><!-- m --><a class="postlink" href="https://pastebin.com/tFdQj6VC">https://pastebin.com/tFdQj6VC</a><!-- m --><br /><br />here's a really interesting file from Puresabe, ..from rockman 4 minus infinity, which i've been able to implement into my game.<br /><br />I only had to change the raw hex numbers on a couple of the JSR's, and stuff, to match the megaman 3 versions, and then it worked like a charm.<br />This is the un-edited rockman 4 minus infinity file i gotten from him originally<br /><br />I do not really understand how this works, but it can do circles very &quot;butter smooth&quot; though ..oh yea, it uses the MMC5's multiply registers 5205/5206 though. (not shown here)<br /><br />comments are in japanese though..sorry <img src="./images/smilies/icon_sad.gif" alt=":(" title="Sad" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Mon Jan 08, 2018 3:47 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: How to describe a circle trajectory on nes?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">zzo38 wrote:</div><div class="quotecontent">One algorithm I know for drawing (approximately) circles is Minsky's circle algorithm, which works like:<div class="codetitle"><b>Code:</b></div><div class="codecontent">for(;;) {<br />&nbsp; y-=epsilon*x;<br />&nbsp; x+=epsilon*y;<br />&nbsp; plot(x,y);<br />}<br /></div><br />The value <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">epsilon</tt> is less than one. If it is 1/256 then you do not need to implement multiplication/division; you can just use the carrying (you do not even need bit shifting). Note that these coordinates are signed numbers, which complicates the implementation a bit.</div><br />This is very interesting!<br /><br />It seems that as epsilon gets larger, it becomes more elliptical, diagonally oblong. As epsilon gets smaller it becomes more circular.<br /><br />At first glance it seems similar to just <a href="https://en.wikipedia.org/wiki/Rotation_matrix#In_two_dimensions" class="postlink">rotating a 2D point</a>, which is one of the &quot;normal&quot; ways to produce a circle:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">ox = x;<br />oy = y;<br />a = cos(angle); // constant<br />b = sin(angle); // constant<br />x = a * ox - b * oy;<br />y = b * ox + a * oy;</div><br /><br />But in your Minsky example only has one multiply, not two, and the way the Y update feeds back into the X update instead of using a temporary value makes the actual result kinda complicated to analyze. I feel like each iteration does like half of an approximation of the rotation somehow?<br /><br />The speed of the rotation is dependent on epsilon, so probably you're limited to power-of-2-ish factors for epsilon unless you want a full generic multiply, but it does appear to be quite stable (I was testing it with 8.8 fixed point) and easy to control the radius because it stays on the circle you start X/Y on!<br /><br /><br />I wrote a simple <a href="http://processing.org" class="postlink">processing</a> sketch to test it, attached below. Click the mouse to pick a starting point for X/Y, and press A/Z to adjust epsilon.

		
			<br clear="all" /><br />

			<table class="tablebg" width="100%" cellspacing="1">
			<tr>
				<td><b class="genmed">Attachments: </b></td>
			</tr>
			
				<tr>
					<td>
			<span class="genmed">
				<img src="./styles/subsilver2/imageset/icon_topic_attach.gif" width="14" height="18" alt="" title="" /> 
				<a href="./download/file.php?id=11531">minsky_test.zip</a> [546 Bytes]
			</span><br />
			<span class="gensmall">Downloaded 35 times</span>
		

		<br />
	</td>
				</tr>
			
			</table>
		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>bogax</b> [ Mon Jan 08, 2018 7:41 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: How to describe a circle trajectory on nes?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent"><div class="quotetitle">zzo38 wrote:</div><div class="quotecontent">One algorithm I know for drawing (approximately) circles is Minsky's circle algorithm, which works like:<div class="codetitle"><b>Code:</b></div><div class="codecontent">for(;;) {<br />&nbsp; y-=epsilon*x;<br />&nbsp; x+=epsilon*y;<br />&nbsp; plot(x,y);<br />}<br /></div><br />The value <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">epsilon</tt> is less than one. If it is 1/256 then you do not need to implement multiplication/division; you can just use the carrying (you do not even need bit shifting). Note that these coordinates are signed numbers, which complicates the implementation a bit.</div><br />This is very interesting!<br /><br />It seems that as epsilon gets larger, it becomes more elliptical, diagonally oblong. As epsilon gets smaller it becomes more circular.<br /><br />At first glance it seems similar to just <a href="https://en.wikipedia.org/wiki/Rotation_matrix#In_two_dimensions" class="postlink">rotating a 2D point</a>, which is one of the &quot;normal&quot; ways to produce a circle:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">ox = x;<br />oy = y;<br />a = cos(angle); // constant<br />b = sin(angle); // constant<br />x = a * ox - b * oy;<br />y = b * ox + a * oy;</div><br /><br />But in your Minsky example only has one multiply, not two, and the way the Y update feeds back into the X update instead of using a temporary value makes the actual result kinda complicated to analyze. I feel like each iteration does like half of an approximation of the rotation somehow?<br /><br />The speed of the rotation is dependent on epsilon, so probably you're limited to power-of-2-ish factors for epsilon unless you want a full generic multiply, but it does appear to be quite stable (I was testing it with 8.8 fixed point) and easy to control the radius because it stays on the circle you start X/Y on!<br /><br /><br />I wrote a simple <a href="http://processing.org" class="postlink">processing</a> sketch to test it, attached below. Click the mouse to pick a starting point for X/Y, and press A/Z to adjust epsilon.</div><br /><br /><br />Some discussion <a href="https://www.cl.cam.ac.uk/~am21/hakmemc.html#item149" class="postlink">here</a> (HACKMEM in html)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>psycopathicteen</b> [ Sun Jan 14, 2018 6:18 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: How to describe a circle trajectory on nes?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Here's a similar question.  Has anybody ever did a sine*amplitude thing on an SNES without using the mode 7 registers?

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>