<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=20&amp;t=14691" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2017-07-28T08:40:43-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=20&amp;t=14691</id>
<entry>
<author><name><![CDATA[TmEE]]></name></author>
<updated>2017-07-28T08:40:43-07:00</updated>
<published>2017-07-28T08:40:43-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=14691&amp;p=201095#p201095</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=14691&amp;p=201095#p201095"/>
<title type="html"><![CDATA[Re: What instead of indexed addressing modes?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=14691&amp;p=201095#p201095"><![CDATA[
Jaa, sometimse you just got to suck it up. My process is iterative, with refactors as new ways to improve something present themselves. Prototyping in a higher level language probably gets you somewhere sooner.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3483">TmEE</a> — Fri Jul 28, 2017 8:40 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[adam_smasher]]></name></author>
<updated>2017-07-28T08:24:52-07:00</updated>
<published>2017-07-28T08:24:52-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=14691&amp;p=201093#p201093</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=14691&amp;p=201093#p201093"/>
<title type="html"><![CDATA[Re: What instead of indexed addressing modes?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=14691&amp;p=201093#p201093"><![CDATA[
Well, I feel as though I've suggested this before, but the best rule of thumb in general is probably &quot;structs of arrays&quot; rather than &quot;arrays of structs&quot;.<br /><br />Otherwise you do your best, focus on the needs of the most speed-sensitive code, maybe iterate on your design a few times, and if worst comes to worst, you might need to suck it up and manually index - which, as long as you keep your data page-aligned and/or so that it never crosses page boundaries, <em>really isn't too bad</em>: we're talking about, in 6502 terms, no more than a handful of extra cycles. Outside of a vblank handler, it's extremely rare that you really need to worry about that in the average game.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4826">adam_smasher</a> — Fri Jul 28, 2017 8:24 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2017-07-28T06:38:16-07:00</updated>
<published>2017-07-28T06:38:16-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=14691&amp;p=201088#p201088</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=14691&amp;p=201088#p201088"/>
<title type="html"><![CDATA[Re: What instead of indexed addressing modes?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=14691&amp;p=201088#p201088"><![CDATA[
<div class="quotetitle">TmEE wrote:</div><div class="quotecontent"><br />data is always laid out in the order of use<br /></div><br />That's what others were recommending but I'm somehow not fully grokking. Say there are 16 bytes of state for each actor in an action platformer:<br /><br />X position (24 bits; 16.8)<br />X velocity (16 bits; 8.8 signed)<br />Y position (16 bits; 8.8)<br />Y velocity (16 bits; 8.8 signed)<br />Current frame<br />Timing state<br />Facing direction<br />Height of last hitbox to hit this actor relative to the actor's feet; used for collision response<br />Health<br />Actor type ID<br />VRAM location for actor's sprite cels<br /><br />Are there some generic rules of thumb for field layout to ensure &quot;data is always laid out in the order of use&quot;? If not, how can I predict &quot;the order of use&quot; in all cases? Do I need to prototype all the routines used by a sample of the actor types in a high-level language, and then reorder the fields to be either after or one bit different from the previous field before translating the routines to Z80/LR35902?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Fri Jul 28, 2017 6:38 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[TmEE]]></name></author>
<updated>2017-07-28T01:16:54-07:00</updated>
<published>2017-07-28T01:16:54-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=14691&amp;p=201081#p201081</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=14691&amp;p=201081#p201081"/>
<title type="html"><![CDATA[Re: What instead of indexed addressing modes?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=14691&amp;p=201081#p201081"><![CDATA[
I pretty much only use IX(IXL,IXH) and IY(IYL,IYH) as temporary variables and all else goes by structures aligned to 256 bytes and BC/DE/HL addressing with lot of incrementing the C/E/L rather than direct specifying of elements to access through them. Autoincrement comes for free on 68K and incrementing is faster on Z80 than directly specifying the element to access too, data is always laid out in the order of use to accomodate that approach.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3483">TmEE</a> — Fri Jul 28, 2017 1:16 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2017-07-27T15:03:49-07:00</updated>
<published>2017-07-27T15:03:49-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=14691&amp;p=201040#p201040</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=14691&amp;p=201040#p201040"/>
<title type="html"><![CDATA[Re: What instead of indexed addressing modes?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=14691&amp;p=201040#p201040"><![CDATA[
<div class="quotetitle">In <a href="https://forums.nesdev.com/viewtopic.php?p=201036#p201036" class="postlink">this post</a>,  TmEE wrote:</div><div class="quotecontent"><br />Z80 assembly came next as I needed means to play sound without tying up the main CPU. It was much more painful than 68K which pretty much had spoiled me. x86 still felt worse though... Nowdays I also do Master System and SC-3000 / SG-1000 stuff, whole game in Z80 isn't actually all that bad.<br /></div><br />Is that based on IX/IY (SG1K/SMS/GG only) or some other way to step through fields of an actor structure?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Thu Jul 27, 2017 3:03 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2016-12-18T21:12:18-07:00</updated>
<published>2016-12-18T21:12:18-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=14691&amp;p=185030#p185030</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=14691&amp;p=185030#p185030"/>
<title type="html"><![CDATA[Re: What instead of indexed addressing modes?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=14691&amp;p=185030#p185030"><![CDATA[
<a href="http://www.ffd2.com/fridge/speccy/score" class="postlink">C64 vs. Speccy wars</a> concluded that a full Z80 (with IX and IY) has 1/3 of the IPC of a 6502.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Sun Dec 18, 2016 9:12 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tomaitheous]]></name></author>
<updated>2016-12-02T11:52:17-07:00</updated>
<published>2016-12-02T11:52:17-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=14691&amp;p=183798#p183798</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=14691&amp;p=183798#p183798"/>
<title type="html"><![CDATA[Re: What instead of indexed addressing modes?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=14691&amp;p=183798#p183798"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />I'm beginning to understand why some Game Boy games ran at 30 fps or slower<br /></div><br />There were master system games that ventured into that 30fps territory too. Earlier titles. <br /><br /> A lot of z80 programmers tend to boast about the available regs to work with on the z80 compared to accumulate based processors (65x, 6809, etc). But I always found it to be the complete opposite. Data registers are kind of a moot point on the 65x simply because it has a lot of direct memory addressing modes (and fast mode; direct or zero page). A lot more operations actually have to go through the A reg on the z80, from another reg or from indirection (address regs). I always felt like a constraint of constantly juggling things - way more than what might be done with Acc on the 65x. And the having ZP as off processor address registers (address vectors) - feels soo free in comparison. Even the 68k felt a tiny bit cramped in this respect to the 65x (only 7 address regs; SP is the 8th address reg). <br /><br /> Of course, the context of 65x to me is not limited to the NES - so my view of optimization and use of quick LUTs for logic are probably expanded compared to the NES environment.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3645">tomaitheous</a> — Fri Dec 02, 2016 11:52 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Drag]]></name></author>
<updated>2016-11-30T22:53:22-07:00</updated>
<published>2016-11-30T22:53:22-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=14691&amp;p=183724#p183724</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=14691&amp;p=183724#p183724"/>
<title type="html"><![CDATA[Re: What instead of indexed addressing modes?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=14691&amp;p=183724#p183724"><![CDATA[
It's been a while since I last touched any z80, but every time an indexed array lookup was needed, the pointer always had to be calculated by hand.<br /><br />The gameboy has a treasure trove of RAM compared to the NES, so it shouldn't be a problem to align your actor memory so that an individual actor's memory doesn't cross a page boundary. Once you do, all you have to do is store your actor's base pointer in a register pair, and the only calculations you'd need to do are on the low byte. If your actors' memory sizes are a power of two, it's a simple matter of ORing the desired index to the low byte, and then later using an AND mask to recover the base pointer so you can OR another index.<br /><br />That's all for array-of-structures. Structure-of-arrays is the exact same thing, except instead of attribute offsets being 0, 1, 2, 3, etc, they're now $00, $10, $20, $30, etc. You also trade limitations; instead of actor size being a power of two and actor count being free, you now have actor count being a power of two and actor size being free. Use whatever's more efficient for the memory usage, your code will be exactly the same regardless.<br /><br />If you need more than 256 bytes worth of actors, you should use array-of-structures, because you'll likely be calculating pointers for attributes (8-bit operation if no actors cross a page boundary) more often than you'll be calculating base pointers for actors (16-bit operation always).<br /><br />As an interesting aside, the ZX Spectrum optimized its <em>framebuffer</em> specifically for Z80 HL addressing; Increasing L moves to the next 8x8 character on the screen, increasing H moves to the next scanline within that character. It might not be the same as DMG-Z80, but it might be worth checking out what ZX Spectrum programmers have to say. That's how I came across <a href="https://graphics.stanford.edu/~seander/bithacks.html" class="postlink">this helpful bit-twiddling reference</a> after all.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=21">Drag</a> — Wed Nov 30, 2016 10:53 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2016-11-29T23:40:21-07:00</updated>
<published>2016-11-29T23:40:21-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=14691&amp;p=183675#p183675</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=14691&amp;p=183675#p183675"/>
<title type="html"><![CDATA[Re: What instead of indexed addressing modes?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=14691&amp;p=183675#p183675"><![CDATA[
In <a href="http://www.cpcwiki.eu/forum/programming/trying-not-to-use-ix/msg133416/#msg133416" class="postlink">this topic</a>, Axelay recommends 6502-style parallel tables with start addresses aligned to a power of two, which lets instructions like <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">set 5,L</tt> and <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">res 5,L</tt> point HL at different tables in a page.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Tue Nov 29, 2016 11:40 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[AWJ]]></name></author>
<updated>2016-08-19T13:26:34-07:00</updated>
<published>2016-08-19T13:26:34-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=14691&amp;p=177761#p177761</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=14691&amp;p=177761#p177761"/>
<title type="html"><![CDATA[Re: What instead of indexed addressing modes?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=14691&amp;p=177761#p177761"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br /><div class="quotetitle">AWJ wrote:</div><div class="quotecontent">I wonder if Konami had trouble getting people to write efficient code for the custom 6809 derivative most of their late-80s arcade games ran on...<br /></div><br />Probably not. The Konami-1 variant of the 6809 <a href="http://webcache.googleusercontent.com/search?q=cache:_1TZi_XwpnoJ:www.ukvac.com/forum/the-konami1-crypto-engine-on-a-gyruss-bootleg_topic337364.html+&amp;cd=5&amp;hl=en&amp;ct=clnk&amp;gl=us" class="postlink">reportedly</a> just XORs each opcode (not its operand) with a formula based on A3 and A1. That could be compensated at assembly time. Anyone who had coded for a CoCo, Dragon, FM-7, or Williams arcade could probably jump right in.<br /><br />But then arcade code didn't have to be quite as efficient as console code anyway, as the manufacturer could just throw more hardware at it.</div><br /><br />That's not the CPU I'm talking about. The Konami-1 was just a 6809 with scrambled opcodes, but the Konami-2 had 8 general-purpose output pins that were usually used for ROM banking (indeed they're listed as A16-A23 on schematics) and ISA changes that go beyond simple scrambling. The Konami-1 was used in early-1980s games like Gyruss; the Konami-2 was used until the early 1990s (The Simpsons was one of the last games that ran on it)<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3737">AWJ</a> — Fri Aug 19, 2016 1:26 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2016-08-19T11:21:43-07:00</updated>
<published>2016-08-19T11:21:43-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=14691&amp;p=177750#p177750</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=14691&amp;p=177750#p177750"/>
<title type="html"><![CDATA[Re: What instead of indexed addressing modes?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=14691&amp;p=177750#p177750"><![CDATA[
<div class="quotetitle">AWJ wrote:</div><div class="quotecontent"><br />I wonder if Konami had trouble getting people to write efficient code for the custom 6809 derivative most of their late-80s arcade games ran on...<br /></div><br />Probably not. The Konami-1 variant of the 6809 <a href="http://webcache.googleusercontent.com/search?q=cache:_1TZi_XwpnoJ:www.ukvac.com/forum/the-konami1-crypto-engine-on-a-gyruss-bootleg_topic337364.html+&amp;cd=5&amp;hl=en&amp;ct=clnk&amp;gl=us" class="postlink">reportedly</a> just XORs each opcode (not its operand) with a formula based on A3 and A1. That could be compensated at assembly time. Anyone who had coded for a CoCo, Dragon, FM-7, or Williams arcade could probably jump right in.<br /><br />But then arcade code didn't have to be quite as efficient as console code anyway, as the manufacturer could just throw more hardware at it.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Fri Aug 19, 2016 11:21 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[psycopathicteen]]></name></author>
<updated>2016-08-19T11:09:30-07:00</updated>
<published>2016-08-19T11:09:30-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=14691&amp;p=177749#p177749</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=14691&amp;p=177749#p177749"/>
<title type="html"><![CDATA[Re: What instead of indexed addressing modes?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=14691&amp;p=177749#p177749"><![CDATA[
I'm guessing most people probably would just copy the slots to a static region of memory.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4383">psycopathicteen</a> — Fri Aug 19, 2016 11:09 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[AWJ]]></name></author>
<updated>2016-08-16T23:42:34-07:00</updated>
<published>2016-08-16T23:42:34-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=14691&amp;p=177637#p177637</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=14691&amp;p=177637#p177637"/>
<title type="html"><![CDATA[Re: What instead of indexed addressing modes?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=14691&amp;p=177637#p177637"><![CDATA[
A lot of commercial GB games contain really terrible and inefficient code. I've seen a lot of GB code that's effectively literally-translated 6502 (the first two Final Fantasy Legend games are bad for this--the third is significantly better) I've seen games that put the stack in high RAM--I guess they were told &quot;accessing high RAM is faster&quot; and thoroughly misunderstood what was meant. That's the problem with using a custom CPU architecture. I wonder if Konami had trouble getting people to write efficient code for the custom 6809 derivative most of their late-80s arcade games ran on...<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3737">AWJ</a> — Tue Aug 16, 2016 11:42 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2016-08-15T11:43:58-07:00</updated>
<published>2016-08-15T11:43:58-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=14691&amp;p=177534#p177534</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=14691&amp;p=177534#p177534"/>
<title type="html"><![CDATA[Re: What instead of indexed addressing modes?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=14691&amp;p=177534#p177534"><![CDATA[
<div class="quotetitle">adam_smasher wrote:</div><div class="quotecontent"><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I'm beginning to understand why some Game Boy games ran at 30 fps or slower, even apart from the slow green LCD prior to the Game Boy Pocket: the mindset for an 8080 differs<br /></div><br />Possibly; I've never disassembled a troublesome GB game to say. Are there any particularly slow ones you can think of? I wouldn't mind at least trying to take a peek and evaluate.</div><br />When I played <em>Balloon Kid</em> and <em>Super Mario Land 2</em>, their slow frame rate was something I noticed.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Or are you suggesting separate loops: one to choose all actors' movement direction based on its animation frame, a second loop to move all actors horizontally, a third loop to move all actors vertically, a fourth loop to eject all actors from obstacles, and a fifth loop to update all actors' animation frames?<br /></div><br />Something like that, sure. My game engine works much that way.</div><br />Even that can get troublesome, as ejection tends to touch the entire position, especially on slopes. And then you need five methods for each actor type instead of just <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">move&#40;&#41;</tt>.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Mon Aug 15, 2016 11:43 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[adam_smasher]]></name></author>
<updated>2016-08-15T11:03:42-07:00</updated>
<published>2016-08-15T11:03:42-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=14691&amp;p=177531#p177531</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=14691&amp;p=177531#p177531"/>
<title type="html"><![CDATA[Re: What instead of indexed addressing modes?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=14691&amp;p=177531#p177531"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />But if I rely on the fact that one field follows another, and I or someone else on my team reorders the fields so that a different subroutine can walk through them with INC, such a reorganization may end up breaking the assumption. As far as I can tell, this means that for every INC or DEC in a subroutine that accesses more than one such field, I'll have to put an assembly-time assertion that the header file didn't change the order of the fields since I wrote that particular subroutine. And when such an assertion breaks, that's a lot of code I'll have to touch and re-test.<br /></div><br />Yes, unfortunately, this is the case. Or, more realistically, one doesn't bother with any sort of compile-time assertions and just keeps everything in their head and prays <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />I'm beginning to understand why some Game Boy games ran at 30 fps or slower, even apart from the slow green LCD prior to the Game Boy Pocket: the mindset for an 8080 differs greatly from that for the striped-arrays for 6502 (C64, Atari, NES, Super NES) or the pointer+offset of a 68000 (Genesis, Amiga) or full Z80 (Game Gear), and it might not have been trivial to find programmers experienced with its idiosyncrasies.<br /></div><br />Possibly; I've never disassembled a troublesome GB game to say. Are there any particularly slow ones you can think of? I wouldn't mind at least trying to take a peek and evaluate.<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />I don't see how not to operate on the entire structure at once. An actor has to move horizontally and vertically, eject itself from any obstacles, and then update its animation frame. Or are you suggesting separate loops: one to choose all actors' movement direction based on its animation frame, a second loop to move all actors horizontally, a third loop to move all actors vertically, a fourth loop to eject all actors from obstacles, and a fifth loop to update all actors' animation frames?<br /></div><br />Something like that, sure. My game engine works much that way.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4826">adam_smasher</a> — Mon Aug 15, 2016 11:03 am</p><hr />
]]></content>
</entry>
</feed>