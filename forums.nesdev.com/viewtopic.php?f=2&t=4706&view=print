<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - [President] Remembering collected items without extra RAM?</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">[President] Remembering collected items without extra RAM?</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=4706">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=4706</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>4</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Wed Jan 07, 2009 6:26 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>[President] Remembering collected items without extra RAM?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I've run into a problem: I'm sick of remaking Tetris.
<br />
<br />Now I want to make a platformer similar to the Super Mario series, intended to be ROM-hacker-friendly. The player can pick up coins and power-ups from levels, but I don't want the player to be able to grab an item, move the camera two screens away, and then come back and grab the same item again.
<br />
<br />But is this feasible without PRG RAM? Eventually I (or a ROM-hacker using my engine under license) might want to put a game on a cart to sell, and I'd imagine that the parts for SNROM-clone (MMC1 CPLD, extra 6264) are a lot more expensive than the parts for UNROM-clone (74HC161, 74HC32). Or should I just bite the bullet and spring for PRG RAM?
<br />
<br />Several platformers for NES that have backtracking (Zelda II, Metroid, Kid Icarus, SMB2, SMB3) have 8 KiB of PRG RAM on the cart to remember what coins have been collected, which ? blocks have been opened, which bricks have been broken, etc. Games without PRG RAM either have a tiny level (Lode Runner, Crystal Mines), or lack backtracking (e.g. Super Mario Bros., Contra, Rainbow Islands, Battletoads), or have the vast majority of items comd from defeated enemies (e.g. Mega Man series). Gregg Iz-Tavares and Dan Chang recognized this in the <a href="http://greggman.com/mckids/programming_mc_kids.htm" class="postlink">the M.C. Kids post-mortem</a>: "Without the extra RAM, we would have most likely have been forced to redesign the game either so levels didn't have to be modifed or so that it only scrolled in one direction."
<br />
<br />Here's what the memory map looks like so far:
<br /><ul><li>0000-00FF: zero page, including state of level decoder </li><li>0100-019F: VRAM transfer buffer </li><li>01A0-01FF: stack </li><li>0200-02FF: OAM buffer </li><li>0300-03FF: unknown, much of it to be occupied by the music engine </li><li>0400-05FF: state of 16 active objects </li><li>0600-07FF: 32x12 metatile decoded section of map centered on player </li></ul>
<br />I guess my internal debate is whether to make something like SMB1 (which has no backtracking) or to make something more flexible like SMB3 (which would pretty much need the entire map decoded to RAM first).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Wed Jan 07, 2009 9:59 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Honestly, what I'd do is organize all items/powerups in the level in a list of some sort. This list holds their coordinates, and information about the power up. This is in ROM. Then you make an array of flags in RAM which hold answers true or false to indicate whether an item has been taken. Say the player takes the 3rd item in the list. The third bit from the left in the first byte of the taken-status flags would be set. Since it's one bit per power up, that saves you RAM. If you plan on having 2048 power ups or coins, then that'll be 256 bytes.
<br />
<br />I think if you're closer to being able to get away without using WRAM than not, you should try and avoid WRAM. The only reason I use it is because my game is a new Castlevania style game where there are lots of RPG aspects and you save your game. Since I basically had to use it to save games, I allowed for 3 save files, 1k each, leaving me 5k of RAM to work with. But if you're not planning on saving your game, I think you can get away without it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Thu Jan 08, 2009 3:31 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I've run into a problem: I'm sick of remaking Tetris</div>
<br />Honnestly, it's about time.
<br />
<br />I think it should be possible to have backtracking and flags for items without extra cartridge RAM. In my game engine, the levels are separed into screen and each screen can hold up to 8 objects. There is a 64-byte table in the system RAM that holds one flag for eacah possible object in a 64 screen level, so that when the player opens a chest in the level it remains open until the player either gets a game over condition and have to do the level again, or beats the level. If he just loose a life but not game over yet, the flags aren't touched so that he cannot collect items more than once.
<br />
<br />If you look carefully at Mega Man games, there is often extra life or energy capsules in levels that are not dropped by enemies, and those don't reapear when you exit the screen and come back if you picked them. Yet no Mega Man game ever used extra RAM.
<br />
<br />The reason SMB3 needed extra RAM is because there is many coins and bricks that can be picked/destroyed, much more than 8 per screen. In that case yes extra RAM can be needed.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Thu Jan 08, 2009 4:21 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I don't remember much of the memory map I was planning on using, but I'm pretty sure my Sonic engine could almost work with just 2KB of RAM. When I decided to add 8KB of RAM I indeed moved the object states there, but just because it made the object definitions easier to read (which can be hard when scrolling in both directions, shouldn't be a problem for side scrollers). The other things that reside in PRG-RAM now are the complete level map (it could be in ROM instead) and the currently active objects (I did this to increase the number of those from 16 to 32).
<br />
<br />The bottom line is that the PRG-RAM I'm currently using isn't really necessary, it just made things a bit easier and more flexible. This means that the basic idea could probably be realized with just 2KB. If you have a bit for each object in the level just to tell if they're dead or alive, you could track 512 objects with just 64 bytes (I'm sure you can fit that in your memory map). Since 1 bit might not be enough for some objects (that need to remember more than alive/dead), I made some extra memory available (128 or 256 bytes, can't remember), and the object definitions of these objects contained a pointer to the byte to be used for this purpose (since there are few bytes, the pointer is only 8 or 7 bits). Technically you could even use a few consecutive bytes if the object is really complex and really needs them, there is no 1 byte per object limit.
<br />
<br />That's it, I think you can keep track of a lot of things with 1 bit per object in the level and a few extra bytes for more complex objects.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>UncleSporky</b> [ Thu Jan 08, 2009 5:32 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I think this is one of those things that gets weeded out in design - how big and complex do your levels need to be?  Once you've got an average level figured out, you can see how much data you'll need to store.
<br />
<br />I would tend to think similarly to the others here, you should be able to track one level's worth of objects with individual bits.  Of course I don't know how commercial games did it at the time, perhaps there's something about that approach that just won't be enough.
<br />
<br />You could also do something in between: make levels that are non-backtrackable after a certain point.  You go through a door and there's no door to take you back, or you jump off a high ledge into the next screen below and there's no going back.  These would be the halfway points of the levels, the checkpoints.  A simple one way door would be easiest to explain to the people making their own levels.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Thu Jan 08, 2009 7:50 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Zelda used a lossy scheme for storing enemies; you could defeat some of the weaker ones in a room, exit, and re-enter to find the stronger ones converted to weaker ones. I think a lossy scheme could usefully work to reduce storage space below one bit per item. You could divide the level into sub-sections, group objects and enemies into classes, and keep track of the number of objects for each class in each sub-section. I think there are some creative things that can be done in approximating what things were left. Of course such a scheme could only be used for common things like coins or filler enemies; special items and bosses must be remembered precisely.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>UncleSporky</b> [ Thu Jan 08, 2009 8:14 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">blargg wrote:</div><div class="quotecontent">Zelda used a lossy scheme for storing enemies; you could defeat some of the weaker ones in a room, exit, and re-enter to find the stronger ones converted to weaker ones. I think a lossy scheme could usefully work to reduce storage space below one bit per item. You could divide the level into sub-sections, group objects and enemies into classes, and keep track of the number of objects for each class in each sub-section. I think there are some creative things that can be done in approximating what things were left. Of course such a scheme could only be used for common things like coins or filler enemies; special items and bosses must be remembered precisely.</div>I think such a system would work fine for enemies, which are alive and their positions can change, but I know I would hate to pick up a few coins out of a big square of them and come back to find the remaining coins rearranged.  I can understand a system like that from a programming perspective but not a gaming one.
<br />
<br />Also to address earlier points about how much object data needs to be stored, I think Mario needed extra RAM for situations like this:
<br />
<br /><img src="http://img509.imageshack.us/img509/8529/mario2k3bonus1qi9.png" alt="Image" />
<br />
<br />Big piles of interactive objects that have changing states.  If your engine doesn't need that, you could do fine with less RAM.  Admittedly it is more fun knowing you can break down that whole pile and there might be something hidden in the middle.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Jan 08, 2009 9:14 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">UncleSporky wrote:</div><div class="quotecontent">Big piles of interactive objects that have changing states.</div>
<br />You're right about that. In fact, there's an even more pathological case of deformability that I want my engine to be able to handle: WORLD 1-2 from the original Super Mario Bros. Think of the amount of data that one would need to store for all the brick blocks in that map.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>UncleSporky</b> [ Thu Jan 08, 2009 11:46 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent"><div class="quotetitle">UncleSporky wrote:</div><div class="quotecontent">Big piles of interactive objects that have changing states.</div><br />You're right about that. In fact, there's an even more pathological case of deformability that I want my engine to be able to handle: WORLD 1-2 from the original Super Mario Bros. Think of the amount of data that one would need to store for all the brick blocks in that map.</div>
<br /><a href="http://ian-albert.com/misc/smb.php" class="postlink">I just counted because I am bored.</a>  There are 263 breakable blocks in 1-2.  135 more brick tiles are not breakable due to being grounded but I imagine they are stored the same way (and if it were Mario 3 you could use a shell or your tail).  There are 11 tiles that are ? blocks, hidden powerups and such.  21 enemies and 17 loose floating coins.
<br />
<br />That's 447 things in the level that are interactive and would need at least 1 bit to indicate whether they still exist in their original state.  (The multi coin blocks would require more.)  If all you needed was 1 bit each that's 56 bytes for the whole level not including the pipe detour, ending staircase, or anything else I might've missed.
<br />
<br />I think that's doable, especially if you used a one way door and split it in half, but at the same time you could build a much more robust and flexible engine with more RAM.  It sounds like if you were going to make a nice Mario 3-esque game you would personally go for more RAM, and you should do it however you want.  Personally, I have more fun trying to do more with less. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Thu Jan 08, 2009 1:18 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Why can't I vote "SMB3 clone without PRG RAM"? Seriously, I think that's very possible. Of course you'd have to look away from the obvious and give up on decoding large sections of level maps to RAM, coming up with a decent scheme for reading maps from ROM instead.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Thu Jan 08, 2009 1:34 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">Why can't I vote "SMB3 clone without PRG RAM"? Seriously, I think that's very possible. Of course you'd have to look away from the obvious and give up on decoding large sections of level maps to RAM, coming up with a decent scheme for reading maps from ROM instead.</div>
<br />
<br />I was wondering the same thing. I would've voted for SMB3 without WRAM too.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Thu Jan 08, 2009 1:38 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Celius wrote:</div><div class="quotecontent">I was wondering the same thing. I would've voted for SMB3 without WRAM too.</div>
<br />Yeah, I just voted wrong because I though the first option said "SMB3" (kinda assumed that from reading the post, instead of actually paying attention to it). I just realized what was actually written when my vote was already being sent. Yeah, that one vote is from me and it's wrong. Sorry. =P

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Jan 08, 2009 1:39 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">Of course you'd have to look away from the obvious and give up on decoding large sections of level maps to RAM</div>
<br />By "large sections" do you mean bigger than the 32x12 metatile buffer that I already envision?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>UncleSporky</b> [ Thu Jan 08, 2009 1:39 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I just voted for SMB3 because I'd prefer to see a more fully-realized game, whatever you have to do with RAM.
<br />
<br />It can be difficult in cases like this.  It's a lot of trouble to try to squeeze a good game in with less space, and you may not be satisfied in the end.  But you're already going to the trouble of making a NES game which is enough of a headache by itself!  What are you thinking, making a NES game, you crazy person?!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Thu Jan 08, 2009 1:48 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">By "large sections" do you mean bigger than the 32x12 metatile buffer that I already envision?</div>
<br />I'm still not sure. 32x12 = 384 bytes does seem like quite a waste to me, and enough to remember the states of a lot of objects! I'd probably prefer compressing the level maps using a scheme that is not so slow to decode in real time but still compresses fairly well.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>4</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>