<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=9&amp;t=9201" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2012-08-11T13:18:35-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=9&amp;t=9201</id>
<entry>
<author><name><![CDATA[lidnariq]]></name></author>
<updated>2012-08-11T13:18:35-07:00</updated>
<published>2012-08-11T13:18:35-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9201&amp;p=97970#p97970</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9201&amp;p=97970#p97970"/>
<title type="html"><![CDATA[Re: Board for testing famicom expansion audio]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9201&amp;p=97970#p97970"><![CDATA[
<div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent"><br />Memblers mentioned building a cart with no onboard CHR and just uses one of the nametables as CHR-RAM.<br /></div><br />I've actually been working—although not very earnestly—on reworking Galaxian to that layout (which in my head I've taken to calling micro7).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3512">lidnariq</a> — Sat Aug 11, 2012 1:18 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2012-08-11T12:37:32-07:00</updated>
<published>2012-08-11T12:37:32-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9201&amp;p=97966#p97966</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9201&amp;p=97966#p97966"/>
<title type="html"><![CDATA[Re: Board for testing famicom expansion audio]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9201&amp;p=97966#p97966"><![CDATA[
Diagonal mirroring (CIRAM A10 = PA10 xor PA11) in a 4-way scrolling game has wraparound glitches not at the left and right, not at the top and bottom, but only at the corners, which are even harder to see. It's already possible on TxSROM and MMC5 and possibly a few obscure Japanese mappers.<br /><br />I'd make a tech demo of it, but I lack a big picture to pan over.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Sat Aug 11, 2012 12:37 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[infiniteneslives]]></name></author>
<updated>2012-08-11T11:08:21-07:00</updated>
<published>2012-08-11T11:08:21-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9201&amp;p=97965#p97965</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9201&amp;p=97965#p97965"/>
<title type="html"><![CDATA[Re: Board for testing famicom expansion audio]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9201&amp;p=97965#p97965"><![CDATA[
Yeah mirroring is kind of one of those mystifying things that really turns out to be simpler than you imagined when you actually figure it all out.<br /><br />Diagonal mirroring huh?  Interesting thought.  Wouldn't seem too hard to wire up, but I'm not sure how to make use of in a game...<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4832">infiniteneslives</a> — Sat Aug 11, 2012 11:08 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[rainwarrior]]></name></author>
<updated>2012-08-11T01:43:29-07:00</updated>
<published>2012-08-11T01:43:29-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9201&amp;p=97947#p97947</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9201&amp;p=97947#p97947"/>
<title type="html"><![CDATA[Re: Board for testing famicom expansion audio]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9201&amp;p=97947#p97947"><![CDATA[
Recently I was trying to learn how to wire a cartridge for horizontal or vertical mirroring. I had been expecting there to be a pin that was high/low vertical/horizontal, or something like that. When I first started looking at it it made no sense to me; why were CHR address lines going to the pin that controls nametable mirroring? It was quite eye-opening to realize how that worked. I guess this kind of use of address lines is a pretty normal idea if you work with hardware a lot, but I never expected it.<br /><br />Actually, I wonder what kind of interesting things could be done with it. Memblers mentioned building a cart with no onboard CHR and just uses one of the nametables as CHR-RAM. I wonder what other useful possibilities there might be. (Has anyone tried to use diagonal mirroring?)<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5165">rainwarrior</a> — Sat Aug 11, 2012 1:43 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[infiniteneslives]]></name></author>
<updated>2012-08-10T19:01:42-07:00</updated>
<published>2012-08-10T19:01:42-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9201&amp;p=97943#p97943</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9201&amp;p=97943#p97943"/>
<title type="html"><![CDATA[Re: Board for testing famicom expansion audio]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9201&amp;p=97943#p97943"><![CDATA[
Yeah I can relate with that.  I thought it was interesting when I first stared deving here.  I'm more of a hardware guy, so trying to learn about the mappers was kind of challenging for me at first because all the documents are written from the perspective of the programmer.  It wasn't until I started tracing some of the PCB circuits and stuff myself and RE'd the mappers that I actually understood how they worked on a hardware level.  So I can imagine the challenge of coming from software to hardware without the hardware back ground.<br /><br />For me it was kind of neat to finally get around to creating my own version of pong a few months back.  In a lot of ways, creating a game it was greatly eased by the fact I had such a good grasp of the hardware.  But when programming I quickly found the knowledge holes I had, and enjoyed patching them up and finally tying the whole NES hardware/software together.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4832">infiniteneslives</a> — Fri Aug 10, 2012 7:01 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[rainwarrior]]></name></author>
<updated>2012-08-09T23:42:31-07:00</updated>
<published>2012-08-09T23:42:31-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9201&amp;p=97882#p97882</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9201&amp;p=97882#p97882"/>
<title type="html"><![CDATA[Re: Board for testing famicom expansion audio]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9201&amp;p=97882#p97882"><![CDATA[
Wikipedia's article on <a href="http://en.wikipedia.org/wiki/Three-state_logic" class="postlink">three-state logic</a> seems helpful. Yeah, I've dealt with bankswitching code for discrete logic mappers; I know how that's done. I'm generally okay with stuff on the programming or logic side. It's the electronics that I sometimes feel inadequate with, but I'm learning more all the time, so this is good. Thanks for your help.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5165">rainwarrior</a> — Thu Aug 09, 2012 11:42 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[infiniteneslives]]></name></author>
<updated>2012-08-09T23:17:17-07:00</updated>
<published>2012-08-09T23:17:17-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9201&amp;p=97880#p97880</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9201&amp;p=97880#p97880"/>
<title type="html"><![CDATA[Re: Board for testing famicom expansion audio]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9201&amp;p=97880#p97880"><![CDATA[
<div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent"><br />The main thing I was unsure of is what happens when you connect 2 devices to the same bus, which is something I've never done before. I'm still a bit unclear on how that works, actually. infiniteneslives' guess that a read conflict would put &quot;about 0.7 volts&quot; on the bus is something I'd like to know more about. How do you make that guess? What about trying to write to two mappers at once; is there a limit to how many devices you could write to simultaneously via the same bus? My knowledge of how TTL circuits work in this kind of case is very deficient. If there's a standard textbook that I should read, or you know a good online resource that teaches this stuff, please let me know.<br /></div><br /><br />Sounds like you're looking for some basic fundamentals of a birectional data bus system (might find something with that on google.)  One quick read that may help is simple a SRAM datasheet.  Read through it a time or two and make sure you understand exactly how each pin behaves and the timing diagrams of reading and writing, tristate inputs and such.  Sounds like you've got most of this down now, but it's a quick read that might solidify some of this stuff for you.  Another decent source would be the 6502 datasheet.  I've only read though the first couple sections but it try to teach these basics and such of R/W addressing, chip enable, bidirectional bus etc.<br /><br />FYI  The way this is avoided with things like UNROM is by making sure the address 'written' to on the ROM has the same value that the CPU is writting to the mapper, so the ROM and CPU both agree on the value.  They are BOTH outputing to the bus (because the ROM doesn't know it's a write) But since they output the same value conflicts are avoided.  <br /><br />If you put 100 some memories on a single bus and tried to write to them all at once you might have issues due to the large loading, but this isn't really of concern for your discussion.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4832">infiniteneslives</a> — Thu Aug 09, 2012 11:17 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Jarhmander]]></name></author>
<updated>2012-08-09T15:31:14-07:00</updated>
<published>2012-08-09T15:31:14-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9201&amp;p=97856#p97856</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9201&amp;p=97856#p97856"/>
<title type="html"><![CDATA[Re: Board for testing famicom expansion audio]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9201&amp;p=97856#p97856"><![CDATA[
<div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent"><br />Is it generally safe to connect one TTL output to multiple inputs? Is it also generally unsafe to connect two TTL outputs together, causing unwanted flow if one is high and one is low?<br /></div><br />You get it. The last thing is precisely a bus conflict.<br /><br />When a device in a bus IS selected AND it's a read request THEN it drives the bus, otherwise it doesn't drive it (let the bus in its state, possibly floating). Of course when a device is accessed for a write, it doesn't drive the bus because the CPU is driving it and it's supposed to take what the CPU drives. It's like that to allow multiple devices on the same bus.<br /><br />edit: <div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent"><br />If these things are true, then I guess my next question is what is different about the CPU input and the A D0 low output that means A will &quot;win&quot; the conflict instead of the CPU?<br /></div><br />When doing a read the CPU doesn't drive the data bus, so it won't &quot;fight&quot; with other devices possibly driving the data bus. So the CPU isn't part of the conflict, it's between the devices trying to drive the bus together. Only one device is supposed to drive the data bus, either the CPU or one peripheral.<br /><br />With most discrete mappers, you get bus conflicts precisely because a ROM doesn't have a R/W pin, it is supposed to be read, period. When doing writes to the ROM, the ROM chip will effectively drive the data bus as it were a read, so both the CPU and the ROM chip drive the data bus, which does a bus conflict. The ANROM and AN1ROM adds extra logic to the ROM /CE to disable it if it's a write, a bit like we're going to do with your special cartridge.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=336">Jarhmander</a> — Thu Aug 09, 2012 3:31 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[rainwarrior]]></name></author>
<updated>2012-08-09T14:44:37-07:00</updated>
<published>2012-08-09T14:44:37-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9201&amp;p=97850#p97850</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9201&amp;p=97850#p97850"/>
<title type="html"><![CDATA[Re: Board for testing famicom expansion audio]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9201&amp;p=97850#p97850"><![CDATA[
So...<br /><br />If there's no diode in this case, current would flow from B D0 to A D0, and nothing would get to the CPU input, but if there is a diode in the way, the voltage drop across the diode allows an equivalent voltage to apply to the CPU?<br /><br />However, if /OE on PRG ROM A is high, its D0 is effectively disconnnected and does not interfere with the CPU?<br /><br />If these things are true, then I guess my next question is what is different about the CPU input and the A D0 low output that means A will &quot;win&quot; the conflict instead of the CPU?<br /><br />Is it generally safe to connect one TTL output to multiple inputs? Is it also generally unsafe to connect two TTL outputs together, causing unwanted flow if one is high and one is low?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5165">rainwarrior</a> — Thu Aug 09, 2012 2:44 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Jarhmander]]></name></author>
<updated>2012-08-09T14:07:50-07:00</updated>
<published>2012-08-09T14:07:50-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9201&amp;p=97848#p97848</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9201&amp;p=97848#p97848"/>
<title type="html"><![CDATA[Re: Board for testing famicom expansion audio]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9201&amp;p=97848#p97848"><![CDATA[
Yeah, it was a bit late here and didn't take the time to explain much my solution. But with the help of everyone, now that's all explained, plus potential pitfalls to avoid.<br /><br />Concerning the 0.7V, it's just the diode drop you'll encounter if you put diodes in the data bus. I'll explain it (but please don't mind the crappy ascii art). For the sake of simplicity, only D0 is shown here:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">to Cart A D0     to Cart B D0<br />    |                  |<br />   -+-                 |<br />   / \                 |<br />   -+-                 |<br />    |                  |<br />    +--------+---------+<br />             |<br />             |<br />             |<br />          2A03 D0<br />          <br /></div><br /><br />Suppose that cart A is the one you want to prevent bus conflicts with reads. Well, that doesn't entirely work: imagine your program does a read at $8000 for example, cart A PRG has $00 at that address and cart B has $FF at the same address. That means D0 from cart A will be driven low (~0V) and D0 from cart B will be driven high (~5V) when that read occur. Current will flow from cart B D0 to cart A D0: with NMOS technology the 0V will &quot;win&quot; and the 2A03 will see about a diode drop (~.7V) and that will be interpreted as a logical 0. That's a bus conflict! Put the diode the other way and it will work with this particular situation, but then if cart A D0 is driven low it will still do a bus conflict.<br /><br />That's why it's better to somehow manipulate the {PRG /CE} and {PRG /A14} that goes to the expansion cartridge, that's so simple it works : you only have to change those signals so when read occurs, the &quot;expansion&quot; cartridge will never see a good address nor {PRG /CE} going low, so it will <em>never</em> drive the data bus for whatever reason, because it is never 'activated' on reads. Of course, that prevent you to make any read from the &quot;expansion&quot; cart, but when messing with external audio why would you want to read out some registers? Namco163 support this, but it's just plain RAM; reading $5015 with the MMC5 will give you access to the status bits, but for what use? I can only see interest in reading FDS registers. But then, you'll have to remove the extra logic required for {PRG A14} and make sure you choose a mapper that the PowerPak won't decode addresses in the range $4000-$7FFF internally, if that's possible.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=336">Jarhmander</a> — Thu Aug 09, 2012 2:07 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[rainwarrior]]></name></author>
<updated>2012-08-09T11:43:02-07:00</updated>
<published>2012-08-09T11:43:02-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9201&amp;p=97830#p97830</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9201&amp;p=97830#p97830"/>
<title type="html"><![CDATA[Re: Board for testing famicom expansion audio]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9201&amp;p=97830#p97830"><![CDATA[
Yeah, I can handle wiring up a 7402. That part's not problem.<br /><br />The main thing I was unsure of is what happens when you connect 2 devices to the same bus, which is something I've never done before. I'm still a bit unclear on how that works, actually. infiniteneslives' guess that a read conflict would put &quot;about 0.7 volts&quot; on the bus is something I'd like to know more about. How do you make that guess? What about trying to write to two mappers at once; is there a limit to how many devices you could write to simultaneously via the same bus? My knowledge of how TTL circuits work in this kind of case is very deficient. If there's a standard textbook that I should read, or you know a good online resource that teaches this stuff, please let me know.<br /><br />Controlling the read state of the mapper via PRG /CE and PRG A14 was an interesting lesson too. I had been under the assumption that there was no way to directly do this, but after thinking it through I can see how it works. I was interested in the solution, but I am much more interested in knowing why the solution would work, so that I could figure it out and be capable of changing the plan if I needed to.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5165">rainwarrior</a> — Thu Aug 09, 2012 11:43 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Jarhmander]]></name></author>
<updated>2012-08-09T04:42:32-07:00</updated>
<published>2012-08-09T04:42:32-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9201&amp;p=97811#p97811</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9201&amp;p=97811#p97811"/>
<title type="html"><![CDATA[Re: Board for testing famicom expansion audio]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9201&amp;p=97811#p97811"><![CDATA[
Seems my idea get through.<br /><br />I don't know if it's too much but anyway:<br /><br />How to wire you quad nor gate:<br /><img src="http://upload.wikimedia.org/wikipedia/commons/thumb/2/2a/NOR_Pinout.jpg/220px-NOR_Pinout.jpg" alt="Image" /><br /><br />Connect Famicom's {PRG R/W} to A1, Famicom's {PRG /CE} to B1, Q1 to both A2 and B2 and then Q2 to the &quot;expansion&quot; cart {PRG /CE}. This makes an OR gate. Then connect {PRG R/W} to A3, {PRG A14} to both A4 and B4, Q4 to B3 and then Q3 to the &quot;expansion&quot; cart {PRG A14}. This is equivalent of a AND gate with the {PRG R/W} inverted.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=336">Jarhmander</a> — Thu Aug 09, 2012 4:42 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[rainwarrior]]></name></author>
<updated>2012-08-09T01:10:33-07:00</updated>
<published>2012-08-09T01:10:33-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9201&amp;p=97807#p97807</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9201&amp;p=97807#p97807"/>
<title type="html"><![CDATA[Re: Board for testing famicom expansion audio]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9201&amp;p=97807#p97807"><![CDATA[
Well, on the N163, for the most part the registers are just going to contain whatever I write to them anyway. No real point to reading them. There are 3 registers in each channel that are still unknown but it has been presumed that they contain a 24-bit phase value, and this can actually be verified by other means (their value can be &quot;played&quot; as a waveform, or I could just write a hotswap diagnostic). I don't think it's something I'd want to go out of my way to support for this project.<br /><br />Anyhow, thanks for your help, everyone. I'll be giving this a go once my parts arrive in the mail.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5165">rainwarrior</a> — Thu Aug 09, 2012 1:10 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[lidnariq]]></name></author>
<updated>2012-08-09T12:02:18-07:00</updated>
<published>2012-08-09T00:55:55-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9201&amp;p=97806#p97806</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9201&amp;p=97806#p97806"/>
<title type="html"><![CDATA[Re: Board for testing famicom expansion audio]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9201&amp;p=97806#p97806"><![CDATA[
<div class="quotetitle">infiniteneslives wrote:</div><div class="quotecontent"><br />Yes, but I was implying that it wouldn't matter by suggesting the use of something simple like ANROM only downside is the 32KB limit with his ROM.  Additionally my method would allow you to make use of WRAM or anything mapped below $8000 on that sound cart.  <br /><br />Your AudioCartA14 = NESA14 AND NOT R/W solution should work.  But you're only moving the possibility of WRAM from the sound cart to the powerpak.  Most mappers with WRAM aren't tolerant to any random write in $8000-FFFF though (ie MMC1 and MMC3 with their states)  So you're still limited to 32KB and stuck with ANROM.  There may very well be mappers supported that would allow it, I'm just not certain of the powerpak's precise mapper definitions.<br /></div>I must either be being dense or terrible at explaining myself. The problem I was trying to prevent with modifying A14 was keeping the accidental mirror of internal readable registers from causing bus conflicts against the cartridge we're trying to execute from. Now, admittedly, this won't pose a problem for the SS5, but at least some layouts of all four other mappers do have cartridge WRAM (or have the N163's internal sound ram), causing bus conflicts when we're e.g. trying to fetch the vectors.<br /><br />Now, we could say AudioCartA14 = NESA14 AND (NES /ROMSEL OR NOT R/W), which would have the advantage? of being able to read from the audio cart's control registers. But we have to do something once we've permanently removed what's tantamount to the Audio Cart's A15 line.<br /><br />edit: fixed new eqn<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3512">lidnariq</a> — Thu Aug 09, 2012 12:55 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[rainwarrior]]></name></author>
<updated>2012-08-09T00:53:45-07:00</updated>
<published>2012-08-09T00:53:45-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9201&amp;p=97805#p97805</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9201&amp;p=97805#p97805"/>
<title type="html"><![CDATA[Re: Board for testing famicom expansion audio]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9201&amp;p=97805#p97805"><![CDATA[
Actually, after thinking about it, the NSF mapper is probably compatible with all of the expansions. The only NSF mapper registers are $5FF8-$5FFF, and none of the expansions have any sound control registers in that range.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5165">rainwarrior</a> — Thu Aug 09, 2012 12:53 am</p><hr />
]]></content>
</entry>
</feed>