<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Why do USB drives need to be &quot;ejected&quot;</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Why do USB drives need to be &quot;ejected&quot;</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=5&amp;t=6388">http://forums.nesdev.com/viewtopic.php?f=5&amp;t=6388</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>3</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Sat May 15, 2010 8:33 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Why do USB drives need to be &quot;ejected&quot;</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />In <a href="http://nesdev.com/bbs/viewtopic.php?p=61434#61434" class="postlink">another thread</a> I am complaining about an experience I was having with a USB drive.
<br />
<br />Basically the drive was not properly "ejected" and as a result there's potential file corruption due to incomplete writes.
<br />
<br />Of course the proper way to remove a USB drive is to "eject" it through the software before physically disconnecting it from the computer.
<br />
<br />
<br />Does anybody else find this whole concept archaic and unnecessary?
<br />
<br />Is it really such a difficult hardware problem to flush writes to the drive right away?
<br />
<br />It seems silly that it's still required.  Especially considering how fast external drives have gotten.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>peppers</b> [ Sat May 15, 2010 8:41 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I am more concerned why e-SATA dose not have this feature, I am nervous every time I unplug my 2 tb external, running a file recovery on it would be a pain in the ass.
<br />
<br />I agree though, I don't know why Windows has to do a bunch of unnecessary useless bullshit wrights to external devices, if it was not for those its as simple as not unplugging it wile your transferring shit.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Sat May 15, 2010 8:59 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Sysinternals Sync lets you commit writes.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Sat May 15, 2010 9:02 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">peppers wrote:</div><div class="quotecontent">I agree though, I don't know why Windows has to do a bunch of unnecessary useless bullshit wrights to external devices, if it was not for those its as simple as not unplugging it wile your transferring shit.</div>
<br />
<br />It is just Windows that has the problem?
<br />
<br />AFAIK, the problem exists on Linux as well (and possibly Mac?)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>peppers</b> [ Sat May 15, 2010 11:11 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Are you sure this is an issue in Linux?
<br />its true Linux gives you the option of un-mounting any partition but I think it pretty much leaves drives alone unless you are at the very least have a directory open. I remember reading something about it de-fragmenting its drives on the fly and I don't know exactly how that works but I would assume its done during wrights to the hard drive you make.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Sun May 16, 2010 1:53 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />How does the average user know that no program is currently accessing the USB device when he goes to remove it? The filesystem could be currently writing to the file structures. Even if it's not, having possible removal at any time could upset programs which have open files. This same issue of course occurred with floppy drives, which is one reason Macs had no hardware eject button.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>BMF54123</b> [ Sun May 16, 2010 5:06 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Dwedit wrote:</div><div class="quotecontent">Sysinternals Sync lets you commit writes.</div>
<br />I have a batch file sitting in my Quick Launch tray that runs Sync on every removable drive in the system when I click it. I did this primarily to work around a stupid design flaw in my internal x-in-1 card reader: attempting to eject any of the drives actually "ejects" the reader itself, rendering it useless until I reboot (since it's plugged into the motherboard's USB header, I can't just yank it and plug it back in). But now, when I'm done with a card, I can click the batch file, wait for the command window to disappear, and safely remove the card without fear of data loss. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />
<br />
<br />I think what infuriates me even more than the ejection process itself is when Windows unhelpfully tells you "The device [name] cannot be stopped right now. Try stopping it again later." This is just about the laziest don't-give-a-sh*t error message I have ever seen Windows spew out, and it makes me angry every time I see it. So I'm supposed to just sit on my thumbs for some arbitrary length of time and pray to God Windows eventually unhooks its barbs from my files? What really gets me about this is, more often than not, the error pops up because some poorly-coded program (or even Windows itself) left a rogue file handle open, leading the OS to believe the drive is still in use. I've actually had to run Process Explorer and manually hunt down zombie handles on more than one occasion because they <em>persisted across reboots!</em> How the hell does that work?
<br />
<br />arrgh rant fume gripe moan

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Sun May 16, 2010 6:40 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />On my OS X 10.3.9 machine, I sometimes drag the camera's USB drive icon to the trash, wait for its icon to disappear, wait a few seconds more, then unplug the camera, and the damn OS <em>still</em> complains to me that the device has been unexpectedly disconnected. Whatever, I say.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sun May 16, 2010 7:15 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">BMF54123 wrote:</div><div class="quotecontent">I think what infuriates me even more than the ejection process itself is when Windows unhelpfully tells you "The device [name] cannot be stopped right now. Try stopping it again later."</div><br />What this error message means is that some program has something open on this drive. This could be an open file (fopen()), an open directory (findfirst() or opendir()), as you pointed out, or even just the current working directory (chdir()). If I've used an app for a while, one of the directory handles used by the Open or Save As dialog box might be pointed at a removable drive. Closing and reopening the app will free up any objects that the app has open on that drive.<br /><br />I've seldom had a drive fail to stop after closing all applications. And it has never happened after logging out all users and logging back in (which restarts Windows Explorer).<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">What really gets me about this is, more often than not, the error pops up because some poorly-coded program (or even Windows itself) left a rogue file handle open</div><br />After the user has chosen a file to open, what is a program supposed to do with directory handles owned by the Open and Save As dialog boxes? I'd guess the operating system would have to provide a way for an application to mark a handle as eligible for surprise closure by a user.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">leading the OS to believe the drive is still in use. I've actually had to run Process Explorer and manually hunt down zombie handles on more than one occasion because they <em>persisted across reboots!</em> How the hell does that work?</div><br />The file handle doesn't persist across reboots, to my knowledge. Otherwise, something would screw up if you shut down, yank hardware, and start the machine. What might be happening is that something listed in <a href="http://support.microsoft.com/kb/314866" class="postlink">...\Windows\CurrentVersion\Run</a> or in <a href="http://en.wikipedia.org/wiki/Windows_service" class="postlink">Control Panel &gt; Administrative Tools &gt; Services</a> is opening the file before you can get to the taskbar to stop the drive.<br /><br /><div class="quotetitle">blargg wrote:</div><div class="quotecontent">[After correctly unmounting a camera's storage on Mac OS X,] the damn OS still  complains to me that the device has been unexpectedly disconnected.</div>
<br />That might happen with a composite device. A camera might include, for example, an internal storage (which you unmounted with the trash can) and a live video input device (for use as a webcam). You might have to close iMovie or whatever to free the video input handle.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Sun May 16, 2010 7:27 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Why do USB drives need to be &quot;ejected&quot;</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Disch wrote:</div><div class="quotecontent">In another thread I am complaining about an experience I was having with a USB drive.  Basically the drive was not properly "ejected" and as a result there's potential file corruption due to incomplete writes.  Of course the proper way to remove a USB drive is to "eject" it through the software before physically disconnecting it from the computer.<br /><br />Does anybody else find this whole concept archaic and unnecessary?  Is it really such a difficult hardware problem to flush writes to the drive right away?  It seems silly that it's still required.  Especially considering how fast external drives have gotten.</div>
<br />
<br />1) The process is unnecessary assuming drive write caching is turned off (more on that in a moment), and you don't have any applications (hint hint: anti-virus or Windows indexing services) which have files open on the device prior to removal.  If any files are open, or write caching is enabled, then you will see said error.
<br />
<br />2) Flushing writes to the disk every time can be done indirectly by disabling write caching.  On 2K/XP, this is the default.  So if you're seeing this message on 2K/XP, then you have a process of some kind that has an open file on the USB device.  You can use SysInternals software to track down what that is, but it'll be a battle.
<br />
<br />3) The speed of the device (disk, flash, etc.) has absolutely nothing to do with the problem.
<br />
<br />If you figure out a way, via software, to pre-emptively "guess" when a user is about to physically yank a device off a bus, let me know.  :-)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Sun May 16, 2010 7:30 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">peppers wrote:</div><div class="quotecontent">I am more concerned why e-SATA dose not have this feature, I am nervous every time I unplug my 2 tb external, running a file recovery on it would be a pain in the ass.</div><br /><br />Let me ask you something.  What's more important to you: a major transfer speed increase (due to write caching being enabled), or the ability to yank the device off the bus at any time?  If the latter, disable write caching on the device.<br /><br />Otherwise, see my post to Disch, re: let me know if you have a way via software to read the minds of users.<br /><br /><div class="quotetitle">peppers wrote:</div><div class="quotecontent">I agree though, I don't know why Windows has to do a bunch of unnecessary useless bullshit wrights to external devices, if it was not for those its as simple as not unplugging it wile your transferring shit.</div>
<br />
<br />This isn't a Windows problem.  Every operating system has the exact same issue, and every operating system has solved it in the exact same two ways that Windows has (disable write caching on the device, or require the user to use an application/applet that flushes pending writes to the device prior to device unmount (not the same thing as physical removal)).
<br />
<br />You can blame Windows for things like the Indexing Service, and maybe even anti-virus software or background services that do something with underlying files or file handles on a device.  But the problem in question is really not "the fault of Windows".

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Sun May 16, 2010 7:50 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">peppers wrote:</div><div class="quotecontent">Are you sure this is an issue in Linux?</div><br /><br />Yes, I'm pretty sure.  At least it was with my sister's drive.<br /><br />I copied files to it, then unplugged the drive (a good few seconds after the copy was complete just to be sure), but the files were corrupt when I got to my sister's place.<br /><br /><div class="quotetitle">koitsu wrote:</div><div class="quotecontent">3) The speed of the device (disk, flash, etc.) has absolutely nothing to do with the problem. </div><br /><br />I figured the problem might be related to write being "complete" when they're not really complete.  Disk writes aren't instantaneous, and when you save a file or something, it doesn't necessarily save directly to the disk if the disk is busy, but might instead be put in a cache and queued to be saved when the drive has time.<br /><br />If drives are faster, this is less of a problem, as the queues will be emptied faster, and writes commited sooner.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">If you figure out a way, via software, to pre-emptively "guess" when a user is about to physically yank a device off a bus, let me know. :-)</div>
<br />
<br />You shouln't need to know when the user is going to remove the device, is my point.
<br />
<br />If you're reading something from the drive and it disappears... oh well.  Give an error to the user that your read failed.  It's not the end of the world, and wouldn't cause any problems on the drive.
<br />
<br />If you're writing something to the drive and it disappears, that's a big problem -- but programs typically make it clear that they're writing to the drive while they're writing.  Like when you copy files to the drive, a progress box pops up.  Or if you save something to it from another program the program typically <em>stalls</em> until the save is complete (with an optional progress bar).  Hopefully the user will have enough sense not to remove the drive during such a time.
<br />
<br />The only way it'd be a problem is if the program is doing constant little mini-writes.  Like if a program has a config file or something open that they need to constantly read/write to.  But putting such a config file on a flash drive is either bad design of the program, or a very poor decision by the user.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>UncleSporky</b> [ Sun May 16, 2010 8:02 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent"><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">leading the OS to believe the drive is still in use. I've actually had to run Process Explorer and manually hunt down zombie handles on more than one occasion because they <em>persisted across reboots!</em> How the hell does that work?</div><br />The file handle doesn't persist across reboots, to my knowledge. Otherwise, something would screw up if you shut down, yank hardware, and start the machine. What might be happening is that something listed in <a href="http://support.microsoft.com/kb/314866" class="postlink">...\Windows\CurrentVersion\Run</a> or in <a href="http://en.wikipedia.org/wiki/Windows_service" class="postlink">Control Panel &gt; Administrative Tools &gt; Services</a> is opening the file before you can get to the taskbar to stop the drive.</div>
<br />Is this at all related to the sort of problems I rarely get where I try to delete a folder but I can't because it's "in use," and it always persists across reboots, and I have to use Unlocker to release the OS's grip on it?
<br />
<br />It seems to me that a file on the flash drive could also get stuck the same way, right?  After a reboot, Windows checks its list of locked files and goes "whoa, nope, there's a file I'm still using on there."

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sun May 16, 2010 8:50 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Disch wrote:</div><div class="quotecontent">If you're reading something from the drive and it disappears... oh well.  Give an error to the user that your read failed.</div><br />A lot of applications on which PC users depend are poorly written and would crash or worse when trying to read from a disappeared file. This has to be fixed at the application level, but much of the time, either an app is no longer maintained or its maintainer would just discard defect reports related to disappearing media. When apps crash, enough users have a tendency to blame it not on the app but on the operating system, which is one reason why operating systems chastise the user for surprise-removing a device containing a mounted file system: to remind the user that application misbehaviors are not always the operating system's fault.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">The only way it'd be a problem is if the program is doing constant little mini-writes.</div><br />And in a lot of cases, this is the case. For example, Firefox on my Windows machine appears to compact its history search index (places.sqlite) in a thread in the background. I know it's happening because I can hear my hard drive seeking, but Firefox doesn't put an icon in the browser window to show that this is happening. Imagine an e-mail client that spawns a thread to check for new messages every five minutes. Unless it has a countdown timer, there's no way to prevent the user from yanking a drive half a second after a download of new messages has started.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">But putting such a config file on a flash drive is either bad design of the program, or a very poor decision by the user.</div><br />Some apps have no persistent storage other than flash. This includes games on handhelds and game consoles from 1995 or later: "Now saving. Do not touch the memory card or turn the power off." It also includes <a href="http://en.wikipedia.org/wiki/Portable_application" class="postlink">PC apps capable of being installed on removable media</a>.<br /><br /><div class="quotetitle">UncleSporky wrote:</div><div class="quotecontent">Is this at all related to the sort of problems I rarely get where I try to delete a folder but I can't because it's "in use," and it always persists across reboots, and I have to use Unlocker to release the OS's grip on it? </div>
<br />I think that's file system corruption. As I understand it, a quick chkdsk <em>should</em> clear this up: it warns the user, force-unmounts the drive, and turns off all files' "in use" bits. I understand that newer applications are capable of determining what other process has locked a file, which means it must be a new API introduced in a new Windows version.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Sun May 16, 2010 9:11 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">And in a lot of cases, this is the case. For example, Firefox on my Windows machine appears to compact its history search index (places.sqlite) in a thread in the background.</div><br /><br />Yes... but <em>on your removable drive</em>?  Not likely unless you installed Firefox on your removable drive, which would probably be a foolhardy move.<br /><br />And if you did, you would be expected to close Firefox before removing the drive (see next point)<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Some apps have no persistent storage other than flash. This includes games on handhelds and game consoles from 1995 or later: "Now saving. Do not touch the memory card or turn the power off." It also includes <a href="http://en.wikipedia.org/wiki/Portable_application" class="postlink">PC apps capable of being installed on removable media</a>.</div>
<br />
<br />Right.  But the user could be expected to close any program that's running off of the drive before they remove the drive.
<br />
<br />Let's assume the user has common sense here.  If the user lacks common sense there's obviously nothing that can be done.  But for those of us that do have common sense, for us to still have this limitation is a big inconvenience.
<br />
<br />1)  I'm not running any executables off the drive
<br />2)  I'm not saving any files to the drive
<br />3)  I'm not copying any files to the drive
<br />4)  I'm not doing any other kind of task that obviously is writing (like defragging/formatting)
<br />
<br />If the above are true, I should be able to yank the drive at any time.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>3</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>