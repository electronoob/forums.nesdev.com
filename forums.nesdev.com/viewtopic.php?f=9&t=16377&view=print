<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - EPROM LPT Programmer?</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">EPROM LPT Programmer?</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=9&amp;t=16377">http://forums.nesdev.com/viewtopic.php?f=9&amp;t=16377</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>3</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FARID</b> [ Fri Aug 18, 2017 12:00 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>EPROM LPT Programmer?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />In order to learn some basic info about eprom programmer I want to make this : <a href="https://web.archive.org/web/20001001132204/http://www.zws.com:80/products/epromr1/index.html" class="postlink">EPROMr</a><br /><br /><img src="https://web.archive.org/web/20001001132204im_/http://www.zws.com:80/products/epromr1/epread_closeup.gif" alt="Image" /><br /><br /><img src="https://web.archive.org/web/20001001132204im_/http://www.zws.com:80/products/epromr1/eprom_reader.gif" alt="Image" /><br /><br />It seems that the source code of the software is not available, so I wrote my own :<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">#include &lt;stdio.h&gt;<br />#include &lt;dos.h&gt;<br /><br />void main ()<br />{<br />&nbsp; &nbsp;long int i;<br /><br />&nbsp; &nbsp;outportb ( 0x37A, inportb(0x37A) &amp; 254 );&nbsp; &nbsp;&nbsp; &nbsp;/* Set reg0 &#91;pin1&#93; to low &gt;&gt; set reset to high */<br />&nbsp; &nbsp;outportb ( 0x37A, inportb(0x37A) | 1 );&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;/* Set reg0 &#91;pin1&#93; to high &gt;&gt; set reset to low */<br /><br />&nbsp; &nbsp;FILE *fp;<br />&nbsp; &nbsp;fp=fopen (&quot;read_eprom.bin&quot;, &quot;wb&quot;);&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;/* Create a file to store data of eprom */<br /><br />&nbsp; &nbsp;for ( i=1 ; i&lt;=1048576 ; i=i+1 )&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;/* 1048576 dec = 100000 hex */<br />&nbsp; &nbsp;{<br />&nbsp; &nbsp;&nbsp; &nbsp;putc (inportb(0x378), fp);&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;/* Read eprom data and save it to the file */<br /><br />&nbsp; &nbsp;&nbsp; &nbsp;outportb ( 0x37A, inportb(0x37A) | 4 );&nbsp; &nbsp;&nbsp; &nbsp;/* Set reg2 &#91;pin16&#93; to high &gt;&gt; set clock to high */<br />&nbsp; &nbsp;&nbsp; &nbsp;outportb ( 0x37A, inportb(0x37A) &amp; 251 );&nbsp; &nbsp;/* Set reg2 &#91;pin16&#93; to low &gt;&gt; set clock to low */<br />&nbsp; &nbsp;}<br /><br />&nbsp; &nbsp;fclose(fp);<br />}<br /></div><br /><br />But I haven't tested it yet.<br />Do I have to use any delay between clocks inside of the for loop?<br />By the way my code is only for 27C080 (1MB) EPROM.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>krzysiobal</b> [ Fri Aug 18, 2017 1:24 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: LPT EPROM Reader?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Use Atmega32+VUSB instead of crappy old slow LPT with unknown response times.<br />Unless you use pure realtime DOS.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Fisher</b> [ Fri Aug 18, 2017 1:48 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: LPT EPROM Reader?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />That's great Farid!!<br />Thanks for sharing!! Now I have another reason to try to build this burner. <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /> <br />Unfortunatelly, I don't think this will compile under Linux... <img src="./images/smilies/icon_cry.gif" alt=":cry:" title="Crying or Very sad" /> <br />Maybe with some small modifications.<br /><br />@Krzysiobal:<br />I don't know much about the inner workings of the paralel port, and I really think there are better options around.<br />But it seems very simple and inexpensive to use it.<br />Back in the day there was many stuff that successfully used it.<br />I've even been using an N64's GameShark inside a Win98 virtual machine without issues.<br />Maybe it's because I'm still using a PC wich have an onboard paralel port...<br />By the way, I think the gamecon driver rocks!!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Fri Aug 18, 2017 7:09 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: LPT EPROM Reader?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">FARID wrote:</div><div class="quotecontent">Do I have to use any delay between clocks inside of the for loop?<br /></div>Access to these I/O ports is often <em>really</em> slow. Your code will assemble into several INB and OUTB instructions and the last time I tried this I wasn't getting faster than ~500ns per write.<br /><br />You probably don't need to add anything.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FARID</b> [ Fri Aug 18, 2017 10:35 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: LPT EPROM Reader?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">krzysiobal wrote:</div><div class="quotecontent">Use Atmega32+VUSB instead of crappy old slow LPT with unknown response times.<br />Unless you use pure realtime DOS.</div><br />I try to keep it in my mind for future projects, but for now I want to keep this thing as simple as possible.<br /><br /><div class="quotetitle">Fisher wrote:</div><div class="quotecontent">That's great Farid!!<br />Unfortunatelly, I don't think this will compile under Linux... <img src="./images/smilies/icon_cry.gif" alt=":cry:" title="Crying or Very sad" /> <br />Maybe with some small modifications.<br /></div><br />Here is a code for linux : <!-- m --><a class="postlink" href="https://outflux.net/software/pkgs/EPROM/">https://outflux.net/software/pkgs/EPROM/</a><!-- m --><br />Hardware info : <!-- m --><a class="postlink" href="https://outflux.net/software/pkgs/EPROM/mirror/">https://outflux.net/software/pkgs/EPROM/mirror/</a><!-- m --><br /><br /><div class="quotetitle">lidnariq wrote:</div><div class="quotecontent">Access to these I/O ports is often <em>really</em> slow. Your code will assemble into several INB and OUTB instructions and the last time I tried this I wasn't getting faster than ~500ns per write.<br /></div><br />How fast is it possible to access an EPROM to read or write it?<br /><br />I modified the schematic to work with my code, does it look ok?

		
			<br clear="all" /><br />

			<table class="tablebg" width="100%" cellspacing="1">
			<tr>
				<td><b class="genmed">Attachments: </b></td>
			</tr>
			
				<tr>
					<td>
			<img src="./download/file.php?id=9895" alt="schematic.png" /><br />
			<span class="gensmall">schematic.png [ 8.63 KiB | Viewed 2544 times ]</span>
		

		<br />
	</td>
				</tr>
			
			</table>
		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Sat Aug 19, 2017 12:11 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: LPT EPROM Reader?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">FARID wrote:</div><div class="quotecontent">How fast is it possible to access an EPROM to read or write it?<br /></div>If you have a tight assembly loop, you can probably get a read speed of not more than ≈2MHz? Random projects implementing <a href="https://www.codeproject.com/Articles/75279/Channel-Logic-Analyzer" class="postlink">parallel port logic analyzers</a> show speeds roughly around that.<br /><br />Remember that you have to configure your parallel port to use its data pins as an input, not an output. How depends on whether the port is running in &quot;Bidirectional&quot;, &quot;ECP&quot;, or &quot;EPP&quot; mode. Depending on things, you might find it simpler to use the status pins and control pins to accept input from the ROM instead of the data pins, and instead use the data pins to reset and clock the counters.<br /><br />Schematic looks like it matches your code.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FARID</b> [ Sun Aug 20, 2017 3:34 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: LPT EPROM Reader?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Well It didn't work!  <img src="./images/smilies/icon_cry.gif" alt=":cry:" title="Crying or Very sad" /> <br />So this is way too tough than it seems at first even for a simple read operation!<br />Here are some notes I found out from googling :<br /><br />I have to use only EPP mode and not SPP or ECP.<br /><br />Reg5 of Control pin is used for Enabling Bi-directional mode for D0 ~ D7 [pin2 ~ pin9]. So I have to set it to 1 to enable this feature.<br /><br />Before you can start any EPP cycles by reading and writing to the EPP Data and Address Ports, the port must be configured correctly. In the idle state, an EPP port should have it's nAddress Strobe, nData Strobe, nWrite and nReset lines inactive, high. Some ports require you to set this up before starting any EPP Cycle. Therefore our first task is to manually initialise these lines using the SPP Registers. Writing XXXX0100 to the control port will do this.<br /><br />The Status Port has one little modification. Bit 0, which was reserved in the SPP register set, now becomes the EPP Time-out Bit.<br />The EPP Timeout bit we have already discussed. When this bit is set, the EPP port may not function correctly. A common scenario is always reading 0xFF from either the Address or Data Cycles. This bit should be cleared for reliable operation, and constantly checked. <br /><br /><img src="http://retired.beyondlogic.org/epp/eppdatrd.gif" alt="Image" /><br /><br />1. Program reads EPP Data Register. (Base + 4)<br />2. nData Strobe is asserted if Wait is Low (O.K. to start cycle)<br />3. Host waits for Acknowledgment by nWait going high<br />4. Data is read from Parallel Port Pins.<br />5. nData Strobe is de-asserted.<br />6. EPP Data Read Cycle Ends.<br /><br />Visual Basic for Electronics Engineering Applications : page 419 :<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">The control signals used to perform the bus cycles are fairly simple. As a<br />example, consider an address write cycle. To begin an address write cycle, the<br />host places an 8-bit address on_ADO-AD7 and pulls Write (indicating that the<br />host is doing a write operation) and AStrb (indicating that the information on<br />ADO - AD7 is an address) low. The peripheral device corresponding to the<br />address responds by setting Wait high to indicate that it recognizes it's being<br />addressed and is ready to receive the address byte. Upon seeing Wait go high,<br />the host de-asserts AStrb. This action signals the peripheral to read and store the<br />byte on ADO-AD7 to use as the register address for following data cycles. The<br />peripheral then pulls Walt low to indicate that it's ready for a new bus cycle, and<br />the host ends the current bus cycle by removing the signals from ADO-AD7 and<br />setting Write back high.<br />A data read bus cycle proceeds in much the same manner. The Dstrb and Wait<br />lines are the handshake signals that coordinate the data transfer, and the state of<br />the Write line determines whether the bus cycle is a read cycle or a write cycle.<br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FARID</b> [ Wed Aug 30, 2017 12:04 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: LPT EPROM Reader?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Now I feel that EPROMr doesn't use the real EPP handshake.<br /><br />It seems that EPROMr (and it's other mods) uses SPP and tries to generate the handshake signals manually by using the software.<br /><br />Here is the summery of the pin function for different projects of EPROMr :<br /><br /><a href="https://web.archive.org/web/20010619223707im_/http://www.zws.com:80/products/epromr1/eprom_reader.gif" class="postlink">EPROMr v1.0</a><br />Pin1 ==&gt; Reset<br />Pin14 ==&gt; Clock-hi<br />Pin16 ==&gt; Clock-low<br /><br /><a href="https://web.archive.org/web/20051222052545im_/http://www.zws.com:80/products/epromr2/img/epromr2schem.gif" class="postlink">EPROMr v2.0</a><br />Pin1 ==&gt; Clock<br />Pin14 ==&gt; Reset<br />Pin16 ==&gt; /GVPP<br /><br /><a href="https://outflux.net/software/pkgs/EPROM/mirror/27c801programmer_files/samschem.gif" class="postlink">EPROMr 27C801 v1.0</a><br />Pin1 ==&gt; Clock<br />Pin14 ==&gt; Reset<br />Pin16 ==&gt; /GVPP<br /><br /><a href="https://outflux.net/software/pkgs/EPROM/" class="postlink">EPROMr 27C801 v2.0</a><br />Pin1 ==&gt; Clock<br />Pin14 ==&gt; /CE<br />Pin16 ==&gt; Reset<br />Pin17 ==&gt; /GVPP<br /><br />While according to <a href="http://retired.beyondlogic.org/epp/epp.htm" class="postlink">this reference</a> I feel in order to use the real EPP handshake the pin functions must be :<br />Pin1 [Output /C0 Write] ==&gt; EPROM /GVPP<br />Pin11 [Input /S7 Wait] &lt;== Can be generated with Q0 of 4040  <img src="./images/smilies/icon_idea.gif" alt=":idea:" title="Idea" /> ?<br />Pin14 [Output /C1 Data Strobe] ==&gt; 4040 Clock<br />Pin16 [Output C2 Reset] ==&gt; 4040 Reset<br />Pin17 [Output /C3 Address Strobe] ==&gt; EPROM /CE <br /><br /><img src="http://d4web.net/sths/TEJ/U04Interfacing/A02Input/images/pinout.gif" alt="Image" /><br /><br />Please let me know if I wrong <img src="./images/smilies/icon_question.gif" alt=":?:" title="Question" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Wed Aug 30, 2017 8:10 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: LPT EPROM Reader?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Unfortunately, I've never done parallel port projects that went beyond the capabilities of the SPP.<br /><br />Certainly the thing you've describes as &quot;EPROMr 27C801 v2.0&quot; uses the parallel port in SPP mode.<br /><br />Are you specifically trying to support programming the 27C801 ? It'd be much easier if you didn't.<br /><br />Looking for information, I found a example &quot;breakout&quot; schematic that basically shows the EPP as nothing more than two multiplexed 8-bit bidirectional ports via the standard pinout. Think of pin 1=/C0=/Strobe as &quot;Read//Write&quot;, and /AddrStrobe and /DataStrobe as inverted forms of NES's +M2. <br /><br />For read-only, you want something more like<br />Pin 1 = /C0 = Read//Write = /Strobe → inverter → EPROM Vpp//OE<br />Pin 11 = /S7 = /Wait = /Busy ← inverter ← RC delay from /DataStrobe (should be set to match the ROM's access speed)<br />Pin 14 = /C1 = /DataStrobe = /ALF → EPROM /CE and also '4040 clock<br />Pin 16 = +C2 = /Reset = +Init → what you said<br />Pin 17 = /C3 = /AddrStrobe = /SelP — unneeded<br /><br />Programming is a bit more complicated, because the UVEPROM programming protocol requires reading and writing the same address repeatedly until either the data read back matches, or it times out.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FARID</b> [ Thu Aug 31, 2017 10:38 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: LPT EPROM Reader?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Are you specifically trying to support programming the 27C801 ?</div><br />For now I am testing it with AT27C080<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"> It'd be much easier if you didn't.</div><br />What do you mean?<br /><br /><div class="quotetitle">lidnariq wrote:</div><div class="quotecontent">Pin 11 = /S7 = /Wait = /Busy ← <span style="color: #FF0000">inverter</span> ← RC delay from /DataStrobe (should be set to match the ROM's access speed)<br />Pin 14 = /C1 = /DataStrobe = /ALF → EPROM /CE and also '4040 clock<br /></div><br /><br />How can I invert the signal?<br />Will this circuit do the job? :

		
			<br clear="all" /><br />

			<table class="tablebg" width="100%" cellspacing="1">
			<tr>
				<td><b class="genmed">Attachments: </b></td>
			</tr>
			
				<tr>
					<td>
			<img src="./download/file.php?id=10001" alt="inverter.png" /><br />
			<span class="gensmall">inverter.png [ 1.76 KiB | Viewed 2220 times ]</span>
		

		<br />
	</td>
				</tr>
			
			</table>
		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Thu Aug 31, 2017 11:02 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: LPT EPROM Reader?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">FARID wrote:</div><div class="quotecontent"><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">It'd be much easier if you didn't.<br /></div>What do you mean?<br /></div>If you didn't add support for programming/burning. If you only supported reading.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">How can I invert the signal?<br /></div>74'04, e.g.<br /><br />There's a huge variety of parts that can be used as an inverter. 74'00 through 74'07, '10, '12-'14, '18, '22-'30 ... and, yes, the simple single-BJT inverter you made also.<br /><br />The &quot;trivial breakout&quot; schematic I found was just<br />* 74'00 (generating /RD=NOT(READ//WRITE) and /WAIT=NAND(/DSTROBE,/ASTROBE) )<br />* 74'32 (generating all four possible combined strobes: /WRDATA=OR(/DSTROBE,R/W), /WRADDR=OR(/ASTROBE,R/W), /RDDATA=OR(/DSTROBE,/RD), /RDADDR=OR(/ASTROBE,/RD))<br />* two 74'244s (relaying two external 8-bit buses to the parallel port's D pins on /RDADDR and /RDDATA)<br />* two 74'273s (latching two external 8-bit buses from the parallel port's D pins on /WRADDR and /WRDATA)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FARID</b> [ Sat Sep 02, 2017 3:01 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: LPT EPROM Reader?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I want to use 5v from USB and boost it to 12.75v (VPP) and 6.25v (VCC) for programming the EPROM.<br />I found these two chip :<br /><br /><a href="http://www.onsemi.com/pub/Collateral/MC34063A-D.PDF" class="postlink">MC34063</a><br /><img src="https://media.digikey.com/Renders/~~Pkg.Case%20or%20Series/8-DIP_sml.jpg" alt="Image" /><br /><br /><a href="http://www.ti.com/lit/ds/symlink/lm2577.pdf" class="postlink">LM2577</a><br /><img src="https://media.digikey.com/renders/Texas%20Instr%20Renders/TO-220-5%20(Straight%20Leads)_4040208%5EC_sml.jpg" alt="Image" /><br /><br />Which one is better to use?<br />Any better option?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Sat Sep 02, 2017 9:13 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: LPT EPROM Reader?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Easier to start with a higher voltage power source and use linear regulators to drop it down to the two operational voltages. I know, wall warts are déclassé.<br /><br />Anyway, both are capable of more current than programming will need, both require the same number of external parts. I'd pick based on price or ease of obtaining.<br /><br />A little caveat: parallel ports switched to operating at 3.3V about the same time as PCI slots started being used. 27xxx UVEPROM programming appears to use TTL voltages so you're probably safe. Do be careful during the read phase of programming that you don't expose the parallel port to 6.5V. (It won't like that)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FARID</b> [ Sat Sep 02, 2017 12:48 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: LPT EPROM Reader?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Reading EPROM works fine on windows xp.<br />Reading a AT27C080 takes 40 seconds.<br />To be able to access LPT port under windows xp I had to use <a href="http://www.hytherion.com/beattidp/comput/pport.htm" class="postlink">inpout32.dll</a><br />I use MS visual C++ v6.0 to compile the code.

		
			<br clear="all" /><br />

			<table class="tablebg" width="100%" cellspacing="1">
			<tr>
				<td><b class="genmed">Attachments: </b></td>
			</tr>
			
				<tr>
					<td>
			<a href="./download/file.php?id=10023&amp;mode=view"><img src="./download/file.php?id=10023&amp;t=1" alt="Test.jpg" /></a><br />
			<span class="gensmall">Test.jpg [ 312.37 KiB | Viewed 2118 times ]</span>
		

		<br />
	</td>
				</tr>
			
				<tr>
					<td>
			<span class="genmed">
				<img src="./styles/subsilver2/imageset/icon_topic_attach.gif" width="14" height="18" alt="" title="" /> 
				<a href="./download/file.php?id=10022">Code_Schematic.zip</a> [19.7 KiB]
			</span><br />
			<span class="gensmall">Downloaded 39 times</span>
		

		<br />
	</td>
				</tr>
			
			</table>
		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FARID</b> [ Sun Sep 03, 2017 7:55 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: LPT EPROM Reader?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />So I decided to use MC34063 to boost 5v to 12.75v, because it is inexpensive and small.<br />I checked it's datasheet and in page 13 there is an example circuit for 12v --&gt; 28v but I want 5v --&gt; 12.75v so I have to recalculate the parts value.<br />In page 14 there are some great and awesome formula for calculation the values, but calculation manually is a real pain in the @$$!<br />Fortunately I found <a href="http://www.gmsystems.com/switching-reg-calculator-for-mc-34063-or-mc33063.html" class="postlink">this online calculator for MC34063</a><br />There are four parameters :<br />V_in : 5v<br />V_out : 12.75v<br />I_out : 50mA (<a href="https://media.digikey.com/pdf/Data%20Sheets/ST%20Microelectronics%20PDFS/M27C801.pdf" class="postlink">according to page 15 of M27C801 datasheet : Ipp</a>)<br />V_ripple : ?<br />f_min : ?<br /><br />There is a note in <a href="http://www.onsemi.com/pub/Collateral/MC34063A-D.PDF" class="postlink">MC34063a datasheet</a> page 13 :<br />fmin = Minimum desired output switching frequency at the selected values of V_in and I_out <br />Vripple = Desired peak-to-peak output ripple voltage. The ripple voltage directly affects the line and load regulation and, thus, must be considered. In practice, the actual capacitor value should be larger than the calculated value, to account for the capacitor's equivalent series resistance and board layout.<br /><br />So how to find the correct value for them?!

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>3</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>