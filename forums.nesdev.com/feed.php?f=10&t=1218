<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=10&amp;t=1218" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2006-03-18T17:53:35-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=10&amp;t=1218</id>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2006-03-18T17:53:35-07:00</updated>
<published>2006-03-18T17:53:35-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1218&amp;p=10942#p10942</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1218&amp;p=10942#p10942"/>
<title type="html"><![CDATA[Updating music/sfx]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1218&amp;p=10942#p10942"><![CDATA[
<div class="quotetitle">baisoku wrote:</div><div class="quotecontent"><br />[Tearing] will not happen on a raster console like NES and TV, because the image is being output in lock-step with the electron beam of the CRT<br /></div><br />Unless you're dealing with a bad upscaler, such as the one in a cheap HDTV CRT or a multi-system CRT that converts from 240p/480i to 480p or from PAL to NTSC. They may trip up on the non-standard 60.099 Hz refresh rate of the NES and display a minute amount of tearing.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Sat Mar 18, 2006 5:53 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[baisoku]]></name></author>
<updated>2006-03-18T17:41:40-07:00</updated>
<published>2006-03-18T17:41:40-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1218&amp;p=10941#p10941</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1218&amp;p=10941#p10941"/>
<title type="html"><![CDATA[Updating music/sfx]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1218&amp;p=10941#p10941"><![CDATA[
<div class="quotetitle">mbrenaman wrote:</div><div class="quotecontent"><br />Thanks for explanation. I'm glad to know its not my fault and its harder to see through a NES+TV.<br /></div><br />It will not happen on a raster console like NES and TV, because the image is being output in lock-step with the electron beam of the CRT -- that's why the PPU is all crazy and quirky. The NES doesn't build a framebuffer image (like modern "3D" consoles); if it weren't in perfect sync with the TV, you'd get far worse artifacts than tearing.<br />But at least you're better off than you would be if you were programming the Atari 2600 -- in that case *you* are in control of the sync signals, and you're lucky if you can even get it to display anything. <img src="http://forums.nesdev.com/images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=35">baisoku</a> — Sat Mar 18, 2006 5:41 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2006-03-18T15:19:10-07:00</updated>
<published>2006-03-18T15:19:10-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1218&amp;p=10939#p10939</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1218&amp;p=10939#p10939"/>
<title type="html"><![CDATA[Updating music/sfx]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1218&amp;p=10939#p10939"><![CDATA[
And the reason tearing can't occur on an older console is that they draw the image as the video signal is being generated, rather than buffering the entire thing in video RAM and letting the video hardware output it asynchronously.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Sat Mar 18, 2006 3:19 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2006-03-18T14:16:17-07:00</updated>
<published>2006-03-18T14:16:17-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1218&amp;p=10936#p10936</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1218&amp;p=10936#p10936"/>
<title type="html"><![CDATA[Updating music/sfx]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1218&amp;p=10936#p10936"><![CDATA[
<div class="quotetitle">baisoku wrote:</div><div class="quotecontent"><br />Almost all games suffer from it to some degree.<br /></div><br />This problems is never seen on a console game. However, it happens with games played on a PC (or through an emulator).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Sat Mar 18, 2006 2:16 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[mbrenaman]]></name></author>
<updated>2006-03-18T14:12:06-07:00</updated>
<published>2006-03-18T14:12:06-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1218&amp;p=10934#p10934</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1218&amp;p=10934#p10934"/>
<title type="html"><![CDATA[Updating music/sfx]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1218&amp;p=10934#p10934"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />This is called tearing. It occurs when the video image is being updated by software at the same time the hardware is presenting it on the output device. Almost all games suffer from it to some degree. If your monitor and nintendulator were using the same exact vsync frequency, and there was no chance of your operating system pre-emptively interrupting the program during critical times around the sync, you would not see this issue. <br />The short of it - it's not a bug in your code.<br /></div><br /><br />Thanks for explanation. I'm glad to know its not my fault and its harder to see through a NES+TV. <br /><br />Thanks for everyone's input.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=153">mbrenaman</a> — Sat Mar 18, 2006 2:12 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[baisoku]]></name></author>
<updated>2006-03-18T13:47:03-07:00</updated>
<published>2006-03-18T13:47:03-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1218&amp;p=10932#p10932</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1218&amp;p=10932#p10932"/>
<title type="html"><![CDATA[Updating music/sfx]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1218&amp;p=10932#p10932"><![CDATA[
<div class="quotetitle">mbrenaman wrote:</div><div class="quotecontent"><br />Nope. I'm aware of that. It's more like one frame every now and then is draw skewed to the right along the vertical axis.<br /></div><br />This is called <a href="http://en.wikipedia.org/wiki/Page_tearing" class="postlink">tearing</a>. It occurs when the video image is being updated by software at the same time the hardware is presenting it on the output device. Almost all games suffer from it to some degree. If your monitor and nintendulator were using the same exact vsync frequency, and there was no chance of your operating system pre-emptively interrupting the program during critical times around the sync, you would not see this issue.<br />The short of it - it's not a bug in your code.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=35">baisoku</a> — Sat Mar 18, 2006 1:47 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2006-03-18T13:34:49-07:00</updated>
<published>2006-03-18T13:34:49-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1218&amp;p=10931#p10931</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1218&amp;p=10931#p10931"/>
<title type="html"><![CDATA[Updating music/sfx]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1218&amp;p=10931#p10931"><![CDATA[
<div class="quotetitle">mbrenaman wrote:</div><div class="quotecontent"><br />I wanted to know really if it was my old PC lagging behind or my program.<br /></div><br />Hehehe ! I'm so happy !! I just built my new ultra-fast ultra-modern PC today !! It works so fine !! I'm gonna to play all games fast hahahahhahahahaha.<br />Sorry to get mad, but I'm really happy.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Sat Mar 18, 2006 1:34 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[mbrenaman]]></name></author>
<updated>2006-03-18T11:42:10-07:00</updated>
<published>2006-03-18T11:42:10-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1218&amp;p=10928#p10928</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1218&amp;p=10928#p10928"/>
<title type="html"><![CDATA[Updating music/sfx]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1218&amp;p=10928#p10928"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Does this happen when you first turn on a game? You wouldn't notice this on a TV because many TVs blank the signal for a few frames while synchronizing to the NES's frequencies. <br /><br />Does this happen at the beginning of any screen in Dr. Mario? If so, I have noticed it on a real NES running through a real TV. Computer monitors are generally built better than TVs and may show the glitch more clearly.<br /></div><br /><br />Well, the one game I noticed it happening alot in Nintendulator was Dragon Warrior 1. On the TV, I can't see the occasional glitch. The reason I was bringing this up, though, was that my own project does this as well in Nintendulator. Same exact behaviour. I wanted to know really if it was my old PC lagging behind or my program.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=153">mbrenaman</a> — Sat Mar 18, 2006 11:42 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2006-03-18T09:38:52-07:00</updated>
<published>2006-03-18T09:38:52-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1218&amp;p=10925#p10925</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1218&amp;p=10925#p10925"/>
<title type="html"><![CDATA[Updating music/sfx]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1218&amp;p=10925#p10925"><![CDATA[
<div class="quotetitle">mbrenaman wrote:</div><div class="quotecontent"><br />Just to satisfy my curiosity, more than one VBlank period can occur while the CPU is in the NMI routine (supposing that it took that long to reach the next rti instruction)?<br /></div><br />Yes. If your NMI routine takes more than about 30,000 cycles, then it'll get interrupted.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Does anyone get a slight screen glitch (almost a quick flicker) with Nintendulator? Alot of commercial games I've tested on it showed this behaviour even though they run smoothly on my NTSC NES. Is this something I would see on a slower PC, like mine?<br /></div><br />Does this happen when you first turn on a game? You wouldn't notice this on a TV because many TVs blank the signal for a few frames while synchronizing to the NES's frequencies.<br /><br />Does this happen at the beginning of any screen in <em>Dr. Mario</em>? If so, I have noticed it on a real NES running through a real TV. Computer monitors are generally built better than TVs and may show the glitch more clearly.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Sat Mar 18, 2006 9:38 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[mbrenaman]]></name></author>
<updated>2006-03-18T08:45:09-07:00</updated>
<published>2006-03-18T08:45:09-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1218&amp;p=10923#p10923</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1218&amp;p=10923#p10923"/>
<title type="html"><![CDATA[Updating music/sfx]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1218&amp;p=10923#p10923"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Could the glitch you're referring to be due to Nintendulator showing the full image that a TV nromally cuts the edges from?<br /></div><br /><br />Nope. I'm aware of that. It's more like one frame every now and then is draw skewed to the right along the vertical axis.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=153">mbrenaman</a> — Sat Mar 18, 2006 8:45 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2006-03-18T05:14:01-07:00</updated>
<published>2006-03-18T05:14:01-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1218&amp;p=10922#p10922</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1218&amp;p=10922#p10922"/>
<title type="html"><![CDATA[Updating music/sfx]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1218&amp;p=10922#p10922"><![CDATA[
Could the glitch you're referring to be due to Nintendulator showing the full image that a TV nromally cuts the edges from?<br /><br />"NMI" time and the NMI routine are high-level concepts that don't exist in the hardware. All the NMI interrupt does is vector the CPU to a different address and save some state on the stack. Once that's complete everything carries on as normal. You can use this vectoring however you like in your code; the usual way is to do some operations then execute RTI (which itself does nothing special, just restores the status flags and returns to the address on the stack).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Sat Mar 18, 2006 5:14 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[mbrenaman]]></name></author>
<updated>2006-03-18T05:00:28-07:00</updated>
<published>2006-03-18T05:00:28-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1218&amp;p=10921#p10921</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1218&amp;p=10921#p10921"/>
<title type="html"><![CDATA[Updating music/sfx]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1218&amp;p=10921#p10921"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Wait, "NMI time" does mean absolutely nothing. When the screen starts its VBlank, and NMI is triggered, meaning that the processor will push it current adress, and jump to NMI vector. NMI will return when a "rti" opcode is executed. This has absolutely nothing to do with VBlank time, exept the fact that an NMI is usually triggered at the exact start of VBlank time. <br />Now, in your NMI routine, you have to upload anything about graphics, sprites, set your scroll registers and nametable used (writes to $2003/4, $4014, $2006/7, $2005 and $2000) pretty quickly before VBlank ends to have a stable image on the screen. <br />Then, you can do anything you want in your NMI routine, since it doesn't write to SPR-RAM nor to PPU RAM (including name tables, pattern tables, attributes tables and palettes). It will work regardless of if VBlank has finished or not yet. You can do sound in or outside your NMI routine, in function of how you like it.<br /></div><br /><br />Thanks for that clarification.<br />Just to satisfy my curiosity, more than one VBlank period can occur while the CPU is in the NMI routine (supposing that it took that long to reach the next rti instruction)?<br /><br />Also, its kind of off topic but... Does anyone get a slight screen glitch (almost a quick flicker) with Nintendulator? Alot of commercial games I've tested on it showed this behaviour even though they run smoothly on my NTSC NES. Is this something I would see on a slower PC, like mine?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=153">mbrenaman</a> — Sat Mar 18, 2006 5:00 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2006-03-13T11:00:02-07:00</updated>
<published>2006-03-13T11:00:02-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1218&amp;p=10734#p10734</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1218&amp;p=10734#p10734"/>
<title type="html"><![CDATA[Updating music/sfx]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1218&amp;p=10734#p10734"><![CDATA[
You're right. In fact, <em>Super Mario Bros.</em> runs everything after the reset sequence in an NMI handler.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Mon Mar 13, 2006 11:00 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2006-03-13T10:02:12-07:00</updated>
<published>2006-03-13T10:02:12-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1218&amp;p=10732#p10732</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1218&amp;p=10732#p10732"/>
<title type="html"><![CDATA[Updating music/sfx]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1218&amp;p=10732#p10732"><![CDATA[
Wait, "NMI time" does mean absolutely nothing. When the screen starts its VBlank, and NMI is triggered, meaning that the processor will push it current adress, and jump to NMI vector. NMI will return when a "rti" opcode is executed. This has absolutely nothing to do with VBlank time, exept the fact that an NMI is usually triggered at the exact start of VBlank time.<br />Now, in your NMI routine, you have to upload anything about graphics, sprites, set your scroll registers and nametable used (writes to $2003/4, $4014, $2006/7, $2005 and $2000) pretty quickly before VBlank ends to have a stable image on the screen.<br />Then, you can do anything you want in your NMI routine, since it doesn't write to SPR-RAM nor to PPU RAM (including name tables, pattern tables, attributes tables and palettes). It will work regardless of if VBlank has finished or not yet. You can do sound in or outside your NMI routine, in function of how you like it.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Mon Mar 13, 2006 10:02 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[mbrenaman]]></name></author>
<updated>2006-03-12T13:15:57-07:00</updated>
<published>2006-03-12T13:15:57-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1218&amp;p=10705#p10705</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1218&amp;p=10705#p10705"/>
<title type="html"><![CDATA[Updating music/sfx]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1218&amp;p=10705#p10705"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />I meant that you do not have to run sound code during NMI time. You can run it during the other 92% of time, after your NMI code finishes.<br /></div><br /><br />Oh, sorry  <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /> .<br /><br />I'll make a routine that waits nmi end - update sound, and use it in my waiting loops.<br /><br />I, for some reason thought I might have missed an alternative.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=153">mbrenaman</a> — Sun Mar 12, 2006 1:15 pm</p><hr />
]]></content>
</entry>
</feed>