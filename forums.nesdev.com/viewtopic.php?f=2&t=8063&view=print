<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Finding the exact correct aspect ratio for NTSC NES:</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Finding the exact correct aspect ratio for NTSC NES:</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=8063">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=8063</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Firebrandx</b> [ Fri Aug 26, 2011 3:44 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Finding the exact correct aspect ratio for NTSC NES:</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Ended up finding these forums from doing google searches on the subject. I found there was a lot of different opinions and different technical data depending on who you ask, so I decided to set about determining it myself. Here's what I did:
<br />
<br />1. I hooked up my front-loading NES to my Sony 55-inch LED HDTV using the A/V jacks. 
<br />
<br />2. I set the TV to 4:3 mode so it did not zoom or stretch the picture.
<br />
<br />3. Upon loading up a game, I found the TV was displaying all 256 horizontal pixels and exactly 232 vertical pixels (the remaining 8 pixels were beyond the edge of the display). 
<br />
<br />4. I then measured the dimensions of the active pixels on the screen, and results were 32.5 horizontal inches by 26.75 vertical inches.
<br />
<br />5. Setting my paint program on my computer to 100dpi, I then input the measurements into the print resolution settings. This gave me 3250x2675.
<br />
<br />6. Since I know the visible vertical resolution was 232, I simply resized 2675 down to 232, which gave 282 as the horizontal resolution.
<br />
<br />7. Adding back on the 8 lines missing from the original display, this gives 282x240 and a pixel aspect ratio of 1.175 EXACT. At 500% resize, this gives 1410x1200.
<br />
<br />7. To cross-verify, I screen-capped Metroid on the area to the left of the starting screen where the morph ball is. The morph ball was designed to appear as a perfect circle with the proper aspect ratio. Did my figure of 1.175 exact hold up? You bet it did!
<br />
<br />8. I resized the Metroid screen capture to 282x240 and then resized that to 500% (1410x1200).
<br />
<br />9. Finally, I overlapped a perfect circle onto the morph ball, and it fit EXACTLY inside of it! The dimesions were so precise, there was simply no denying I'd nailed the ratio right on the money (at least what the Metroid programmers expected).
<br />
<br />Below is the image of the morph ball at 500% with the perfect circle overlapped on top of it:
<br />
<br /><img src="http://www.firebrandx.com/downloads/metroidball.png" alt="Image" />
<br />
<br />So to conclude, 282x240 (1.175) is hands down the intended aspect ratio of NTSC NES graphics.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Fri Aug 26, 2011 4:16 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Wow, that's interesting.
<br />For some reason I always through it'd be 4:3, but that's only approximate, as there is less pixels vertically than horizontally.
<br />
<br />The good news is that the real aspect ratio is closer to 1:1 than 4:3, so that's less distortion than what it could have been.
<br />
<br />Also, the real aspect ratio might vary from TV to TV.... even if you stick to 4:3 TVs, they might not be EXACLTY 4:3, and the amount of cropped pixels on the edges varies.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Aug 26, 2011 4:26 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The magnifying glass in Dr. Mario is 72x80 pixels, giving 1.111 PAR. It's clear that some of these PARs calculated from "this in-game object should be circular" implicitly round the true PAR to the nearest pixel or nearest tile.
<br />
<br />True, the aspect ratio varies from TV to TV depending on how it's calibrated. So I went back to the definition of the signal, which ties into the well-known <a href="http://en.wikipedia.org/wiki/Rec._601" class="postlink">Rec. 601</a>. Then I <a href="http://wiki.nesdev.com/w/index.php/Overscan" class="postlink">calculated</a> what part of the signal is within the clean aperture and got 280x240, giving PAR of 8:7 = 1.143:1.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Firebrandx</b> [ Fri Aug 26, 2011 12:27 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />How I know 282 is the most accurate was the cross-verification with emulated Metroid. Seriously, what are the odds that my LCD TV just happens to make the morph ball PERFECTLY circular when applied to emulated Metroid? No other figure makes that happen. Not 280, not 288, not 290, but EXACTLY 282. Furthermore, 282 makes perfect circles no matter what scale multiples you use. 500% was my example, but any scale multiple works. When you try 280, the circles become more and more inaccurate as you test them at higher scales.
<br />
<br />BTW, I've since gone on and applied the 282 in SNES emulation, and narrow circles also looked perfect in those.
<br />
<br />Edit:
<br />
<br />Here's the Dr. Mario magnifying glass with 282 applied &amp; scaled to 500% (1410x1200) and a perfect circle dropped over the center of it:
<br />
<br /><img src="http://www.firebrandx.com/downloads/drmario.png" alt="Image" />
<br />
<br />Using 280, the glass will be more 'narrow' than the above picture.
<br />
<br />Edit 2: I should point out you can test accuracy by scaling to 500% first before applying any correction. This means you take the 256x240 image and scale it to 1280x1200 (500%) for example. You then apply the 282 formula to expand it to 1410x1200. This avoids the largely warped pixels you'd get if you applied the 282 at the original 256 resolution.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>LocalH</b> [ Fri Aug 26, 2011 3:02 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />One caveat with using standards is that very few retro console actually followed the standards 100%. Go ahead, anyone name a retro NTSC machine besides the Amiga that outputs exactly 60000/1001 Hz vertical refresh rate, for example. I would very much doubt the NES outputs the exact line length that the standard calls for.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Aug 26, 2011 3:36 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The NES PPU line period is 341 pixels. The standard NTSC line period is 341.25 NES pixels. But as I view it, the length of the active picture portion is what matters.
<br />
<br />The magnifying glass size is less than a pixel off, and as I said, it's a case of round-to-nearest-tile anyway.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Firebrandx</b> [ Fri Aug 26, 2011 5:30 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />After some more tests with various narrow graphics, I have to concede that there is an 'analog' variance level in expected aspect ratio. It seems each game's programmers used whatever analog 4:3 setting their equipment was at during the graphic design process. I went back and examined Dr. Mario more closely, lining up circles down to the single pixel level and concluded it expected a 286 ratio. However, 286 was too wide for Metroid, indicating a different standard was used. The more games I tested, the more I found it varied from game to game.
<br />
<br />So all this means that for NES artwork, there is no specific standard ratio you can go by. Instead, we're back to an analog knob adjutsment, though I feel the range can be tightened down to say 280 to 288 to allow room for error. I wasn't able to find any game examples outside of this range.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>LocalH</b> [ Fri Aug 26, 2011 9:17 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It might also be interesting, in terms of being an intellectual curiousity, to calculate the length of a NES pixel in nanoseconds, like one can say that the Amiga outputs 70ns pixels in Hires and 35ns pixels in SuperHires.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tomaitheous</b> [ Fri Aug 26, 2011 9:20 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">How I know 282 is the most accurate was the cross-verification with emulated Metroid. Seriously, what are the odds that my LCD TV just happens to make the morph ball PERFECTLY circular when applied to emulated Metroid? No other figure makes that happen. Not 280, not 288, not 290, but EXACTLY 282. Furthermore, 282 makes perfect circles no matter what scale multiples you use. 500% was my example, but any scale multiple works. When you try 280, the circles become more and more inaccurate as you test them at higher scales.</div>
<br />
<br /> Dev's BITD tended to just round off the PAR. I've seen it where they <strong>completely</strong> got it wrong. Though this isn't as obvious until you get into the 16bit generation and ports of arcade games. Consumer grade CRT TVs weren't accurately calibrated (they were calibrated within 'range'). But most, if not all, of my TVs I own during the 8 and 16bit era had narrower settings for PAR (NTSC). Same with friends sets. 290, 292, etc just doesn't look right from the years I played these old games. I personally go with a low 280ish number (for 5.369mhz dot clock) in emulation if I have the option. Still beats a straight 1:1 PAR (on a square pixel display). I have to use different scale values for full screen though, as my monitor is square pixel but 5:4 resolution ratio (no 4:3).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Firebrandx</b> [ Sat Aug 27, 2011 12:17 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I spent most of the evening testing various games in the NES library. 280 and 282 seem to be the most common expected ratios. For example, the silver ball in "Pinbot" becomes perfectly round via 280x240, whereas the bumpers in "Pinball" lean more towards 282x240 for perfect roundness.
<br />
<br />I did find one extreme case in "Wheel of Fortune". I don't know if the programmers expected the wheel to appear perfectly round, but it requires 292x240 to make it that way. It's the most anamorphic design of graphics I've seen yet in an NES game.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Sat Aug 27, 2011 12:27 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />T&amp;C Surf Design 2 overcorrected.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sat Aug 27, 2011 3:41 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">LocalH wrote:</div><div class="quotecontent">It might also be interesting, in terms of being an intellectual curiousity, to calculate the length of a NES pixel in nanoseconds, like one can say that the Amiga outputs 70ns pixels in Hires and 35ns pixels in SuperHires.</div>
<br />Each cycle of the NTSC color subcarrier is 17600/63 = 279.365 ns long, and an NES pixel is two-thirds of that.
<br />
<br />Wheel of Fortune for NES was developed by a company based in <a href="http://en.wikipedia.org/wiki/Twycross" class="postlink">Twycross</a>, a village deep in PAL-land. They might not have had a lot of NTSC systems handy to test on and thus got it slightly wrong.
<br />
<br />
<br />EDIT: I did some thinking on the 292 figure, and I might have been unclear in my explanation. Please allow me to clarify:
<br />
<br />The calculated pixel aspect ratio, based on the assumptions of Rec. 601, is 8:7. This means (7/8)*320 = 280 NES pixels, including 24 pixels of border, fit in the 320-pixel-wide clean aperture. The actual picture minus the border is (8/7)*256 = 292 pixels wide. So you can resize 256 to 292, or you can pad to 280 and resize to 320. If you're editing video for YouTube, I recommend the latter because YouTube's supported resolutions are all multiples of 160x120.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Firebrandx</b> [ Sat Aug 27, 2011 3:05 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The wiki entry:
<br />
<br /><a href="http://wiki.nesdev.com/w/index.php/Overscan" class="postlink">http://wiki.nesdev.com/w/index.php/Overscan</a>
<br />
<br />Claims the NES PAR on a 4:3 TV to be 1.143, which would make the 256x240 area equal to 274x240. This seems quite a bit less than the 280~282 we've been finding in most games. Am I misunderstanding that article? I wish whoever wrote it would have clarified in a much more simple way what aspect formula should be used for the 256x240 active area...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sat Aug 27, 2011 6:01 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Scale before padding or pad before scaling?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />So you want to turn the NES's wide pixels into square pixels of the same size, and you want to scale before padding. You need to multiply the <em>width</em> by the PAR and leave the <em>height</em> unchanged. This gives (256 * 1.143) = 292 wide by 240 tall.
<br />
<br />The wiki article assumes that you'll pad before scaling, as that's what actually goes on in the NTSC signal. In this case, you need to find the square-pixel clean aperture (320x240), <em>divide</em> the width by the PAR (producing 280x240), generate the NES picture into that size of a frame, and then scale to 320.
<br />
<br />So do you want the wiki article to contain specific instruction from an emulator author's point of view for both the pad-before-scaling case and the scale-before-padding case?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Firebrandx</b> [ Sat Aug 27, 2011 8:28 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />To clarify, I'm talking about the intended aspect ratio of the 256x240 active pixels. My LCD TV measurements had it at 1.215:1 (based on the 232 visible vertical res, 1.175:1 total for 256x240), which is 282x240 when you resize an emulated NES screen. Coincidentally, my TV had the SNES in exactly the same horizontal sizing (because both NES and SNES both uses 256 active horizontal), and had borders on the top and bottom where the remaining 16 pixels would have been for a 240 vertical res.
<br />
<br />So to recap:
<br />
<br />My TV uses 1.215:1 for 256x232 visible (1.175:1 for the full 256x240) and 1.2592:1 for 256x224, both being equal to 282 horizontal correction width in an emulator at lowest scale. 
<br />
<br />Now that 292 width you're talking about is just way too wide. As I pointed out, the only game that seems to use that figure is Wheel of Fortune. Most everything else expects somewhere around 280~282, which is where my own TV has it. Again the 280~282 I'm talking about is when you take 256x240 and resize it horizontally in a paint program to give the appearance of being TV-aspect accurate.
<br />
<br />Edit: corrected some mistakes in my reply
<br />
<br />Edit 2: It has now dawned on me the mistake being made about the 292 figure. It assumes all 240 lines are visible onscreen. They are not! On my TV, you have the option of the default 224 visible, or a slightly zoomed out mode of 232 visible (which I use). In both cases, its a mistake to figure in all 240 lines when considering the correct aspect ratio. NTSC TVs only display about 224, so if you shrunk the screen to fit all 240, the aspect ratio becomes changed unless you allow black borders to show up on the sides of the screen. This now makes perfect sense on how the designers of Wheel of Fortune screwed up. They made the mistaken assumption of basing their aspect correction on all 240 lines being visible. This gave them the wrong aspect, and is why it looks so extreme compared to other games.
<br />
<br />So to conclude, 292x240 is actually wrong. It doesn't take into account NTSC TVs lop off a portion of the NES graphics on the top and bottom.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>