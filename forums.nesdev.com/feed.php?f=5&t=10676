<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=5&amp;t=10676" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2013-11-14T07:49:12-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=5&amp;t=10676</id>
<entry>
<author><name><![CDATA[qbradq]]></name></author>
<updated>2013-11-14T07:49:12-07:00</updated>
<published>2013-11-14T07:49:12-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10676&amp;p=120836#p120836</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10676&amp;p=120836#p120836"/>
<title type="html"><![CDATA[Re: Nintendo PPU-data format]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10676&amp;p=120836#p120836"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />Tool building has clearer requirements and needs less art.<br /></div><br /><br />Word.<br /><br />Plus, once I'm done with the tool I'll be able to pump out games lightning fast!<br /><br /> <img src="http://forums.nesdev.com/images/smilies/icon_lol.gif" alt=":lol:" title="Laughing" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3706">qbradq</a> — Thu Nov 14, 2013 7:49 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2013-11-14T07:39:12-07:00</updated>
<published>2013-11-14T07:39:12-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10676&amp;p=120835#p120835</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10676&amp;p=120835#p120835"/>
<title type="html"><![CDATA[Re: Nintendo PPU-data format]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10676&amp;p=120835#p120835"><![CDATA[
Tool building has clearer requirements and needs less art.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Thu Nov 14, 2013 7:39 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[cpow]]></name></author>
<updated>2013-11-14T07:02:58-07:00</updated>
<published>2013-11-14T07:02:58-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10676&amp;p=120833#p120833</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10676&amp;p=120833#p120833"/>
<title type="html"><![CDATA[Re: Nintendo PPU-data format]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10676&amp;p=120833#p120833"><![CDATA[
<div class="quotetitle">qbradq wrote:</div><div class="quotecontent"><br />(before falling into the tool building trap <img src="http://forums.nesdev.com/images/smilies/icon_redface.gif" alt=":oops:" title="Embarassed" /> )<br /></div><br />Ah yes...&quot;I'd rather write programs that help write programs than write programs.&quot;  Been there, living that!   <img src="http://forums.nesdev.com/images/smilies/icon_lol.gif" alt=":lol:" title="Laughing" /> <br />The quote is referenced in a <a href="http://www.dreamingincode.com/" class="postlink">wonderful book</a> I wish everyone in software management and software development would read.  Sadly, though, as the author mentions [in quoting Joel Spolsky], &quot;most software engineers don't read enough [or anything] about their own field.&quot;<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3705">cpow</a> — Thu Nov 14, 2013 7:02 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[qbradq]]></name></author>
<updated>2013-11-13T15:16:38-07:00</updated>
<published>2013-11-13T15:16:38-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10676&amp;p=120776#p120776</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10676&amp;p=120776#p120776"/>
<title type="html"><![CDATA[Re: Nintendo PPU-data format]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10676&amp;p=120776#p120776"><![CDATA[
That's pretty cool that they had some sort of shared libraries back in the day. When I was working on my NES software projects (before falling into the tool building trap <img src="http://forums.nesdev.com/images/smilies/icon_redface.gif" alt=":oops:" title="Embarassed" /> ) I used a similar, all-be-it more simplistic format for my PPU updates.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3706">qbradq</a> — Wed Nov 13, 2013 3:16 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Movax12]]></name></author>
<updated>2013-11-12T10:11:43-07:00</updated>
<published>2013-11-12T10:11:43-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10676&amp;p=120681#p120681</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10676&amp;p=120681#p120681"/>
<title type="html"><![CDATA[Re: Nintendo PPU-data format]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10676&amp;p=120681#p120681"><![CDATA[
Slightly modified code from Super Mario Brothers to write such data to PPU: (using HL macros in ca65)<br /><br />Note this is sub-optimal code: it's pretty slow compared to some techniques, but fast enough for many games:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.proc WriteVRAMBufferToScreen                         <br /><br />    ; Note: execution is to start at label: UpdateScreen<br />    ; register y is used to index the Buffer<br />    ; needed: <br />    ;    define location for temp_word<br />    ;    define Mirror_PPU_CTRL<br /><br />    .export ResetScroll, UpdateScreen<br /><br />    VRAM_Buffer_pointer = temp_word<br />    <br />    repeat<br /><br />        ; set PPU vram address:<br />        mb PPU_ADDRESS := a<br />        iny<br />        mb PPU_ADDRESS := (VRAM_Buffer_pointer)&#91; y &#93;<br />        iny<br /><br />        ; load next third byte in stream, shift to the left and save in stack:<br />        mb a := (VRAM_Buffer_pointer)&#91; y &#93; &lt;&lt; 1<br />        pha<br /><br />            ; set ppu to increment by 32 by default<br />            mb a := Mirror_PPU_CTRL | #%00000100<br /><br />            ; if d7 of third byte was clear, ppu will increment address by 1 byte every write:<br />            if carry clear<br />                mb a := a &amp; #%11111011<br />            endif<br /><br />            ; write contents of A to PPU_CTRL:<br />            sta PPU_CTRL<br />        ; restore a<br />        pla<br />        <br />        ; if d6 of third byte is set, repeat byte:<br />        if a &lt;&lt; 1 == carry set<br />            ; set d1, which will be shifted right and become carry<br />            ; and increment the index by one only<br />            ora #%00000010<br />            iny<br />        endif<br /><br />        ; shift back to the right twice to restore length value<br />        ; carry will be set now if repeat byte bit was set<br />        mb a := a &gt;&gt; 2<br />        <br />        ; copy length into x<br />        mb x := a<br />        ; loop and write data to vram:<br />        repeat<br />            ; only increment index if this is not a repeating value:<br />            if carry clear<br />                iny       <br />            endif<br />            mb PPU_DATA := (VRAM_Buffer_pointer)&#91; y &#93;<br />        until dex == zero<br /><br />        ; add end length plus one to the indirect at VRAM_Buffer_pointer<br />        sec<br />        ; copy index to a<br />        mb a := y<br />        ; add index to pointer base:<br />        mb VRAM_Buffer_pointer      := a +c VRAM_Buffer_pointer<br />        mb VRAM_Buffer_pointer&#91; 1 &#93; := VRAM_Buffer_pointer&#91; 1 &#93; + C<br /><br />        ; start here:<br />        UpdateScreen:<br /><br />        ; reset latch and load y with index zero<br />        ldx PPU_STATUS<br />        ldy #0<br /><br />        ; if not zero, write to vram again:<br />    until lda (VRAM_Buffer_pointer)&#91; y &#93; == zero<br /><br />    ResetScroll:<br />    sta PPU_SCROLL<br />    sta PPU_SCROLL<br />    rts<br />.endproc<br /></div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4680">Movax12</a> — Tue Nov 12, 2013 10:11 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[oRBIT2002]]></name></author>
<updated>2013-11-12T09:14:59-07:00</updated>
<published>2013-11-12T09:14:59-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10676&amp;p=120677#p120677</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10676&amp;p=120677#p120677"/>
<title type="html"><![CDATA[Nintendo PPU-data format]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10676&amp;p=120677#p120677"><![CDATA[
I've discovered that Nintendo often uses the same way of storing PPU data into their NES-games. I was on my way writing some kind of ripper-tool but got a bit bored so I might never finish it, so perhaps someone else is interested in my findings.<br />The structure looks like this:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">dc.w PPUAddress (hi+lowbyte)<br />dc.b CONTROL<br />dc.b DATA (*CONTROL.LENGTH)<br /></div><br />The structure can be repeated as a list (PPUAddress,Control,Data,PPUAddress,Control,Data etc.) and is terminated by a $0.<br /><br />CONTROL has a few features:<br />bit 5-0 = LENGTH (number of bytes to insert). <br />bit 6 = RLE mode (1=Active)<br />bit 7 = PPU Write mode (0=Increment by 1, 1=Increment by 32)<br /><br />When RLE mode is active (=1), DATA byte is inserted &lt;CONTROL.LENGTH&gt; number of times.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=353">oRBIT2002</a> — Tue Nov 12, 2013 9:14 am</p><hr />
]]></content>
</entry>
</feed>