<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Reading the controller?</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Reading the controller?</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=3878">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=3878</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>3</strong> of <strong>4</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Tue Feb 26, 2008 9:03 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />In fact any code that when executed takes two "RTS" in a chain is unoptimized.
<br />Also, it's possible for subroutine to call themselves (this often isn't very usefull), or to call the latest part of themselves before they return, and this can proof usefull if the end should be done a couple of times instead of just one, this can make a shorter loop.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Tue Feb 26, 2008 9:19 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />OK, let's explain all the tiny assembly tricks to the newbies and confuse the hell out of them from the start, shall we?
<br />
<br />I'd rather present the usual way of doing things to people who are just starting, and eventually they'll learn these tricks by themselves. Of course there are several ways to call a routine, but as long as a beginner sticks to JSR, they should be safe.
<br />
<br /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">IAlso, it's possible for subroutine to call themselves (this often isn't very usefull)</div>
<br />Recursiveness can be very useful, although probably not in a NES game.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Tue Feb 26, 2008 5:19 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">OK, let's explain all the tiny assembly tricks to the newbies and confuse the hell out of them from the start, shall we?</div><br />My point was that "can't ever" is a strong word.<br /><br /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">Recursiveness can be very useful, although probably not in a NES game.</div>
<br />Flood fill is commonly implemented as a recursive algorithm, and I can think of a few places where flood fill would be useful, but I'll leave those alone for now.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Laserbeak43</b> [ Tue Mar 04, 2008 12:06 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />well, i've gotten the code to work, long ever since. but i'm experiencing delays(latency) between button presses and short envelope times. i was wondering if the line "lda #$9F" was just a short envelope time, so under it i tried lda FF in what i thought was square 2:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">right_is_pressed: ; play sound when right arrow is pressed. <br /><br />&nbsp; &nbsp;lda #$01&nbsp; &nbsp;; Enable square 1 <br />&nbsp; &nbsp;sta $4015&nbsp; ; this register gets written to first to enable sound channel. Then come the other registers<br />&nbsp; &nbsp;lda&nbsp; #$02&nbsp; ; Enable square 2?<br />&nbsp; &nbsp;sta $4015&nbsp; &nbsp;<br />&nbsp; &nbsp;lda #$9F&nbsp; &nbsp;; Envelope <br />&nbsp; &nbsp;sta $4000 <br />&nbsp; &nbsp;lda #$FF<br />&nbsp; &nbsp;sta $4004<br />&nbsp; &nbsp;lda #$21&nbsp; &nbsp;; Start tone <br />&nbsp; &nbsp;sta $4003 <br />&nbsp; &nbsp;lda #$FF<br />&nbsp; &nbsp;sta $4007<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; rts <br />&nbsp; &nbsp;</div>
<br />
<br />same result.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Tue Mar 04, 2008 1:10 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Laserbeak43 wrote:</div><div class="quotecontent">	lda  #$02  ; Enable square 2?<br />	sta $4015	<br /></div>
<br />
<br />This is enabling square 2 and <em>disabling</em> the other channels.  If you want to enable square 1 and 2, write $03 to $4015
<br />
<br />Or... what I'd recommend is just write $0F once to $4015 at startup to enable everything (note that no channels will play any sound until prompted to do so, even if you do this), then you can forget all about $4015 completely (unless you want to use the DMC)
<br />
<br />
<br />Anyway I don't see what could be causing latency.  What <em>might</em> be causing a problem though, is the sweep unit.  Even if you disable sweep, it can still silence low notes unless you switch it to 'negative' mode.
<br />
<br />Here's a quick example:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda #%10011000&nbsp; &nbsp;; 50% duty, decay disabled, volume=8<br />sta $4000<br /><br />lda #%00001000&nbsp; ; disable sweep, set it to negative mode<br />sta $4001<br /><br />lda #$FD&nbsp; &nbsp;; period = $FD -- concert A &#40;440 Hz&#41;<br />sta $4002<br /><br />lda #%01010000 ; high bits of period=0, set length to play for half a second<br />sta $4003<br /></div>
<br />
<br />This should work.
<br />
<br />How I usually approach problems like this is I look at a technical doc covering the register descriptions... then just write to every register setting everything to a specific value.
<br />
<br />
<br />If by "short envelope time" you meant the note was cutting out early, that likely was the length counter.  Both %00100xxx ($21) and %11111xxx ($FF) -- the values you were writing to the length counter reg -- are both short values.  %00001xxx ($08) is the longest you can set the length counter to.  Or, you could disable the length counter via $4000.5 to have it play indefinately.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Tue Mar 04, 2008 3:03 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I bet the latency is because the sound is effectively starting when you release the button. To test this hypothesis, try holding the button for a while before releasing it. Does the sound begin when you press or release it?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Laserbeak43</b> [ Wed Mar 05, 2008 6:47 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">blargg wrote:</div><div class="quotecontent">I bet the latency is because the sound is effectively starting when you release the button. To test this hypothesis, try holding the button for a while before releasing it. Does the sound begin when you press or release it?</div>
<br />
<br />i hold down the right button for 5 seconds or more, release it and nothing happens. i press the left key rapidly and stop, and it after i let go, it beeps a few times.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Laserbeak43</b> [ Wed Mar 05, 2008 7:00 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Disch wrote:</div><div class="quotecontent"><br /><br />Here's a quick example:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda #%10011000&nbsp; &nbsp;; 50% duty, decay disabled, volume=8<br />sta $4000<br /><br />lda #%00001000&nbsp; ; disable sweep, set it to negative mode<br />sta $4001<br /><br />lda #$FD&nbsp; &nbsp;; period = $FD -- concert A &#40;440 Hz&#41;<br />sta $4002<br /><br />lda #%01010000 ; high bits of period=0, set length to play for half a second<br />sta $4003<br /></div><br /><br />This should work.<br /><br />How I usually approach problems like this is I look at a technical doc covering the register descriptions... then just write to every register setting everything to a specific value.<br /><br /><br />If by "short envelope time" you meant the note was cutting out early, that likely was the length counter.  Both %00100xxx ($21) and %11111xxx ($FF) -- the values you were writing to the length counter reg -- are both short values.  %00001xxx ($08) is the longest you can set the length counter to.  Or, you could disable the length counter via $4000.5 to have it play indefinately.</div>
<br />
<br />the docs just leave me lost. i must read most of both blargg's and brad's yesterday. but i'm still confused on how to program them.  I mean. the docs tell you registers need to be manipulated. but not the syntax needed to do that. and i haven't read a tutorial that has made that very clear either. to the point that i could look at the reference then look at a tutorial and learn how to write to that register.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Wed Mar 05, 2008 7:21 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />To write to a register:
<br />
<br />lda #<em>value</em>
<br />sta <em>register address</em>
<br />
<br />What kind of "manipulation" do you need help with? Or is the problem just that there is no 6502 tutorial on nesdevwiki yet?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Laserbeak43</b> [ Wed Mar 05, 2008 7:38 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">To write to a register:<br /><br />lda #<em>value</em><br />sta <em>register address</em><br /><br />What kind of "manipulation" do you need help with? Or is the problem just that there is no 6502 tutorial on nesdevwiki yet?</div>
<br />lol no i wasn't sure how to load values into registers.
<br />
<br />quick question, the number value loaded into the register determines what feature will be used?
<br />
<br />so if #$01 loads a black hole
<br />and #$03 loads my ninja turtles dvd
<br />will:
<br />lda #$03
<br />sta #$4014 
<br />load my ninja turtle DVDs while running a black hole?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>electro</b> [ Wed Mar 05, 2008 8:03 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I hear what you're saying. Not how to load numbers in the sound registers, but which numbers. And then what effect would those numbers have on each sound register.
<br />
<br />I have been wondering that too. It would be great to have a list of the effects that can be produced with each useful binary number on each sound register.
<br />
<br />
<br />T

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Wed Mar 05, 2008 9:08 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I share the same confusion tepples does.  There's no manipulation here other than writing values (writing = STA, STX or STYing).
<br />
<br />The bits in the value you write set (or clear) the specific bits of those registers.  The bits of those registers control what the system is doing -- so in effect, the value you write determines the behavior of the hardware.
<br />
<br />Example:
<br />
<br /><div class="quotetitle">blargg's APU doc wrote:</div><div class="quotecontent">$4000/4 ddle nnnn   duty, loop env/disable length, env disable, vol/env<br />period</div><br /><br />The high two bits of the value you write to $4000 set the duty.<br /><br />Bit 5, when set, will disable the length counter and set the envelope unit to looop.  When clear, it will enable length, and the envelope won't loop.<br /><br />Bit 4 disables (when set) or enables (when clear) the envelope generator<br /><br />and the low 4 bits set the fixed volume and envelope speed.<br /><br /><br />So if you want:<br />- 50% duty (%10xxxxxx)<br />- disabled length (%xx1xxxxx)<br />- disabled envelope (%xxx1xxxx)<br />- a volume level of 8 (%xxxx1000)<br /><br />then you write %10111000 to $4000:<br /><br />LDA #%10111000<br />STA $4000<br /><br /><div class="quotetitle">Laserbeak43 wrote:</div><div class="quotecontent">quick question, the number value loaded into the register determines what feature will be used?</div><br /><br />Yes.  Whatever value you set the register to determines what the hardware does.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">so if #$01 loads a black hole<br />and #$03 loads my ninja turtles dvd<br />will:<br />lda #$03<br />sta #$4014 <br />load my ninja turtle DVDs while running a black hole?</div>
<br />
<br />This example doesn't make any sense.  #$01 doesn't "load" anything, it's just a number.  When you write that number to a register, the effect it has depends on what the register does.
<br />
<br />$4014 is kind of tricky, because it's not really an actual register -- it's more like a CPU macro.  I don't understand your whole ninja turtle/black hole metaphore but basically $4014 works like this:
<br />
<br />
<br />low level:
<br />writing to $4014 starts a DMA transfer.  Bytes are read from $nn00 (where 'nn' is the value written to $4014) and written to $2004 (which puts that byte in OAM).  So for example, if do:
<br />
<br />LDA #$03
<br />STA $4014
<br />
<br />that is basically the same thing as:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">LDA $0300<br />STA $2004<br />LDA $0301<br />STA $2004<br />LDA $0302<br />STA $2004<br />...<br />LDA $03FF<br />STA $2004<br /></div>
<br />
<br />Only much faster because the CPU doesn't have to fetch opcode and address bytes repeatedly.  Plus it's much smaller code.
<br />
<br />
<br />
<br />high level:
<br />
<br />Writing to $4014 copies a 256 byte page to OAM.  So if you write $03 to $4014, then the page at $0300-03FF gets copied in full to OAM.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Laserbeak43</b> [ Sat Mar 29, 2008 2:23 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />this post has been in the back of my head since your reply. i'm gonna get to it over the weekend hopefuly, thanks.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>electro</b> [ Tue Apr 08, 2008 11:44 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Difference between using AND and CMP. 
<br />
<br />I noticed that this:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">;Check the state of the right key <br />&nbsp; &nbsp;lda button_state <br />&nbsp; &nbsp;cmp #key_right&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; compare<br />&nbsp; &nbsp;bne right_not_pressed&nbsp; ; branch if not equal to zero<br />&nbsp; &nbsp;jsr right_is_pressed <br /><br />right_not_pressed: <br /><br /></div><br /><br />Does the same thing that this did;<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">;Check the state of the right key <br />&nbsp; &nbsp;lda button_state <br />&nbsp; &nbsp;and #key_right&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ;mask<br />&nbsp; &nbsp;beq right_not_pressed&nbsp; &nbsp; ;branch if equals zero<br />&nbsp; &nbsp;jsr right_is_pressed <br /><br />right_not_pressed: <br /></div>
<br />
<br />Is the bit of code that uses the mask and beq better, or more efficient? Or are the essentially the same thing?
<br />
<br />Thanks,
<br />T

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Roth</b> [ Tue Apr 08, 2008 12:01 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'm not sure if either one is better than the other or not honestly, but I _think_ the same amount of cycles are being used in both of those snippets of code.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>3</strong> of <strong>4</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>