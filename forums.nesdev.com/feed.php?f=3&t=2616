<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=3&amp;t=2616" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2006-11-20T09:21:55-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=3&amp;t=2616</id>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2006-11-20T09:21:55-07:00</updated>
<published>2006-11-20T09:21:55-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2616&amp;p=19677#p19677</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2616&amp;p=19677#p19677"/>
<title type="html"><![CDATA[nmi_suppression problem]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2616&amp;p=19677#p19677"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />I take care of the extra PPU cycle that may occur if bg enabled and it is an odd frame<br /></div><br /><br />Missing cycle you mean.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />In other words, to clock the PPU after fetching the instruction byte. When fetching the instruction byte, so the NMI flag is asserted after the PPU clock.<br /></div><br /><br />Right, an emulator must handle PPU events that occur in the middle of a CPU instruction.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Mon Nov 20, 2006 9:21 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Zepper]]></name></author>
<updated>2006-11-19T18:41:32-07:00</updated>
<published>2006-11-19T18:41:32-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2616&amp;p=19660#p19660</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2616&amp;p=19660#p19660"/>
<title type="html"><![CDATA[nmi_suppression problem]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2616&amp;p=19660#p19660"><![CDATA[
I had this issue too, exactly the same. My fix was to assert the NMI flag before the PPU clock on <strong>argument fetching</strong>. In other words, to clock the PPU after fetching the instruction byte. When fetching the instruction byte, so the NMI flag is asseted after the PPU clock. Notice this might be an hack, plus NOT the main point to fix your problem though...<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=39">Zepper</a> — Sun Nov 19, 2006 6:41 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[n6]]></name></author>
<updated>2006-11-19T18:12:16-07:00</updated>
<published>2006-11-19T18:12:16-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2616&amp;p=19657#p19657</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2616&amp;p=19657#p19657"/>
<title type="html"><![CDATA[nmi_suppression problem]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2616&amp;p=19657#p19657"><![CDATA[
actually I incremented clock after the read, so its 3 CPU cycles off. blarggs cpu timing test passes, and my NMI takes 7 cycles, and I take care of the extra PPU cycle that may occur if bg enabled and it is an odd frame.<br /><br />Do any read/writes to the PPU take extra cycles?<br />Is my problem probably cpu opcodes that are to short/long anyway?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=766">n6</a> — Sun Nov 19, 2006 6:12 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2006-11-19T17:41:34-07:00</updated>
<published>2006-11-19T17:41:34-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2616&amp;p=19653#p19653</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2616&amp;p=19653#p19653"/>
<title type="html"><![CDATA[nmi_suppression problem]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2616&amp;p=19653#p19653"><![CDATA[
It's hard to say -- this is the kind of problem which can only be resolved by fine tuning your emulator's timing.<br /><br />If you were doing it at the end of the instruction before, but are now doing it on the last cycle of the instruction -- your read might be coming 1 cycle earlier than it was before which would be throwing off your timing.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Sun Nov 19, 2006 5:41 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[n6]]></name></author>
<updated>2006-11-19T16:26:16-07:00</updated>
<published>2006-11-19T16:26:16-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2616&amp;p=19651#p19651</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2616&amp;p=19651#p19651"/>
<title type="html"><![CDATA[nmi_suppression problem]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2616&amp;p=19651#p19651"><![CDATA[
Thanks for your answer, one ? though...<br />Ive changed and are now updating cycles through the opcode (instead of in the end). Now #8 of vbl-timing failes! why did it work when I updated the cycles in the end (this must have been incorrect right, since the opcode didnt do the status read at that time!)<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=766">n6</a> — Sun Nov 19, 2006 4:26 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2006-11-19T09:44:45-07:00</updated>
<published>2006-11-19T09:44:45-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2616&amp;p=19642#p19642</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2616&amp;p=19642#p19642"/>
<title type="html"><![CDATA[Re: nmi_suppression problem]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2616&amp;p=19642#p19642"><![CDATA[
Since nobody else has replied...<br /><br /><div class="quotetitle">n6 wrote:</div><div class="quotecontent"><br />1. after how many PPU cycles is the actual read made in an opcode (is it same for all read opcodes)<br /></div><br /><br />Each CPU cycle performs either 1 read or 1 write.  LDA $2002 is 4 cycles, and therefore performs 4 reads (1 to read the opcode, 1 for the low byte of address, 1 for high byte of address, and one read from the assembled address ($2002)).  So in the case of LDA absolute -- the actual $2002 read is the very last read performed (on the 4th cycle of the instruction).<br /><br />This doc:  <a href="http://nesdev.com/6502_cpu.txt" class="postlink">http://nesdev.com/6502_cpu.txt</a>  lays out which reads/writes are performed and when for every instruction (even "illegal" ones).  As well as other things the CPU is doing during that time.   (Scroll down 75% of the way through the doc)<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />2. My solution for test 8 in the vbl_timing was to in my "Read PPU Status" I check if ppu-clock equals to 89341 then suppress the flag!<br />is this a hack?<br /></div><br /><br />I wouldn't call it a hack.  It's a special case scenario.  There's really no other way to emulate it other than to check for a reads on a specific cycle and change the behavior accordingly.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />3. when is vblank-flag actually set?<br /></div><br /><br />Immediately at the start of VBlank.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">|--idle scanline--| |--    VBlank   --|<br />336-337-338-339-340-000-001-002-003-004<br />                   ^<br />                   |<br />                   $2002.7 goes high<br /></div><br /><br />I.E., on cycle 340 it would be clear, and on 0 it would be set<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />isnt that exactly at the time as NMI is called (if enabled)<br /></div><br /><br />NMI is triggered by $2002.7 going high when $2000.7 is high (and vice versa) -- so yes.  Although there is a slight (~2 CPU cycle) delay between when the NMI is triggered and when the NMI handler is invoked.  I'm still a little fuzzy on the details of why.  Byuu explained it all in this thread:<br /><br /><!-- m --><a class="postlink" href="http://nesdev.com/bbs/viewtopic.php?t=1695">http://nesdev.com/bbs/viewtopic.php?t=1695</a><!-- m --><br /><br />In that thread we were speaking about IRQs, but the same thing seems to happen for NMIs as well.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Sun Nov 19, 2006 9:44 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[n6]]></name></author>
<updated>2006-11-14T18:19:35-07:00</updated>
<published>2006-11-14T18:19:35-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2616&amp;p=19461#p19461</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2616&amp;p=19461#p19461"/>
<title type="html"><![CDATA[nmi_suppression problem]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2616&amp;p=19461#p19461"><![CDATA[
Ive problems with the nmi_suppression test.<br />my questions goes like this:<br /><br />1. after how many PPU cycles is the actual read made in an opcode (is it same for all read opcodes)<br /><br />2. My solution for test 8 in the vbl_timing was to in my "Read PPU Status" I check if ppu-clock equals to 89341 then suppress the flag!<br />is this a hack?<br /><br />3. when is vblank-flag actually set? isnt that exactly at the time as NMI is called (if enabled)<br /><br />thanks<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=766">n6</a> — Tue Nov 14, 2006 6:19 pm</p><hr />
]]></content>
</entry>
</feed>