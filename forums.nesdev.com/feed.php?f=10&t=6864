<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=10&amp;t=6864" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2010-08-17T13:49:43-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=10&amp;t=6864</id>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2010-08-17T13:49:43-07:00</updated>
<published>2010-08-17T13:49:43-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6864&amp;p=66196#p66196</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6864&amp;p=66196#p66196"/>
<title type="html"><![CDATA[Confusion between DMA and OAM]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6864&amp;p=66196#p66196"><![CDATA[
<div class="quotetitle">ehguacho wrote:</div><div class="quotecontent"><br />by this, i assume that between scanlines i should be keeping trace of where is the last byte read from the SPR-RAM, in order to not be rendering always the same 8 sprites.<br /></div><br />Between scanlines you have to check which sprites are in range (i.e. have parts that should appear in the next scanline) and only those that do are copied to secondary OAM. It's not gonna be always the same 8 because the sprites are only 8 or 16 lines tall, so different sprites will be in range as the screen renders.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Tue Aug 17, 2010 1:49 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[ehguacho]]></name></author>
<updated>2010-08-17T13:40:35-07:00</updated>
<published>2010-08-17T13:40:35-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6864&amp;p=66194#p66194</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6864&amp;p=66194#p66194"/>
<title type="html"><![CDATA[Confusion between DMA and OAM]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6864&amp;p=66194#p66194"><![CDATA[
<div class="quotetitle">Dwedit wrote:</div><div class="quotecontent"><br />Secondary OAM is where the sprites go when it gathers the first 8 sprites which are in range of the current scanline.  So then it can draw them on the next scanline.<br /></div><br />thanks Dwedit, that explains it all <img src="http://forums.nesdev.com/images/smilies/icon_wink.gif" alt=";)" title="Wink" /> <br /><br />also, i'll make another question just to be sure i'm understanding the whole thing.<br />since the SPR-RAM (aka "primary OAM") is 256 bytes long and the OAM (aka "secondary OAM") is 32 bytes long, then it's obvious that only the data from the 8 sprites of each scanline are copied into the OAM. by this, i assume that between scanlines i should be keeping trace of where is the last byte read from the SPR-RAM, in order to not be rendering always the same 8 sprites. i'm saying this because otherwise it would be stupid to have 256 bytes of SPR-RAM if only the first 32 of them are effective. am i correct?<br /><br /><div class="quotetitle">blargg wrote:</div><div class="quotecontent"><br />Yes, secondary OAM is a set of fast temporary registers that are filled each scanline during rendering. You can't access them directly.<br /></div><br />ok, thanks Blargg, so i guess i didn't missunderstood the doc. probably the two-DMAs-thing is just a hardware issue, one for writing (for programmer's purpose) and the other for reading (for PPU's purpose).[/quote]<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4281">ehguacho</a> — Tue Aug 17, 2010 1:40 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2010-08-17T13:02:44-07:00</updated>
<published>2010-08-17T13:02:44-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6864&amp;p=66187#p66187</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6864&amp;p=66187#p66187"/>
<title type="html"><![CDATA[Confusion between DMA and OAM]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6864&amp;p=66187#p66187"><![CDATA[
Yes, secondary OAM is a set of fast temporary registers that are filled each scanline during rendering. You can't access them directly.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Tue Aug 17, 2010 1:02 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Dwedit]]></name></author>
<updated>2010-08-17T12:38:42-07:00</updated>
<published>2010-08-17T12:38:42-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6864&amp;p=66184#p66184</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6864&amp;p=66184#p66184"/>
<title type="html"><![CDATA[Confusion between DMA and OAM]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6864&amp;p=66184#p66184"><![CDATA[
Secondary OAM is where the sprites go when it gathers the first 8 sprites which are in range of the current scanline.  So then it can draw them on the next scanline.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=53">Dwedit</a> — Tue Aug 17, 2010 12:38 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[ehguacho]]></name></author>
<updated>2010-08-17T12:34:29-07:00</updated>
<published>2010-08-17T12:34:29-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6864&amp;p=66183#p66183</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6864&amp;p=66183#p66183"/>
<title type="html"><![CDATA[Confusion between DMA and OAM]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6864&amp;p=66183#p66183"><![CDATA[
ok, maybe this is a stupid question, but i'm a bit confused about the DMA and the OAM, so i'm asking this just to be sure.<br /><br />the values written to $2004 are written into the SPR-RAM, wich is a 256 bytes memory space internal to PPU. ok, thats easy, but this where i get confused:<br /><br />extracted from qeed's doc (also the same lines are written in the wiki):<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />* On even cycles, data is read from (primary) OAM<br />* On odd cycles, data is written to secondary OAM<br /></div><br /><br />is that "primary OAM" the SPR-RAM? and if it is, what's that "secondary OAM" that the doc refers to? is it a fast register inside the PPU? in that case, if both primary and secondary OAM are internal to the PPU, why the PPU needs two DMA registers? i mean, if both registers have the same purpose, why are there two of them and not just one?<br /><br />thanks in advance for any reply<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4281">ehguacho</a> — Tue Aug 17, 2010 12:34 pm</p><hr />
]]></content>
</entry>
</feed>