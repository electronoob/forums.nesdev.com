<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Reverse engineering help - Reward$$</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Reverse engineering help - Reward$$</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=9&amp;t=3714">http://forums.nesdev.com/viewtopic.php?f=9&amp;t=3714</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>6</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>neviksti</b> [ Mon Nov 26, 2007 4:47 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Andreas Naive wrote:</div><div class="quotecontent">I'm guessing it could be a multi-round scheme, most probably a SP network or a Feistel network with a relatively low number of rounds.</div><br />I don't really understand the difference between these two networks, as they both use the same types of operations in each round.  The main difference I see is that for the Feistel networks, at each round the input is broken into two pieces ... and that somehow the operation need not be inverted for decryption (which makes no sense to me).<br /><br />Like in this picture: <br /><!-- m --><a class="postlink" href="http://en.wikipedia.org/wiki/Image:Feistel.png">http://en.wikipedia.org/wiki/Image:Feistel.png</a><!-- m --><br /><br />It is not clear to me why the function F does not need to be inverted and everything ran backwards for decryption.  Is there a simple explanation for this, or can you recommend some papers for me to read?<br /><br /><div class="quotetitle">Andreas Naive wrote:</div><div class="quotecontent">If we got a full table, i could confirm o discard the second case; in our case, it won't be so easy, but i have some ideas to try.</div>
<br />What are you hoping to look for to distinguish the two?  Since we have more than sqrt of the total number of inputs, many things can be said probabilistically about the data.  Maybe we can figure out a way to compare the features of each type of network such that we get a probability that the features match... and hopefully the probabilities will be split enough to make the choice clear.
<br />
<br />
<br />In the mean time I'll try to get some useful information about the rounds from the current measurements while the code is running.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>neviksti</b> [ Mon Nov 26, 2007 8:29 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">neviksti wrote:</div><div class="quotecontent">It is not clear to me why the function F does not need to be inverted and everything ran backwards for decryption.  Is there a simple explanation for this, or can you recommend some papers for me to read?</div>
<br />There's no need to answer this.
<br />I reread about these, and it seems so obvious now.  I'm not sure what was confusing me before, but I originally didn't notice that R and L weren't swapped at the last round... which didn't help things.
<br />
<br />That's amazing, F doesn't <em>even need to be invertible</em>.
<br />What a neat structure.
<br />
<br />
<br />EDIT:
<br />So then is the main difference between a Feistel network and a Substitution-permutation network, that the Feistel network uses non-invertible functions in its rounds, while the Substitution-permutation network only uses invertible functions in its rounds?
<br />
<br />Is that what you are hoping to distinguish somehow?
<br />At this moment it is not clear to me how to distinguish those two.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Andreas Naive</b> [ Tue Nov 27, 2007 2:04 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">That's amazing, F doesn't even need to be invertible.<br />What a neat structure.<br /></div><br /><br />Yeah. Indeed, if F were invertible, the schema would become weaker.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">So then is the main difference between a Feistel network and a Substitution-permutation network, that the Feistel network uses non-invertible functions in its rounds, while the Substitution-permutation network only uses invertible functions in its rounds? </div>
<br />
<br />No, you are missing an important point. In a SP network, the substitution step works n bits to n bits; while in a Feistel network, you usually have more bits in the input of the S-box than bits in the output. That makes a big difference, as allow the designer to play with some degress of freedom so as to choose "good" S-Boxes (this mean: S-boxes with good resistance against linear or differencial cryptanalysis). At the same time, that same characteristic allow than, in every round, one bit can affect to more than one S-box , contrarily to what happens in a SP network.
<br />
<br />Regarding how i'm pretending to attack this, i see two lines of attack:
<br />1) Do some simulations with some encryptions schemes to compare the statistics of your data with them (i did this in the past with relative success, but in that case i was working with full tables, so i should re-run that simulations adapted to this case). In the case this is an implementation of one of those known schemas, we should see similar statistics.
<br />
<br />2) Try to "discover" what bits belong to what blocks (i.e. in a Feistel or SP network, you should see as, if you do some statistics by grouping all the bits that are output of a same S-Box, they are "less random" than in the general case. I started with this line yesterday, with no success by now.
<br />
<br />And, of course, whatever other ideas i find in the way. <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" />
<br />
<br />As on how to distinguish a SP network of a Feistel network... well, when you have a low number of rounds, a Feistel network has a very neat difference: if you think on it, half of the input bits are mixed with the ouput of the Feistel functions at round odds, while the other half suffer that mixing at even rounds... and that makes a difference: the second ones will have better random statistics (the difference is in the randomness of the input of the feistel networks in every case; think on it). On a SP network, the statistics should be more homogeneus. I used this idea with success in the past, but, i repeat, i had full tables, and that made things a lot easier (as you can see some "pixelation" --hard to explain-- in the statistics in that case).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Andreas Naive</b> [ Tue Nov 27, 2007 4:46 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Another commentary: Due to the fact that the big blocks of data we have are not homogeneusly spatiated within F2^32, i'm fearing some of the statistics could be distorted (it's almost impossible to say if this would be the case, but <em>a priori</em> it's possible). In that line, i would like to get a set of data corresponding to a more or less homogeneusly spatiated set of input data (or even a random set of input data).
<br />
<br />Taking as input a  certain code over F2^32 is a possible idea; for this specific case, given the limitations on asked data, i feel the Reed Muller[2,5] code could be a good choice. In case you like the idea, here you have the generating matrix:
<br />
<br />[32, 16, 8] "Reed-Muller Code (r = 2, m = 5)" Linear Code over GF(2)
<br />Generator matrix:
<br />[1 0 0 0 0 0 0 1 0 0 0 1 0 1 1 1 0 0 0 1 0 1 1 1 0 1 1 1 1 1 1 0]
<br />[0 1 0 0 0 0 0 1 0 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 1]
<br />[0 0 1 0 0 0 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0 1]
<br />[0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 1]
<br />[0 0 0 0 1 0 0 1 0 0 0 0 0 1 1 0 0 0 0 0 0 1 1 0 0 0 0 0 1 0 0 1]
<br />[0 0 0 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0 0 0 0 1 0 1]
<br />[0 0 0 0 0 0 1 1 0 0 0 0 0 0 1 1 0 0 0 0 0 0 1 1 0 0 0 0 0 0 1 1]
<br />[0 0 0 0 0 0 0 0 1 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 1 1 0 1 0 0 1]
<br />[0 0 0 0 0 0 0 0 0 1 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0 1 0 1 0 1]
<br />[0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 1 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 1]
<br />[0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1]
<br />[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 1 1 0 0 1 1 0 1 0 0 1]
<br />[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1]
<br />[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1]
<br />[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 0 1 1 1 1]
<br />[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1]
<br />
<br />I have obtained it from here: <!-- m --><a class="postlink" href="http://magma.maths.usyd.edu.au/calc/">http://magma.maths.usyd.edu.au/calc/</a><!-- m -->
<br />
<br />Whatever other reasonable binary code could work, of course.
<br />
<br />And, BTW, it's easy for you to obtain a "reverse table"; i mean, if we decide a good set of outputs (responses), do your method allow you to obtain easily the corresponding inputs (challenges)?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>neviksti</b> [ Tue Nov 27, 2007 5:04 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Andreas Naive wrote:</div><div class="quotecontent">No, you are missing an important point. In a SP network, the substitution step works n bits to n bits; while in a Feistel network, you usually have more bits in the input of the S-box than bits in the output. That makes a big difference, as allow the designer to play with some degress of freedom so as to choose "good" S-Boxes (this mean: S-boxes with good resistance against linear or differencial cryptanalysis). At the same time, that same characteristic allow than, in every round, one bit can affect to more than one S-box , contrarily to what happens in a SP network.</div><br />Okay, thank you, that made the important differences much more clear now.<br /><br /><div class="quotetitle">Andreas Naive wrote:</div><div class="quotecontent">if you think on it, half of the input bits are mixed with the ouput of the Feistel functions at round odds, while the other half suffer that mixing at even rounds... and that makes a difference: the second ones will have better random statistics (the difference is in the randomness of the input of the feistel networks in every case; think on it). On a SP network, the statistics should be more homogeneus.</div>
<br />Oh wow, that is a clever trick.
<br />One problem I see is that the data I have so far, the upper word varies very little.  Would it be helpful if I held the lower word fairly constant and "counted" the upper word instead?  That should give you better statistics to look at.
<br />
<br />EDIT: Okay, I see you already commented on this.  I'll start running some data.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Andreas Naive</b> [ Tue Nov 27, 2007 2:52 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Would it be helpful if I held the lower word fairly constant and "counted" the upper word instead?</div>
<br />Yes, that's another one i would like to ask. While a evenly-spaced set is better for the tests that try to group bits, that could be more useable  for doing tests changing isolated bits in the input. I would prefer having such data for the ID's for which we have the first 0x10000 challenges (0x072 or 0x4d0). Maintaining the lower part fixed to 0 should suffice.
<br />
<br />EDIT: Oops. The evenly-spaced one should be better to obtain "algorithm fingerprints", not for tests that try to group bits. <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>neviksti</b> [ Wed Nov 28, 2007 12:17 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Andreas Naive wrote:</div><div class="quotecontent">Taking as input a  certain code over F2^32 is a possible idea; for this specific case, given the limitations on asked data, i feel the Reed Muller[2,5] code could be a good choice.</div><br />Alright, here's the output using the Reed Muller code to generate inputs.<br /><!-- m --><a class="postlink" href="http://www.neviksti.com/blackbox/ID004D0_ReedMuller.csv">http://www.neviksti.com/blackbox/ID004D0_ReedMuller.csv</a><!-- m --><br /><br />It's still working on the dataset which counts through the high word.<br /><br /><div class="quotetitle">Andreas Naive wrote:</div><div class="quotecontent">And, BTW, it's easy for you to obtain a "reverse table"; i mean, if we decide a good set of outputs (responses), do your method allow you to obtain easily the corresponding inputs (challenges)?</div>
<br />No, I have no easy way to find the corresponding input for a given output.  Even though they might be using an block-cipher encryption algorithm, they are only using it for a challenge - authentication scheme.  So there is no corresponding "decryption" algorithm I can make it run, as there is no need for the device to have this capability.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>neviksti</b> [ Wed Nov 28, 2007 1:15 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Andreas Naive wrote:</div><div class="quotecontent"><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Would it be helpful if I held the lower word fairly constant and "counted" the upper word instead?</div><br />Yes, that's another one i would like to ask. While a evenly-spaced set is better for the tests that try to group bits, that could be more useable  for doing tests changing isolated bits in the input. I would prefer having such data for the ID's for which we have the first 0x10000 challenges (0x072 or 0x4d0). Maintaining the lower part fixed to 0 should suffice.</div>
<br />
<br />Okay, I finished a set which counts the upperword, using inputs $00000000-$FFFF0000
<br /><!-- m --><a class="postlink" href="http://www.neviksti.com/blackbox/ID004D0_high.csv">http://www.neviksti.com/blackbox/ID004D0_high.csv</a><!-- m -->
<br />
<br />Just plotting the data and looking at it by eye, it appears less random (more structured) than the output from $00000000-$0000FFFF.  So maybe you're on to something here.
<br />
<br />
<br />What data would be the most useful at this point?
<br />Repeating these for another "ID"?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Andreas Naive</b> [ Thu Nov 29, 2007 1:07 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">What data would be the most useful at this point?<br />Repeating these for another "ID"?</div>
<br />
<br />Probably; when trying to make statistics for characteristics than only depend on the "structure" (the topology, etc) of a network, mixing data from different keys can help to cancel out key-related peaks. It's difficult to estimate exactly how useful that can be, however.
<br />
<br />I have to say i'm having a couple of busy days, so i probably won't be able to take a look at the data until tomorrow night.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Andreas Naive</b> [ Fri Nov 30, 2007 2:31 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />OK; i have got some time to do tests on the last set of data.
<br />
<br />Trying to see if this could be a Feistel network, i did what i said you: i have tried to distinguish two 16-bits set of bits (both in the input and in the ouput) that show clear differences in "randomness". I have seem big differences between bits; by example, this is the "normalized" variance of the changing of the output bits when you change individual bits in the input (the list is ordered):
<br />
<br />1ae  20d  215  2ec  364  3a0  3b7  3d5  419  4d3  4d9  582  5da  7e6  998  9bd  9d9  b94  be8  c3b  c58  d0e  da3  ea0  f65  1493  14ba  1b89  1e2a  2826  39dc
<br />
<br />There are big differences, but there is no clear division between two groups, so i'm not taking any conclusion by now. Same with the input bits.
<br />
<br />Some background: as i partially explained yet, in a symmetric Feistel network a group of half the input bits and a group of half the output bits should show bigger deviations when counting how many times isolated output bits change when you change isolated input bits (over the expected values for a perfectly random set of data). Analyzing the data for the ID 004D0, i see that those bits would be:
<br />
<br />input bits: 2  4  5  7  8  9  b  e  14  15  16  17  19  1a  1e  1f
<br />output bits: 0  2  4  5  6  8  d  f  12  13  14  18  1a  1d  1e  1f
<br />
<br />But, as said, i don't see a clear difference in the medium values of the table, so, even in the case this is really a Feistel network, i'm expecting some values to be incorrect.
<br />
<br />If we wish to deep in this line of tests, i see 2 possibilities: 
<br />1) repeat with other IDs (i have used the "counting.csv" and "high.csv" files for this) and/or using mixed data. When analyzing only the "counting" files can be seen that, while some of the highest values remain the same across different IDs, some other vary.
<br />2) Try an "iterative" approach on this same ID. I mean: if this were a FN, making a file by varying the "input bits" in the list above while fixing the other ones to 0 *should* show bigger deviations, what, at his time, *should* allow us to make a better prediction.
<br />
<br />If the results are not conclusive, i would take another path by trying to discover the effect of S-boxes in some sets of output bits. (And, of course, if  nothing were found we could drop the hypothesis of this being a network-type block cypher and try other ideas).
<br />
<br />I let you decide which file to make first. In the while, i'm going to made some simulations with FNs and/or SPNs to see if i can come with something with a similar behaviour to what we are seeing here.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>neviksti</b> [ Fri Nov 30, 2007 10:47 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I had already started repeating that procedure with another "ID", and that finally finished:
<br /><!-- m --><a class="postlink" href="http://www.neviksti.com/blackbox/ID004DC_counting.csv">http://www.neviksti.com/blackbox/ID004DC_counting.csv</a><!-- m -->
<br /><!-- m --><a class="postlink" href="http://www.neviksti.com/blackbox/ID004DC_high.csv">http://www.neviksti.com/blackbox/ID004DC_high.csv</a><!-- m -->
<br /><!-- m --><a class="postlink" href="http://www.neviksti.com/blackbox/ID004DC_ReedMuller.csv">http://www.neviksti.com/blackbox/ID004DC_ReedMuller.csv</a><!-- m -->
<br />
<br />I'll get started on your second suggestion now (varying just the input bits you listed above).
<br />
<br />
<br />There is one thing about ID004DC that I should mention.  
<br />
<br />As I mentioned previously, each of these "IDs" is really just another data storage location (which appearently uses a different "key" for the challenge-authentication algorithm).  The highest 16bits of the "ID" corresponds to a setting unique to each company that uses these devices.  Each of these devices has "sub locations" (different storage locations on the device), and this "sub ID" is the lowest 4 bits in that ID number.
<br />
<br />Of these "sub ID's", there are two invalid locations (E and F), and two "special locations" that are not meant for user access (these are C and D, which the manufacturer uses to hold a unique product ID for each device).  I access these "special locations" in exactly the same way as any other, it is just not meant for normal user access.
<br />
<br />Additionally, except for in one rare exception, I have not figured out how to access any sub IDs that the companies didn't already use.  So there are quite a few that I cannot access (unless I accidentally guess the authentication answer once to "enable it").  I own devices from only 5 different companies, further limiting my range of "IDs" I can look at.
<br />
<br />
<br />I gave that background so that this may make more sense:
<br />For every challenge I've seen so far, the following ID's give the same output:
<br />ID004DC
<br />ID004DD
<br />ID0001C
<br />ID0001D
<br />
<br />The only other devices I own, fit in another group.  These ID's give the same output:
<br />ID0007C
<br />ID0007D
<br />ID001EC
<br />ID001ED
<br />ID0006C
<br />ID0006D
<br />
<br />So apparrently for those "special" data locations, the manufacturer seems to choose between two different keys.  (And since they are not meant for normal user access, I guess that seems reasonable.)
<br />
<br />
<br />For reference, here are the remaining ID's I can use (varying the "sub IDs" on the same devices), which all give <em>different</em> output for the same input:
<br />ID004D0
<br />ID001E0
<br />ID00060
<br />ID00010
<br />ID00070
<br />ID00071
<br />ID00072
<br />ID00078

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Andreas Naive</b> [ Sat Dec 01, 2007 4:16 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">For every challenge I've seen so far, the following ID's give the same output:<br />ID004DC<br />ID004DD<br />ID0001C<br />ID0001D<br /><br />The only other devices I own, fit in another group. These ID's give the same output:<br />ID0007C<br />ID0007D<br />ID001EC<br />ID001ED<br />ID0006C<br />ID0006D </div>
<br />
<br />Well, maybe this could give some info about the key-schedule but, at this point, i don't believe we can use that info...
<br />
<br />I will repeat the test with the data you have passed me. If you haven't started the other sets, maybe you could wait to see if i get the same conclusions on this.
<br />
<br />I have done some preliminary simulations with Feistel networks. By varying the parameters, I obtain similar statistics for a range varying from very good shaped 4-round FNs (with a good choice of S-boxes, i mean) to a horribly shaped 8-rounds FNs, being the case rounds=6 the one that better aproximate the  statistics.
<br />
<br />Some of them show "blocks" in the graphics too; this correspond, by example, to a 6-rounds one:
<br /><img src="http://andreasnaive.en.eresmas.com/nev/nev1.png" alt="Image" />
<br />but that was expected <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" /> I mean, that block behaviour is shown in whatever encryption scheme that does bit-permutations in the input and output and show enough statistical differences in the "changes in the input vs. changes in the output" table so as to create some grouping.
<br />
<br />When doing the tables, i have seen that a characteristic i had previously considered unimportant could show some light about the type of encryption used. By example, taking the 2^19 first challenges for the 4D0 ID, constructing the table "changes in output bits vs. changes in input bits" and counting how many numbers are multiple of 4 per row, that number is always 0 in your data and, in the simulations, is always equal to each row, but the value is distributed around 16 (a binomial distribution, i'm guessing). Right now i'm not sure what this mean, but it's definitively relevant. I have to give it a deep thought.
<br />
<br />I haven't still done the simulations with SP networks, but i will try to do them at some point this weekend.
<br />
<br />EDIT: The links you have written were incorrect in an obvious way. <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Andreas Naive</b> [ Sat Dec 01, 2007 5:01 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Ok, I have repeated the test with the 4dc ID.
<br />
<br />the result would be this:
<br />
<br />input bits: 0  4  5  6  7  9  a  c  d  e  f  16  17  1a  1b  1d
<br />output bits: 0  2  4  6  8  9  f  12  13  14  15  16  18  1a  1e  1f
<br />
<br />and, when mixing both, this:
<br />
<br />input bits: 0  2  4  5  6  7  e  f  14  15  16  17  1a  1b  1d  1e
<br />output bits: 0  1  2  4  6  8  9  c  f  12  13  14  18  1a  1e  1f
<br />
<br />It can be seen that there are concordance in most terms, but i'm still seeing confuse the middle part of the ranking:
<br />
<br />57f  78f  8e2  970  ce1  cf4  1019  10c4  11de  12e1  12ff  133e  1500  1be7  2113  2136  2409  294f  2c6e  312f  3379  438c  492b  4be4  4f73  524c  5e86  64db  73a8  8e61  ae43  19b67
<br />
<br />I think i will wait to receive the new file with variations in the input bits list (if you haven't started it, use the last list above; if not, don't worry, it's still useable). If i don't see a clear increase in the deviations on that, i will discontinue this line of attack by now.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>neviksti</b> [ Sat Dec 01, 2007 12:35 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Andreas Naive wrote:</div><div class="quotecontent">By example, taking the 2^19 first challenges for the 4D0 ID, constructing the table "changes in output bits vs. changes in input bits" and counting how many numbers are multiple of 4 per row, that number is always 0 in your data and, in the simulations, is always equal to each row, but the value is distributed around 16 (a binomial distribution, i'm guessing). Right now i'm not sure what this mean, but it's definitively relevant. I have to give it a deep thought.</div><br />I'm not sure what this table is representing.  Can you describe it a bit more?<br /><br />For every pair of inputs that differs by only one bit, you look at how many bits changed in the output, then add one to the table[num of changed output bits][bit# of the one changed input bit] ?<br /><br />Or for every pair of inputs you count the number of changed bits, and then count the number of changed bits in the output, then add one to the table[num of changed output bits][num of changed input bits] ?<br /><br />Or is it something else completely?<br /><br />Then, after contructing this table, you looked for how many entries in that table are multiples of 4 and the answer is 0 over the whole table?<br /><br />Wow, that is far from random.  I don't know what it means either, but that must be significant somehow.<br /><br /><div class="quotetitle">Andreas Naive wrote:</div><div class="quotecontent">when mixing both, this:<br /><br />input bits: 0  2  4  5  6  7  e  f  14  15  16  17  1a  1b  1d  1e<br />output bits: 0  1  2  4  6  8  9  c  f  12  13  14  18  1a  1e  1f<br /><br />...<br /><br />I think i will wait to receive the new file with variations in the input bits list (if you haven't started it, use the last list above; if not, don't worry, it's still useable). </div>
<br />
<br />Yeah, I already started with the old list.  I might as well let that finish, and rerun with the new list next if you want.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Andreas Naive</b> [ Sat Dec 01, 2007 3:08 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Yeah, I already started with the old list. I might as well let that finish, and rerun with the new list next if you want.</div><br /><br />Not still; firstly send me the file you are doing; i will decide based on what i see in that.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I'm not sure what this table is representing. Can you describe it a bit more? </div>
<br />
<br />Of course; it's none of your options.
<br />
<br />For every input bit A and for every output bit B (the complete table would be a 32*32 table), we take all the pairs of inputs that only differ in A and counts how many of the corresponding output pairs differ in B. This is the standard starting point when analyzing a encryption scheme, be a blackbox analysis or not. By example, this is what you obtain when taking the 2^19 first values of the 4D0 ID (19*32):
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">30bb8&nbsp; 38324&nbsp; 3f660&nbsp; 3fcb0&nbsp; 3fe50&nbsp; 3d060&nbsp; 3e980&nbsp; 3ae3c&nbsp; 3e400&nbsp; 3d1e0&nbsp; 42968&nbsp; 40ba4&nbsp; 410c0&nbsp; 38bf0&nbsp; 3dad4&nbsp; 40040&nbsp; 3d38c&nbsp; 3c020&nbsp; 41a68&nbsp; 406a0&nbsp; 3fdc0&nbsp; 41b14&nbsp; 3c318&nbsp; 394c0&nbsp; 36c74&nbsp; 3abec&nbsp; 40420&nbsp; 3c6a4&nbsp; 3f83c&nbsp; 40ba8&nbsp; 3d130&nbsp; 40760&nbsp; <br />39d6c&nbsp; 3cb70&nbsp; 3c020&nbsp; 48504&nbsp; 42060&nbsp; 3f550&nbsp; 416c0&nbsp; 40560&nbsp; 3e180&nbsp; 41900&nbsp; 48990&nbsp; 42970&nbsp; 40050&nbsp; 3cb9c&nbsp; 3ee88&nbsp; 41fc0&nbsp; 3f6d0&nbsp; 3ff60&nbsp; 41430&nbsp; 41320&nbsp; 436e0&nbsp; 493ec&nbsp; 4110c&nbsp; 3f0a8&nbsp; 3e064&nbsp; 3cfb8&nbsp; 3f2a0&nbsp; 3f2f0&nbsp; 42310&nbsp; 404f0&nbsp; 3f8e0&nbsp; 3e260&nbsp; <br />2a9b8&nbsp; 33074&nbsp; 3e240&nbsp; 3b2ac&nbsp; 415d0&nbsp; 3be60&nbsp; 3f140&nbsp; 3d664&nbsp; 3e7a0&nbsp; 3f820&nbsp; 44a28&nbsp; 3f8d0&nbsp; 3fe60&nbsp; 39184&nbsp; 3ce10&nbsp; 3ff00&nbsp; 3b4c8&nbsp; 3fa00&nbsp; 412d0&nbsp; 3ec60&nbsp; 3f9a0&nbsp; 3d6d0&nbsp; 3596c&nbsp; 3a3f8&nbsp; 2b28c&nbsp; 39a1c&nbsp; 40580&nbsp; 3c0b8&nbsp; 3c1ac&nbsp; 41050&nbsp; 41550&nbsp; 3c2a0&nbsp; <br />37a34&nbsp; 3c3b8&nbsp; 3f400&nbsp; 3fc68&nbsp; 41840&nbsp; 3f3f8&nbsp; 41e00&nbsp; 416b0&nbsp; 3d8a0&nbsp; 3fce0&nbsp; 42eb0&nbsp; 40580&nbsp; 40a98&nbsp; 3c5e0&nbsp; 3f998&nbsp; 3e860&nbsp; 3e12c&nbsp; 3eb70&nbsp; 40340&nbsp; 40c20&nbsp; 428a0&nbsp; 40864&nbsp; 3ff14&nbsp; 40090&nbsp; 374e8&nbsp; 3dcfc&nbsp; 3f7a0&nbsp; 3de64&nbsp; 3ebd4&nbsp; 3f6e8&nbsp; 3f920&nbsp; 415e0&nbsp; <br />42cf0&nbsp; 402b8&nbsp; 36df0&nbsp; 3f300&nbsp; 40cf0&nbsp; 3c0f8&nbsp; 39a00&nbsp; 3f538&nbsp; 3bf98&nbsp; 45ab0&nbsp; 420d0&nbsp; 44c90&nbsp; 3aa90&nbsp; 3e570&nbsp; 40a20&nbsp; 25e60&nbsp; 3d3b0&nbsp; 3d930&nbsp; 36bf8&nbsp; 30610&nbsp; 38560&nbsp; 3db20&nbsp; 40c70&nbsp; 3dfd8&nbsp; 3e768&nbsp; 3d130&nbsp; 403d0&nbsp; 413c0&nbsp; 42078&nbsp; 37d18&nbsp; 42ba0&nbsp; 39298&nbsp; <br />41280&nbsp; 41348&nbsp; 37710&nbsp; 3e410&nbsp; 40580&nbsp; 3d7c8&nbsp; 330c0&nbsp; 3ff70&nbsp; 3b178&nbsp; 3e798&nbsp; 40350&nbsp; 42540&nbsp; 3c260&nbsp; 3c9d0&nbsp; 416e0&nbsp; 24e70&nbsp; 3e588&nbsp; 3ee00&nbsp; 37238&nbsp; 2ce10&nbsp; 31a80&nbsp; 41b58&nbsp; 414d0&nbsp; 3f040&nbsp; 3efa8&nbsp; 3f760&nbsp; 3f918&nbsp; 448c0&nbsp; 41b40&nbsp; 39d28&nbsp; 41850&nbsp; 3b9e0&nbsp; <br />40fd0&nbsp; 3f790&nbsp; 3d098&nbsp; 3e840&nbsp; 3dd40&nbsp; 3ef20&nbsp; 3f3e0&nbsp; 3dc30&nbsp; 3e4a0&nbsp; 402b8&nbsp; 40230&nbsp; 416c0&nbsp; 3cc80&nbsp; 3d988&nbsp; 3fd50&nbsp; 2d6a0&nbsp; 3f700&nbsp; 3fa70&nbsp; 354a0&nbsp; 39c90&nbsp; 3d850&nbsp; 3f668&nbsp; 3d070&nbsp; 3d910&nbsp; 3fb88&nbsp; 3db30&nbsp; 42e10&nbsp; 413f0&nbsp; 419f0&nbsp; 3a290&nbsp; 44100&nbsp; 3fb78&nbsp; <br />439f0&nbsp; 41bc8&nbsp; 3b608&nbsp; 38a18&nbsp; 40980&nbsp; 3a9c0&nbsp; 38d80&nbsp; 3f2c0&nbsp; 3c7f0&nbsp; 3fee8&nbsp; 3c4e0&nbsp; 3edb0&nbsp; 3d580&nbsp; 3e6c0&nbsp; 43720&nbsp; 2c010&nbsp; 3e1b8&nbsp; 41440&nbsp; 33530&nbsp; 35b20&nbsp; 37ff0&nbsp; 3c7e0&nbsp; 41140&nbsp; 3f240&nbsp; 3bda8&nbsp; 3f540&nbsp; 43608&nbsp; 3e4b0&nbsp; 40148&nbsp; 3a758&nbsp; 42df0&nbsp; 41460&nbsp; <br />41130&nbsp; 3d718&nbsp; 3c520&nbsp; 3d6d0&nbsp; 42f10&nbsp; 3a5e0&nbsp; 43f20&nbsp; 3b310&nbsp; 3b460&nbsp; 3e900&nbsp; 3e2c0&nbsp; 3b148&nbsp; 3e598&nbsp; 37390&nbsp; 40da0&nbsp; 453c0&nbsp; 40860&nbsp; 40590&nbsp; 3c1e0&nbsp; 42180&nbsp; 3c4c0&nbsp; 35e78&nbsp; 3aac8&nbsp; 397c8&nbsp; 39f58&nbsp; 3ed58&nbsp; 3b220&nbsp; 3cf50&nbsp; 41120&nbsp; 3dfc0&nbsp; 3b750&nbsp; 35d80&nbsp; <br />438b8&nbsp; 40418&nbsp; 3da20&nbsp; 3e3e8&nbsp; 3ae80&nbsp; 38918&nbsp; 40100&nbsp; 3dc10&nbsp; 3ca20&nbsp; 3b7b0&nbsp; 3fb50&nbsp; 3e6d0&nbsp; 3b7f8&nbsp; 3beb0&nbsp; 40190&nbsp; 40d00&nbsp; 3d468&nbsp; 3f560&nbsp; 390e0&nbsp; 3e320&nbsp; 39e00&nbsp; 38b90&nbsp; 3dba0&nbsp; 3cd98&nbsp; 3bf38&nbsp; 40780&nbsp; 3b4e0&nbsp; 48938&nbsp; 40f98&nbsp; 3bb28&nbsp; 37890&nbsp; 37a40&nbsp; <br />38080&nbsp; 3c670&nbsp; 409c0&nbsp; 3b010&nbsp; 3fb60&nbsp; 3c0c8&nbsp; 42200&nbsp; 3b050&nbsp; 3c8c0&nbsp; 3d2e0&nbsp; 3e270&nbsp; 3a438&nbsp; 405a0&nbsp; 38298&nbsp; 3c870&nbsp; 44840&nbsp; 3f0e8&nbsp; 3f500&nbsp; 3ef40&nbsp; 40de0&nbsp; 3d320&nbsp; 38178&nbsp; 3a218&nbsp; 39850&nbsp; 37740&nbsp; 3b848&nbsp; 3d060&nbsp; 3cf40&nbsp; 3edb0&nbsp; 3fcd0&nbsp; 3e3f0&nbsp; 3c9a0&nbsp; <br />3c988&nbsp; 3f0c8&nbsp; 3dd20&nbsp; 3caf8&nbsp; 43980&nbsp; 388c0&nbsp; 3b840&nbsp; 3ed38&nbsp; 397a0&nbsp; 42190&nbsp; 40290&nbsp; 3dce0&nbsp; 3f230&nbsp; 394e0&nbsp; 3f4a0&nbsp; 3d600&nbsp; 3b7e0&nbsp; 44a20&nbsp; 3acd0&nbsp; 397e0&nbsp; 37d40&nbsp; 38eb8&nbsp; 3d588&nbsp; 3c958&nbsp; 3de28&nbsp; 3ca28&nbsp; 398e0&nbsp; 3bef0&nbsp; 3d7d8&nbsp; 3c578&nbsp; 40730&nbsp; 3b280&nbsp; <br />37830&nbsp; 3fb8c&nbsp; 3a6b0&nbsp; 3dcc8&nbsp; 42720&nbsp; 39878&nbsp; 43200&nbsp; 3f3e0&nbsp; 3a710&nbsp; 40b40&nbsp; 40f70&nbsp; 415a8&nbsp; 39250&nbsp; 3e32c&nbsp; 3ee40&nbsp; 352d0&nbsp; 3cc50&nbsp; 3e370&nbsp; 3b8e0&nbsp; 3aae0&nbsp; 3f820&nbsp; 3e778&nbsp; 3d6a0&nbsp; 40fa8&nbsp; 3ca20&nbsp; 3b0d0&nbsp; 3b960&nbsp; 3ec50&nbsp; 3e240&nbsp; 3ebc0&nbsp; 42d00&nbsp; 3b9c0&nbsp; <br />3c060&nbsp; 44d54&nbsp; 38e40&nbsp; 3feb8&nbsp; 441c0&nbsp; 3eb1c&nbsp; 42260&nbsp; 3ee4c&nbsp; 3d920&nbsp; 42da0&nbsp; 40a48&nbsp; 41028&nbsp; 3b130&nbsp; 41ec8&nbsp; 41268&nbsp; 36a30&nbsp; 3ac30&nbsp; 3e090&nbsp; 3db10&nbsp; 3bea0&nbsp; 43ad0&nbsp; 3fc84&nbsp; 450c8&nbsp; 433d8&nbsp; 3d76c&nbsp; 3e600&nbsp; 3e1e0&nbsp; 3bfd0&nbsp; 3c980&nbsp; 40908&nbsp; 42520&nbsp; 38750&nbsp; <br />37200&nbsp; 3f070&nbsp; 33210&nbsp; 3cc58&nbsp; 40900&nbsp; 355a8&nbsp; 489e0&nbsp; 402b4&nbsp; 3b7f8&nbsp; 44ac0&nbsp; 40510&nbsp; 40e78&nbsp; 3469c&nbsp; 3f38c&nbsp; 3e710&nbsp; 21ac0&nbsp; 39f40&nbsp; 3c7e0&nbsp; 39eec&nbsp; 32700&nbsp; 45700&nbsp; 3e608&nbsp; 3db00&nbsp; 419d4&nbsp; 3ef30&nbsp; 38058&nbsp; 3ce20&nbsp; 3abf0&nbsp; 3d348&nbsp; 3d7c8&nbsp; 40020&nbsp; 3aaa0&nbsp; <br />384f0&nbsp; 41004&nbsp; 35500&nbsp; 3d760&nbsp; 3e020&nbsp; 3655c&nbsp; 42540&nbsp; 3f16c&nbsp; 37ee0&nbsp; 3ea60&nbsp; 3f958&nbsp; 412c8&nbsp; 35620&nbsp; 3ecf0&nbsp; 3ea70&nbsp; 2cca0&nbsp; 3bdf0&nbsp; 3c6c0&nbsp; 3a2e0&nbsp; 357d0&nbsp; 40bb0&nbsp; 40dd4&nbsp; 3ebf0&nbsp; 4308c&nbsp; 3f058&nbsp; 3aa60&nbsp; 393c0&nbsp; 3e630&nbsp; 3f530&nbsp; 3c278&nbsp; 3e320&nbsp; 39ca0&nbsp; <br />37688&nbsp; 36708&nbsp; 3e080&nbsp; 3b138&nbsp; 43080&nbsp; 3c260&nbsp; 3d540&nbsp; 36970&nbsp; 3bc80&nbsp; 3d0c0&nbsp; 40550&nbsp; 40440&nbsp; 40748&nbsp; 352b8&nbsp; 3fd60&nbsp; 40160&nbsp; 42918&nbsp; 3e8c0&nbsp; 40be8&nbsp; 3a8c0&nbsp; 3d600&nbsp; 3cb78&nbsp; 374e0&nbsp; 341b8&nbsp; 357bc&nbsp; 3b3b0&nbsp; 41040&nbsp; 3bfd0&nbsp; 41358&nbsp; 411c8&nbsp; 40400&nbsp; 3fc00&nbsp; <br />3f0f0&nbsp; 3ca98&nbsp; 3ec80&nbsp; 44d38&nbsp; 42780&nbsp; 3a4e8&nbsp; 41e80&nbsp; 38b90&nbsp; 3da80&nbsp; 43300&nbsp; 41698&nbsp; 3d480&nbsp; 40f08&nbsp; 34718&nbsp; 40620&nbsp; 40380&nbsp; 3b198&nbsp; 42a80&nbsp; 3e350&nbsp; 44500&nbsp; 3ff80&nbsp; 45198&nbsp; 45330&nbsp; 36e78&nbsp; 44e48&nbsp; 3eb10&nbsp; 3bf00&nbsp; 3ae20&nbsp; 3cd38&nbsp; 3f648&nbsp; 3c700&nbsp; 38b00&nbsp; <br />4ba60&nbsp; 410c0&nbsp; 3d080&nbsp; 3f778&nbsp; 3ef80&nbsp; 3e1d0&nbsp; 406c0&nbsp; 3c0e8&nbsp; 40240&nbsp; 3d3c0&nbsp; 40770&nbsp; 3f380&nbsp; 40768&nbsp; 3a750&nbsp; 426e0&nbsp; 403e0&nbsp; 3b670&nbsp; 40980&nbsp; 41ee0&nbsp; 41440&nbsp; 3d5c0&nbsp; 403d0&nbsp; 3df90&nbsp; 3b378&nbsp; 3f5f8&nbsp; 41940&nbsp; 40540&nbsp; 3e830&nbsp; 3fe90&nbsp; 41698&nbsp; 3a180&nbsp; 3edc0&nbsp; </div>
<br />
<br />Each row correspond to an input bit; each column, to an output bit. That table is generated by looping through the 2^19 values, taking his pair, and doing the described accumulations. Due to that this is expected to be a good aproximation to random data, the values are around 0x40000 (the value for a perfectly random ideal function). Furthermore, by the form i'm constructing the table, all the values have to be multiples of 2 (because i'm counting every pair twice); what is noticeable in this table (and all the other tables i have done) is that all the values are multiples of 4. That is a really big regularity.
<br />
<br />Regarding to this, i have new data, and it's more or less good news: i have done more simulations taking into account that same behaviour, both with Feistel networks and SP networks. The conclusion is that that behaviour can be obtained with both type of networks, but it's pretty sensitive to the number of rounds; i mean, i have been unable to obtain that pattern with a number of rounds &gt; 4 for both types of networks, but i have obtained it in some simulations with, by example, a FN with 4 rounds and 6 to 2 S-boxes, a SPN with 2 round and 4 sboxes/round, and SPN with 4 rounds and 8 sboxes/round. When you try to use bigger number of rounds, the pattern is destroyed (the number of columns that show values not multiple of 4 show binomial distributions centered on 8 or 16, depending of the case. So that pattern seems to be pretty sensitive to the number of rounds. While this doesn't demonstrate that the number of rounds is &lt;= 4 (as it's literally impossible to run exhaustive tests on that), it would confirm that, if this is really a multi-round scheme, the number of rounds is relatively low. EDITED: ummm, i think i will make this clearer; while i'm nor claiming that the number of rounds be &lt;=4, given the results of the simulations, i would be pretty surprised if it were &gt;6.
<br />
<br />I will probably work now on trying to see if i can "see" S-boxes in the statistics of the data.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>6</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>