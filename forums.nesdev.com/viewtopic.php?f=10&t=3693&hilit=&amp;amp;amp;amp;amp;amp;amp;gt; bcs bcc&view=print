<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Comparison Question</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Comparison Question</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=3693">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=3693</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Mon Nov 12, 2007 9:04 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Comparison Question</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />So I've tested my code in FCEUXD, and I encountered a problem. I have to admit that as much as I program for the NES, I really never used BMI, BPL, or <span class="posthilit">BCC</span> to compare if something was greater, equal to, or less than something else, which is really sad, I know. So I'm not so sure about this problem I have. Look at the following code:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp;lda #$68<br />&nbsp;cmp #$F0<br />&nbsp;bmi +<br />&nbsp;<br />&nbsp;&#40;Blah code&#41;<br />+<br /></div>
<br />
<br />If someone could tell me why this doesn't branch, I'd be very greatful. If I compare #$78 to #$F0, it will branch. I just don't understand why #$68 won't. And I'm absolutely positive that's the problem.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Mon Nov 12, 2007 10:03 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The problem is you are using a instruction designed for comparing signed bytes when you're really comparing unsigned bytes. Use BMI and BPL for signed numbers, and <span class="posthilit">BCC</span> and <span class="posthilit">BCS</span> for unsigned numbers.
<br />
<br />BMI and BPL make a decision based on bit 7 of the result, which when set indicates that a signed number is negative. However, if your numbers are not signed, that bit will be misinterpreted.
<br />
<br />The number $68 is positive no matter if the byte is signed or not. But $F0 can be seen as $F0 (if the byte is unsigned) or as -$10 (if it is signed).
<br />
<br />The CMP instruction will subtract $F0 from $68 and will find the number $78, and the carry flag will be clear. This result is correct, if the numbers are signed or not. It's all about how you look at the result:
<br />
<br />Signed:
<br />$68 = 104 decimal
<br />$F0 = -16 decimal
<br />104 - (-16) = 104 + 16 = 120
<br />120 decimal = $78, which is a positive number (bit 7 is clear), so the BMI instruction will not branch. The value of the carry should not matter when comparing unsigned numbers, bit 7 of the result is the decisive factor here.
<br />
<br />Unsigned:
<br />$68 = 104 decimal
<br />$F0 = 240 decimal
<br />104 - 240 = -136
<br />Now, to understand this part you must understand how subtraction works on the 6502. You know that we always set the carry flag before a subtraction (and that the CMP instruction assumes that the carry is set). I like to think of that carry bit as a bit you place there to be borrowed during the operation in case the second number is larger than the first. Then, to know if a number is larger than the other, you check the state of the carry flag afterwards. If it's clear, the 1 was borrowed, meaning that the second number was larger than the first. If it's set, the first number is larger or they are equal.
<br />
<br />Anyway, since 240 is larger than 104, the carry bit is borrowed to turn 104 into 360 ($100 + $68). After that borrow, the subtraction is possible, and 360 - 240 = 120, which is exactly the same value we obtained before. This result may seem wrong, since in the calculation above it was -136. but this error is due to the fact that -136 can not be represented with only 8 bits, and when -136 is truncated to 8 bits it looks just like 120. After all, if you are working with unsigned numbers, how do you expect to have space for a signed result? If you only want to know what number is larger, this result is not important, just the state of the carry.
<br />
<br />This topic can be complicated, but if you keep in mind that you should use BMI and BPL only for comparing signed numbers, and <span class="posthilit">BCC</span> and <span class="posthilit">BCS</span> when comparing unsigned numbers, you should be fine.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Mon Nov 12, 2007 11:44 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thank you very much for your explanation, Tokumaru. When I switched it to be <span class="posthilit">BCC</span> instead of BMI, everything worked out fine. I do have a bit of a newbie confession. I don't really understand signed/unsigned numbers... But I'm sure I will. It's getting a little late, so tommorow I'll read up on them. Thank you, once again, for your help  <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /> .

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>dvdmth</b> [ Tue Nov 13, 2007 8:50 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Some assemblers may accept BLT (branch on less than) as a synonym for <span class="posthilit">BCC</span>, as well as BGE (branch on greater or equal) as a synonym for <span class="posthilit">BCS</span>.
<br />
<br />I'm not a fan of using CMP + BMI/BPL for signed comparisons.  If the subtraction overflows, the negate bit will not be set properly, and there's no way to test if this happened or not since CMP doesn't update the overflow bit.  Either use SBC instead of CMP, or test the sign bits manually and do an unsigned compare if the sign bits match.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Tue Nov 13, 2007 3:01 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><span class="posthilit">BCC</span> and <span class="posthilit">BCS</span> were the last instructions I learned how to use properly, and they turned out to be insanely useful.  Though I must admit I never used signed numbers so haven't used BMI/BPL except for checking bit 7.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Tue Nov 13, 2007 4:00 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Memblers wrote:</div><div class="quotecontent"><span class="posthilit">BCC</span> and <span class="posthilit">BCS</span> were the last instructions I learned how to use properly, and they turned out to be insanely useful.  Though I must admit I never used signed numbers so haven't used BMI/BPL except for checking bit 7.</div>
<br />
<br />Same here. I don't really know too much about signed numbers, so I pretty much only use BMI/BPL to check bit 7.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Wed Nov 14, 2007 9:41 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The only time I have actually used a such thing as signed numbers was in a sound code I wrote, to handle the vibrato and pitchbend values. If I remember corectly it has given me a good headache.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Wed Nov 14, 2007 10:06 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'm sure that will be fun when I get to it. I've never really dealt with making my own sound engine. I've only tried to do stuff with NSF files, but I can see that being not such a good idea. I'd rather know how my sound engine works, and be able to adjust it when I want. I don't know if I'll be using signed numbers. That sounds like a headache I can do without.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Wed Nov 14, 2007 10:40 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Signed numbers aren't a headache at all, just compute two's complement (invert all bits and add one, more specifically xor with #$ff and increment if you prefer) and you get the negative number, ranging from -128 to 127 for one single byte. So $ff is -$01, $fe is -$02, etc... $81 is -$7f and $80 is -$80, the smaller number you can represent that way. You can add and substracts numbers without caring with their sign, you won't have problems. In fact yes, if you do something like $7e + $04, you will end up with $82, wich is an overflow since you dont want to have -$7e as a result, so that's why the overflow flag is here. To compare two signed numbers I'm not sure how to do this, but I guess it's not THAT complicated if you carefully read your opcodes's doccumentation carefully.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Fri Dec 05, 2008 1:49 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />This is a very old topic, I know. But I have a question that fits the topic, so no need to start a new one.
<br />
<br />I'm working with comparing two signed numbers now. So I think in order to compare signed numbers to see if one's greater than the other, you'd do:
<br />
<br />lda A
<br />cmp B
<br />bpl GreaterThan
<br />
<br />This seems like it'd work, but it won't work with something like this:
<br />
<br />lda #$80  (-127)
<br />cmp #$20 (32)
<br />bpl GreaterThan
<br />
<br />This branches. Because $80-$20 = $60, in which case bit 7 is not set, the code is allowed to branch. Obviously, -127 is not greater than 32. So is there something I'm missing here? I've never really dealt with signed numbers, but I see that they're really handy so I'll have to learn how to effectively compare them. Thanks in advance.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Fri Dec 05, 2008 12:19 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Heh, now you get to learn the most obscure instructions that test the overflow flag: BVC and BVS. Overflow is the true signed equivalent to the carry flag. Er and you must use ADC or SBC, since only they set/clear the overflow flag based on the result.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Fri Dec 05, 2008 11:22 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Okay, sorry, I found some info with google (I know, I know, just f-ing google it XD). It seems like you could do signed comparisons with BVC and BVS, but another way, though it may be time wasting, is to just convert signed numbers to unsigned numbers to compare them. You can do:
<br />
<br />lda Num1
<br />eor #$80
<br />sta TempVar
<br />lda Num2
<br />eor #$80
<br />cmp TempVar
<br />
<br />It's at least less thinking.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>doynax</b> [ Sat Dec 06, 2008 10:08 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Celius wrote:</div><div class="quotecontent">Okay, sorry, I found some info with google (I know, I know, just f-ing google it XD). It seems like you could do signed comparisons with BVC and BVS, but another way, though it may be time wasting, is to just convert signed numbers to unsigned numbers to compare them. You can do:<br /><br />lda Num1<br />eor #$80<br />sta TempVar<br />lda Num2<br />eor #$80<br />cmp TempVar<br /><br />It's at least less thinking.</div>Yeah, this works nicely. It's especially fast if you can store one or both of the values in biased form to begin with (such as when comparing to a constant.)
<br />
<br />Nevertheless the "proper" way to do signed comparisons comes in handy every once in a while. The idea here is to check whether the overflow and sign flags differ from each other or not. Unfortunately the naive implementation through a set of branches results in some rather unmanageable control flow, though it's the fastest way if you can afford to duplicate some code. I was taught to use this cute trick instead:<div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;lda a<br />&nbsp; &nbsp;sec<br />&nbsp; &nbsp;sbc b<br />&nbsp; &nbsp;bvc *+4<br />&nbsp; &nbsp;eor #$80<br />&nbsp; &nbsp;bmi less</div>
<br />Admittedly I can just barely manage to remember what the carry flag is supposed to mean, so I always end up having to work out just what BMI means but aside from that it's hard to get it wrong. Besides, you could always write it down..
<br />By the way, 6502.org has rather nice <a href="http://6502.org/tutorials/compare_beyond.html" class="postlink">tutorial</a> on this and many other details and tricks involving comparisons.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Sat Dec 06, 2008 10:16 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />OK, I got this figured out. The first way avoids using overflow. It's the easiest to understand. The next uses overflow by adding a signed value that would cause overflow in the interesting case (ADC/SBC set/clear the overflow flag when the signed result would be outside the -128 to +127 range a signed 8-bit value can hold). Finally, some ca65 macros to encapsulate the method.
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">; Avoiding overflow flag:<br /><br />; If A &gt;= n, branch to GE, where n &lt; 0<br />&nbsp; &nbsp;cmp #0 ; can eliminate if you last operation was on A<br />&nbsp; &nbsp; bpl GE<br />&nbsp; &nbsp; cmp #n<br />&nbsp; &nbsp; <span class="posthilit">bcc</span> GE<br />&nbsp; &nbsp; ...<br /><br />; If A &lt; n, branch to LT, where n &gt;= 0<br />&nbsp; &nbsp;cmp #0 ; can eliminate if you last operation was on A<br />&nbsp; &nbsp; bmi LT<br />&nbsp; &nbsp; cmp #n<br />&nbsp; &nbsp; <span class="posthilit">bcc</span> LT<br />&nbsp; &nbsp; ...<br /><br />; Using overflow flag:<br /><br />; If A &gt;= n, branch to GE, where n &lt; 0<br />&nbsp; &nbsp; sec<br />&nbsp; &nbsp; sbc #n - -128<br />&nbsp; &nbsp; bvc GE<br />&nbsp; &nbsp; ...<br /><br />; If A &lt; n, branch to GE, where n &gt; 0<br />&nbsp; &nbsp; clc<br />&nbsp; &nbsp; adc #128 - n<br />&nbsp; &nbsp; bvs GE<br />&nbsp; &nbsp; ...<br /><br />; ca65 macros:<br /><br />; If A &gt;= n, branches to label. A and n are 8-bit signed.<br />; Preserved: X, Y<br />.macro scmp_bge n,label<br />&nbsp; &nbsp; .if &#40;n&#41; &lt; 0<br />&nbsp; &nbsp; &nbsp; &nbsp; sec<br />&nbsp; &nbsp; &nbsp; &nbsp; sbc #&#40;n&#41; - -128<br />&nbsp; &nbsp; &nbsp; &nbsp; bvc label<br />&nbsp; &nbsp; .elseif &#40;n&#41; = 0<br />&nbsp; &nbsp; &nbsp; &nbsp; cmp #0<br />&nbsp; &nbsp; &nbsp; &nbsp; bpl label<br />&nbsp; &nbsp; .else<br />&nbsp; &nbsp; &nbsp; &nbsp; clc<br />&nbsp; &nbsp; &nbsp; &nbsp; adc #128 - &#40;n&#41;<br />&nbsp; &nbsp; &nbsp; &nbsp; bvs label<br />&nbsp; &nbsp; .endif<br />.endmacro<br /><br />; If A &lt; n, branches to label. A and n are 8-bit signed.<br />; Preserved: X, Y<br />.macro scmp_blt n,label<br />&nbsp; &nbsp; .if &#40;n&#41; &lt; 0<br />&nbsp; &nbsp; &nbsp; &nbsp; sec<br />&nbsp; &nbsp; &nbsp; &nbsp; sbc #&#40;n&#41; - -128<br />&nbsp; &nbsp; &nbsp; &nbsp; bvs label<br />&nbsp; &nbsp; .elseif &#40;n&#41; = 0<br />&nbsp; &nbsp; &nbsp; &nbsp; cmp #0<br />&nbsp; &nbsp; &nbsp; &nbsp; bmi label<br />&nbsp; &nbsp; .else<br />&nbsp; &nbsp; &nbsp; &nbsp; clc<br />&nbsp; &nbsp; &nbsp; &nbsp; adc #128 - &#40;n&#41;<br />&nbsp; &nbsp; &nbsp; &nbsp; bvc label<br />&nbsp; &nbsp; .endif<br />.endmacro</div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Sat Dec 06, 2008 1:21 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thanks for the responses guys. I'll study what you were saying blargg. I am actually going to create a nice macro for this (I've created macros for lots of other branch conditions with WLA-DX), so I don't have to think about typing it in. It's obviously more intuitive to write something like:
<br />
<br />checkAgreaterthanBsigned(A,B,Label)
<br />
<br />Where it branches to "Label" if A is greater than B. Though I have a system where I shorten the words to:
<br />
<br />csAgtB
<br />
<br />Which stands for: check (signed) if A is greater than B. I have these handy macros for 16 bit comparisons where I can just quickly type that in without thinking (and sometimes, I get confused with comparisons, so I'll sit there and waste coding time thinking about how to compare two numbers).

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>