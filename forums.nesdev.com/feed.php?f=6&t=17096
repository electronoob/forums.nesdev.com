<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=6&amp;t=17096" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2018-03-13T13:33:46-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=6&amp;t=17096</id>
<entry>
<author><name><![CDATA[SuperWill24]]></name></author>
<updated>2018-03-13T13:33:46-07:00</updated>
<published>2018-03-13T13:33:46-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17096&amp;p=215151#p215151</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17096&amp;p=215151#p215151"/>
<title type="html"><![CDATA[Re: How are PCM samples ripped from NES ROMS?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17096&amp;p=215151#p215151"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br /><em>Skate or Die 2</em> is the one that comes to mind first.<br /><div class="quotetitle">In <a href="https://forums.nesdev.com/viewtopic.php?p=181499#p181499" class="postlink">this post</a>, tepples wrote:</div><div class="quotecontent">SoD2's samples are 4-bit linear PCM (or as linear as the APU DMC DAC allows). Years ago, I wrote an extractor that turns the whole ROM into a wave file; it shouldn't be too hard to write your own if you know any PC programming language.<br /></div><br />I forget which others there were. But if you're curious, I could write a Python program that runs heuristics on a PRG ROM to see what parts look like 4-bit linear PCM (and which nibble order).</div><br /><br /><br />Sorry I'm late, but I would appreciate if you wrote that program sometime in the future. It would also be very useful to tell which Game Boy or Game Boy Color games use PCM as well.  <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=8470">SuperWill24</a> — Tue Mar 13, 2018 1:33 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2018-02-26T11:32:07-07:00</updated>
<published>2018-02-26T11:32:07-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17096&amp;p=214333#p214333</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17096&amp;p=214333#p214333"/>
<title type="html"><![CDATA[Re: How are PCM samples ripped from NES ROMS?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17096&amp;p=214333#p214333"><![CDATA[
<div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent"><br />I'm curious what your heuristic is to decide if some data is a sound sample? A high number of successive values that differ by a small number from each other?<br /></div><br />That'd be the first thing I try, related to <a href="https://en.wikipedia.org/wiki/Autocorrelation" class="postlink">lag 1 autocorrelation</a>. If I were actually writing a PCM finder, I would have refined it based on metrics gathered from test data.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Mon Feb 26, 2018 11:32 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[rainwarrior]]></name></author>
<updated>2018-02-26T11:26:11-07:00</updated>
<published>2018-02-26T11:26:11-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17096&amp;p=214332#p214332</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17096&amp;p=214332#p214332"/>
<title type="html"><![CDATA[Re: How are PCM samples ripped from NES ROMS?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17096&amp;p=214332#p214332"><![CDATA[
I'm not asking for you to write a program, but I'm curious what your heuristic is to decide if some data is a sound sample? A high number of successive values that differ by a small number from each other?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5165">rainwarrior</a> — Mon Feb 26, 2018 11:26 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2018-02-26T11:18:31-07:00</updated>
<published>2018-02-26T11:18:31-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17096&amp;p=214331#p214331</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17096&amp;p=214331#p214331"/>
<title type="html"><![CDATA[Re: How are PCM samples ripped from NES ROMS?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17096&amp;p=214331#p214331"><![CDATA[
<em>Skate or Die 2</em> is the one that comes to mind first.<br /><div class="quotetitle">In <a href="https://forums.nesdev.com/viewtopic.php?p=181499#p181499" class="postlink">this post</a>, tepples wrote:</div><div class="quotecontent"><br />SoD2's samples are 4-bit linear PCM (or as linear as the APU DMC DAC allows). Years ago, I wrote an extractor that turns the whole ROM into a wave file; it shouldn't be too hard to write your own if you know any PC programming language.<br /></div><br />I forget which others there were. But if you're curious, I could write a Python program that runs heuristics on a PRG ROM to see what parts look like 4-bit linear PCM (and which nibble order).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Mon Feb 26, 2018 11:18 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[rainwarrior]]></name></author>
<updated>2018-02-26T11:15:19-07:00</updated>
<published>2018-02-26T11:15:19-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17096&amp;p=214330#p214330</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17096&amp;p=214330#p214330"/>
<title type="html"><![CDATA[Re: How are PCM samples ripped from NES ROMS?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17096&amp;p=214330#p214330"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />4-bit samples stored in an 8-bit memory have endianness. For example, the <a href="http://bgb.bircd.org/pandocs.htm#soundchannel3waveoutput" class="postlink">Game Boy wavetable channel</a> is opposite the <a href="https://wiki.nesdev.com/w/index.php/Namco_163_audio#Waveform" class="postlink">Namco 163</a>. And I've found that a lot of NES games using PCM use 4-bit PCM.<br /></div><br />Fair enough. I wouldn''t have called that &quot;endian&quot; in the traditional sense, but sure it would fit some definitions.<br /><br />What games use 4-bit PCM? (Excluding N163.)<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5165">rainwarrior</a> — Mon Feb 26, 2018 11:15 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2018-02-26T08:02:30-07:00</updated>
<published>2018-02-26T08:02:30-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17096&amp;p=214327#p214327</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17096&amp;p=214327#p214327"/>
<title type="html"><![CDATA[Re: How are PCM samples ripped from NES ROMS?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17096&amp;p=214327#p214327"><![CDATA[
<div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent"><br />Endian concerns don't matter until you have 16-bit samples, which would probably never happen in an 8-bit game.<br /></div><br />4-bit samples stored in an 8-bit memory have endianness. For example, the <a href="http://bgb.bircd.org/pandocs.htm#soundchannel3waveoutput" class="postlink">Game Boy wavetable channel</a> is opposite the <a href="https://wiki.nesdev.com/w/index.php/Namco_163_audio#Waveform" class="postlink">Namco 163</a>. And I've found that a lot of NES games using PCM use 4-bit PCM.<br /><br /><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent"><br />Bayou Billy even has PCM output by software decoding from NES format DPCM samples: <a href="https://forums.nesdev.com/viewtopic.php?p=211224#p211224" class="postlink">https://forums.nesdev.com/viewtopic.php?p=211224#p211224</a><br /></div><br />As does <em>Blades of Steel</em> for &quot;face off&quot; and the like.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Mon Feb 26, 2018 8:02 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[rainwarrior]]></name></author>
<updated>2018-02-25T21:47:48-07:00</updated>
<published>2018-02-25T21:47:48-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17096&amp;p=214313#p214313</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17096&amp;p=214313#p214313"/>
<title type="html"><![CDATA[Re: How are PCM samples ripped from NES ROMS?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17096&amp;p=214313#p214313"><![CDATA[
Twenty years ago I wanted to make a Doom theme for Tetrinet, and I opened the WAD file as a raw PCM to extract a bunch of sound effects.<br /><br />The other &quot;easy&quot; way to rip these samples is to mute all the channels its not playing on, and then just record the sound output of the emulator, especially if you can disable highpass/lowpass filters on the output. With some careful resampling and quantization you might be able to get back the original PCM exactly. With some less careful work, you at least have it it in a recorded form that you can use.<br /><br /><br />If you're trying to make an NSF play the sample, though, you don't need to worry about its samplerate or how its encoded, the task is really just to find the code routine that plays it and get it to run. The code will take care of the reset.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5165">rainwarrior</a> — Sun Feb 25, 2018 9:47 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[MrNorbert1994]]></name></author>
<updated>2018-02-25T21:48:06-07:00</updated>
<published>2018-02-25T21:42:02-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17096&amp;p=214312#p214312</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17096&amp;p=214312#p214312"/>
<title type="html"><![CDATA[Re: How are PCM samples ripped from NES ROMS?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17096&amp;p=214312#p214312"><![CDATA[
You rip the samples just like music.<br />You have to find their respective play and init entry points, and after you ripped it, you have add it to the music + sfx nsf via the bankswithching.<br />The PCM NSFs can be very big since they eat up a lot of CPU time, and because of this, most of the time the samples are located on multiple banks (like Skate Or Die, Mickey Mouse Letterland + NumberLand), or sometimes you have to design your own engine bankswitch since for example Dirty Harry changes the samples during playback.<br /><br />I actually ripped a few samples for Hammerin'  Harry a while ago.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6513">MrNorbert1994</a> — Sun Feb 25, 2018 9:42 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[rainwarrior]]></name></author>
<updated>2018-02-25T21:43:35-07:00</updated>
<published>2018-02-25T21:41:51-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17096&amp;p=214311#p214311</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17096&amp;p=214311#p214311"/>
<title type="html"><![CDATA[Re: How are PCM samples ripped from NES ROMS?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17096&amp;p=214311#p214311"><![CDATA[
Endian concerns don't matter until you have 16-bit samples, which would probably never happen in an 8-bit game.<br /><br />Most often a PCM sample is just encoded as a raw 8-bit PCM, you can just open a ROM in a sound editor as raw PCM and play it and you'll hear the samples in it.<br /><br />Sometimes the samples are signed or unsigned, but that just means you have to listen to it twice.<br /><br />On more rare occasions, PCM samples might be compressed into some other format.<br /><br />Big Bird's Hide and Speak had a strange compression format: <a href="http://forums.nesdev.com/viewtopic.php?t=8675" class="postlink">http://forums.nesdev.com/viewtopic.php?t=8675</a><br /><br />Bayou Billy even has PCM output by software decoding from NES format DPCM samples: <a href="https://forums.nesdev.com/viewtopic.php?p=211224#p211224" class="postlink">https://forums.nesdev.com/viewtopic.php?p=211224#p211224</a><br /><br />There are a lot of ways to compress sound, though. Nowadays most sound compression method is some variation of a fourier transform to convert waves to frequencies, and then discarding the less important frequencies, but before we had hardware that could do this effectively there were many other techniques experimented with. Tepples wrote an article on <a href="http://www.pineight.com/mw/index.php?title=Mozer_compression" class="postlink">Forrest Mozer's compression technique</a> used in some C64 games.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5165">rainwarrior</a> — Sun Feb 25, 2018 9:41 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[SuperWill24]]></name></author>
<updated>2018-02-25T21:08:17-07:00</updated>
<published>2018-02-25T21:08:17-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17096&amp;p=214310#p214310</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17096&amp;p=214310#p214310"/>
<title type="html"><![CDATA[How are PCM samples ripped from NES ROMS?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17096&amp;p=214310#p214310"><![CDATA[
Earlier, I tried to ask a similar question about GBC ROMS that I was having trouble with, but nobody answered (it should be somewhere on GBDev, so feel free to help if you are interested and have the skill), so I thought I'd make a much more relevant topic here.<br /><br />Basically, in general, how are PCM samples ripped from ROMS? I know a lot of NSFs have PCM samples, so how do they rip them and add them to the NSFs?<br />Specifically, what I'm talking about is &quot;raw&quot; (non-DPCM) PCM. There are at least a couple of games in mind that I would particularly like to rip from (Star Wars Episode V, Hammerin' Harry, and Gauntlet II), but can't find a reliable way to do so.<br /><br />What I want to know is the following: Does the process usually involve reverse-engineering of the sound engine? Are the sample table offsets randomly found? How is the precise sample rate found? Do you use data/code logger or whatever it is from FCEUX to do so? How is the format (number of bits, endianness) figured out? Also, although not as important: is there a reliable way to extract DPCM samples from NES ROMs (not necessarily NSFs)?<br /><br />So, I apologize if I'm being too broad here, but I must say that for some reason, I am fascinated with the sample data of old systems, especially NES and Game Boy.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=8470">SuperWill24</a> — Sun Feb 25, 2018 9:08 pm</p><hr />
]]></content>
</entry>
</feed>