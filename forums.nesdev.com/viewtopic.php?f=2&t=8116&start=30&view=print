<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Yet another reason to not use NESASM: Label length limit</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Yet another reason to not use NESASM: Label length limit</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=8116">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=8116</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>3</strong> of <strong>5</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Tue Sep 13, 2011 10:08 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />So when a bank overflows the assembler silently wraps back and overwrites the beginning of it? Niiiiice!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Tue Sep 13, 2011 10:13 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />This code is too complex for NESASM to handle:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp; .bank 0<br />&nbsp; &nbsp; .org $8000<br />foo = bar<br />bar:<br />&nbsp; &nbsp; .byte 1<br /></div><br />Result:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NES Assembler &#40;v3.1&#41;<br /><br />pass 1<br />pass 2<br />#&#91;1&#93;&nbsp; &nbsp;foo.asm<br />&nbsp; &nbsp; 3&nbsp; 00:8000&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; foo = bar<br />&nbsp; &nbsp; &nbsp; &nbsp;Internal error&#91;1&#93;!<br /># 1 error&#40;s&#41;<br /></div>
<br />Extra points for the helpful error message.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Jeroen</b> [ Tue Sep 13, 2011 10:33 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I stil haven't heard much reason not to use asm6 over nesasm though. Whilst nesasm has less bugs then in the past it was proved pretty easily that its not exactly helpfull with some of it's "limitations" (straight up bug in my eyes since it doesn't give you the correct information and puts you on a wild goose chase)
<br />The only argument I heard is having to include a bin file for a header...which was disproved pretty fast. (since you can .db them in)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Tue Sep 13, 2011 10:38 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">thefox wrote:</div><div class="quotecontent">This code is too complex for NESASM to handle:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp; .bank 0<br />&nbsp; &nbsp; .org $8000<br />foo = bar<br />bar:<br />&nbsp; &nbsp; .byte 1<br /></div><br />Result:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NES Assembler &#40;v3.1&#41;<br /><br />pass 1<br />pass 2<br />#&#91;1&#93;&nbsp; &nbsp;foo.asm<br />&nbsp; &nbsp; 3&nbsp; 00:8000&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; foo = bar<br />&nbsp; &nbsp; &nbsp; &nbsp;Internal error&#91;1&#93;!<br /># 1 error&#40;s&#41;<br /></div><br />Extra points for the helpful error message.</div>
<br />
<br />Were you just trying to create an alias for the "bar" label that you called "foo"?
<br />
<br />Yeah, and whatever the case, I have to agree that the error message is stunningly informative. Perhaps the error happened because you defined the label after the "foo" part.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Tue Sep 13, 2011 10:42 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Have you tried moving your constant out of your program's code? IMO, that's a case of controlling your program flow, your constant declarations shouldn't be in the middle of code EVER. Put it outside, like before the .rsset and after the header declarations.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Tue Sep 13, 2011 10:44 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The only real problem with ASM6 is that due to its memory model, it can't check for stupid programmer mistakes when you jump from code on one bank to code in another bank in the same memory address range.
<br />
<br />So your code in Bank 0 at $8000 can try to call code in Bank 1 at $8000, and nothing will try to stop it.
<br />
<br />It's probably a bad idea to try to stop this anyway, since you might be making code intended to be copied to RAM.
<br />
<br />There are also a few issues with INCBIN.  INCBIN accepts 3 arguments, a filename, and optionally, a source address and length.  The filename is not quoted.  But when you use a filename, source address, and length, it treats the first comma as part of the filename, unless you add an extra space before the comma.
<br />And you can't use INCBIN as part of a macro.  Boo!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Tue Sep 13, 2011 11:07 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I don't think the assembler should stop you from doing that. The assembler should and does allow you to access labels from any bank, in any bank. And after all, a label is just an alias for an address. Thus, two labels in separate banks both defined at $8000 should both be interpreted as just the number $8000.
<br />
<br />If anything, the assembler should just warn you. I can see though in a scheme where a lot of bankswitching is involved, you may be switching the bank the PC is currently in depending on your set up. Take this code for example:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.bank 0<br />.org $8000<br />bankswitch:<br />&nbsp;;blah bankswitching code<br /><br />.end<br /><br />.bank 1<br />.org $8000<br />&nbsp;;idendical blah bankswitching code<br />&nbsp;....<br /><br />&nbsp;jmp bankswitch<br /></div>
<br />
<br />The label "bankswitch" can only be defined once. In this case, the label should point to the same thing in each bank, so it's good that it allows for this.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Tue Sep 13, 2011 11:07 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Celius wrote:</div><div class="quotecontent">Were you just trying to create an alias for the "bar" label that you called "foo"?</div><br />The actual case was something like this:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">foo = bar + 123<br /><br />bar:<br />&nbsp; lda #123<br />&nbsp; nop<br />&nbsp; ; etc<br /></div><br />The problem is (as far as I understand it) NESASM doesn't seem like to forward references in symbol assignments. You can forward reference symbols with stuff like "lda bar" before bar is defined though, so the limitation doesn't make much sense.<br /><br /><div class="quotetitle">3gengames wrote:</div><div class="quotecontent">Have you tried moving your constant out of your program's code? IMO, that's a case of controlling your program flow, your constant declarations shouldn't be in the middle of code EVER. Put it outside, like before the .rsset and after the header declarations.</div>
<br />Why? (It doesn't fix the problem anyways, BTW.)
<br />
<br />EDIT: Replied to 3gengames

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Wed Sep 14, 2011 1:31 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Dwedit wrote:</div><div class="quotecontent">There are also a few issues with INCBIN.  INCBIN accepts 3 arguments, a filename, and optionally, a source address and length.  <strong>The filename is not quoted.</strong>  But when you use a filename, source address, and length, it treats the first comma as part of the filename, unless you add an extra space before the comma.<br /></div>
<br />You should say "doesn't have to be quoted", but it can be. In this case, you should quote it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Wed Sep 14, 2011 1:44 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I guess label lenght limitation is not a bug, but the fact the assembler doesn't give a warning or something when a label is too long IS a bug.
<br />
<br />NESASM was also written like 10+ years ago and was never updated. It's as outdated as Nesticle if you ask me. Yes I started NES development writing with NESASM and testing with Nesticle... but now I use WLA-DX and test on a Power Pak and this is way better.
<br />
<br />That being said there is 2 problem I have with WLA-DX :
<br />1) It is complicated to make a piece of code in ROM that you copy and execute in RAM, you have to re-define all internal labels manually.
<br />2) The assembler FORCES you to use a fixed "ROM" size, padding the end with zeroes, and doesn't have provisions for disk based systems such as the FDS or C64 where you don't want to pad the end of your files with 0s.
<br />
<br />I'm pretty sure CC65 has solutions to both issues, the only reason I still use WLA is because I started my project with it and it's complicated to change in the middle of a project.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Wed Sep 14, 2011 2:07 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I think Bregalad brings up a good comparison: Nesticle and NESASM.
<br />
<br /><div class="quotetitle">3gengames wrote:</div><div class="quotecontent">Have you tried moving your constant out of your program's code? IMO, that's a case of controlling your program flow, your constant declarations shouldn't be in the middle of code EVER. Put it outside, like before the .rsset and after the header declarations.</div>
<br />
<br />I agree this makes for cleaner code, but it shouldn't affect functionality. An assembler shouldn't decide to comprehend variable declarations exclusively and then interpret code. If you have a bunch of different files included in one main file, and each of those files include their own variable declarations, that's completely logical. When the assembler links these files into one giant piece, it will most certainly be looking at variable declarations mixed in with code.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Banshaku</b> [ Wed Sep 14, 2011 5:04 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It's funny how people have the time to argument how bad the assembler is when the actual solution would be to find "why" it is limited to this and fix the problem.  
<br />
<br />If you look in the code, labels are of type "struct t_symbol".  The name of the symbol is of size "SBOLSZ", which is a define. That define is 32 bytes. You update the size, recompile and you make some people happy, end of story. (they are defined in defs.h)
<br />
<br />It took less than 5 minutes to find where it was. Of course there could be more impact and proper code review/regression should be done to make sure there is no hard coded length check.  If I had the compiler/environment ready, I would do it.
<br />
<br />My point is, it's quite silly to argument for such trivial things. Everyone will like their first or whatever assembler, no matter what. Even one guy is trying to <a href="http://kenai.com/jira/browse/NESASS-2" class="postlink">port that assembler to java!</a>.
<br />
<br />edit:
<br />
<br />Here's <a href="http://www14.ocn.ne.jp/~banshaku/nesasm/nesasm311.zip" class="postlink">version 3.1.1 experimental</a>, not regression tested, just recompiled with different length, which is now 256.  
<br />
<br />There is a few "magic numbers" in the code where 32 is used and could have impact on labels or other things.  Since I don't have much time to test it, I will see if I can check someday. Source code included.  Makefile works without dev-cpp, just GCC MinGW is fine (or it seems after downling MinGW).
<br />
<br />It's a very quick &amp; dirty hack so you use at your own risk.
<br />
<br />edit2:
<br />
<br />I will lose my webpage soon because of moving and not using that internet provider anymore.  I need to figure out where to transfer the few files I have.
<br />
<br />edit3:
<br />
<br />I went through some code review of all magic numbers "32".  Only one had impact, inside macro.c.  The name variable inside macro_look was hard coded to 32 when t_macro name was using SBOLSZ. Now it's using SBOLSZ for size.  It could be considered in a beta stage but without any testing.  Any testing, especially "thefox" about his own project, would be appreciated.
<br />
<br />My motto, don't try to fight, accommodate people.  We are a community, we should help each other. Why not?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tomaitheous</b> [ Wed Sep 14, 2011 7:59 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">I use local labels such as _loop, _next, _end all the time, and I also use loads of +/-, <strong>and I even often have to use ++/-- or even sometimes +++/---</strong> along with labels such as _loop2, _loop3 etc...<br /><br />This is one of the major annoyance of programing : FINDING DAMN LABELS (including variable names and subroutine's name)<br /><br />It's also a major source of bug. For example it's not rare to mess up and branch to _loop2 instead of _loop3</div>
<br />
<br /> I find that makes for poor readability for code. It takes but a second to use anything else as a local label. As simple as .1 or .LL01 or whatever. Much easier to track with your eyes. Single instances of +/- aren't too bad, but not terribly important to have. It's just the ++/-- , +++/---, and ++++/----- etc that look terrible.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Wed Sep 14, 2011 2:39 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I will always prefer +/- instead of any other nameless label because they don't clash with the actual label names when I'm browsing through all of them. Also, I never follow "+" with a ":" for this reason.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Wed Sep 14, 2011 2:51 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />In Asm6, local labels are useless since + and - labels kill them.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>3</strong> of <strong>5</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>