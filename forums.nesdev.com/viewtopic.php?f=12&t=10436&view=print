<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Building an On-Board MIDI Port for SNES Tracker</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Building an On-Board MIDI Port for SNES Tracker</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=12&amp;t=10436">http://forums.nesdev.com/viewtopic.php?f=12&amp;t=10436</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>bazz</b> [ Sat Aug 31, 2013 3:07 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Building an On-Board MIDI Port for SNES Tracker</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hi,<br /><br />I'm getting experienced with SNES, however there is another level to reach. Understanding how peripherals of different speeds interact together, furthermore having this knowledge to better choose the best equipment to get the job done.<br /><br />Time to get specific. I am designing a SNES Cartridge with an on-board MIDI port. This will be part of SNES Tracker package. Still, I have reached a new point, where there are many holes to fill. One thing is that I cannot do this without school in the way. That is OK. Time and relaxation  <img src="./images/smilies/icon_idea.gif" alt=":idea:" title="Idea" /> <br /><br />I really shouldn't stress it. I can feel things will come with time. <br /><br />Still, let me be open about my struggle to be open. I am looking forward to spreading my ideas, alongside the notion I would love to secretive about my work so I can explode to you gentleman when it is finished. However, I realize the amount of learning in uncharted waters is apparent for this next design. So, I suppose I am making public more than I intended.<br /><br />So, having said all that, how do you guys feel that I make money off of your knowledge? Surely I plan to sell this thing when I am finished! <br />Not much else to say here. I wouldn't mind learning everything on my own. I like talking to you guys here.<br /><br />Hm, moving forward, I have to admit how little I understand when it comes to <strong>Timing</strong>. Not musically, I got that. It's my little understanding of UART. See, to incorporate MIDI port onto the cartridge, a UART must be present to convert the serial data to parallel form. This is the first time I have ever attempted adding a new peripheral to anything. I am very excited. I know being calm is essential.<br /><br />Can't sleep. I am up at ~6AM writing this. OK, so getting back to the point of timing. I have somehow fumbled into the field of electrical engineering with all this SNES stuff. I am supposedly an electrical engineer now. However, we must make clear that this is all new to me. Without getting into my history with electronics, as long as you understand that I do not have a traditional background in the field, perhaps that can you help understand where I am coming from, allowing you to provide me with essential details.<br /><br />You see, what I understand is there the CPU (let's talk specifically the SNES CPU). I am not sure whether to get specific with my design considering the UART. I get into a lot of uncharted territory here. Considering I have not learned fully how to use a UART, besides using it in an AVR. Here, I am talking a dedicated UART, mapping it to SNES memory map. This sounds right so far, I am confident. New waters. Now, let's begin with the newer stuff which will encompass the timing aspect. <br /><br />I started researching UART tonight, and came onto the topic of the ones equipped with FIFO's, ones that aren't and FIFO sizes. Aside from basic experimentation and experience, how can I best gain the knowledge behind knowing what the best UART to place in my design? I imagine that knowing the relationship between the SNES CPU and the UART timing is essential. This brings to mind (without yet understanding the actual timing relationship), things like whether the UART will be IRQ'd, or polled. Still, I cannot yet imagine how a UART buffer and SNES CPU will behave with each other. How do I learn that the SNES can process bytes fast enough, process MIDI messages efficiently, without trying? Can I do that? At least have a clear idea.<br /><br />I was inspired tonight by this message from a professor: <div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">to be patient and to think long enough about a solution before you enter it into the computer so that 90% of the time you are right first time</div><br /><br />This is kind of mind I am gearing to have. So let's do this.<br /><br />I will be calm.<br /><br />To really hit the nail on the head, I cannot imagine the timing concept between how bytes will be arriving into the UART and into the SNES processing. I cannot see how the queue in FIFO might get created. I have already determined FIFO is the way to go, against a singular byte buffer. However, there are multiple different FIFO sizes, such as 16-64 bytes. I cannot determine a best size. I suppose one could say start large when you have no idea, as an experimenter this gives you lee way. I am coming here confident that an expert can give me further guidance than my own experimenter's intuition.<br /><br />I am really excited to map a new peripheral into the SNES memory map. I can only imagine the excitement of any SNES developer doing that, such as Neviksti or whomever mapped an SD/some type of stick memory to the SNES. That's exciting to me. It's lays ground I could only imagine in a time before. I am rising. The plane which my dreams previously lay, my reality is setting upon. I really shouldn't be satisfied, as I briefly take a pause to see how much I have really learned. I am higher than I think. The focus on my goals keeps me higher. OK<br /><br />So this where I am at. I know the answers will come. I'd like to take note that RTFM is great. Talking to friends is great. I'm a little tired, it is true. However, the point is that while RTFM is great, it is nice to reach out and interact once in awhile, especially for us so dedicated.<br /><br /><img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /> Smiles, spread smiles, they are good. The good ones. The great ones, even better.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>bazz</b> [ Sat Aug 31, 2013 12:37 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Building an On-Board MIDI Port for SNES Tracker</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I have tackled a preliminary idea, that I can use the SNES Master Clock to clock the UART.<br /><!-- m --><a class="postlink" href="http://www.cs.umb.edu/~bazz/snes/tracker/MIDI/clock.html">http://www.cs.umb.edu/~bazz/snes/tracke ... clock.html</a><!-- m -->

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>qwertymodo</b> [ Sat Aug 31, 2013 1:42 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Building an On-Board MIDI Port for SNES Tracker</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />One option would be to implement a USB MIDI device with a simple 8-bit microcontroller like the <a href="http://www.atmel.com/devices/atmega16u2.aspx" class="postlink">Atmega16U2</a>  For USB applications, you would require an external crystal oscillator as your clock source, since the internal oscillator isn't accurate enough for USB functionality.  This is a simple matter of connecting the crystal and 2 capacitors to the appropriate pins on the microcontroller.  The question then becomes how are you intending on sending and receiving MIDI commands between the SNES CPU and the cart?  Are you planning to memory-map the MIDI peripheral?  If so, you'll need to figure out the memory address decoding.  Will you be doing bi-directional data or just MIDI-&gt;SNES?  Will the peripheral be polled or interrupt driven?  I'm willing to help talk you through the details if you're interested in going that route.<br /><br />As for your question of profiting off of information found here, I can't speak for everybody, but I believe that the general attitude is that the information here is provided for people to use, and how you use it is up to you.  The important distinction is that you're actually creating something new and useful.  Pretty much the one thing people around here DON'T like people profiting from is repros, which is understandable, since it's something that's dead simple, doesn't contribute anything back to the community, and becomes an illegal profit source for people who turn around and sell them online for ridiculous prices considering that very little work went into them.  Again, I don't speak for everybody, but I highly doubt anybody is going to take issue with you selling what you're making, considering that what you're really selling is your newly created device, you're not just stealing somebody else's work and repackaging it for a profit.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>bazz</b> [ Sat Aug 31, 2013 2:18 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Building an On-Board MIDI Port for SNES Tracker</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />In reponse to Qwertymodo:<br /><br />I suppose this is 2 threads in one. Let's first talk about implementation:<br /><br /><div class="quotetitle">qwertymodo wrote:</div><div class="quotecontent">One option would be to implement a USB MIDI device with a simple 8-bit microcontroller like the <a href="http://www.atmel.com/devices/atmega16u2.aspx" class="postlink">Atmega16U2</a>  For USB applications, you would require an external crystal oscillator as your clock source, since the internal oscillator isn't accurate enough for USB functionality.  This is a simple matter of connecting the crystal and 2 capacitors to the appropriate pins on the microcontroller. </div><br />I want to use the 5-pin MIDI connector as that is the format of all my midi devices at home. <br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"> The question then becomes how are you intending on sending and receiving MIDI commands between the SNES CPU and the cart?  Are you planning to memory-map the MIDI peripheral? </div><br />yes, memory mapping. Although please fill me in on other alternative methods I am not aware of, especially with pros/cons.<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"> If so, you'll need to figure out the memory address decoding.  </div><br />I can do that, it will be fun. <br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Will you be doing bi-directional data or just MIDI-&gt;SNES?</div><br />Just MIDI-&gt;SNES. I intend to control the recording and playback of samples, pitch wheel modulation, other arbitrary effects with the MIDI device (midi keyboard ie.). Also, still learning about the concepts, there may be more things to realize in this area. I consider the possibility of big stage music performance with the SNES hooked into a musician's MIDI chain. That is for later.<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Will the peripheral be polled or interrupt driven?  I'm willing to help talk you through the details if you're interested in going that route.<br /></div><br />I know enough about both strategies to implement either. What I don't know is whether the IRQ (I assume I would decide to use cart /IRQ for this), would be a nuisance to CPU processing. I cannot imagine how much it would interfere with normal CPU executions (the rest of the app). I am sure this is dependent on FIFO buffer size which I am not conclusive on either. AKA this is apparently a big experimental zone. Any help?<br /><br /><br />Now for the '2nd thread' - My profiting off of information found here<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">The important distinction is that you're actually creating something new and useful.  Again, I don't speak for everybody, but I highly doubt anybody is going to take issue with you selling what you're making, considering that what you're really selling is your newly created device, you're not just stealing somebody else's work and repackaging it for a profit.</div><br /><br />Thank you for making this clear. I would love to hear other's input on this. What are the true legalities of learning from a forum and applying your new knowledge in new directions? I cannot imagine this being illegal. I am sure it is not. What I am more concerned about is your well-being, knowing that I come here with questions on designs, you give your help freely. I want you all to know I appreciate your time with me, however I cannot yet imagine how I will contribute back to the scene, whether it be NESDEV forum contribution or something likewise. As long as we are square with you knowing I am considering a community contribution, I would be more than happy to do that, as long as everybody's cool with me making my guidelines. I have never ever made money off a design, this is one of my first times making something unique! So it's a very exciting time for me. I want to give back to this community I have loved for years. I just want my freedom in choosing how, and hopefully nobody feels like they deserve something from me. I will not release a product with people feeling that way, which is why I said I am comfortable learning completely on my own to not create that possibility. I am reaching pretty far, who knows that I can relinquish this undesired possibility that someone will feel deserving of my profits. However, I feel differently. So I make this clear now before the time comes, in hopes of sowing good seeds of love.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>bazz</b> [ Sat Aug 31, 2013 2:37 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Building an On-Board MIDI Port for SNES Tracker</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The amount of ideas I am receiving on this project are so big that I may need to create a new destination outside of nesdev forums to concentrate the knowledge. I may do this.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sat Aug 31, 2013 4:25 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Building an On-Board MIDI Port for SNES Tracker</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />MIDI is 31250 baud, and Super NES system clock is 915/44 = 21.48 MHz. Your divider would need to be 915*1000000/(44*31250) = 915*8/11 = 665 master clocks per MIDI bit period.<br /><br />If your serial chip is sending an interrupt after each byte is received, that'll be up to 3125 interrupts per second. You may need a FIFO in order not to miss bytes while performing a big DMA to VRAM.<br /><br />And don't forget the optocoupler.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>bazz</b> [ Sat Aug 31, 2013 4:29 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Building an On-Board MIDI Port for SNES Tracker</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">MIDI is 31250 baud, and Super NES system clock is 915/44 = 21.48 MHz. Your divider would need to be 915*1000000/(44*31250) = 915*8/11 = 665 master clocks per MIDI bit period.<br /><br />If your serial chip is sending an interrupt after each byte is received, that'll be up to 3125 interrupts per second. You may need a FIFO in order not to miss bytes while performing a big DMA to VRAM.<br /><br />And don't forget the optocoupler.</div><br /><br />Tepples, remember when I mentioned my lack of knowledge in timing. It is about to shine. You are talking about Master clocks. This is what I need to learn.<br /><br />Furthermore, you used calculations to obtain #Master clocks per MIDI bit period. What did you mean by divider? Does any of this relate to what I calculated here: <!-- m --><a class="postlink" href="http://www.cs.umb.edu/~bazz/snes/tracker/MIDI/clock.html">http://www.cs.umb.edu/~bazz/snes/tracke ... clock.html</a><!-- m -->

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sat Aug 31, 2013 4:31 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Building an On-Board MIDI Port for SNES Tracker</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The bit period is one of the parameters that you feed to a UART. When sending data, it tells the UART how long to send each bit. When receiving data, it tells the UART how long to wait for the other device to send each bit.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>bazz</b> [ Sat Aug 31, 2013 4:46 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Building an On-Board MIDI Port for SNES Tracker</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">The bit period is one of the parameters that you feed to a UART. When sending data, it tells the UART how long to send each bit. When receiving data, it tells the UART how long to wait for the other device to send each bit.</div><br /><br />You didn't answer me in full. What is a divider? When you refer to divider, are talking about this divisor as I calculated in my previously posted (twice) website link? <br /><br />Are you referring to what I see as the RCLK pin on the UART? If so, I was intending to use the Calculated Divisor (as calculated on my page) setting which will get pushed out as the /BAUDOUT signal to clock RCLK.<br /><br />I am referencing this data sheet: <br /><!-- m --><a class="postlink" href="http://www.ti.com/lit/ds/snls378b/snls378b.pdf">http://www.ti.com/lit/ds/snls378b/snls378b.pdf</a><!-- m --><br /><br />I am still referencing, searching for a prototype UART. However this one feels a good first start.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>bazz</b> [ Sat Aug 31, 2013 4:52 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Building an On-Board MIDI Port for SNES Tracker</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hm another concern that is raised is that the MIDI protocol sends data logic as current. I need to figure out if UART processes using voltage levels or current levels.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>bazz</b> [ Sat Aug 31, 2013 4:56 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Building an On-Board MIDI Port for SNES Tracker</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Now I am believing the key about current and the voltage is in this hardware circuit that MIDI specification calls for. The opto-isolater. Learning is Great. I love it.<br /><br /><!-- m --><a class="postlink" href="http://en.wikipedia.org/wiki/MIDI_1.0#Hardware_transport_.28electrical_and_mechanical_connections.29">http://en.wikipedia.org/wiki/MIDI_1.0#H ... ections.29</a><!-- m -->

		
			<br clear="all" /><br />

			<table class="tablebg" width="100%" cellspacing="1">
			<tr>
				<td><b class="genmed">Attachments: </b></td>
			</tr>
			
				<tr>
					<td>
			<a href="./download/file.php?id=819&amp;mode=view"><img src="./download/file.php?id=819&amp;t=1" alt="Screen Shot 2013-08-31 at 7.51.15 PM.png" /></a><br />
			<span class="gensmall">Screen Shot 2013-08-31 at 7.51.15 PM.png [ 37.37 KiB | Viewed 525 times ]</span>
		

		<br />
	</td>
				</tr>
			
			</table>
		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>qwertymodo</b> [ Sat Aug 31, 2013 6:27 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Building an On-Board MIDI Port for SNES Tracker</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Even if you want to use the DIN-plug MIDI interface, a microcontroller might still be a good idea, because it can act as an additional buffer, and you could always add the USB MIDI interface as well, because why not?  Also, the microcontroller could help with the address decoding, because it'll probably have a few extra I/O pins free that you could use for that purpose.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>