<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Controller Input Subroutines: How many?</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Controller Input Subroutines: How many?</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=4733">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=4733</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>3</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>MetalSlime</b> [ Mon Jan 12, 2009 6:36 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Controller Input Subroutines: How many?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hello, I'm still in the design phase of my little one-screen game and I'm making a list of all subroutines I will have to write.  I have a simple question about how to handle Controller Input.
<br />
<br />First a little info.  My game has a few different gamestates (TitleScreen, Movie, Gameplay, Paused, GameOver).  Some gamestates have very few Controller Input possibilities (Paused gamestate only has one: START to unpause).  Other gamestates have many Controller Input possibilities (Gameplay).
<br />
<br />I will have one ReadController subroutine that will be called outside of gamestates and store button status in RAM.  Then within the gamestates I will want to handle that input, so...
<br />
<br />My question is:
<br />
<br />Should I have just one HandleInput subroutine that will handle all possible gamestate (i.e. all gamestates will call the same subroutine)?  or have a separate subroutine for each gamestate (HandleInputTitleScreen, HandleInputMovie, HandInputGameplay, etc)?
<br />
<br />or both?  or neither?
<br />
<br />What's the best way to organize this?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Mon Jan 12, 2009 6:48 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I would definitely have different segments of code to handle button presses for different things. But you should have a segment of code that reads button presses, and puts all the button press information into a single byte (1 bit per button), then read from this value in each section. Oh, and also have a "ButtonPressOld" byte which holds the values of the buttons pressed last frame.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Jan 12, 2009 7:08 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />But you don't need more than one subroutine to interact directly with the input registers and update global variables containing the current and previous states of the buttons. You just call this subroutine from different parts of the game loop.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>UncleSporky</b> [ Mon Jan 12, 2009 7:36 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If I had the time I would do it both ways and weigh the resulting data/cycle cost.
<br />
<br />I don't see it being that difficult to go
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">if &#40;start is pressed&#41;<br />&nbsp; &nbsp; &nbsp;if &#40;gamestatus = titlescreen&#41;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; start game<br />&nbsp; &nbsp; &nbsp;else if &#40;gamestatus = paused&#41;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; unpause game<br />&nbsp; &nbsp; &nbsp;else<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; pause game<br />&nbsp; &nbsp; &nbsp;endif<br />endif</div>
<br />
<br />But it takes a few more cycles and I also don't see it being that difficult to call different routines.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Mon Jan 12, 2009 10:08 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Here's a good method. Store the address of the controller routine at say $40/$41 in ZP. Then when you want to go to the controller routine, do JMP ($40). So if you want to point to a different controller routine, change $40/$41 to the address of the desired routine.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>MetalSlime</b> [ Mon Jan 12, 2009 11:23 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thanks for the replies guys!  I have a lot of good ideas to think about.  But I think I didn't communicate my question as clearly as I wanted to, because the answers didn't hit the point that was bothering me.  I hope it will be a little clearer what I'm asking with this reply.  
<br />
<br /><div class="quotetitle">UncleSporky wrote:</div><div class="quotecontent">I don't see it being that difficult to go<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">if &#40;start is pressed&#41;<br />&nbsp; &nbsp; &nbsp;if &#40;gamestatus = titlescreen&#41;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; start game<br />&nbsp; &nbsp; &nbsp;else if &#40;gamestatus = paused&#41;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; unpause game<br />&nbsp; &nbsp; &nbsp;else<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; pause game<br />&nbsp; &nbsp; &nbsp;endif<br />endif</div><br /><br />But it takes a few more cycles and I also don't see it being that difficult to call different routines.</div><br /><br />In the case of one master subroutine, I was originally thinking of nesting it like this:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">if &#40;gamestate=titlescreen&#41;<br />&nbsp; &nbsp;if &#40;start is pressed&#41;<br />&nbsp; &nbsp; &nbsp; &nbsp;start game<br />&nbsp; &nbsp;if &#40;down is pressed&#41;<br />&nbsp; &nbsp; &nbsp; &nbsp;move menu cursor down<br />&nbsp; &nbsp; &nbsp;....<br />if &#40;gamestate=movie&#41;<br />&nbsp; &nbsp;if &#40;start is pressed&#41;<br />&nbsp; &nbsp; &nbsp; &nbsp;skip movie<br />&nbsp; &nbsp;...<br />etc</div><br /><br />because button priorities might differ by gamestate and because I want each gamestate to be as separate from the other ones as possible.<br /><br />The idea behind having one master subroutine would be for readability/organization.  It's easier for me if all gamestates are interfacing the Controller Input stuff through the same subroutine:  <br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">check gamestate, jump to correct label<br />TitleScreen:<br />&nbsp; &nbsp; Do some stuff<br />&nbsp; &nbsp; JSR HandleInput<br />&nbsp; &nbsp; JMP GamestateStuffDone<br />Movie:<br />&nbsp; &nbsp; prepare next frame for drawing<br />&nbsp; &nbsp; JSR HandleInput<br />&nbsp; &nbsp; JMP GamestateStuffDone<br />Gameplay:<br />&nbsp; &nbsp; Check game timer to see if you're dead<br />&nbsp; &nbsp; JSR HandleInput<br />&nbsp; &nbsp; UpdateScore<br />&nbsp; &nbsp; ....<br />&nbsp; &nbsp; ....<br />&nbsp; &nbsp; If it's been 60 frames, decrement GameTimer<br />&nbsp; &nbsp; JMP GamestateStuffDone<br />...<br />etc.</div><br /><br />But it comes at the cost of checking the gamestate twice (once to get to the gamestate's main codeblock, which is where the HandleInput call will be, and then once again within HandleInput to take the correct branch).<br /><br />Having separate subroutines for each gamestate (HandleInputTitleScreen, HandleInputPause, etc) would avoid the double check at the cost of losing a common interface/readability.<br /><br />Hope I'm explaining my dilemma alright.  It's hard to talk about this stuff in words!   Basically I want to have the master subroutine, but I'm worried that it's wasteful with such limited resources.<br /><br /><div class="quotetitle">Celius wrote:</div><div class="quotecontent">Here's a good method. Store the address of the controller routine at say $40/$41 in ZP. Then when you want to go to the controller routine, do JMP ($40). So if you want to point to a different controller routine, change $40/$41 to the address of the desired routine.</div><br /><br />so within each gamestate, somewhere I'd have:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">set pointer in $40/$41<br />jmp &#40;$40&#41;</div>
<br />
<br />i.e. different code in each gamestate's main codeblock?
<br />
<br />or would I have a master subroutine (HandleInput, see above) that sets the correct pointers and performs the jump?
<br />
<br />i.e. each gamestate's main codeblock will have the same call to HandleInput?
<br />
<br />Again, thanks for your comments so far!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Tue Jan 13, 2009 12:20 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Anywhere where you make a decision to change game modes, you set the pointer to $40/$41. Probably not right before you jump to it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>MetalSlime</b> [ Tue Jan 13, 2009 1:50 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Celius wrote:</div><div class="quotecontent">Anywhere where you make a decision to change game modes, you set the pointer to $40/$41. Probably not right before you jump to it.</div>
<br />
<br />Good idea.  So everytime you change a gamestate, you'd set a series of pointers for every set of gamestate-specific routines.  Makes a lot of sense.  How many different pointers do you usually use for this kind of thing, and for what kinds of functionality (other than controller input handling)?
<br />
<br />And a newbie question.  If I jump to my Controller Input Routines via a pointer in ZP, how do I get back?  Since I'm not using JSR, I can't return with RTS, right?  Once I'm done handling the input, how would I get back to where I started?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Tue Jan 13, 2009 2:31 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If you know where you're jumping from, all you have to do is something like:
<br />
<br />jmp ($40)
<br />Label:
<br />...
<br />
<br />;Address jumped to with jmp($40)
<br />;blah code
<br />jmp Label
<br />
<br />So you don't really do a variable "Return", but just a direct jump back to a label ahead of "jmp ($40)". If you don't know where you're jumping from, that's a long story. You'd want to do something like "jmp ($42)" where you return in the end of the routine gone to with jmp ($40). $42/$43 hold the address of where you want to return. Actually, all you'd have to do then is something like this:
<br />
<br />lda #High(Label)
<br />sta $43
<br />lda #Low(Label)
<br />sta $42
<br />jmp ($40)
<br />Label:
<br />...
<br />
<br />;Code gone to with jmp ($40)
<br />;Blah code
<br />jmp ($42)
<br />
<br />This is okay to do, however you could eat up a lot of bytes having this sort of set up for lots of different routines.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Tue Jan 13, 2009 3:33 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Sorry I didn't read the whole thread (yet), but reading 8 bits of the controller, and storing the result in a byte is really the standard way to do it. I've always do that since my very first demo and all commercial games seems to do that. Then you can take the older controller status eor-ed with #$ff and anded with that byte to detect all '0' to '1' transitions (which means the button has just been pressed), which is often as usefull as just detecting a '1' (wich means the button is hold down).
<br />
<br />Do do the unpause thing you'd want to do something like that
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">_pause<br />jsr WaitVBl<br />jsr ReadController<br />lda JoyLocked<br />and #$10<br />bne _pause<br /><br />ReadController<br />&nbsp; &nbsp;lda JoyData<br />&nbsp; &nbsp;eor #$ff$<br />&nbsp; &nbsp;pha<br />&nbsp; &nbsp;jsr ReadJoypad1&nbsp; &nbsp; ;This overwrite JoyData with new value<br />&nbsp; &nbsp;pla<br />&nbsp; &nbsp;and JoyData<br />&nbsp; &nbsp;sta JoyLocked<br />&nbsp; &nbsp;rts<br /></div>
<br />Where "JoyLocked" is the variable that detects '0' to '1' transitions (you don't want to use JoyData, which is when the button is pressed, I just made those names up and use them in all my programms, but you can use your owns).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>UncleSporky</b> [ Tue Jan 13, 2009 3:45 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />For organizing something like this, I've thought about a lookup table system.  For example:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">VideoRoutine:<br />.dw TitleVideo, GameVideo, StatusVideo<br /><br />ControlRoutine:<br />.dw TitleControl, GameControl, StatusControl</div>
<br />
<br />Where GameStatus $01 is the title screen, $02 is the main game etc.  You read VideoRoutine modified by (GameStatus * 2) to get to the starting bit.  You could use this to organize a lot of other things too such as level music.
<br />
<br />What do you more experienced people think of this?  Is it wasteful?  I like it on the surface but I'm not experienced yet in optimization.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Tue Jan 13, 2009 4:18 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Oh, I used to use this "gamestate" technique when I started out. The main loop would be nothing but an instruction that jumps over itself, and the NMI would do a few common things (like sprite DMA) before jumping to a different adress in function of game state. However, this was extremely limited and tedious as your code will always jump to the same adress no matter what, so you neeed a lot of variables and check them to know where to jump, and not only it is tedious, but wastes CPU ressources. I even got a system that get rid of those limitations for the AI of my enemies.
<br />
<br />However, Nintendo used that system for some of their earlier games, and Konami seems to use it all the time, so if you know what you do and if that works for you I'd say go for it.
<br />
<br />After a quick automated seach in my source files, there is 26 times I call a "WaitVbl" routine. Doing an equivalent programm with the game state mode would correspond to 26 game states and you'd jump to one of those 26 places depending on it, which should be some trouble to handle.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>MetalSlime</b> [ Tue Jan 13, 2009 5:50 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Celius wrote:</div><div class="quotecontent">If you know where you're jumping from, all you have to do is something like:<br /><br />jmp ($40)<br />Label:<br />...<br /><br />;Address jumped to with jmp($40)<br />;blah code<br />jmp Label<br /><br />.....(cut)......<br /><br />This is okay to do, however you could eat up a lot of bytes having this sort of set up for lots of different routines.</div><br /><br />I thought of another question.  Is there an advantage to using this pointer system over just JSRing to subroutines?  It looks like it would be harder to keep track of my code with all of this manual jumping.  Why not just JSR to a HandleInputTitleScreen subroutine (if I were in the TitleScreen gamestate, for example) instead?<br /><br /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">Then you can take the older controller status eor-ed with #$ff and anded with that byte to detect all '0' to '1' transitions (which means the button has just been pressed), which is often as usefull as just detecting a '1' (wich means the button is hold down). </div><br /><br />You're awesome!  Figuring out a way to detect 0 to 1 transitions was next on my list of things to figure out.  It will be quite necessary for my game to know this.  Thank you!  <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br /><div class="quotetitle">UncleSporky wrote:</div><div class="quotecontent">For organizing something like this, I've thought about a lookup table system.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">VideoRoutine:<br />.dw TitleVideo, GameVideo, StatusVideo<br /><br />ControlRoutine:<br />.dw TitleControl, GameControl, StatusControl</div></div><br /><br />To clarify, would these data words hold the addresses where the routines are located, i.e. the addresses you want to jump to?<br /><br /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">Oh, I used to use this "gamestate" technique when I started out.<br /><br />....(cut)....<br /><br />However, Nintendo used that system for some of their earlier games, and Konami seems to use it all the time, so if you know what you do and if that works for you I'd say go for it. </div>
<br />
<br />Well, I am just starting out <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />.  This gamestate way seems like a good way to start, since I at least understand it.  When I get more experience under my belt I can look at other ways to organize program flow.  I think I can cover some of the losses by checking for the most common gamestates first (gameplay, pause) so that most of the time there will only be one check needed.  
<br />
<br />And I don't have anywhere near 26 gamestates.  I have 6.  <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />  And one of them (EndingMovie/Credits) accepts no input and won't be reached very often, so really it's more like I have 5.  But I see your point.  With a more complex game, it would be extremely tedious jumping between 26 different gamestates!
<br />
<br />Thanks for all the help guys.  I'm really learning a lot (more than I expected!)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>UncleSporky</b> [ Tue Jan 13, 2009 6:39 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">MetalSlime wrote:</div><div class="quotecontent"><div class="quotetitle">UncleSporky wrote:</div><div class="quotecontent">For organizing something like this, I've thought about a lookup table system.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">VideoRoutine:<br />.dw TitleVideo, GameVideo, StatusVideo<br /><br />ControlRoutine:<br />.dw TitleControl, GameControl, StatusControl</div></div><br /><br />To clarify, would these data words hold the addresses where the routines are located, i.e. the addresses you want to jump to?</div><br />Yes, those are just labels that get processed as addresses by the assembler.  You use them as normal before the routines:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">TitleVideo:<br />&nbsp; &nbsp; &nbsp;blah blah<br />&nbsp; &nbsp; &nbsp;rts<br /><br />GameControl:<br />&nbsp; &nbsp; &nbsp;blah blah<br />&nbsp; &nbsp; &nbsp;rts</div>
<br />
<br />Again, I don't know if that's a good way to do it but it feels nicely organized.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Tue Jan 13, 2009 7:26 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">And I don't have anywhere near 26 gamestates. I have 6. Smile And one of them (EndingMovie/Credits) accepts no input and won't be reached very often, so really it's more like I have 5. But I see your point. With a more complex game, it would be extremely tedious jumping between 26 different gamestates!<br /></div>
<br />My game is not really complex either. I just have a title screen, a stage introduction screen and gameplay. I haven't coded any end movie or credits yet. It's just that I don't use gamestates, but I do a "jsr WaitVbl" whenever I have a frame completed, and it returns to the next of the programm. This is not really hard to understand even for newbies.
<br />It's just that when you want for example to draw a window texbox on screen, you so something like draw rows 1&amp;2, wait a VBlank, draw rows 3&amp;4, wait a VBlank, etc... in a loop.
<br />If you don't have a wait VBlank method, but a game state method I have no idea how you're supposed to do that. You should probably have one "sub game state" by possible row, which sounds terribly tedious.
<br />
<br />Even more complex Konami games like Castlevania III, Lagrange Point, Bucky o'Hare, and so on are all coded that way. I really have no idea how Konami programmers were able to do it that way, but maybe it's just not as a headache as I can remember, if you use a lot of indirect jumps cleverly.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>3</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>