<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - A restructuring of the controller inputs...</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">A restructuring of the controller inputs...</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=4560">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=4560</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Sivak</b> [ Tue Nov 11, 2008 11:33 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>A restructuring of the controller inputs...</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />This is something I've been thinking about, but I wanted to ask first.
<br />
<br />Basically, my game's got the controller to work and move you around and all that good stuff.  Though I've been wondering about doing things such as conveyor belts or fans that can move you without you requesting to move and I'm concerned the way I'm doing things now is not going to be compatible if I decided to implement these things.
<br />
<br />So my question would be:  Is there a proper way to be checking all the inputs?  Right now I'm doing something like this:
<br />
<br />-Set a flag for what direction you moved to 0 (1 is left, 2 is right), set flags for if you moved horizontally/vertically to false
<br />-Checks if you pressed left/right to move (can be applied to ground movement or falling/jumping)
<br />-If you requested to move and it's possible, move.  Sets the horiz. move flag to true and the direction flag to the requested direction.
<br />-Checks if you requested to jump and if possible, move up.  Sets the vert. move flag to true
<br />-While jumping, it checks each pixel if you hit something on your way up and changes the jumping flag to false if you did and immediately exits the jumping routine.  Also, the check for directional input gets called again for each pixel you move up so the player can "squeeze" into narrow spaces.  If I didn't do this check, you'd have to be pixel perfect to get in between such spaces.  This particular check ALSO checks if the horiz. move flag is true because if it didn't, you'd be able to move twice in certain frames and get a much faster speed.
<br />-Checks if you are falling.  If the flag for jumping is true, this is skipped entirely.  If not and falling is possible, do it.  Sets that vert. flag.
<br />-The same directional input check and checks per pixel for jumping also occur for falling.
<br />
<br />-Basically after this, it's just checks for shooting, animation, and death.
<br />
<br />My methodology does work currently, but I think there are possibly better ways I could be doing it that I may not be seeing.  If anyone's got any ideas, I'd love to hear 'em.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Nov 13, 2008 7:14 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Balloon Fight has 64 bits for each fighter:
<br /><ul><li>Position, X component, 1/256 pixels </li><li>Position, X component, whole pixels </li><li>Position, Y component, 1/256 pixels </li><li>Position, Y component, whole pixels </li><li>Velocity, X component, 1/256 pixels </li><li>Velocity, X component, whole pixels </li><li>Velocity, Y component, 1/256 pixels </li><li>Velocity, Y component, whole pixels </li></ul>
<br />I haven't traced the Super Mario Bros. games, but I'd be surprised if they didn't do something similar for at least the player character.
<br />
<br />To move the character each frame, you calculate the net accelerations on the player, add that to the velocity, and add the velocity into the displacement.
<br />
<br />Think of how running works in real life: person exerts force on the floor, and the floor exerts force back on the person. So when it is determined that an actor is on a floor-type object, and the player is pressing sideways, calculate the difference between the velocity of the floor and the velocity of the actor, and use that for figuring out how much force the actor can exert.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Thu Nov 13, 2008 10:22 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: A restructuring of the controller inputs...</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Your problem is that you have the input tied directly to the movement, while it would be better to have the input modify velocity variables, and the velocity variables are used to update the player's position every frame. That way you could have other things besides input modifying those variables, so that the final result is a combination of all forces.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Thu Nov 13, 2008 10:38 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Your problem is that you have the input tied directly to the movement</div>
<br />I do that for my game right now and it works quite well, because the player contols the first derivate of player's position (velocity) and not the second derivate (acceleration) as he does in SMB for example.
<br />
<br />But yeah I'd get in trouble if I want the player to move by its own in demoplay for example. I guess I'd have a programm that create a false joypad input and call the normal player moving routine (I do that when the player finishes the level).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Thu Nov 13, 2008 11:03 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">I guess I'd have a programm that create a false joypad input and call the normal player moving routine (I do that when the player finishes the level).</div>
<br />But then what happens when the engine pushes the player in a direction and the joypad in the other? This is not really problem for conveyor belts and fans, because you actually want to merge both forces, but with scripted motion I guess you'd want to disable input from the controller.
<br />
<br />Of course there are ways to achieve this, you could for example skip the joypad reading altogether and supply the engine with fake button presses, like in a demo video.
<br />
<br />I, at least, feel that directly manipulating the positions of characters is a poor alternative to even the simplest of the physics engines.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>