<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=9&amp;t=2862" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2009-05-15T10:21:56-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=9&amp;t=2862</id>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2007-01-15T14:54:29-07:00</updated>
<published>2007-01-15T14:54:29-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2862&amp;p=21259#p21259</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2862&amp;p=21259#p21259"/>
<title type="html"><![CDATA[Why PPU A0-A3 are connected on the MMC2 ?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2862&amp;p=21259#p21259"><![CDATA[
<div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br />(what is the point to get one screen mirroring if you cannot switch between screens ?).<br /></div><br />In a mapper where the only choices are map A, horizontal mirroring, and vertical mirroring, one can use map A for the scrolling screen and map B (which does not scroll) for a status bar.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Mon Jan 15, 2007 2:54 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2007-01-15T12:54:51-07:00</updated>
<published>2007-01-15T12:54:51-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2862&amp;p=21253#p21253</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2862&amp;p=21253#p21253"/>
<title type="html"><![CDATA[Why PPU A0-A3 are connected on the MMC2 ?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2862&amp;p=21253#p21253"><![CDATA[
Hey, that is a fun thing to know. This could have been an idea to reduce pin count, but A13 and A14 are needed for bankswitching purposes anyway. Most likely Nintendo changed their design between the patent making and the final version of the chip getting manufactured.<br /><br />But that would actually only change the interface, not the output logic in itself, unless this was wrong too.<br />Mattew J. Richard's MMC1 doccument, *supposed* to be the most accurate arround, has quite some annoyances. First he states that if one screen mirroring is used, bit 0 of reg 0 is wrong, while this isn't the case, it actually select wich screen is used (what is the point to get one screen mirroring if you cannot switch between screens ?).<br />Also, he explains the 32k bankswitching as being different banks number and a value shifted to the right, instead of being just the same bank numbers with bit 0 unused.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Mon Jan 15, 2007 12:54 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Quietust]]></name></author>
<updated>2007-01-15T10:46:47-07:00</updated>
<published>2007-01-15T10:46:47-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2862&amp;p=21244#p21244</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2862&amp;p=21244#p21244"/>
<title type="html"><![CDATA[Why PPU A0-A3 are connected on the MMC2 ?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2862&amp;p=21244#p21244"><![CDATA[
The MMC1 patent described a mapper which took 7 writes in a row, such that 5 bits were data and 2 bits were address (i.e. register select). The real MMC1 takes 5 writes in a row, using A14 and A13 to select the register to update.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7">Quietust</a> — Mon Jan 15, 2007 10:46 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[kyuusaku]]></name></author>
<updated>2007-01-15T09:52:36-07:00</updated>
<published>2007-01-15T09:52:36-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2862&amp;p=21239#p21239</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2862&amp;p=21239#p21239"/>
<title type="html"><![CDATA[Why PPU A0-A3 are connected on the MMC2 ?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2862&amp;p=21239#p21239"><![CDATA[
I don't remember; I think it may have had a bogus register and bad output logic.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=20">kyuusaku</a> — Mon Jan 15, 2007 9:52 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2007-01-15T09:41:32-07:00</updated>
<published>2007-01-15T09:41:32-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2862&amp;p=21238#p21238</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2862&amp;p=21238#p21238"/>
<title type="html"><![CDATA[Why PPU A0-A3 are connected on the MMC2 ?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2862&amp;p=21238#p21238"><![CDATA[
I really doubt it'll be exact either.<br /><br />What was the MMC1 issue ?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Mon Jan 15, 2007 9:41 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[kyuusaku]]></name></author>
<updated>2007-01-15T09:38:18-07:00</updated>
<published>2007-01-15T09:38:18-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2862&amp;p=21237#p21237</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2862&amp;p=21237#p21237"/>
<title type="html"><![CDATA[Why PPU A0-A3 are connected on the MMC2 ?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2862&amp;p=21237#p21237"><![CDATA[
I wouldn't count on the patent being exact, the MMC1 patent was only similar to the actual logic. You should check out the Funkyflash implementation of PEROM if you want a working schematic.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=20">kyuusaku</a> — Mon Jan 15, 2007 9:38 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2007-01-15T09:20:12-07:00</updated>
<published>2007-01-15T09:20:12-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2862&amp;p=21236#p21236</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2862&amp;p=21236#p21236"/>
<title type="html"><![CDATA[Why PPU A0-A3 are connected on the MMC2 ?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2862&amp;p=21236#p21236"><![CDATA[
Wow !!<br />It's so much a shame it's all in japanese !<br /><br />The system seems to rely on a pulse on the read line to activate the latches.<br />A shematic on page 14 seems to proof that A0-A2 are used for fully decoding the adress only if A13 is low too. Also, this shematic show two flip flops in series, meaning that the actual latch will be actived after the second read, regardless if the second read is still in the $xfd0-$xfef section.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Mon Jan 15, 2007 9:20 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Quietust]]></name></author>
<updated>2009-05-15T10:21:56-07:00</updated>
<published>2007-01-14T17:58:59-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2862&amp;p=21214#p21214</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2862&amp;p=21214#p21214"/>
<title type="html"><![CDATA[Why PPU A0-A3 are connected on the MMC2 ?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2862&amp;p=21214#p21214"><![CDATA[
I've managed to dig up the MMC2 patent, and I've posted the last 2 pages (with the diagrams):<br /><br /><!-- m --><a class="postlink" href="http://www.qmtpro.com/~nes/docs/mmc2pat1.png">http://www.qmtpro.com/~nes/docs/mmc2pat1.png</a><!-- m --><br /><!-- m --><a class="postlink" href="http://www.qmtpro.com/~nes/docs/mmc2pat2.png">http://www.qmtpro.com/~nes/docs/mmc2pat2.png</a><!-- m --><br /><br />If you want the entire patent document, you can get it <a href="http://www.qmtpro.com/~nes/docs/mmc2pat.zip" class="postlink">here</a>, though be warned that it'll take a while to download (it's about 800KB and the server isn't exactly on a fast connection).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7">Quietust</a> — Sun Jan 14, 2007 5:58 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2007-01-13T15:08:12-07:00</updated>
<published>2007-01-13T15:08:12-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2862&amp;p=21190#p21190</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2862&amp;p=21190#p21190"/>
<title type="html"><![CDATA[Why PPU A0-A3 are connected on the MMC2 ?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2862&amp;p=21190#p21190"><![CDATA[
Actually what I said wasn't exact.<br />Punch-Out uses the MMC2 BG switching at title screen and all between-stage screen. MMC2 switching is almost not used on battle screen (only to switch screens between the actual fight area and the status bar/border of fight area and to show 'GET UP' when you get knocked out), and that is rather crazy since a sprite zero hit is used to change the horizontal BG scrolling, so why not use it to change the CHR bank as well ? Also, the game seems to rely on dummy name table/pattern table fetches to switch banks here. However, I'm pretty they could arrange tiles differently and use midframe bankswitching to bypass this.<br /><br />MMC2 sprite switching is used before the fight, where the sprite banks alternate betwen the opponant's and the entrainer's (the hero is in BG), and since both does not overlapp only one sprite of each, $fd and $fe, is used at strategical position on the screen. Both sprites are totally transparent, and are in priority 0 and 1, so I think they could use sprite 0 for hit instead and switch sprite bank midframe using this.<br /><br />The real mystery is that someimes sprites $fd and $fe are used on the opponant sprites on battle screen. At least Piston Honda has some $fe sprites on his animation frames.<br /><br />My conculsion is that sprites can be used for bankswitching as well, but only their first row is taken care. Since sprite pattern fetching appear on the good order, on a gived scanline the priority of the sprites is more important that their position. So for several sprites sharing the same vertical position, it's possible to have one $fd sprites, up to 3 sprites from a bank, a $fe sprite and up to 3 sprites from another bank, and having them in any horizontal position will work. However, the latch will remain $fe for the 7 following scanline wich is plain STUPID ! This ruins all the advantage this technique could do.<br /><br />Overall, Puch-Out does mainly waste MMC2's capacibilities, but it still use plenty of them everywhere (due to how it was designed), so it'd be quite hard to port the game to another mapper without rewriting the game core (arranging screens differently, etc...), but the game could get very similar graphics. Also, it's still worth noting the game was developped before the MMC3 was created, so it'd still have to rely on quite some raster effect to work with MMC1 (without talking about how PRG banks are organised).<br /><br />Also, why M2 is connected to the chip is still a mystery, unless the chip decodes $2000 writes.<br /><br />EDIT : Also, an interesting thing is that the MMC4 (so most probably the MMC2 too) does the switching AFTER the fetch. Punch-out and FC wars doesn't rely on this, but at least Fire Emblem relies on this on the right of textboxes. Some emulators (I don't remember wich ones) emulated the switching to take place just when the fetch is detected, making screwed up graphics in Fire Emblem. After all dvdmth was probably right on his first post, the lower adress lines are here to detect both pattern table fetches, then trigger the latch switching immediately after the second. And also I seriously doubt the complete adress is decoded for sprite and not for BG. Also I wonder how well $2007 reads have effect. None of those commercial games seems to read $2007 to set the latch in a known states, so no clue here.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Sat Jan 13, 2007 3:08 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2007-01-12T15:32:05-07:00</updated>
<published>2007-01-12T15:32:05-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2862&amp;p=21140#p21140</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2862&amp;p=21140#p21140"/>
<title type="html"><![CDATA[Why PPU A0-A3 are connected on the MMC2 ?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2862&amp;p=21140#p21140"><![CDATA[
If (as I understand it from this topic) <em>Punch-Out!!</em> severely underuses the MMC2, then how hard would it be to mapper-hack <em>Punch-Out!!</em> to, say, MMC3?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Fri Jan 12, 2007 3:32 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2007-01-12T10:02:41-07:00</updated>
<published>2007-01-12T10:02:41-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2862&amp;p=21123#p21123</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2862&amp;p=21123#p21123"/>
<title type="html"><![CDATA[Why PPU A0-A3 are connected on the MMC2 ?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2862&amp;p=21123#p21123"><![CDATA[
Yeah, but if the mapper decodes only the first line of the tile, the only usage of this is standard midframe CHR switching, allowing the only advantage of avoiding boring timed code and sprite-zero hits. Also the sprite would be easier to hide, since it can be in a hidden area or just be blank, and the PPU will still fetch it resulting in a bankswitch (as opposed with sprite-zero hit where the sprite mustn't be blank).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Fri Jan 12, 2007 10:02 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[dvdmth]]></name></author>
<updated>2007-01-11T14:05:29-07:00</updated>
<published>2007-01-11T14:05:29-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2862&amp;p=21098#p21098</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2862&amp;p=21098#p21098"/>
<title type="html"><![CDATA[Why PPU A0-A3 are connected on the MMC2 ?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2862&amp;p=21098#p21098"><![CDATA[
The only way I know of that this mapper can effectively be used for sprites is if each on-screen sprite had two consecutive entries in OAM, the first using tile $FD or $FE and the second using the tile # for the sprite.  This would ultimately result in only 4 sprites per line, although this can be improved if multiple sprites have the same Y coordinate and use the same CHR bank (those sprites would need to appear consecutively and have a single $FD/FE sprite preceding them).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=360">dvdmth</a> — Thu Jan 11, 2007 2:05 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2007-01-11T10:41:57-07:00</updated>
<published>2007-01-11T10:41:57-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2862&amp;p=21087#p21087</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2862&amp;p=21087#p21087"/>
<title type="html"><![CDATA[Why PPU A0-A3 are connected on the MMC2 ?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2862&amp;p=21087#p21087"><![CDATA[
Okay, this still bothers me a bit. I think I fully understand how nametable latches works. When a tile is encountered horizontally, it just change the VROM bank used for BG, and this has proved to be very usefull to have up to 512 tiles at one time on a single BG screen, especially for letters in textboxes. (Punchout does just do one change midframe, that could be done on any maper. However, it does this thing to show the opponant's graphics before the fight, and the MMC4 games uses this a lot).<br /><br />But for sprites, I really don't see much usage of this, and the games I checked seems to no use sprite latch switching in an evident way as they do for BG.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Thu Jan 11, 2007 10:41 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Quietust]]></name></author>
<updated>2007-01-10T16:07:31-07:00</updated>
<published>2007-01-10T16:07:31-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2862&amp;p=21075#p21075</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2862&amp;p=21075#p21075"/>
<title type="html"><![CDATA[Why PPU A0-A3 are connected on the MMC2 ?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2862&amp;p=21075#p21075"><![CDATA[
<div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br />Or does the chip just decode one line for tiles from a pattern table, and all lines for the other pattern table, assuming the game will put this to good use (like the MMC3 with its scanline counter) ?<br /></div><br /><br />Presumably, this is how it works. Since both pattern tables have the same bank size, this doesn't present any real difficulty on the code side (with the MMC3, they added the extra bit to specify which one got two 2KBs and which one got four 1KBs).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7">Quietust</a> — Wed Jan 10, 2007 4:07 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[kyuusaku]]></name></author>
<updated>2007-01-10T14:27:41-07:00</updated>
<published>2007-01-10T14:27:41-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2862&amp;p=21073#p21073</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2862&amp;p=21073#p21073"/>
<title type="html"><![CDATA[Why PPU A0-A3 are connected on the MMC2 ?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2862&amp;p=21073#p21073"><![CDATA[
MMC2 doesn't "keep track" of anything in the sense of MMC5, it simply decodes two tile accesses, each decoding will select their corresponding register be to output. MMC4 works in the same fashion.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=20">kyuusaku</a> — Wed Jan 10, 2007 2:27 pm</p><hr />
]]></content>
</entry>
</feed>