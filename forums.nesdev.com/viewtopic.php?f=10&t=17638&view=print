<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Uncompressing background, updating individual BG tiles.</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Uncompressing background, updating individual BG tiles.</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=17638">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=17638</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Eisetley</b> [ Tue Aug 07, 2018 1:15 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Uncompressing background, updating individual BG tiles.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'm working on a simple, non-scrolling, NROM game that will have just a few screens and I'm trying to figure out a decent way to load a background. I RLE'd the title screen using just notepad and now I'm trying to load it, but the whole screen is blue.<br />Screen data (left value is tile number, right is the amount): <br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">titlescrn:<br />&nbsp; &nbsp;.db $24,$8c<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $c3,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $c4,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $c5,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $c6,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $c7,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $c8,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $c9,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $ca,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $cb,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $24,$17<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $d3,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $d4,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $d5,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $d6,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $d7,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $d8,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $d9,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $da,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $db,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $24,$14<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $e0,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $e1,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $e2,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $e3,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $e4,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $e5,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $e6,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $e7,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $e8,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $e9,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $ea,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $eb,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $ec,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $ed,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $ee,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $ef,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $24,$10<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $f0,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $f1,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $f2,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $f3,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $f4,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $f5,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $f6,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $f7,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $f8,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $f9,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $fa,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $fb,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $fc,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $fd,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $fe,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $ff,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $24,$d2<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $01,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $19,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $15,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $0a,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $22,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $0e,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $1b,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $24,$19<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $02,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $19,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $15,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $0a,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $22,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $0e,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $1b,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $1c,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $24,$FF<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $24,$4E<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $0a,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $15,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $19,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $11,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $0a,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $24,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $18,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $18,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $24,$47<br />&nbsp; &nbsp; &nbsp; &nbsp; ;;;attr<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $00,$0A<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $50,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $55,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $55,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $51,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $10,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $00,$0B<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $40,$01<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $50,$02<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $00,$23<br />&nbsp; &nbsp; &nbsp; &nbsp; .db $25 ;$25 = end of room<br /></div><br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">backgrounds_lo: .dl titlescrn<br />backgrounds_hi: .dh titlescrn</div><br /><br />Loading code:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">LoadBackground:<br />;Turn off NMI and rendering<br />&nbsp; &nbsp;LDA #%00000000<br />&nbsp; &nbsp;STA PPU_CtrlA<br />&nbsp; &nbsp;STA PPU_CtrlB<br />&nbsp; &nbsp;LDA PPU_CtrlB ;reading $2002 clears write pair for $2005/2006<br /><br /><br />&nbsp; &nbsp;LDA #$20<br />&nbsp; &nbsp;STA PPU_Addr<br />&nbsp; &nbsp;LDA #$00<br />&nbsp; &nbsp;STA PPU_Addr<br /><br />&nbsp; &nbsp;LDX BackgroundToLoad<br />&nbsp; &nbsp;LDA backgrounds_lo, x<br />&nbsp; &nbsp;STA BackgroundAddress<br />&nbsp; &nbsp;LDA backgrounds_hi, x<br />&nbsp; &nbsp;STA BackgroundAddress + 1<br />&nbsp; &nbsp;LDY #$00<br />LoadBackgroundLoopA:<br />&nbsp; &nbsp;LDA (BackgroundAddress), y<br />&nbsp; &nbsp;CMP #$25<br />&nbsp; &nbsp;BEQ LoadBackgroundLoopEnd<br />&nbsp; &nbsp;INY<br />&nbsp; &nbsp;LDX (BackgroundAddress), y<br />LoadBackgroundLoopB:<br />&nbsp; &nbsp;STA PPU_Write<br />&nbsp; &nbsp;DEX<br />&nbsp; &nbsp;BNE LoadBackgroundLoopB<br />&nbsp; &nbsp;INY<br />&nbsp; &nbsp;JMP LoadBackgroundLoopA<br /><br />LoadBackgroundLoopEnd:<br /><br />&nbsp;;Reset Scroll<br />&nbsp; &nbsp;LDA #$00<br />&nbsp; &nbsp;STA PPU_Scroll<br />&nbsp; &nbsp;STA PPU_Scroll<br />&nbsp; &nbsp;INC BackgroundLoadingStatus<br />RTS</div><br /><br />Another thing is updating a certain part of the background. Should I just decompress all the background data into ram first instead of running the code above, and then load a whole background every time a change is made?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>dougeff</b> [ Tue Aug 07, 2018 3:34 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Uncompressing background, updating individual BG tiles.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />LDX (BackgroundAddress), y<br /><br />This isn't a valid indirect mode (only LDA can do indirect modes). This should give an error when trying to assemble...<br /><br />What assembler are you using?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Eisetley</b> [ Tue Aug 07, 2018 3:41 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Uncompressing background, updating individual BG tiles.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />ASM6<br />Should I use LDA (BackgroundAddress), y-&gt;TAX?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>dougeff</b> [ Tue Aug 07, 2018 3:51 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Uncompressing background, updating individual BG tiles.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Probably yes.<br /><br />If that doesn't work, open the file in an emulator with a debugger. Make sure the correct values are loading to the PPU.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Sumez</b> [ Tue Aug 07, 2018 5:52 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Uncompressing background, updating individual BG tiles.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Eisetley wrote:</div><div class="quotecontent">ASM6<br />Should I use LDA (BackgroundAddress), y-&gt;TAX?</div><br /><br />Just remember to move it up before your &quot;actual&quot; LDA, to preserve the A register <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Eisetley</b> [ Tue Aug 07, 2018 6:24 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Uncompressing background, updating individual BG tiles.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Sure, it works now. Turns out LDA (address) + something doesn't work either, so I had to manipulate Y.<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">LoadBackgroundLoopA:<br />&nbsp; &nbsp;INY<br />&nbsp; &nbsp;LDA (BackgroundAddress), y<br />&nbsp; &nbsp;TAX<br />&nbsp; &nbsp;DEY<br />&nbsp; &nbsp;LDA (BackgroundAddress), y<br />&nbsp; &nbsp;CMP #$25<br />&nbsp; &nbsp;BEQ LoadBackgroundLoopEnd<br />LoadBackgroundLoopB:<br />&nbsp; &nbsp;STA PPU_Write<br />&nbsp; &nbsp;DEX<br />&nbsp; &nbsp;BNE LoadBackgroundLoopB<br />&nbsp; &nbsp;INY<br />&nbsp; &nbsp;INY<br />&nbsp; &nbsp;JMP LoadBackgroundLoopA</div><br />Still, I don't know how to do updates on a chosen tile, first decompress whole screen somewhere in ram and load whole 1024 bytes of background + attributes every time I want to change something (even if it's only a single tile)?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Tue Aug 07, 2018 8:26 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Uncompressing background, updating individual BG tiles.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Eisetley wrote:</div><div class="quotecontent">Turns out LDA (address) + something doesn't work either, so I had to manipulate Y.</div><br />Yup. <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">LDA Absolute+Offset</tt> works because the address is calculated at assembly time, but with indirect addressing the address is calculated at run time, so you're limited by what the CPU can do.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Still, I don't know how to do updates on a chosen tile, first decompress whole screen somewhere in ram and load whole 1024 bytes of background + attributes every time I want to change something (even if it's only a single tile)?</div><br />It's definitely possible to update any number of bytes you want, just not from an RLE stream, since those don't typically allow for random access. If you want to read partial chunks off of an RLE stream, you'll need to break the stream in smaller pieces and create a list of pointers to the individual pieces.<br /><br />Anyway, once you do know where to read the data from, you can calculate the target name table address using the following formula: <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">Base OR &#40;Y * 32&#41; OR X</tt>.<br /><br />Something like this should work for calculating the Target address dynamically at run time:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; lda TileY<br />&nbsp; asl<br />&nbsp; asl<br />&nbsp; asl<br />&nbsp; asl<br />&nbsp; rol TargetAddress+1<br />&nbsp; asl<br />&nbsp; rol TargetAddress+1<br />&nbsp; ora TileX<br />&nbsp; sta TargetAddress+0<br />&nbsp; lda TargetAddress+1<br />&nbsp; and #%00000011<br />&nbsp; ora Base<br />&nbsp; sta TargetAddress+1</div><br />TileX and TileY are 5-bit values (0 to 31) and Base is one of $20, $24, $28 or $2C, depending on which name table you're targeting. Then you can just write TargetAddress to register $2006 and set its value as the starting point for the transfer, instead of always starting from $2000.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>