<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Should I disable rendering during vblank?</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Should I disable rendering during vblank?</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=11117">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=11117</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Tue Mar 25, 2014 6:35 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Should I disable rendering during vblank?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Another discussion got sidetracked by whether to explicitly disable rendering when updating video memory during vertical blanking.<br /><br /><div class="quotetitle">In <a href="http://forums.nesdev.com/viewtopic.php?p=127138#p127138" class="postlink">this post</a>, rainwarrior wrote:</div><div class="quotecontent">You should only turn the PPU off when you need to take rendering down for multiple frames so you can place a lot of data into the PPU. For an update that happens every frame, <em>do not</em> turn the PPU off</div><br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">A little strong. Turning off rendering frees up the first 100 CPU cycles on the prerender scanline. I'd have said <em>you usually don't need to</em>.</div><br /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">There's no performance boost, you just get a little extra time for PPU memory accesses because the PPU itself won't be accessing memory during the pre-render scanline when rendering is off.</div><br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">The difference between enabling during prerender and enabling after start of picture is that as long as rendering is reenabled before x=304 of the pre-render line, no special &quot;skinny&quot; address write sequences are needed to set the scroll position.</div><br /><br />The pre-render scanline precedes the active picture. The rendering circuitry needs from x=321 to x=336 of this line to fetch the first two slivers of line 0 of the background, but it uses the bus the whole time if rendering is enabled. During the prerender scanline, if rendering is enabled, the PPU copies some bits from the scroll position (address <em>t</em> in Loopy's &quot;<a href="http://wiki.nesdev.com/w/index.php/The_skinny_on_NES_scrolling" class="postlink">The skinny on NES scrolling</a>&quot;) to the video memory address (address <em>v</em>) to set up scrolling:<br /><ul><li>At x=257 (right side of picture), it copies the horizontal bits (0-4 and 10). This happens on the pre-render scanline and the active picture. </li><li>From x=280 through x=304 (the vsync pulse), it repeatedly copies the vertical bits (5-9 and 11-14). This happens only on the prerender scanline.</li></ul>So as long as rendering is reenabled before x=304, the game still sees normal scrolling operation. The horizontal copy might be delayed by a scanline if rendering is disabled at x=257, causing wrong horizontal scrolling on the first scanline of the picture (which is well within NTSC's overscan). But it'll fix itself by the second scanline, and in any case, it overwhelmingly likely won't affect sprite 0 overlap detection.<br /><br />It takes 6 cycles to disable rendering (<tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">LDA #$00 STA $2001</tt> and 6 to reenable it (<tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">LDA #$1E STA $2001</tt>), yet it adds about 100 cycles (x=1 to x=300, 1 cycle per 3 dots) of usable video memory access time. I had to hack NES15, a game on the STREEMERZ multicart, to disable rendering while updating video memory because the multicart's NMI dispatch routine pushed updates just barely into the prerender line, causing visible artifacts on my NES.<br /><br />Anyone have a specific test ROM demonstrating when video memory becomes inaccessible?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Tue Mar 25, 2014 7:42 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Should I disable rendering during vblank?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You've taken my comment out of context again. <img src="./images/smilies/icon_sad.gif" alt=":(" title="Sad" /> My statement &quot;do not turn the PPU off&quot; means specifically with shiru's neslib library where the routines ppu_off and ppu_on_all have undesired consequences.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Tue Mar 25, 2014 8:26 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Should I disable rendering during vblank?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">You've taken my comment out of context again.</div><br />Taking things out of their context is what makes mass media and opinion manipulating work. Tepples would do an excellent politician.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Movax12</b> [ Tue Mar 25, 2014 8:53 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Should I disable rendering during vblank?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It's good to have a clear explanation of this. Thanks tepples. Sorry for the misunderstanding in the other thread rainwarrior.<br /><br />The game I was working on does a lot of nametable writes for smooth animation of the blocks falling. It is an attempt to port Jack Attack for the C64. Right now it just displays and animates the levels (up and down to change level). Platform colors are not correct. <br /><br />It will delay adding more blocks from the top if the vram write time is reached, so I could benifit from more time, but I can ignore the issue without much consequence. (I can say that the animation looks a lot better than the C64 version.)

		
			<br clear="all" /><br />

			<table class="tablebg" width="100%" cellspacing="1">
			<tr>
				<td><b class="genmed">Attachments: </b></td>
			</tr>
			
				<tr>
					<td>
			<span class="genmed">
				<img src="./styles/subsilver2/imageset/icon_topic_attach.gif" width="14" height="18" alt="" title="" /> 
				<a href="./download/file.php?id=1373">jackattack.nes</a> [40.02 KiB]
			</span><br />
			<span class="gensmall">Downloaded 39 times</span>
		

		<br />
	</td>
				</tr>
			
			</table>
		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>natt</b> [ Tue Mar 25, 2014 9:36 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Should I disable rendering during vblank?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">The horizontal copy might be delayed by a scanline if rendering is disabled at x=257, causing wrong horizontal scrolling on the first scanline of the picture (which is well within NTSC's overscan). But it'll fix itself by the second scanline, and in any case, it overwhelmingly likely won't affect sprite 0 overlap detection.<br /></div><br /><br />Why stop there?  Given the usual &quot;224 visible lines&quot; rough guideline, leave rendering off for as long as you need to make your vram updates, and anything up to 8 or so scanlines into the picture shoulnd't be a problem

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Movax12</b> [ Tue Mar 25, 2014 10:18 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Should I disable rendering during vblank?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Sure, you can do this, but then the behavior of the PPU changes from what would normally be expected coming out of vblank. If I understand correctly, &quot;So as long as rendering is reenabled before x=304&quot; the PPU should behave the same as normal. And you need timed code, etc.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Tue Mar 25, 2014 10:56 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Should I disable rendering during vblank?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">natt wrote:</div><div class="quotecontent">Why stop there?</div><br />Several reasons.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Given the usual &quot;224 visible lines&quot; rough guideline, leave rendering off for as long as you need to make your vram updates, and anything up to 8 or so scanlines into the picture shoulnd't be a problem</div><br />Here are the problems with this approach:<br />1 - Alternate dot crawl pattern: the NTSC artifacts change significantly when rendering is disabled at the end of VBlank, and this affects how graphics look when an NTSC TV or emulator filter is used.<br />2 - Setting the scroll: the usual method for setting the scroll ($2000, $2005 x 2) doesn't work after VBlank ends, so you have to resort to $2005/$2006 trickery in order to set the scroll.<br />3- Jumping picture: &quot;anything up to 8 or so scanlines&quot; doesn't cut it, you have to enable rendering at the same point every frame, otherwise the picture will jump up and down. Timing a fixed amount of scanlines while rendering is off is not trivial.<br /><br />While none of the above problems are definite deal breakers, they show that your suggestion isn't as trivial to implement as it may seem at first. A programmer has to know a lot about frame timing and scrolling, and account for differences between PAL and NTSC systems.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Tue Mar 25, 2014 11:59 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Should I disable rendering during vblank?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">While none of the above problems are definite deal breakers, they show that your suggestion isn't as trivial to implement as it may seem at first. A programmer has to know a lot about frame timing and scrolling, and account for differences between PAL and NTSC systems.</div><br /><br />We're talking about a trick that only gets you ~100 extra cycles of time, i.e. about 5%. So... you're talking about a person who is capable of making use of 5% more efficiency in their vblank, but isn't capable of writing timed code? Don't forget if you go even slightly over you have to fall back to the more advanced technique. If you're using this 5% for a safety buffer for sloppy code, you'd better not be <em>too</em> sloppy then!<br /><br />I kinda think either simple rule to &quot;always turn off rendering during vblank&quot; or &quot;always leave rendering on during vblank&quot; is a non-issue for a novice NES programmer. If you need to do it, you <em>probably</em> know something about what you're doing. Writing an NMI is probably the trickiest task a novice NES programmer might have on their plate, I don't think general-purpose advice about the sprite rendering flag will really make it easier.<br /><br />An application to PAL seems even less relevant, given its vastly longer vblank period. Also, there's a caveat there that OAM DMA should be done last if rendering is going to be turned on late (since its data isn't stable much longer than a vblank). That's a bit of a silent killer, since nobody seems to emulate OAM decay.<br /><br />What did we determine about the PAL vblank and OAM before, I can't quite remember. Does it force an OAM refresh midway through its vblank? (Was there a conflict if you try to OAM DMA too late?) Does it require the sprite rendering flag to be set in $2001 by that point? There's some hariy details here.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Tue Mar 25, 2014 2:07 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Should I disable rendering during vblank?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent">What did we determine about the PAL vblank and OAM before, I can't quite remember. Does it force an OAM refresh midway through its vblank? (Was there a conflict if you try to OAM DMA too late?)</div>Yeah, those were the problems. Even worse, the PAL NES <em>never</em> fully disables sprite evaluation: you must OAM DMA during the 21 scanlines after NMI. <a href="http://forums.nesdev.com/viewtopic.php?f=9&amp;t=11041" class="postlink">(thefox's post about this)</a>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Tue Mar 25, 2014 3:09 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Should I disable rendering during vblank?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent"><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">While none of the above problems are definite deal breakers, they show that your suggestion isn't as trivial to implement as it may seem at first. A programmer has to know a lot about frame timing and scrolling, and account for differences between PAL and NTSC systems.</div><br /><br />We're talking about a trick that only gets you ~100 extra cycles of time, i.e. about 5%. So... you're talking about a person who is capable of making use of 5% more efficiency in their vblank, but isn't capable of writing timed code? Don't forget if you go even slightly over you have to fall back to the more advanced technique. If you're using this 5% for a safety buffer for sloppy code, you'd better not be <em>too</em> sloppy then!</div><br />Tokumaru was explicitly talking about the case where rendering is kept off for <em>more</em> than 1 scanline.<br /><br /><div class="quotetitle">lidnariq wrote:</div><div class="quotecontent"><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent">What did we determine about the PAL vblank and OAM before, I can't quite remember. Does it force an OAM refresh midway through its vblank? (Was there a conflict if you try to OAM DMA too late?)</div>Yeah, those were the problems. Even worse, the PAL NES <em>never</em> fully disables sprite evaluation: you must OAM DMA during the 21 scanlines after NMI. <a href="http://forums.nesdev.com/viewtopic.php?f=9&amp;t=11041" class="postlink">(thefox's post about this)</a></div><br />Just to clarify, I never tested exactly where the refresh period landed and how long it was. I only noticed that the first ~20 or so scanlines were safe. So there might be other safe time slots after NMI where the sprite uploading could be placed. I'm also not sure at all how it does the refresh (whether it uses the normal sprite evaluation logic).

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>