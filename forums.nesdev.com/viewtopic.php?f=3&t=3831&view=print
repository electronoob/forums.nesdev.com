<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - New CPU test ROM</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">New CPU test ROM</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=3831">http://forums.nesdev.com/viewtopic.php?f=3&amp;t=3831</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>3</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Sat Jan 12, 2008 3:12 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>New CPU test ROM</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I've been working on a new test framework that can run multiple groups of tests and give better feedback. As a first use of it, here's a set of CPU tests that do most instructions, testing several edge cases. If it fails, it prints the opcode and instruction name. It only tests official instructions right now.
<br />
<br /><a href="http://h1.ripway.com/blargg/temp/blargg_nes_cpu_test5.zip" class="postlink">blargg_nes_cpu_test5.zip</a>
<br />
<br />These tests work like <a href="http://mdfs.net/Software/Z80/Exerciser/" class="postlink">zexall</a>, trying each instruction with all interesting combinations of inputs and checksumming the registers afterwards. After all the different combinations have been fed to a particular instruction, the checksum is compared with the correct one to determine pass/fail.
<br />
<br /><strong>EDIT</strong>: Replaced with version that doesn't stop on failure, so you get a list of all the instructions that failed.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Sat Jan 12, 2008 3:14 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Can you make it continue after an instruction fails?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Zepper</b> [ Sat Jan 12, 2008 5:12 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Woot! Mine passed ok!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>MatthewCallis</b> [ Sat Jan 12, 2008 8:55 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thank you for your work on these test case ROMs, I found some more bugs!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>atari2600a</b> [ Sat Jan 12, 2008 9:18 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Any idea if you're going to add illegal opcode support?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>MatthewCallis</b> [ Tue Jan 15, 2008 5:52 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I've been trying to get this to pass since you've posted it. How exactly is this testing the functions? I'm failing several but is failing of one dependent on the others? I'm getting this (at bottom) but as I go over the functions, everything seems right. Example: ASL, a
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">/* ASL */<br />#define ARITHMATIC_SHIFT_LEFT_A&#40;CYCLES&#41;&#123;<br />&nbsp; &nbsp;addr = &#40;memory&#91;program_counter + 1&#93; &lt;&lt; 8&#41; | memory&#91;program_counter&#93;;<br />&nbsp; &nbsp;tmp = memory_read&#40;addr&#41;;<br />&nbsp; &nbsp;carry_flag = &#40;carry_flag &amp; 0xFE&#41; | &#40;&#40;tmp &gt;&gt; 7&#41; &amp; 0x01&#41;;<br />&nbsp; &nbsp;tmp &lt;&lt;= 1;<br />&nbsp; &nbsp;write_memory&#40;addr, tmp&#41;;<br />&nbsp; &nbsp;sign_flag = tmp &amp; 0x80;<br />&nbsp; &nbsp;zero_flag = !&#40;tmp&#41;;<br />&nbsp; &nbsp;program_counter += 2;<br />&nbsp; &nbsp;cycle_count -= CYCLES;<br />&nbsp; &nbsp;break;<br />&#125;</div>
<br /><img src="http://eludevisibility.org/emulation/NESMinni.png" alt="Image" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Tue Jan 15, 2008 8:49 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Is tmp an 8-bit variable, or more? It could be that one of the instructions used to do the tests isn't working correctly. What does kevtris' nestest say?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>MatthewCallis</b> [ Wed Jan 16, 2008 6:13 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The variable tmp is an unsigned int; nestest gives all OK as does the older NEStress. Though not all of your other test pass yet if that matters too.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Wed Jan 16, 2008 7:21 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If tmp is an int, then your code calculates the Z flag wrong!
<br />
<br />tmp = memory_read(addr); 
<br />tmp &lt;&lt;= 1;
<br />zero_flag = !(tmp); 
<br />
<br />What happens if this reads 0x80 from memory into tmp? After the &lt;&lt;= 1, tmp=0x100 when it should be 0, and the zero flag is erroneously clear!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Thu Jan 17, 2008 5:20 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />New version, tests most unofficial instructions now, more thorough instruction coverage, and includes some documentation and full source code. Switched to MMC1, since apparently UxROM doesn't strictly support CHR ROM. Thanks to bunnyboy and thefox for testing help:
<br /><a href="http://h1.ripway.com/blargg/temp/blargg_nes_cpu_test5.zip" class="postlink">blargg_nes_cpu_test5.zip</a>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>hap</b> [ Wed Jan 30, 2008 3:06 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I like it, I got errors with cpu.nes on AB ATX, 9C SYA, 9E SXA. I was able to fix ATX by ORing A with $FF, according to documents it's ORed with $EE, $EF, $FE, or $FF depending on CPU internal state like the program counter. Maybe on the NES it's always ORed with $FF, at least it makes your test program a bit happier on my emu.
<br />
<br />I couldn't fix my SYA and SXA implementations, can someone explain how these work? I'm currently using this method:
<br />
<br /><!-- m --><a class="postlink" href="http://www.s-direktnet.de/homepages/k_nadj/opcodes.html">http://www.s-direktnet.de/homepages/k_nadj/opcodes.html</a><!-- m -->
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">SAY&nbsp; &nbsp; ***<br />This opcode ANDs the contents of the Y register with&nbsp; and stores the <br />result in memory.<br /><br />One supported mode:<br /><br />SAY abcd,X&nbsp; &nbsp; &nbsp; ;9C cd ab&nbsp; &nbsp; ;No. Cycles= 5<br /><br />Example:<br /><br />SAY $7700,X&nbsp; &nbsp; &nbsp;;9C 00 77<br /><br />Equivalent instructions:<br /><br />PHA<br />TYA<br />AND #$78<br />STA $7700,X<br />PLA<br /><br />XAS&nbsp; &nbsp; ***<br />This opcode ANDs the contents of the X register with&nbsp; and stores the <br />result in memory.<br /><br />One supported mode:<br /><br />XAS abcd,Y&nbsp; &nbsp; &nbsp; ;9E cd ab&nbsp; &nbsp; ;No. Cycles= 5<br /><br />Example:<br /><br />XAS $6430,Y&nbsp; &nbsp; &nbsp;;9E 30 64<br /><br />Equivalent instructions:<br /><br />PHA<br />TXA<br />AND #$65<br />STA $6430,Y<br />PLA</div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Wed Jan 30, 2008 5:13 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">hap wrote:</div><div class="quotecontent">I was able to fix ATX by ORing A with $FF, according to documents it's ORed with $EE, $EF, $FE, or $FF depending on CPU internal state like the program counter.</div><br />$EF in particular looks like the mask for a carry coming out of the lower nibble, as might be seen in hardware handling packed binary-coded decimal, such as the original 6502 CPU manufactured by MOS Technology.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"> Maybe on the NES it's always ORed with $FF, at least it makes your test program a bit happier on my emu.</div>
<br />This might be the case for the NES, which for patent reasons uses a cut-down 6502 core lacking decimal mode.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Thu Jan 31, 2008 6:28 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I just tested and 9C and 9E are screwey. I need to take them off the test. Depending on X and Y they sometimes write to $700, among other things. Maybe someone else can figure them out properly.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>dvdmth</b> [ Thu Jan 31, 2008 6:56 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Opcode $AB is known to work differently depending on the machine.  Possible outcomes I've seen reported:
<br />
<br />1. OR with $EE always
<br />2. OR with $EE, $EF, $FE, or $FF based on the contents of other registers
<br />3. OR with a seemingly random value (possibly influenced by DMA transfers)
<br />4. Perform no OR operation at all (go straight to the AND step)
<br />
<br />I think this opcode is triggering a bus conflict, causing the bits in A to get forced high in some cases (machine-dependent).  Unless people test this opcode on multiple NES's to see if it works the same on all of them or not, we should assume the exact behavior to be unpredictable.
<br />
<br />Exactly what is causing errors with $9C and $9E?  Specifically, do problems show up during page boundary crossing, when there's no page crossing, or both?  I suspect that since the store value is affected by the upper byte of the target address (the "fixed" version, with 1 added to it), it's possible that a page crossing would also cause an issue with the upper address lines during the store cycle.  I haven't seen any docs that give light to this possibility, but that may be because no one tested it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>hap</b> [ Sat Mar 08, 2008 7:35 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Specifically, do problems show up during page boundary crossing, when there's no page crossing, or both? I suspect that since the store value is affected by the upper byte of the target address (the "fixed" version, with 1 added to it), it's possible that a page crossing would also cause an issue with the upper address lines during the store cycle.</div>You're right. Not that I've verified this on the NES, but blargg_nes_cpu_test5 passes on my emu if I mask the high address byte with $00 if there's a page crossing on SYA or SXA. Simply ignoring the write on page crossing made it pass too. Though, ORing it with $700 on page crossing (making it sometimes write to $700 like blargg said), makes it fail.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>3</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>