<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=10&amp;t=1909" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2006-08-19T07:54:49-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=10&amp;t=1909</id>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2006-08-19T07:54:49-07:00</updated>
<published>2006-08-19T07:54:49-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1909&amp;p=16359#p16359</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1909&amp;p=16359#p16359"/>
<title type="html"><![CDATA[CA65 + CC65]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1909&amp;p=16359#p16359"><![CDATA[
<div class="quotetitle">Memblers wrote:</div><div class="quotecontent"><br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">unlike the rest of the CA65 package, the C compiler is not free software.<br /></div><br />What's not free about it?</div><br />One of the requirements in the CC65 license is<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />1:  You don't charge anything for the copy.  It is permissable to charge a nominal fee for media, etc.<br /></div><br />This imposes limitations on making and distributing copies for a fee. The GNU General Public License doesn't permit this limitation in general, and neither does any other license that meets the <a href="http://www.debian.org/social_contract#guidelines" class="postlink">Debian Free Software Guidelines</a> or the <a href="http://www.opensource.org/docs/definition.php" class="postlink">OSI's Open Source Definition</a>. (The <a href="http://www.gnu.org/licenses/gpl.html" class="postlink">GPL</a> section 3c may appear similar at first, but it applies <em>only</em> when source code and executables are distributed separately.) See also <a href="http://www.gnu.org/philosophy/selling.html" class="postlink">Selling Free Software</a>.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Sat Aug 19, 2006 7:54 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Memblers]]></name></author>
<updated>2006-08-19T00:14:46-07:00</updated>
<published>2006-08-19T00:14:46-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1909&amp;p=16356#p16356</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1909&amp;p=16356#p16356"/>
<title type="html"><![CDATA[CA65 + CC65]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1909&amp;p=16356#p16356"><![CDATA[
I've played around with the compiler, basically just wrote a hello world program in it.  Unfortunately the NES library is busted.  It worked on FCEUltra but not on my NES (or on Nintendulator, I think).  I was screwing around with fixing it (I think I did fix something in it, I forget what), but I couldn't find where the major problem(s) exist.<br /><br />Writing your own functions should work just fine though, I'd think.  I never tried that (calling them from the assembly program).  I find it really interesting.  It seems we're the only ones trying to use the C compiler for NES at all (but you're obviously trying harder than me, heh).<br /><br />You said you've got the assembler stuff down, but if you want to see the linker script (nes.cfg) that's like what I use I've had a copy uploaded here for a while: <a href="http://www.parodius.com/~memblers/nes/" class="postlink">http://www.parodius.com/~memblers/nes/</a><br /><br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />I never thought of trying the C compiler because unlike the rest of the CA65 package, the C compiler is not free software.<br /></div><br /><br />What's not free about it?  While it's slightly more restrictive than the rest of the package (which literally says you can do anything with it except misrepresent it's origins), it seems to be pretty much like the GPL.  Just requiring source release for any modifications to the compiler.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=10">Memblers</a> — Sat Aug 19, 2006 12:14 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2006-08-17T21:10:59-07:00</updated>
<published>2006-08-17T21:10:59-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1909&amp;p=16329#p16329</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1909&amp;p=16329#p16329"/>
<title type="html"><![CDATA[Re: CA65 + CC65]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1909&amp;p=16329#p16329"><![CDATA[
<div class="quotetitle">FyberOptic wrote:</div><div class="quotecontent"><br />The thing that threw me for a loop for a few minutes was the notion of needing to use a seperate config file to setup the code segment and memory locations and such.<br /></div><br />It's the same on almost any other platform such as PC, Mac, GBA, and Nintendo DS, where the config file is called a "link script".<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />By first time through, I mean when I first execute the code in an emulator (FCE Ultra), it's messed up; any variable references are totally incorrect.  But if I use the reset command, suddenly it works fine.<br /></div><br />Are you forgetting to initialize variables by copying the DATA segment into RAM and zeroing BSS in your init code?<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />One thing that came to mind is that maybe I'm supposed to initialize the C runtime library, but I'm at a loss for how to do so.<br /></div><br /><a href="http://www.cc65.org/doc/ld65-5.html#ss5.4" class="postlink">LD65 manual section 5.4</a> should explain.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />I'd post code, but there's multiple files, so unless it's needed to diagnose such a problem, I'll leave it off for now.  I figure somebody with more experience at CC65 might already know what I'm talking about.<br /></div><br />Based on what I've seen, most nesdev.com forum members just use CA65 and LD65 and skip the C compiler. I never thought of trying the C compiler because unlike the rest of the CA65 package, the C compiler is not free software.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Thu Aug 17, 2006 9:10 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[FyberOptic]]></name></author>
<updated>2006-08-17T17:52:18-07:00</updated>
<published>2006-08-17T17:52:18-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1909&amp;p=16323#p16323</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1909&amp;p=16323#p16323"/>
<title type="html"><![CDATA[CA65 + CC65]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1909&amp;p=16323#p16323"><![CDATA[
So I took the plunge and decided to try and move away from NESASM due to its buggy behavior, switching to CC65 instead.  The syntax isn't all that different, mostly labels and such.  The thing that threw me for a loop for a few minutes was the notion of needing to use a seperate config file to setup the code segment and memory locations and such.  There's a much appreciated simplicity with NESASM where I simply use .bank and .org to fill the gaps and such I need in a rom image.<br /><br />In any case, I got the assembly aspect down for the most part, so I thought I'd look into including some C, in case I might ever want to whip up a function right quick for testing, and then do an assembler version later.  Calling C functions from assembly seemed fairly straight forward and I had it working fairly quickly.  The problem, however, involves the use of variables.  The first time through, they simply don't work properly.<br /><br />By first time through, I mean when I first execute the code in an emulator (FCE Ultra), it's messed up; any variable references are totally incorrect.  But if I use the reset command, suddenly it works fine.  It's as if it's setting up something during the first run, despite failing to work properly, which allows the second attempt work fine, since the reset command is apparently just a soft reset and doesn't reset memory (like a real NES from what I understand).  Other emulators aren't as forgiving, and don't work with the rom at all.<br /><br />For example:<br /><br />unsigned char * const ppu_reg1 = (unsigned char*)0x2000;<br />...<br />*ppu_reg1 = 0x90;<br /><br />Assigning a value to *ppu_reg1 does nothing the first time through.  The second time, as mentioned above, it works correctly.  Something to note is that if I don't use "const" on the pointer, it doesn't ever work, soft reset or not.  However, if I use, for example:<br /><br />*((char *)0x2000) = 0x90<br /><br />It works every time, because obviously there's no variable references.<br /><br />It's not just limited to accessing pointers, either.  Something like..<br /><br />unsigned char n = 0x90;<br />*((char *)0x2000) = n;<br /><br />..ends up with the same results.  $2000 gets set with a value, but it's not what it's supposed to be on the first pass.<br /><br />One thing that came to mind is that maybe I'm supposed to initialize the C runtime library, but I'm at a loss for how to do so.  The other thing is that my segment/memory file might be incorrect.  But there's possibly so many reasons for it to not work, some of which I'm prolly not even thinking of, that I don't really know where to start.<br /><br />I'd post code, but there's multiple files, so unless it's needed to diagnose such a problem, I'll leave it off for now.  I figure somebody with more experience at CC65 might already know what I'm talking about.<br /><br />The other small question is if anyone has a reference for the functions in nes.lib file.  There seems to be many functions in there which aren't documented whatsoever in the stuff that comes in the cc65 documenation archive.  Though that particular NES documentation seems to be lacking all around anyway.<br /><br />Anyhoo, thanks in advance!<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=884">FyberOptic</a> — Thu Aug 17, 2006 5:52 pm</p><hr />
]]></content>
</entry>
</feed>