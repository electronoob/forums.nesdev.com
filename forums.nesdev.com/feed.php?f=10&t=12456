<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=10&amp;t=12456" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2015-03-06T16:20:18-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=10&amp;t=12456</id>
<entry>
<author><name><![CDATA[Myask]]></name></author>
<updated>2015-03-06T16:20:18-07:00</updated>
<published>2015-03-06T16:20:18-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12456&amp;p=142524#p142524</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12456&amp;p=142524#p142524"/>
<title type="html"><![CDATA[Re: Controller Press And Hold]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12456&amp;p=142524#p142524"><![CDATA[
One will also likely want to know how long one has held a button. The simplest way is to have a counter running when the input doesn't change, that resets when it does. Something like...<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   LDA previousButtons<br />   CMP currentButtons<br />   BEQ holding<br />   LDA #0<br />   STA heldFrames<br />   BEQ holdingNext ;always triggers<br />holding:<br />   INC heldFrames<br />holdingNext:<br />   ;whatever comes next<br /></div> <br />The problems with this simplest approach are that it rolls over at a little over 4 seconds (5 in PAL) and that any change in buttons resets it; thus, holding B while moving in various directions doesn't get saved. Sometimes this is desired, sometimes not.<br />A way around this is to store the intermediate result of (previousButtons XOR currentButtons) somewhere, which makes it easy to use an AND to mask out individual bits that have changed to implement multiple counters.<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   ;need 8 bytes allocated for buttonHeldCounters...per controller<br />   ;this assumes only one controller.<br /><br />   LDA previousButtons<br />   EOR currentButtons ;back when you were calculating for pressedButtons<br />   STA changedButtons<br />   AND currentButtons ;gets you pressedButtons<br />   STA pressedButtons<br />   <br />   LDA #1<br />   LDX #0<br />   LDY #0<br />holdCounterLoop:<br />      BIT changedButtons ;AND without destroying which bit A is on<br />      BEQ resetCounter<br />      INC buttonHeldCounters, X<br />      BNE holdCounterIter ;next button...unless it overflowed, <br />      DEC buttonHeldCounter, X ;in which case, put it back at #$FF<br />      BNE holdCounterIter ;This is always taken.<br />resetCounter:<br />      STY buttonHeldCounter, X ;that is, store zero<br />holdCounterIter:<br />      INX<br />      ASL A<br />   BCC holdCounterLoop ;when carry gets set, our test-bit has left the byte.<br />   ;and now the counters have been updated<br /></div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6603">Myask</a> — Fri Mar 06, 2015 4:20 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Tsutarja]]></name></author>
<updated>2015-03-05T07:26:05-07:00</updated>
<published>2015-03-05T07:26:05-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12456&amp;p=142441#p142441</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12456&amp;p=142441#p142441"/>
<title type="html"><![CDATA[Re: Controller Press And Hold]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12456&amp;p=142441#p142441"><![CDATA[
<div class="quotetitle">thefox wrote:</div><div class="quotecontent"><br />You want to detect the 0-&gt;1 transition in the button, so you need to store the previous state of the buttons. Other cases: 0-&gt;0 (nothing pressed), 1-&gt;0 (released), 1-&gt;1 (held down)<br /><br />To detect the 0-&gt;1 transition, the logic is: newlyPressed = ~previousButtons &amp; currentButtons (where ~ = NOT, &amp; = AND), so the code to handle all 8 buttons at the same time could be:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda previousButtons<br />eor #$FF ; bitwise NOT<br />and currentButtons<br />sta newlyPressed<br /></div><br />Movax's code does newlyPressed = (currentButtons ^ previousButtons) &amp; currentButtons (where ^ = XOR), which is logically equivalent.<br /><br />EDIT: Had a mistake in &quot;Movax's code&quot;<br /></div><br /><br />Got it working. Thanks!<br /><br />Now it's starting to make sense why some games have two memory slots for 'held' buttons. The second one is the old one.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6724">Tsutarja</a> — Thu Mar 05, 2015 7:26 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[thefox]]></name></author>
<updated>2015-03-05T07:14:25-07:00</updated>
<published>2015-03-05T07:14:25-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12456&amp;p=142438#p142438</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12456&amp;p=142438#p142438"/>
<title type="html"><![CDATA[Re: Controller Press And Hold]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12456&amp;p=142438#p142438"><![CDATA[
<div class="quotetitle">Movax12 wrote:</div><div class="quotecontent"><br />Looks like my code is:<br /><br />newlyPressed = (currentButtons ^ previousButtons) &amp; currentButtons <br /><br />Is that still the same?<br /></div><br />Yeah I typoed that.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=80">thefox</a> — Thu Mar 05, 2015 7:14 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Movax12]]></name></author>
<updated>2015-03-05T07:03:43-07:00</updated>
<published>2015-03-05T07:03:43-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12456&amp;p=142437#p142437</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12456&amp;p=142437#p142437"/>
<title type="html"><![CDATA[Re: Controller Press And Hold]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12456&amp;p=142437#p142437"><![CDATA[
Looks like my code is:<br /><br />newlyPressed = (currentButtons ^ previousButtons) &amp; currentButtons <br /><br />Is that still the same? Anyway, I knew there was a better way to do it and will probably change my code to use the method thefox posted, just haven't looked if it will break 'releasedNew' even though I am not sure when I would use that.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4680">Movax12</a> — Thu Mar 05, 2015 7:03 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[thefox]]></name></author>
<updated>2015-03-05T07:12:34-07:00</updated>
<published>2015-03-05T05:47:11-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12456&amp;p=142434#p142434</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12456&amp;p=142434#p142434"/>
<title type="html"><![CDATA[Re: Controller Press And Hold]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12456&amp;p=142434#p142434"><![CDATA[
You want to detect the 0-&gt;1 transition in the button, so you need to store the previous state of the buttons. Other cases: 0-&gt;0 (nothing pressed), 1-&gt;0 (released), 1-&gt;1 (held down)<br /><br />To detect the 0-&gt;1 transition, the logic is: newlyPressed = ~previousButtons &amp; currentButtons (where ~ = NOT, &amp; = AND), so the code to handle all 8 buttons at the same time could be:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda previousButtons<br />eor #$FF ; bitwise NOT<br />and currentButtons<br />sta newlyPressed<br /></div><br />Movax's code does newlyPressed = (currentButtons ^ previousButtons) &amp; currentButtons (where ^ = XOR), which is logically equivalent.<br /><br />EDIT: Had a mistake in &quot;Movax's code&quot;<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=80">thefox</a> — Thu Mar 05, 2015 5:47 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Movax12]]></name></author>
<updated>2015-03-05T05:04:40-07:00</updated>
<published>2015-03-05T05:04:40-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12456&amp;p=142432#p142432</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12456&amp;p=142432#p142432"/>
<title type="html"><![CDATA[Re: Controller Press And Hold]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12456&amp;p=142432#p142432"><![CDATA[
Something like a fire action would suit a newly pressed button. (Fire balls in Super Mario Bros.) Movement would work for a button that was held down. (Left or Right).<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent"><br />;ca65 code:<br /><br />.pushseg<br />.segment &quot;ZEROPAGE&quot;<br /><br />    pressed:          .res    2    ; new this frame - held down<br />    pressedLastFrame: .res    2    ; last frame / call<br />    pressedNew:       .res    2    ; newly pressed since last frame<br />    releasedNew:      .res    2    ; newly released since last frame<br /><br />.popseg<br /><br />.export         readPort<br />.export         readPort0<br />.export         readPort1<br /><br />.export pressed<br />.export pressedLastFrame<br />.export pressedNew<br />.export releasedNew<br /><br /><br />.proc readPort0<br />    ldx #0<br />    .byte $CD           ; compare absolute, skip ldx #1<br />.endproc<br /><br />.proc readPort1<br />    ldx #1<br />.endproc<br /><br />.proc readPort<br />; IN : controller to read in reg x: 0 or 1<br />; OUT: Y: ?, A: releasedNew, X: unchanged<br /><br /><br />    lda pressed,x         ; save last frame's joystick<br />    sta pressedLastFrame,x<br /><br />    lda #1<br />    sta pressed,x         ; set bit0 to activate carry in loop<br />    sta $4016<br />    lsr a                    ; a has 0<br />    sta $4016<br /><br />    :<br />        lda $4016,x<br />        and #3               ; famicom<br />        cmp #1               ; friendly reads<br />        rol pressed,x<br />    bcc :-<br /><br />    ; maybe room for optimization here:    <br />    lda pressed,x  <br />    eor pressedLastFrame,x<br />    tay<br />    and pressed,x<br />    sta pressedNew,x<br />    tya<br />    eor pressedNew,x<br />    sta releasedNew,x<br />    <br />    rts<br />.endproc<br /></div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4680">Movax12</a> — Thu Mar 05, 2015 5:04 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Tsutarja]]></name></author>
<updated>2015-03-05T03:16:12-07:00</updated>
<published>2015-03-05T03:16:12-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12456&amp;p=142431#p142431</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12456&amp;p=142431#p142431"/>
<title type="html"><![CDATA[Controller Press And Hold]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12456&amp;p=142431#p142431"><![CDATA[
All controller reading tutorials explain how you read controller and save the results as 'held' buttons. Some games seem to use 'pressed' buttons that are only '1' on the frame and go back to '0' on next frame even if the button is held. How do I implement this into the controller reading routine and which one of the two would be best to use in different situations.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6724">Tsutarja</a> — Thu Mar 05, 2015 3:16 am</p><hr />
]]></content>
</entry>
</feed>