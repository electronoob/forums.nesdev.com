<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=10&amp;t=2468" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2006-11-05T18:15:34-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=10&amp;t=2468</id>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2006-11-05T18:15:34-07:00</updated>
<published>2006-11-05T18:15:34-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2468&amp;p=19170#p19170</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2468&amp;p=19170#p19170"/>
<title type="html"><![CDATA[Carry]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2468&amp;p=19170#p19170"><![CDATA[
<div class="quotetitle">danimal wrote:</div><div class="quotecontent"><br />Is there a reasonable implementation to do it with only 8-bit variables?<br /></div><br /><br />I don't see why that'd be necessary... but here's what I came up with:<br /><br />where tmp is 8-bit unsigned:<br /><br />ADC:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">tmp = A + val + carry;<br />     if&#40;tmp &lt; A&#41;  carry = 1;<br />else if&#40;tmp &gt; A&#41;  carry = 0;<br />A = tmp;<br /></div><br /><br />SBC:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">tmp = A - val - !carry;<br />     if&#40;tmp &lt; A&#41;  carry = 1;<br />else if&#40;tmp &gt; A&#41;  carry = 0;<br />A = tmp;<br /></div><br /><br /><br />The idea here (easier to see with ADC):<br /><br />If the sum (tmp) is less than A, then it must have wrapped, so you set carry.  Otherwise, if the sum is greater than A, it couldn't have wrapped, so you clear carry.<br /><br />Now, if A == tmp, one of two things could have happened:<br />- added $FF with carry<br />- added $00 without carry<br /><br />in either case, C remains unchanged ($FF with carry would keep carry set, $00 without carry would keep carry clear)<br /><br /><br />SBC logic is the same idea.<br /><br />But really -- it's probably easier to just use a 16-bit or larger variable if possible.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Sun Nov 05, 2006 6:15 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[danimal]]></name></author>
<updated>2006-11-05T17:36:44-07:00</updated>
<published>2006-11-05T17:36:44-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2468&amp;p=19168#p19168</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2468&amp;p=19168#p19168"/>
<title type="html"><![CDATA[Carry]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2468&amp;p=19168#p19168"><![CDATA[
Now the next question about carry.<br /><br />Is there a reasonable implementation to do it with only 8-bit variables?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=241">danimal</a> — Sun Nov 05, 2006 5:36 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2006-11-03T18:23:35-07:00</updated>
<published>2006-11-03T18:23:35-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2468&amp;p=19111#p19111</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2468&amp;p=19111#p19111"/>
<title type="html"><![CDATA[Carry]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2468&amp;p=19111#p19111"><![CDATA[
<div class="quotetitle">Disch wrote:</div><div class="quotecontent"><br />You don't subtract an additional 1 when C is clear.<br /></div><br />Oh yeah... oops! Well, I do feel stupid now! =) But I'll admit my mistake... =D<br /><br />Thanks for pointing that out! But you know, trying to explain SBC as an actual subtraction <strong>is</strong> hard (look at dvdmth's code)... Seeing it as an ADC is so much simpler!<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Fri Nov 03, 2006 6:23 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2006-11-03T17:16:01-07:00</updated>
<published>2006-11-03T17:16:01-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2468&amp;p=19109#p19109</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2468&amp;p=19109#p19109"/>
<title type="html"><![CDATA[Carry]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2468&amp;p=19109#p19109"><![CDATA[
<div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><br />And I don't see why you say that my version is "incorrect".<br /></div><br /><br />You don't subtract an additional 1 when C is clear.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Fri Nov 03, 2006 5:16 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2006-11-03T16:31:53-07:00</updated>
<published>2006-11-03T16:31:53-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2468&amp;p=19107#p19107</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2468&amp;p=19107#p19107"/>
<title type="html"><![CDATA[Carry]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2468&amp;p=19107#p19107"><![CDATA[
<div class="quotetitle">dvdmth wrote:</div><div class="quotecontent"><br />Often the carry is referred to as "borrow" during subtraction, as it indicates that a borrow took place (when subtracting multi-byte quantities - think of how you'd do subtraction by hand).<br /></div><br />That's exactly why I put the carry in the position of the 9th bit, for it to be borrowed in case it was needed. If it was borrowed, (result &lt; 0) the 9th bit will be cleared, as the carry should be.<br /><br />I wrote it like that because I feel it's a more intuitive way of seeing how SBC works. Most people don't understand why it's needed to set the carry before a subtraction. Of course, when we see that SBC is just an ADC with the operand complemented, it's easy to see why, but intuitively, it may feel weird to most programmers.<br /><br />So, I like to think of the carry in a subtraction as a bit that you put there, in case the subtraction needs to borrow it. If it doesn't borrow (result &gt; 0), it will still be there after the operation. However, if the carry is clear after the operation, it means the bit was borrowed. It's a much more intuitive way of seeing it.<br /><br />And I don't see why you say that my version is "incorrect". If it gives the correct results, it is correct (and, as far as I tested, it gave correct results). It's just a different implementation than yours.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Fri Nov 03, 2006 4:31 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2006-11-03T16:04:01-07:00</updated>
<published>2006-11-03T16:04:01-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2468&amp;p=19104#p19104</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2468&amp;p=19104#p19104"/>
<title type="html"><![CDATA[Carry]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2468&amp;p=19104#p19104"><![CDATA[
From my source:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">tmp = A - val - !fC;<br />flgV = &#40;A ^ tmp&#41; &amp; &#40;A ^ val&#41; &amp; 0x80;<br />fC = !&#40;tmp &gt;&gt; 8&#41;;<br />fN = fZ = A = &#40;u8&#41;tmp;<br /></div><br /><br />where 'tmp' is unsigned 16-bit or larger<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Fri Nov 03, 2006 4:04 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[dvdmth]]></name></author>
<updated>2006-11-03T15:09:44-07:00</updated>
<published>2006-11-03T15:09:44-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2468&amp;p=19101#p19101</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2468&amp;p=19101#p19101"/>
<title type="html"><![CDATA[Carry]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2468&amp;p=19101#p19101"><![CDATA[
No, that isn't right.  It would be more like this:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">SBC:<br /><br />temp = A + 0x100<br />temp = temp - data - 1 + carry<br />carry = temp &gt;&gt; 8 &amp; 1<br />A = temp &amp; 0xFF</div><br />If the carry bit is set, A becomes A - data.  If the carry bit is clear, A becomes A - data - 1.  The carry bit is set if the result is greater than or equal to zero, clear if the result is less than zero.  Often the carry is referred to as "borrow" during subtraction, as it indicates that a borrow took place (when subtracting multi-byte quantities - think of how you'd do subtraction by hand).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=360">dvdmth</a> — Fri Nov 03, 2006 3:09 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2006-11-03T13:38:45-07:00</updated>
<published>2006-11-03T13:38:45-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2468&amp;p=19099#p19099</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2468&amp;p=19099#p19099"/>
<title type="html"><![CDATA[Carry]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2468&amp;p=19099#p19099"><![CDATA[
<div class="quotetitle">danimal wrote:</div><div class="quotecontent"><br />That's a very cool way to do it, however I am wondering how it could be implemented as subtraction, instead of complement and addition.<br /></div><br />Writing it as blargg did, it could be like this:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">SBC:<br /><br />temp = A + &#40;carry &lt;&lt; 8&#41;<br />temp = temp - data<br />carry = temp &gt;&gt; 8 &amp; 1<br />A = temp &amp; 0xFF</div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Fri Nov 03, 2006 1:38 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[danimal]]></name></author>
<updated>2006-11-03T13:16:49-07:00</updated>
<published>2006-11-03T13:16:49-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2468&amp;p=19095#p19095</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2468&amp;p=19095#p19095"/>
<title type="html"><![CDATA[Carry]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2468&amp;p=19095#p19095"><![CDATA[
<div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><br />It is set if the result goes over 255, not 127.<br /></div><br /><br />Fatigue does wonderful things to memory.<br /><br /><div class="quotetitle">blargg wrote:</div><div class="quotecontent"><br />SBC:<br /><br />data = data ^ 0xFF<br />temp = A + data + carry<br />carry = temp &gt;&gt; 8 &amp; 1<br />A = temp &amp; 0xFF<br /></div><br /><br />That's a very cool way to do it, however I am wondering how it could be implemented as subtraction, instead of complement and addition.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=241">danimal</a> — Fri Nov 03, 2006 1:16 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2006-11-02T17:56:36-07:00</updated>
<published>2006-11-02T17:56:36-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2468&amp;p=19080#p19080</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2468&amp;p=19080#p19080"/>
<title type="html"><![CDATA[Carry]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2468&amp;p=19080#p19080"><![CDATA[
ADC:<br /><br />temp = A + data + carry<br />carry = temp &gt;&gt; 8 &amp; 1<br />A = temp &amp; 0xFF<br /><br />SBC:<br /><br />data = data ^ 0xFF<br />temp = A + data + carry<br />carry = temp &gt;&gt; 8 &amp; 1<br />A = temp &amp; 0xFF<br /><br />Yes, the only difference between ADC and SBC is that SBC flips all the bits of the value to be added. The reason this works is that you also keep carry set before SBC, therefore you have two's complement negation: invert all bits then add one (the set carry).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Thu Nov 02, 2006 5:56 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2006-11-02T17:02:50-07:00</updated>
<published>2006-11-02T17:02:50-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2468&amp;p=19079#p19079</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2468&amp;p=19079#p19079"/>
<title type="html"><![CDATA[Carry]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2468&amp;p=19079#p19079"><![CDATA[
The carry works with unsigned math. It is set if the result goes over 255, not 127. For subtraction, the carry should be set before the operation, and if the result is less than 0, the carry will be clear.<br /><br />When adding, the carry works like a 9th bit (since you are using numbers wider than 8 bits you could very well use the 9th as the carry). When subtracting, it could also be like a 9th bit, that is set before the operation, and in case the lower 8 bits go below 0, the 1 in the 9th position will be used.<br /><br />Since I'm not an emulator author, I'm not sure about the most efficient way to emulate the carry flag, but considering it a 9th bit could work.<br /><br />To find the value of the carry flag after an addition, just checking the 9th bit of the result will do. When subtracting, maybe you could (before the operation) put whatever is on the carry into the 9th bit, perform the subtraction, and then check the 9th bit for the new value of the carry.<br /><br />Or you could just perform subtraction as it's done in hardware: just XOR/EOR the number beeing subtracted with 255 (i.e. invert all the bits) and perform a regular addition, adding the carry and everything. The result is the same!<br /><br />EDIT: Just to illustrate what I said:<br />Say we want to subtract 10 (00001010 in binary) from 40. The correct answer would be 30. Doing it as the 6502 goes like this: 40 is already in A, the carry is set, and then comes the "SBC #10" instruction. It then inverts the bits of the operand, that becomes 245 (11110101 in binary). Now, adding 245 to 40, plus the carry (which is set) results in the number 286 (100011110 in binary). If you look at that result, the 9th (where you get the new value of the carry from) is set, as expected from this subtraction, and the lower 8 bits form the value 30 (00011110), which is the correct result.<br /><br />IMO, the best way to implement SBC is by implementing ADC correctly (which is simpler), and then have SBC just invert the operand and use the ADC instruction already implemented.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Thu Nov 02, 2006 5:02 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[danimal]]></name></author>
<updated>2006-11-02T16:00:02-07:00</updated>
<published>2006-11-02T16:00:02-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2468&amp;p=19078#p19078</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2468&amp;p=19078#p19078"/>
<title type="html"><![CDATA[Carry]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2468&amp;p=19078#p19078"><![CDATA[
I have been having a bit of trouble fully understanding the status of the carry flag before and after subtracting.<br /><br />Let me state what I know already:<br />The overflow status is set when the results aren't in this range:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">-128 &lt;= x &lt;= 127</div>  which is easy to test for if variables wider than 8 bits are used to emulate the result.<br /><br />The Carry status is set when the result is greater than 127, but what happens when a subtraction result is less than -128.  My guess is that it would be clear, but could someone please point me in the right direction.<br /><br />Stated another way:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">Carry Result:<br />              __SBC__ __ADC__<br />    in range |   0   |   1   |<br />out of range |   ?   |   ?   |<br />              ------- -------<br /></div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=241">danimal</a> — Thu Nov 02, 2006 4:00 pm</p><hr />
]]></content>
</entry>
</feed>