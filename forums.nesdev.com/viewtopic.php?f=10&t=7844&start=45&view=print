<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - SMB3's right-side scroll artifacts: Why not in SMB1, SMB2?</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">SMB3's right-side scroll artifacts: Why not in SMB1, SMB2?</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=7844">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=7844</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>4</strong> of <strong>4</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Thu Jul 07, 2011 8:12 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />For completeness sake here's a 3rd version that moves the status bar vertically (still no attributes, though): <!-- m --><a class="postlink" href="http://kkfos.aspekt.fi/downloads/status-bar3.zip">http://kkfos.aspekt.fi/downloads/status-bar3.zip</a><!-- m -->
<br />
<br />1) It was much easier to implement than horizontal movement.
<br />2) It's about twice as fast to upload (taking ~9 scanlines), and can still be optimized a little bit (by doing LDA, STA, STA, STA etc for the empty areas -- currently it just copies 128 bytes from RAM).
<br />3) When doing it horizontally, I needed to place sprites on the right side of the status bar to hide glitches from the map (since the active area of the map is 256+16 pixels, so we only have 240 pixels horizontally for the status bar). Those sprites are not wasted when moving vertically, which is nice.
<br />
<br />As for Jungle Book, I think the "stacking" is just a side effect of the method, and doesn't have any purpose per se.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Fri Jul 08, 2011 10:37 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">thefox wrote:</div><div class="quotecontent">As for Jungle Book, I think the "stacking" is just a side effect of the method, and doesn't have any purpose per se.</div>
<br />It has a purpose. If there was no stacking, when the gameplay started overwriting the current status bar you wouldn't have a full status bar to show unless a whole new one was drawn (like in your demos). Using the "stacked" method, the game progressively prepares the next status bar that will be shown once the current one starts to be overwritten.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Fri Jul 08, 2011 3:22 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><div class="quotetitle">thefox wrote:</div><div class="quotecontent">As for Jungle Book, I think the "stacking" is just a side effect of the method, and doesn't have any purpose per se.</div><br />It has a purpose. If there was no stacking, when the gameplay started overwriting the current status bar you wouldn't have a full status bar to show unless a whole new one was drawn (like in your demos). Using the "stacked" method, the game progressively prepares the next status bar that will be shown once the current one starts to be overwritten.</div>
<br />OK, I'll take your word for it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Fri Jul 08, 2011 6:23 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I don't want you to take my word, I want you to understand how it works and agree with me based on logic! =)
<br />
<br />Even though I suck at explaining things, I would like to eventually compile a "guide" with tricks such as this.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Fri Jul 08, 2011 6:46 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">I don't want you to take my word, I want you to understand how it works and agree with me based on logic! =)<br /><br />Even though I suck at explaining things, I would like to eventually compile a "guide" with tricks such as this.</div>
<br />What I meant was I understand the logic, but I couldn't bother to verify it by tracing Jungle Book. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />
<br />
<br />E: In other words: "I'll take your word that it's done like this Jungle Book"

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Jul 08, 2011 8:37 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I traced through this in Nintendulator's debugger. The NMI handler appears to do the following:
<br /><ol style="list-style-type: decimal"><li>Set the background color to black. </li><li>DMA-copy the display list to OAM. </li><li>Wait for the end of vertical blanking. The demo uses timed code, but something else could use the sprite 0 hit flag (which turns off during the pre-render line). </li><li>With the screen still force-blanked, copy the status bar into VRAM just below the seam with an unrolled loop. This could be fully unrolled as in the demo or partially unrolled as in something else. You have about 16 lines to finish this. </li><li>Set the scroll position to the top of the status bar. </li><li>Wait for the bottom of the status bar. The demo uses timed code, but something else could use sprite 0. </li><li>Change the background color and scroll position to the playfield. </li></ol>
<br />The demo is structured to run entirely in NMI (a so-called "superloop" like SMB1). This has the advantage of reducing NMI timing jitter from 7 to 3 cycles. The occasional writes to $4040 must be some debug timer on a mapper, I guess.
<br />
<br />Because the status bar is updated every frame, the nametable data must always be stored literally in RAM, unlike the traditional solution where it can get constructed dynamically and use one of the transfer slots.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Fri Jul 08, 2011 9:35 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">I traced through this in Nintendulator's debugger.</div><br />Why? <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" /> Anyways, you got it mostly right.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">The NMI handler appears to do the following:<br /><ol style="list-style-type: decimal"><li>Wait for the end of vertical blanking. The demo uses timed code, but something else could use the sprite 0 hit flag (which turns off during the pre-render line).</li></ol></div><br />It doesn't wait for the end of vblank exactly but a little longer (it needs forced vblank for the worst case of scenario of map updates, so the routine was written to take constant time, so that it's possible to enable rendering at a known position.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Because the status bar is updated every frame, the nametable data must always be stored literally in RAM, unlike the traditional solution where it can get constructed dynamically and use one of the transfer slots.</div>
<br />Currently it hogs 128 bytes of RAM needlessly, in reality the static parts of the status bar wouldn't have to be stored there (could be changed to lda #imm sta $2007 in the unrolled loop).
<br />
<br />And yes, $4040 writes are leftovers from NintendulatorDX debug timers...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Sat Jul 09, 2011 9:50 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I guess what Jungle Book does is much closer to the "traditional" solution where the status bar is uploaded dynamically.
<br />I'm not sure how it does "stacking", but as new information can be written to the status bar basically anytime, it has to either :
<br />- Write a whole status bar when it's needed (takes most non-extended VBlank time typically, I did it that way in my game)
<br />- Do it as tokumaru mentions, one line at a time, but then if new information is updated it has to be updated in both copies of the status bar. Probably a little more complex to code but saves some potentially precious VBlank time.
<br />
<br />The stacking technique is nothing new, variants of it are used in all 3 Double Dragon games, Raida Senki, Conquest of the Crystal Palace, Gradius II, Parodius, etc...
<br />
<br />What is so special about Jungle Book is that it does it with vertical mirroring, while all the games I mentioned do it with horizontal mirroring. This is possible because the status bar is small, and a significant area is unused/forced blanked (I guess via blank character banks but could also be done with $2001) on the top and bottom on the screen. That was it's possible to have all displayed tiles + 2 times the status bar total to 30 tiles.
<br />
<br />For example if the status bar is 4 tiles, there remains exactly 22 tiles for display, but because you don't want artifacts that makes 21 actually usable tiles. So for a reult this allows you to disaply 21 playfield tiles, 4 status bar tiles, and you have to force-blank 5 tiles on the top and bottom (including both ovescan ones), which is significant but reasonable.
<br />
<br />If you wanted a larger status bar, for example 6 tiles, you'd have to reserve 12 tiles just for that in the nametable, so only 18 (in practice 17) tiles for display. With 17 tiles to show and 6 for the status bar, this makes 23 used tiles and you'd have to force-blank 7 tiles, which would be a really HUGE part of the screen, likely you'd give up this method and use another one which allows you not to waste so much playfield.
<br />
<br />I find the first method used by thefox very interesting, because it's the first time I see it. I personally already have considered the theorcal possibility of it, but through it would never be feasible because of how much updates are needed.
<br />
<br />Here the only reason parts of the screen are forced-blanked is to be able to do really heavy VRAM updates. I wonder if there would be a way to work arround this (and so make this method be better than the Jungle Book one) in some situations.
<br />For example if the scrolling speeds are always low such as in a RPG, you could know exactly when the screen will cross a 8-pixel boundary and when the status bar will have to be entierely rewritten to VRAM.
<br />If you do it in a nice unrolled loop, this could fit exactly the remaining VBlank time after Sprite-DMA, so that if no updates are ever needed on those particular frames, your game will work fine without having to use any type of forced blanking.
<br />Basically it means you have to do the scrolling updates just one frame before you update the status bar but it sounds really feasible. In fact it's already what thefox's 2nd demo already does !
<br />
<br />Eventually there is the technique used in "Krusty's Fun House" which should be considered as well... You have no need for extra blanking, no limit in scrolling speed nor status bar size, and can scroll without color artefacts... but you need TWO splitpoints per frame, one for the status bar and another variable one to handle "overflows" in the playfield (i.e. when the status bar is about to be displayed it forces it to show the next row of the playfield).
<br />This method also only works for a constant sized status bar.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Mon Jul 11, 2011 5:25 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">Do it as tokumaru mentions, one line at a time, but then if new information is updated it has to be updated in both copies of the status bar.</div><br />You can get away with updating the new information only in the status bar that's being currently used. I haven't personally checked the game's code, but I imagine that it progressively draws rows with the static parts of the status bars but always updates the dynamic parts in the one that's currently being used.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">The stacking technique is nothing new, variants of it are used in all 3 Double Dragon games, Raida Senki, Conquest of the Crystal Palace, Gradius II, Parodius, etc..</div>
<br />If I'm not mistaken, the stacking is the exact same thing <em>Kirby's Adventure</em> does, except that it stacks the gameplay window, not the status bar. The idea is exactly the same though: if you have to copies, you can switch to the other one once a clash is about to happen.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Tue Jul 19, 2011 8:09 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">If I'm not mistaken, the stacking is the exact same thing Kirby's Adventure does, except that it stacks the gameplay window, not the status bar. The idea is exactly the same though: if you have to copies, you can switch to the other one once a clash is about to happen.</div>
<br />Yes, this is basically the same. You have to "stack" two status bars OR two playfields, both can work well. And both have the inconvenient that you have to not only update not only the "active" playfield or bar, but also the "reserved" ones, so all changes must be done twice.
<br />
<br />If you choose to stack the playfield, typically you see a part of the top one and a part of the bottom one at a time, but if you choose to stack the status bars, then you just see one of the status bars.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>4</strong> of <strong>4</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>