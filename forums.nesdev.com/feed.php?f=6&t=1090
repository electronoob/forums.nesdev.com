<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=6&amp;t=1090" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2006-10-11T22:43:30-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=6&amp;t=1090</id>
<entry>
<author><name><![CDATA[RushJet1]]></name></author>
<updated>2006-10-11T22:43:30-07:00</updated>
<published>2006-10-11T22:43:30-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1090&amp;p=18371#p18371</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1090&amp;p=18371#p18371"/>
<title type="html"><![CDATA[NSF Support for PCM Samples]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1090&amp;p=18371#p18371"><![CDATA[
<div class="quotetitle">Hayamaru3000 wrote:</div><div class="quotecontent"><br />Also if this is true would this mean for nsfs that are already ripped with the dmc channel sound, would the tune of the dmc change differently if raw pcm was supported? Is there a count listed for how many Nsf's with DMC/PCM samples have been ripped?<br /></div><br /><br />the only nsfs that support PCM samples are the demos posted at the beginning of this thread to my knowledge.  changing support for PCM will not change the sound of all the DMC-enabled NSFs out there.  it will merely more closely emulate what a NES can do.  games like Skate or Die 2 that used raw PCM will have to be re-ripped to actually hear the samples.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=34">RushJet1</a> — Wed Oct 11, 2006 10:43 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2006-09-26T03:51:30-07:00</updated>
<published>2006-09-26T03:51:30-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1090&amp;p=18003#p18003</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1090&amp;p=18003#p18003"/>
<title type="html"><![CDATA[NSF Support for PCM Samples]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1090&amp;p=18003#p18003"><![CDATA[
Once you see a new NSF spec released, then support has been added. Until then, it's a slowly-moving issue.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Tue Sep 26, 2006 3:51 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Hayamaru3000]]></name></author>
<updated>2006-09-25T14:55:05-07:00</updated>
<published>2006-09-25T14:55:05-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1090&amp;p=17988#p17988</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1090&amp;p=17988#p17988"/>
<title type="html"><![CDATA[NSF Support for PCM Samples]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1090&amp;p=17988#p17988"><![CDATA[
So does this mean you found a way to add raw pcm support on the nsf spec?Also if this is true would this mean for nsfs that are already ripped with the dmc channel sound, would the tune of the dmc change differently if raw pcm was supported? Is there a count listed for how many Nsf's with DMC/PCM samples have been ripped?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=406">Hayamaru3000</a> — Mon Sep 25, 2006 2:55 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2006-09-16T15:58:26-07:00</updated>
<published>2006-09-16T15:58:26-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1090&amp;p=17574#p17574</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1090&amp;p=17574#p17574"/>
<title type="html"><![CDATA[NSF Support for PCM Samples]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1090&amp;p=17574#p17574"><![CDATA[
What Quietust discusses is the main reason I like the "init never returns, play routine interrupts" approach: it matches how most games would play PCM. The main loop would wait for a signal to start a PCM sample, then output it while being periodically interrupted by the NMI code. The main loop would probably not be polling an "NMI occurred" variable, which is why I don't like that approach (#5 above).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Sat Sep 16, 2006 3:58 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Quietust]]></name></author>
<updated>2006-09-16T15:25:41-07:00</updated>
<published>2006-09-16T15:25:41-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1090&amp;p=17572#p17572</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1090&amp;p=17572#p17572"/>
<title type="html"><![CDATA[NSF Support for PCM Samples]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1090&amp;p=17572#p17572"><![CDATA[
<div class="quotetitle">Bananmos wrote:</div><div class="quotecontent"><br />Another possibility is to let the init routine do the actual raw pcm, and allow it to be interrupted by the playback routine. This is actually how Battletoads and Skate or Die 2 handle their sample playback, and it works ok. However, this method has the serious drawback of pausing the played raw pcm waveform for several scanlines, most likely causing an annoying buzz in the waveform, which you may wish to avoid in other cases.<br /></div><br /><br />This is exactly how I handled it in the Battletoads+PCM NSF I released (linked from the beginning of this thread) - the init code loops forever on a variable from the sound engine which says "play a RAW PCM sample", and whenever the play routine runs and returns, the init code responds by playing the sample.<br /><br />As for the "annoying buzz", the exact same thing happens in the real game, because that's how RAW PCM actually works.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7">Quietust</a> — Sat Sep 16, 2006 3:25 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bananmos]]></name></author>
<updated>2006-09-16T13:54:16-07:00</updated>
<published>2006-09-16T13:54:16-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1090&amp;p=17563#p17563</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1090&amp;p=17563#p17563"/>
<title type="html"><![CDATA[NSF Support for PCM Samples]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1090&amp;p=17563#p17563"><![CDATA[
The compatibility argument makes sense. So then, the most proper way to do raw PCM in NSFs would be this:<br /><br />* Have an init routine that never returns. This routine will actually contain the music playback code that would normally be found in the "play" routine. This routine will wait for the play routine to set a variable, indicating to the init routine that a frame has passed and another call to the playback code should be made, after which the init routine will reset this flag and once again enter it's wait state<br /><br />* Have a play routine that is called a few thousand times a second. This routine will output a sample (or possibly a few of them) as well as decrease an internal counter. When this counter is zero, it will set the abovementioned flag so that the idle init routine will perform another call to the playback code.<br /><br />Another possibility is to let the init routine do the actual raw pcm, and allow it to be interrupted by the playback routine. This is actually how Battletoads and Skate or Die 2 handle their sample playback, and it works ok. However, this method has the serious drawback of pausing the played raw pcm waveform for several scanlines, most likely causing an annoying buzz in the waveform, which you may wish to avoid in other cases.<br /><br />However, I am a bit confused by this comment of yours:<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />6.Allow the play rate to be increased dramatically, i.e. thousands of times a second.<br />...<br />Approaches 5 and 6 are radical and would probably require even more changes to the NSF sound code.<br /></div><br /><br />As this is perfectly allowed, and was actually a requirement for the "re-entrant play routine" solution considered earlier. To quote the NSF spec:<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Once the tune has been initalized, it can now be played.  To do this,<br />simply call the play address several times a second.  How many times<br />per second is determined by offsets 006eh and 006fh in the file.<br />These bytes denote the speed of playback in 1/1000000ths of a second.  <br />For the "usual" 60Hz playback rate, set this to 411ah.  <br /><br />To generate a differing playback rate, use this formula:<br /><br /><br />         1000000<br />PBRATE= ---------<br />          speed<br /><br />Where PBRATE is the value you stick into 006e/006fh in the file, and<br />speed is the desired speed in hertz.<br /></div><br /><br />For example, to get a 15.625 kHz playback (one samples/scanline on a PAL NES), PBRATE would equal 64. The only problem would be that the sample rate wouldn't be very easily adjustable due to the the non-linear 1/x formulae, but I suppose we can live with that.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=106">Bananmos</a> — Sat Sep 16, 2006 1:54 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2006-09-16T12:48:00-07:00</updated>
<published>2006-09-16T12:48:00-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1090&amp;p=17560#p17560</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1090&amp;p=17560#p17560"/>
<title type="html"><![CDATA[NSF Support for PCM Samples]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1090&amp;p=17560#p17560"><![CDATA[
Argh, I should have included my first draft of the posting, since I covered some other approaches and why I didn't consider them viable. Here are the relevant bits:<br /><br />4.Init routine returns normally. NSF player then invokes play routine regularly, even if previous call hasn't returned. On first call to play, NSF itself would enter its "idle loop" and never return. On calls after this, NSF would do the real play routine and return normally:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">Init ----<br />         |<br />    &lt;----<br />    <br />   <br />Play ----<br />         | &#40;doesn't return&#41;<br />         |<br />         |<br />       Play ----  &#40;first call is interrupted with second one&#41;<br />                |<br />           &lt;----  &#40;this call returns normally&#41;<br />         |<br />         |<br />         |<br />       Play ----<br />                |<br />           &lt;----<br />         .<br />         :</div><br />5.Introduce a new status flag that can be polled to find out when 1/60 second has passed and have init routine poll this and never return.<br /><br />6.Allow the play rate to be increased dramatically, i.e. thousands of times a second.<br /><br />Approach 4 won't work as at least one legitimate NSF's play routine takes longer than 1/60 second before returning and can't handle being interrupted (mitokou.nsf). Even if it didn't break compatibility, it is considerably more complex for the NSF ripper to code.<br /><br />Approaches 5 and 6 are radical and would probably require even more changes to the NSF sound code.<br /><br />I've re-implemented approach 1 (init routine never returns) a second time today and strongly support its simplicity.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Sat Sep 16, 2006 12:48 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bananmos]]></name></author>
<updated>2006-09-16T03:13:35-07:00</updated>
<published>2006-09-16T03:13:35-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1090&amp;p=17529#p17529</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1090&amp;p=17529#p17529"/>
<title type="html"><![CDATA[NSF Support for PCM Samples]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1090&amp;p=17529#p17529"><![CDATA[
I'd just like to ask why you ditched the solution of allowing the play routine to be re-entrant? You definitely seemed to favor it the last time this was discussed, and it still seems to be the cleanest alternative in my opinion.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=106">Bananmos</a> — Sat Sep 16, 2006 3:13 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2006-09-16T01:09:19-07:00</updated>
<published>2006-09-16T01:09:19-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1090&amp;p=17527#p17527</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1090&amp;p=17527#p17527"/>
<title type="html"><![CDATA[NSF Support for PCM Samples]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1090&amp;p=17527#p17527"><![CDATA[
Argh, I had revisited the issue of PCM support today and thought I had my mind made up, but then re-read this thread and became undecided again. The three approaches that remain viable in my mind:<br /><br />1.Init routine never returns. NSF player interrupts it periodically to call play routine, then resumes where it left off.<br /><br />2.Init routine returns normally. If new idle routine is provided, NSF player calls it and interrupts it periodically to call play routine, then resumes where it left off (as above). Idle routine should be allowed to return on tracks that don't need PCM, in order to reduce CPU usage of NSF player (on mine, a non-returning init routine makes things around 10x slower).<br /><br />3.Same as 1, but interruption of a non-returning init routine is only enabled after init routine writes to special enable address.<br /><br />Approach 1 requires a delay before the play routine starts being called, since many normal NSFs don't tolerate having play called before init returns. I had a program scan about 1400 NSFs from one of the recent archives posted here. The following files took a frame or longer to return from the init routine (- = never returned):<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">-       1991 Du Ma Racing<br />-       Baltron<br />2.0     Bard's Tale 2<br />-       Battleship<br />1.1     Bill Elliott's NASCA Challenge<br />-       Bugs Bunny Crazy Castle<br />1.4     Deep Dungeon 4<br />-       Dorae Bomb<br />-       Ferrari Grand Prix Challenge<br />-       Great Wall<br />3.8     Musashi no Bouken<br />27.4    Years Behind &#40;varied greatly, this was the highest&#41;</div><br />All of these seemed to play fine if the play routine was called four frames after the init routine was invoked, even for those whose init routine hadn't returned. This pretty much settles the compatibility issue for me, which was what approaches 2 and 3 were to work around. So I like approach 1 for its simplicity, but if there are still concerns of breaking current NSF rips, approach 3 seems cleaner than 2, partly because it doesn't require any changes to the file format. The special address in approach 2 should be in already-existing memory, to allow for easier implementation on a NES.<br /><br />For any of the approaches, we need to decide whether the NSF player saves and restores registers around invocation of the play routine  (i.e. PHP, PHA, TXA, PHA, TYA, PHA, JSR PLAY, PLA, TAY, PLA, TAX, PLA, PLP). If it does, this makes NSF ripping easier. I could write a test NSF that verified that a player was saving and restoring registers properly, which would go a long way to ensuring proper support.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Sat Sep 16, 2006 1:09 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Hayamaru3000]]></name></author>
<updated>2006-08-01T00:41:11-07:00</updated>
<published>2006-08-01T00:41:11-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1090&amp;p=15864#p15864</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1090&amp;p=15864#p15864"/>
<title type="html"><![CDATA[NSF Support for PCM Samples]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1090&amp;p=15864#p15864"><![CDATA[
No!lol.Sorry so does that mean nobody right now is working on the NSF Spec on adding raw pcm support on it? And If not, how come?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=406">Hayamaru3000</a> — Tue Aug 01, 2006 12:41 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[NewRisingSun]]></name></author>
<updated>2006-07-31T23:04:36-07:00</updated>
<published>2006-07-31T23:04:36-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1090&amp;p=15861#p15861</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1090&amp;p=15861#p15861"/>
<title type="html"><![CDATA[NSF Support for PCM Samples]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1090&amp;p=15861#p15861"><![CDATA[
No and no. Just let go, okay?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=133">NewRisingSun</a> — Mon Jul 31, 2006 11:04 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Hayamaru3000]]></name></author>
<updated>2006-07-29T17:10:58-07:00</updated>
<published>2006-07-29T17:10:58-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1090&amp;p=15789#p15789</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1090&amp;p=15789#p15789"/>
<title type="html"><![CDATA[NSF Support for PCM Samples]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1090&amp;p=15789#p15789"><![CDATA[
I'm sorry I was one of the people who request the Punch-Out arcade voice samples.Hey is it possible to add that VLM5030 soundchip as an Expansion chip for the nsf spec?And does that mean that someone is currently working on the NSF spec to add Raw PCM support into it?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=406">Hayamaru3000</a> — Sat Jul 29, 2006 5:10 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[NewRisingSun]]></name></author>
<updated>2006-07-29T16:56:27-07:00</updated>
<published>2006-07-29T16:56:27-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1090&amp;p=15788#p15788</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1090&amp;p=15788#p15788"/>
<title type="html"><![CDATA[NSF Support for PCM Samples]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1090&amp;p=15788#p15788"><![CDATA[
By the way, since three people (possibly all the same person) have now emailed asking for a "rip" of Punch-Out Arcade with "all the voice samples": <br /><br />The Arcade version uses raw PCM for the crowd noises (so it can modify the samples to change their volume). Until the raw PCM thing is finalized in the spec, I'm not going to waste time on this. The speech voice samples are produced by the VLM5030 chip, which the NES doesn't have, and thus a NSF can't include them either.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=133">NewRisingSun</a> — Sat Jul 29, 2006 4:56 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Hayamaru3000]]></name></author>
<updated>2006-07-28T17:45:45-07:00</updated>
<published>2006-07-28T17:45:45-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1090&amp;p=15767#p15767</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1090&amp;p=15767#p15767"/>
<title type="html"><![CDATA[NSF Support for PCM Samples]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1090&amp;p=15767#p15767"><![CDATA[
My mistake I can hear it now on NotSo.It's that I had "Don't wait for play return" checked on Notso.Once I uncheceked it I heard the voice samples on Superstar Pro Wrestling NSF.Still though wouldn't it be nice if the author of NotSo had the ability to play raw pcm samples like your player does?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=406">Hayamaru3000</a> — Fri Jul 28, 2006 5:45 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Quietust]]></name></author>
<updated>2006-07-28T16:51:02-07:00</updated>
<published>2006-07-28T16:51:02-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1090&amp;p=15765#p15765</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1090&amp;p=15765#p15765"/>
<title type="html"><![CDATA[NSF Support for PCM Samples]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1090&amp;p=15765#p15765"><![CDATA[
It is highly doubtful that the Superstar Pro Wrestling NSF makes use of the raw PCM method I use in my player, since I introduced that method back in February and said NSF was ripped <strong>over 4 years ago</strong>.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7">Quietust</a> — Fri Jul 28, 2006 4:51 pm</p><hr />
]]></content>
</entry>
</feed>