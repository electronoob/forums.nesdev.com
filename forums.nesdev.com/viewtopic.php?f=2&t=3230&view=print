<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Fast division by 15 (or 240?)?</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Fast division by 15 (or 240?)?</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=3230">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=3230</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Mon Apr 16, 2007 2:38 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Fast division by 15 (or 240?)?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Does anyone know of a way to quickly divide by 15?
<br />
<br />I imagine there are ways to optimize division by constants, but I can't seem to think of anything that works. Ah, I need the remainder too.
<br />
<br />Thanks for the help!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Apr 16, 2007 2:51 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Does this have anything to do with the Atari 2600? And what is the domain of the numerator? 0 to 255? More? Negative numbers?
<br />
<br />What do you get when you multiply by 17?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Mon Apr 16, 2007 3:12 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">Does this have anything to do with the Atari 2600?</div><br />No, no, no, no... Are you asking because of the horizontal positioning of sprites? No, I have already found a good way to do that, but I won't code anything for the 2600 until I have finished something for the NES anyway.<br /><br />It has to do with metatiles (2x2 tiles) being drawn to the name tables, which can hold only 15 rows of those, so this division is for the correlation of level map metatiles with name table metatiles. I may need to divide camera coordinates by 240 too (to get the value of the Y scroll register)... I'm still doing my math, but I'll need at least one of those. Unless I decide to keep track of 2 different Y coordinates (which was my first option), but I don't want that.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">And what is the domain of the numerator? 0 to 255? More? Negative numbers?</div><br />Up to 4095, always positive.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">What do you get when you multiply by 17?</div>
<br />I don't see where you're going... I guess I'd get an approximation of what I want, with the remainder in the lower byte and the result in the following one(s)? Not sure. I don't think approximations are good enough for this, because placing metatiles in the wrong row is a VERY noticeable glitch! =)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Mon Apr 16, 2007 3:29 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If you have 512 free bytes -- you can't get much faster than a LUT
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">divide_by_15:<br />&nbsp; LDX divisor<br />&nbsp; LDA division15_table,X<br />&nbsp; STA quotient<br />&nbsp; LDA remainder15_table,X<br />&nbsp; STA remainder<br />&nbsp; RTS<br /></div>
<br />
<br />
<br />EDIT
<br />
<br />Even if you need to divide a 16-bit number, you can run the high and low bytes through the LUT, then combine the results.... then run the remainder through the LUT and combine it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>dvdmth</b> [ Mon Apr 16, 2007 3:46 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I wouldn't use divide-by-15 for this purpose.  Instead, have two different Y position variables, one that keeps track of where you are in the level map (absolute position) and one that keeps track of where you are in the nametables (relative position).  When you scroll vertically, adjust both the absolute and relative Y-positions at the same time.  If the relative position drops below zero or exceeds 14, then switch nametables (or wrap around in the same nametable, if you're using vertical mirroring).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Mon Apr 16, 2007 3:54 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />512 bytes is a lot of space to waste with a calculation that has to be performed once per frame... I guess I'll either have a regular division algorithm (shift and subtract), or have the second Y coordinate, maintained to point to valid name table areas.
<br />
<br />A regular division algorithm should be fast enough, since 15 is just a 4-bit number. I may have to divide by 240 though, but a 16-bit by 8-bit division should still be fast... as I said, it's no big deal, only once per frame.
<br />
<br />Thanks for the help, sorry to bother ya! =)
<br />
<br />EDIT: dvdmth: My original design was exactly like that. I may just stick with it. It just feels more "professional" to have everything calculated from one variable.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Apr 16, 2007 6:12 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />A lot of games divide the world into 16x15-cell "acres" and then store coordinates as (acreX, acreY, pixelX, pixelY).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Mon Apr 16, 2007 6:24 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thing is I have my level stored in the form of "screens", which <strong>must</strong> be 256x256 pixels, because of the way they are made up. My camera's coordinates are coordinates within this map, and the problem is in converting these coordinates into coordinates compatible with the name tables, that are 240 pixels high.
<br />
<br />I got it figured out, though. A divide by 240 with the shift-and-subtract method will be very fast (knowing that the divisor is 240 makes it possible to take many shortcuts), and I need to do this only when a new row or column of metatiles has to be drawn, which is not even every frame. So I think I'm fine. I got it all figured out now, really.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Mon Apr 16, 2007 9:17 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Just to let you guys know, I think I'll settle for this:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;ldx #$08<br />DivideBy240:<br />&nbsp; &nbsp;cmp #$78<br />&nbsp; &nbsp;bcc .Negative<br />.Positive:<br />&nbsp; &nbsp;sbc #$78<br />.Negative:<br />&nbsp; &nbsp;rol Result<br />&nbsp; &nbsp;rol<br />&nbsp; &nbsp;dex<br />&nbsp; &nbsp;bne DivideBy240</div>
<br />This will divide a 16-bit number whose lower byte is in a zero page location "Result" and high byte is in A. In the end, "Result" holds (duh) the result and the remainder is in A (in my case, ready to be used as Y scroll). The 16-bit value can have a maximum value of 61439 though, more than that does not work, that's is intentional, as supporting larger values would make everything slower. That means I can have 240 256-pixels high screens vertically in my level map, and that's a lot, so this is not a problem at all.
<br />
<br />The worst case takes 145 cycles, not bad. When the code is unrolled this count drops down to 104, but I'm not sure if I should do that. Problem is that when I need to do this division, I also have to do some heavy map decoding, which means I should save all the time I possibly can.
<br />
<br />Anyway, from this result I'll know the exact spot in the name tables that correspond to a spot in my level map, which is what I wanted.
<br />
<br />EDIT: I don't know if I could get any extra time with this, but I just realized I will only need the lower bit of the result (to know if I sould display the top name tables or to the bottom ones, and to know where to draw metatiles), and the remainder (to use as Y scroll and to calculate the address for metatiles). I don't really need bits 1-7 of the result, but I don't think there is a way to get some speed, as the input has to be shifted anyway, and the output is shifted into it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Tue Apr 17, 2007 9:19 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Something that immediately comes in my mind is to divide by 16 by shifting it right 4 times, then correct the thing to be divided by 15 instead of 16 by doing some trick to multiply the result by the fraction 16/15 in some tricky way that could be done in a table. If the result is an integer, only a certain range of values would need any correction at all. I guess this is fine for small and limited range of values, but could be weird for very large numbers.
<br />
<br />Something else is repeated substraction by 15, but I don't think it's fast. It works fine and is easy to code and fully understand, tough.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>dvdmth</b> [ Tue Apr 17, 2007 10:52 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">My original design was exactly like that. I may just stick with it. It just feels more "professional" to have everything calculated from one variable.</div>
<br />The technique I described is quite common - I've seen it used in numerous games, including Blaster Master (which uses 256x256 screens BTW) and Final Fantasy.  I don't think there's anything "unprofessional" about this method, if commercial game developers made use of it.
<br />
<br />By abstracting the PPU screen coordinates from the level map coordinates, you remove all dependencies on the PPU screen size limitations.  For example, if you want your level map to wrap vertically (instead of having hard boundaries at the top and bottom), you would normally have to restrict the vertical map size to a multiple of 15 blocks.  By keeping the PPU scroll values separate from the map position, your level map can be ANY size and still wrap vertically.  Both games I mentioned have maps that wrap in both directions, and neither uses a multiple of 15 for the vertical map size (they use a power of 2 instead, which is more convenient).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Tue Apr 17, 2007 12:19 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">Something that immediately comes in my mind is to divide by 16 by shifting it right 4 times, then correct the thing to be divided by 15 instead of 16 by doing some trick to multiply the result by the fraction 16/15 in some tricky way that could be done in a table.</div><br />I thought of that too, and tried to find a way to do it for hours... without success, I posted the question here! =)<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Something else is repeated substraction by 15, but I don't think it's fast.</div><br />Yeah, that'd be too slow...<br /><br /><div class="quotetitle">dvdmth wrote:</div><div class="quotecontent">For example, if you want your level map to wrap vertically (instead of having hard boundaries at the top and bottom), you would normally have to restrict the vertical map size to a multiple of 15 blocks.</div>
<br />You have a good point, but that's not necessarily true... The level wrapping should not be related to the destination address of metatiles, but to the source address. In my design at least, it'd be no problem to, say, after vertical screen number 11 is processed, read screen 0 again as if it were screen 12. It would keep rendering just fine. I think this is just a matter of how you read/decode the level map.
<br />
<br />Keeping a separate Y coordinate for the camera means using annoying compares to see if it falls into the "forbidden zone" that are the attribute tables, and fixing the value if it does. And as I see it, having two different variables with information that is extremely correlated could result in serious bugs if their updating isn't perfectly synchronized to each other.
<br />
<br />I think I'd rather maintain only one variable, and have whatever is related to it calculated on the fly from it, as long as this does not impose a big performance penalty, which I don't think is the case.
<br />
<br />I'm sure that having 2 variables is a valid way to go about this (as you said, it was used in commercial games with success before), but I'm feeling more comfortable with the other method.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>dvdmth</b> [ Tue Apr 17, 2007 5:35 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Would you like an algorithm that performs a mod-30 operation (i.e. it takes a 16-bit input and calculates the remainder when divided by 30)?  I think this would serve your purposes, as you can use values 0-14 for one nametable and 15-29 for the other.  I have a draft of the algorithm (takes around 70 cycles to execute), but I need to test it before I can post it here.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Tue Apr 17, 2007 6:38 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Tip: The numbers 256 and 4096 are congruent to 16 (mod 30). A number 0xDCBA, or D*4096 + C*256 + B*16 + A, is congruent to (D + C + B)*16 + A (mod 30).
<br />
<br />This one's not tested full-coverage (0 to 65535), but I've tested it to an extent using the same test harness I used for my BCD algorithm:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.export mod30<br /><br />mod30In = $0000<br /><br />;;<br />; Calculates the remainder of a number / 30<br />; in roughly 70 cycles.<br />; For a four digit hex number $DCBA,<br />; D * 4096 + C * 256 + B * 16 + A<br />; is congruent to &#40;D + C + B&#41; * 16 + A &#40;mod 30&#41;.<br />; @param mod30In a 16-bit number <br />; @return the number mod 30, in register A<br />mod30:<br /><br />; Calculate C * 16<br />&nbsp; lda mod30In+1<br />&nbsp; asl a<br />&nbsp; asl a<br />&nbsp; asl a<br />&nbsp; asl a<br /><br />; Add D * 16<br />&nbsp; clc<br />&nbsp; adc mod30In+1<br />&nbsp; and #$F0<br /><br />; At each addition, make 256 wrap around to 16<br />; because 256 is congruent to 16 &#40;mod 30&#41;.<br />&nbsp; bcc :+<br />&nbsp; sbc #240<br />:<br /><br />; Add B * 16 + A<br />&nbsp; adc mod30In<br />&nbsp; bcc :+<br />&nbsp; sbc #240<br />:<br /><br />; Subtract off portions greater than 30<br />&nbsp; cmp #240<br />&nbsp; bcc :+<br />&nbsp; sbc #240<br />:<br />&nbsp; cmp #120<br />&nbsp; bcc :+<br />&nbsp; sbc #120<br />:<br />&nbsp; cmp #60<br />&nbsp; bcc :+<br />&nbsp; sbc #60<br />:<br />&nbsp; cmp #30<br />&nbsp; bcc :+<br />&nbsp; sbc #30<br />:<br />&nbsp; rts<br /></div>

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>