<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=12&amp;t=11039" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2014-02-24T02:58:41-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=12&amp;t=11039</id>
<entry>
<author><name><![CDATA[ikari_01]]></name></author>
<updated>2014-02-24T02:58:41-07:00</updated>
<published>2014-02-24T02:58:41-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11039&amp;p=126035#p126035</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11039&amp;p=126035#p126035"/>
<title type="html"><![CDATA[Re: MSU1 A/V synchronization]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11039&amp;p=126035#p126035"><![CDATA[
Sweet. =) I can imagine using this (487.x for $213F.4 == 0, 482.x for $213F.4 == 1). Breaks the edge case where the user switches 50/60Hz mid-game but I'd say we can safely ignore that. It could lead to problems with additional hardware that patches $213F.4 though, like the Ultra16 and the SuperCIC with additional optional circuitry.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3966">ikari_01</a> — Mon Feb 24, 2014 2:58 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[byuu]]></name></author>
<updated>2014-02-23T15:59:18-07:00</updated>
<published>2014-02-23T15:59:18-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11039&amp;p=125998#p125998</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11039&amp;p=125998#p125998"/>
<title type="html"><![CDATA[Re: MSU1 A/V synchronization]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11039&amp;p=125998#p125998"><![CDATA[
(315/88*6000000)/44100 = 487.012987013<br />21281370/44100 = 482.570748299<br /><br />487.012987013*65536 = 31916883.116883968 ~= 31916883<br />482.570748299*65536 = 31625756.560523264 ~= 31625757<br /><br />(315/88*6000000)*65536 = 1407534545454.545454545 ~= 1407534545455<br />21281370*65536 = 1394695864320<br /><br />1407534545455 / 31916883 = 44100.000161513<br />1394695864320 / 31625757 = 44099.999387208<br /><br />I'd say that's pretty damned close :D<br /><br />Now if we have to fit it into a 32-bit number ...<br /><br />487.012987013*128 = 62337.662337664 ~= 62338<br />482.570748299*128 = 61769.055782272 ~= 61769<br /><br />(315/88*6000000)*128 = 2749090909.090909091 ~= 2749090909<br />21281370*128 = 2724015360<br /><br />2749090909 / 62338 = 44099.761124836<br />2724015360 / 61769 = 44100.039825803<br /><br />Pseudo-algorithm:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">//the number is big enough it won't exceed max twice, so you don't have to initialize it at reset if you don't want to<br />uint32_t counter = 0;<br /><br />void pin1_strobe() {  //21.47mhz or 21.28mhz<br />  counter += (NTSC ? 62338 : 61769);<br />  if(counter &gt;= (NTSC ? 2749090909 : 2724015360)) {<br />    counter -= (NTSC ? 2749090909 : 2724015360);<br />    sd2snes_output_one_audio_sample();<br />  }<br />}</div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=375">byuu</a> — Sun Feb 23, 2014 3:59 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[ikari_01]]></name></author>
<updated>2014-02-23T13:00:26-07:00</updated>
<published>2014-02-23T13:00:26-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11039&amp;p=125974#p125974</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11039&amp;p=125974#p125974"/>
<title type="html"><![CDATA[Re: MSU1 A/V synchronization]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11039&amp;p=125974#p125974"><![CDATA[
Hmmm...<br />59378938/122500 = 484.72602448979591836734<br /><br />somewhere inbetween, lol.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3966">ikari_01</a> — Sun Feb 23, 2014 1:00 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2014-02-23T11:55:50-07:00</updated>
<published>2014-02-23T11:55:50-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11039&amp;p=125962#p125962</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11039&amp;p=125962#p125962"/>
<title type="html"><![CDATA[Re: MSU1 A/V synchronization]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11039&amp;p=125962#p125962"><![CDATA[
<div class="quotetitle">byuu wrote:</div><div class="quotecontent"><br />We could take a nuclear option for now and declare that MSU1 perfect-sync is only for NTSC titles, and worry about PAL perfect-sync support only if and when a strong desire for it emerges.<br /></div><br />That's what Konami ended up deciding for VRC IRQs.<br /><br />Another option is to have the MSU1 default to NTSC and snoop $213F reads to see whether to switch to PAL.<br /><br /><div class="quotetitle">byuu wrote:</div><div class="quotecontent"><br />What I really love about the NTSC / 487 option is that it doesn't matter whether you output at 44100hz (your own oscillator) or at NTSC / 487 = 44101hz (reuse SNES oscillator) ... the time to drift by a noticeable degree is longer than entire movies, so it doesn't matter at all in practice.<br /></div><br />That and a feature-length sprite animation could use one .pcm per chapter.<br /><br />But I'm inclined to just stick with /487, much as PlayStation sample rates are slightly off (44056 Hz, accounting for the 1000/1001 factor in NTSC frame rates).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Sun Feb 23, 2014 11:55 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[byuu]]></name></author>
<updated>2014-02-23T10:53:58-07:00</updated>
<published>2014-02-23T10:53:58-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11039&amp;p=125953#p125953</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11039&amp;p=125953#p125953"/>
<title type="html"><![CDATA[Re: MSU1 A/V synchronization]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11039&amp;p=125953#p125953"><![CDATA[
&lt;nocash&gt; If you want exact 44100Hz then you could also use fixed-point additions to get 487.012987013 steps on NTSC.<br /><br />Oh man, why didn't I think of that? That's a brilliant idea!<br /><br />ikari, how hard would it be to do fixed-point step additions on the sd2snes?<br /><br />On each clock tick, add 487.012987013 for NTSC, and 482.570748299 for PAL. When the value is &gt;= 44100, output a sample and subtract 44100.<br /><br />Obviously to handle the floating-point, we'd store the fractional bits in the low 16-bits and the whole number bits in the upper 16-bits.<br /><br />If you could do this, that would be absolutely perfect!! :D<br /><br />&lt;nocash&gt; And for PAL, the official .pcm specification would change from 44100Hz to 43698.911Hz, right?<br /><br />Yes. But I still want to put this as the worst case for now. If we have to do it, we will.<br /><br />Note that keeping the same clock rate for NTSC as PAL60 means that you will need different PCM files for NTSC versus PAL60 if you drive it by the SNES master clock. That could be an issue. But we could make an &quot;NTSC-&gt;PAL60 PCM converter tool&quot; for people to use.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=375">byuu</a> — Sun Feb 23, 2014 10:53 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[nocash]]></name></author>
<updated>2014-02-23T10:49:25-07:00</updated>
<published>2014-02-23T10:49:25-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11039&amp;p=125951#p125951</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11039&amp;p=125951#p125951"/>
<title type="html"><![CDATA[Re: MSU1 A/V synchronization]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11039&amp;p=125951#p125951"><![CDATA[
<div class="quotetitle">byuu wrote:</div><div class="quotecontent"><br />Ultimately ... if the only option is a single divider, I'd suggest 487 everywhere. It's almost perfect for NTSC. And I suspect most if not all MSU1 titles will be NTSC or PAL60 games.<br /></div><br />I like that idea, too.<br /><br />For NTSC, the official .pcm specification would change from 44100Hz to 44101.17Hz, right?<br />That change won't disturb older 44100Hz based NTSC software. And even most newer software could stay using 44100Hz source data (or if people should want microsecond-perfect synchronization, then they could resample their source data to 44101.17Hz).<br /><br />And for PAL, the official .pcm specification would change from 44100Hz to 43698.911Hz, right?<br />That change might slightly disturb older 44100Hz based PAL software - but I guess there isn't much fine-tuned PAL software yet anyways (Super Road Blasters maybe). And any newer PAL programs could deal with the new 43698.911Hz value. That's great.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5211">nocash</a> — Sun Feb 23, 2014 10:49 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[nocash]]></name></author>
<updated>2014-02-23T10:51:28-07:00</updated>
<published>2014-02-23T10:29:59-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11039&amp;p=125948#p125948</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11039&amp;p=125948#p125948"/>
<title type="html"><![CDATA[Re: MSU1 A/V synchronization]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11039&amp;p=125948#p125948"><![CDATA[
<div class="quotetitle">byuu wrote:</div><div class="quotecontent"><br />This is very much well within intended use cases, but perhaps not ideal for the theoretical &quot;watch an entire movie on MSU1&quot; scenario.<br /></div><br />That is no problem - at least not once when sd2snes and higan do agree on using the same sample rate.<br />At that point, movie players could simply adopt themselves to that sample rate.<br /><br /><div class="quotetitle">byuu wrote:</div><div class="quotecontent"><br />Note that this only applies to the difference between PCM files played back at 44100hz versus SNES consoles playing back the PCM files.<br />On actual hardware, so long as you scale your audio correctly, no drifting will ever occur.<br /></div><br />No please. If there is an agreement to use, for example, 44123Hz for .pcm files then that should be considered as the official rate which has to  be used on both emulators and real hardware.<br />In that case devrs would need to resample their audio files to 44123Hz before converting them to .pcm format. So that no drifting would occur.<br /><br />Assuming that you won't like that 44123Hz example, you also do this:<br /><br /><div class="quotetitle">byuu wrote:</div><div class="quotecontent"><br />A possible consideration: would it be possible to output one sample after 482 PAL clocks, the next sample after 483 PAL clocks, and then repeat? Yes, every other sample will be faster by 0.2074689%. I don't know how audible that would be to humans. But if that worked, we'd end up with much less drifting. It'd be effectively 44106.513685214hz.<br /></div><br />That isn't audible to humans.<br />If you want exact 44100Hz then you could also use fixed-point additions to get 487.012987013 steps on NTSC.<br /><br />Of course you would still need to resample audio for movies.<br />If the source movie has 44.1kHz and &quot;slightly lower frame rate&quot; than SNES...<br />then one could solve that by treating the 44.1kHz source as &quot;slightly higher than 44.1kHz&quot;...<br />which would mean that one would need to downsample the audio from to &quot;slightly higher than 44.1kHz&quot; to 44.1kHz.<br />Did somebody (not) understand that concept?<br /><br />Some thoughts about PAL / NTSC:<br /><br />Using the same divider for both PAL and NTSC has two advantages:<br />- It would work for NTSC and PAL60.<br />- One wouldn't need different dividers in PAL and NTSC cartridges.<br />Downside is that PAL has slower master clock so .pcm playback would have lower sample rate on PAL than NTSC (if everybody is aware of that &quot;feature&quot; than it could be dealt with; NTSC games wouldn't even need to be aware of it and work automatically on PAL60).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5211">nocash</a> — Sun Feb 23, 2014 10:29 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[byuu]]></name></author>
<updated>2014-02-23T10:16:05-07:00</updated>
<published>2014-02-23T10:16:05-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11039&amp;p=125947#p125947</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11039&amp;p=125947#p125947"/>
<title type="html"><![CDATA[Re: MSU1 A/V synchronization]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11039&amp;p=125947#p125947"><![CDATA[
Is it possible to tell the difference between NTSC and regular PAL50 in your firmware?<br /><br />I would imagine you'd need your boot BIOS to read $213f and save the bit somewhere to be used by the MSU1 support.<br /><br />What I'm thinking would be ideal:<br />Decided on option: NTSC -&gt; pin 1 (master clock) / 487 = 44101hz<br />Best option: PAL -&gt; pin 1 (master clock) / 482.5 {every two samples: 482x A, 1x A+B/2, 482x B} = 44106hz<br />Barring the above: PAL -&gt; pin 1 (master clock) / 483 = 44061hz<br />Barring the above: PAL -&gt; pin 1 (master clock) / 487 = 43699hz<br />Wildcard: just output at pure 44100hz using your own oscillator in PAL mode. Won't sync to the CPU perfectly, though.<br /><br />NTSC / 487 is a one second difference every 44100 seconds.<br />&lt;best&gt; PAL / 482.5 is a one second difference every 7350 seconds.<br />&lt;better&gt; PAL / 483 is a one second difference every 1131 seconds.<br />&lt;worst&gt; PAL / 487 is a one second difference every 110 seconds.<br /><br />Ultimately ... if the only option is a single divider, I'd suggest 487 everywhere. It's almost perfect for NTSC. And I suspect most if not all MSU1 titles will be NTSC or PAL60 games.<br /><br />We could take a nuclear option for now and declare that MSU1 perfect-sync is only for NTSC titles, and worry about PAL perfect-sync support only if and when a strong desire for it emerges.<br /><br />What I really love about the NTSC / 487 option is that it doesn't matter whether you output at 44100hz (your own oscillator) or at NTSC / 487 = 44101hz (reuse SNES oscillator) ... the time to drift by a noticeable degree is longer than entire movies, so it doesn't matter at all in practice. Anything you can fit on the 4GB of storage will stay synced, even taken to ad absurdum extremes of entire movies. And because of that, we don't have to change the spec for NTSC! :D<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=375">byuu</a> — Sun Feb 23, 2014 10:16 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[ikari_01]]></name></author>
<updated>2014-02-23T09:32:34-07:00</updated>
<published>2014-02-23T09:32:34-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11039&amp;p=125943#p125943</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11039&amp;p=125943#p125943"/>
<title type="html"><![CDATA[Re: MSU1 A/V synchronization]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11039&amp;p=125943#p125943"><![CDATA[
I'd just stick with 487 because otherwise you'd lose sync at PAL60 as opposed to NTSC, and as far as I can tell autodetecting PAL60 vs. NTSC is impossible for SNES software.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3966">ikari_01</a> — Sun Feb 23, 2014 9:32 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[byuu]]></name></author>
<updated>2014-02-23T08:05:19-07:00</updated>
<published>2014-02-23T08:05:19-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11039&amp;p=125939#p125939</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11039&amp;p=125939#p125939"/>
<title type="html"><![CDATA[Re: MSU1 A/V synchronization]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11039&amp;p=125939#p125939"><![CDATA[
Cool! I love progress. Let's work off proposal 2, then.<br /><br />So for NTSC: 315 / 88 * 6000000 / 44100 = 487.012987013<br /><br />But for PAL (and PAL60): 21281370 / 44100 = 482.570748299<br />21281370 / 482 = 44152.219917012<br />21281370 / 483 = 44060.807453416<br /><br />Let's round that to being off by 40 samples per second. That means we drift by one second every 1102 seconds, or every 18.375 minutes.<br />This is very much well within intended use cases, but perhaps not ideal for the theoretical &quot;watch an entire movie on MSU1&quot; scenario.<br />Note that this only applies to the difference between PCM files played back at 44100hz versus SNES consoles playing back the PCM files.<br />On actual hardware, so long as you scale your audio correctly, no drifting will ever occur.<br /><br />A possible consideration: would it be possible to output one sample after 482 PAL clocks, the next sample after 483 PAL clocks, and then repeat? Yes, every other sample will be faster by 0.2074689%. I don't know how audible that would be to humans.<br /><br />But if that worked, we'd end up with much less drifting. It'd be effectively 44106.513685214hz.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=375">byuu</a> — Sun Feb 23, 2014 8:05 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[ikari_01]]></name></author>
<updated>2014-02-23T07:49:17-07:00</updated>
<published>2014-02-23T07:49:17-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11039&amp;p=125937#p125937</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11039&amp;p=125937#p125937"/>
<title type="html"><![CDATA[Re: MSU1 A/V synchronization]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11039&amp;p=125937#p125937"><![CDATA[
I'm all for proposal no. 2 as it takes into account possible clock differences between consoles and during operation. Though I'd prefer running at master clock/487 instead of being fixed to NTSC.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3966">ikari_01</a> — Sun Feb 23, 2014 7:49 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[byuu]]></name></author>
<updated>2014-02-23T05:33:38-07:00</updated>
<published>2014-02-23T05:33:38-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11039&amp;p=125930#p125930</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11039&amp;p=125930#p125930"/>
<title type="html"><![CDATA[Re: MSU1 A/V synchronization]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11039&amp;p=125930#p125930"><![CDATA[
So is there any reason resampling the audio stream from an NTSC video by (NTSC framerate / SNES framerate) won't work?<br /><br />That gives us two options:<br /><br />1. run a separate oscillator at 44100hz. With the SNES CPU oscillator's tolerance (~10ppm?) that's a max drift of 210 clocks/sec. That means we'd have to run for 102272 seconds (1704.5 minutes) to drift by a full second in the absolute worst possible case.<br /><br />2. run at NTSC clock / 487. That means we'd stay perfectly in sync forever, but compared to the source PCM file, it'd drift by one second every 44100 seconds (every 735 minutes.)<br /><br />Personally, I think both solutions are fine. Maximum theoretical run-time would be 120 minutes for a full 4GB of video data. Maximum real-world run-time will still be under 2 minutes for what MSU1 is intended for.<br /><br />Barring any flaws in this thinking, I'd like to keep the spec at 44100hz officially. It'd be ideal to not change it unless we have to.<br /><br /><div class="quotetitle">nocash wrote:</div><div class="quotecontent"><br />No comment on that.<br /></div><br /><br />And yet your post is comment <a href="http://forums.nesdev.com/viewtopic.php?p=125928#p125928" class="postlink">#125908</a><br /><br />Could you please at least keep your passive aggressive responses in PM instead of derailing this thread? We're busy trying to address your concern in this thread.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=375">byuu</a> — Sun Feb 23, 2014 5:33 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[nocash]]></name></author>
<updated>2014-02-23T04:48:33-07:00</updated>
<published>2014-02-23T04:48:33-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11039&amp;p=125928#p125928</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11039&amp;p=125928#p125928"/>
<title type="html"><![CDATA[Re: MSU1 A/V synchronization]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11039&amp;p=125928#p125928"><![CDATA[
<div class="quotetitle">byuu wrote:</div><div class="quotecontent"><br /><div class="quotetitle">nocash wrote:</div><div class="quotecontent">44100 vs 43800 differs by almost 1%. So if you play a 120 second movie, then audio could become offsync by around 1 second towards end of the movie.<br /></div><br />It was designed to play short 1-2 minute openings<br />...<br />You're nitpicking and undermining my efforts<br />...<br />Perhaps I've underestimated how quickly a difference of 44100 -&gt; 44308 would accumulate. That would be a half-second desync in two minutes, which is pretty bad.</div><br />No comment on that.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5211">nocash</a> — Sun Feb 23, 2014 4:48 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2014-02-22T18:23:16-07:00</updated>
<published>2014-02-22T18:23:16-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11039&amp;p=125907#p125907</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11039&amp;p=125907#p125907"/>
<title type="html"><![CDATA[Re: MSU1 A/V synchronization]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11039&amp;p=125907#p125907"><![CDATA[
It's fixable on Super NES. The S-CPU can send the current animation position to the S-SMP, or the S-SMP can send the current song position to the S-CPU. That's all I'm asking for: a way for the S-CPU to read the elapsed time.<br /><br />As for data size, sync remains a problem whether the lip movement is FMV or just sprites.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Sat Feb 22, 2014 6:23 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[byuu]]></name></author>
<updated>2014-02-22T18:04:58-07:00</updated>
<published>2014-02-22T18:04:58-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11039&amp;p=125906#p125906</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11039&amp;p=125906#p125906"/>
<title type="html"><![CDATA[Re: MSU1 A/V synchronization]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11039&amp;p=125906#p125906"><![CDATA[
&lt;tepples&gt; Mostly I want characters' lips in the animations to match up with the voice acting in the cut scenes<br /><br />Again, please understand that it was never a design goal to play two-hour movies. Nobody wants to watch Avatar on their SNES.<br /><br />I agree that audio should not noticeably desync within a two-minute cutscene, but we need to be reasonable here: perfection is the enemy of good. If we make the sync requirements too complex, it will rule out certain hardware designs.<br /><br />Perhaps I've underestimated how quickly a difference of 44100 -&gt; 44308 would accumulate. That would be a half-second desync in two minutes, which is pretty bad.<br /><br />&lt;ikari&gt; Many people in PAL countries want 60Hz but do not have a genuine NTSC console, so they mod their consoles to 60Hz. This results in a quite large install base of &quot;PAL60&quot; consoles mimicking NTSC consoles (according to $213F) but running at 21.282MHz.<br /><br />A/V timing is a very important matter: you need to match the hardware and software to do it right. I don't believe it'd be wise to worry about this case officially.<br /><br />Is there a reason PAL users can't run an NTSC console? It seems easier than the myriad of soldering and switches necessary to pull off those PAL60 consoles.<br /><br />But if there's something simple we can do to perfectly sync A/V on all variations (NTSC60, PAL50, PAL60 and the probably non-existent NTSC50; all with and without interlace mode enabled), then we may as well do so.<br /><br />&lt;nocash&gt; Hmmm... but that doesn't explain your 44308.06Hz though.<br /><br />From my perspective, I see:<br /><br />60.0991482 / 59.9400599 = 1.002654123 * 44100 = 44217.046830479<br />The result is a drift of ~150ms per minute of video. Still too high.<br /><br />What I would rather see is to take an NTSC video, strip out the audio to a WAV file, and then scale it by 0.997353959<br /><br />What I am wondering is if we should drive the audio by exactly 44100hz, or try and sync it as a multiple against the CPU clock.<br /><br />21477272 / 487 is a really nice number. That's a drift of 1.5ms per minute. A human being wouldn't notice an issue at all even in a ten minute video.<br /><br />At ~60MB per minute of video (224x144@30fps), you can't exceed 73 minutes of video even if you wanted to. And given realistic download constraints, nobody is going to want to have a 4GB SNES game download hosted anywhere.<br /><br />Let's also consider that the SNES itself has this problem in a completely unfixable manner. There's a guy on Youtube who makes videos demonstrating this all the time. Two otherwise identical revision SNES consoles will have slight oscillator differences, which means long intro songs in eg Super Mario World 2 will desync slightly if you watch it all the way through. And that's official software.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=375">byuu</a> — Sat Feb 22, 2014 6:04 pm</p><hr />
]]></content>
</entry>
</feed>