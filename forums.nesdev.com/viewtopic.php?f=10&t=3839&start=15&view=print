<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - help on first demo?</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">help on first demo?</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=3839">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=3839</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>3</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Jan 17, 2008 8:36 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">blargg wrote:</div><div class="quotecontent">On most assemblers, .db $nn defines one or more bytes of constant data. .ds n is what reserves n bytes without specifying their values. BTW, it makes no sense to assign values to RAM, since the assembler doesn't generate any initialization code, just gives names to addresses. At the very least an assembler should give a warning if you attempt to give RAM an initial value.</div><br />True, if the RAM segment is set to a "BSS" type. But there is another type of RAM segment called "DATA" that is designed to be copied from ROM at reset time.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">As for clearing all RAM, it makes a lot of sense to me now, since you can declare a variable then rely on it being initialized to zero if you haven't used it yet.</div><br />And in fact, C guarantees that uninitialized variables at file scope are zero at the start of main().<br /><br /><div class="quotetitle">kyuusaku wrote:</div><div class="quotecontent">What could you be waiting for though? An RC time constant in the POR circuit?</div>
<br />Cap charging might be part of it, but I guessed that it had something to do with state. It's likely that the PPU's internal state isn't necessarily consistent until it has rendered a complete field, and the easiest way to detect that the PPU has been through a complete field is to wait for the vblank before it and the vblank after it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Thu Jan 17, 2008 9:47 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent"><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">As for clearing all RAM, it makes a lot of sense to me now, since you can declare a variable then rely on it being initialized to zero if you haven't used it yet.</div><br />And in fact, C guarantees that uninitialized variables at file scope are zero at the start of main().</div>
<br />I don't know guys, I'm still not convinced! =) The "if you haven't used it yet" part can be very tricky, because this condition may be true the first time you run a piece of code, but not at subsequent times... if this was the case, a possible bug would be pretty difficult to find. But if you instead initialized the variable at a convenient time, it would be correctly set whenever that piece of code was executed.
<br />
<br />I'm not trying to convince anyone (as I'm sure nobody is trying to convince me) of anything, I'm just trying to express my point of view on variables and how to initialize them, since I seem to be alone on this one.
<br />
<br />My current project has a pretty complex scrolling system, a pretty complex sprite system, and I can get away just fine by initializing memory only when I need it. I think this is the case because there really isn't a value I use that much that would justify writing it to every memory location. 0 is pretty much meaningless for most of my code...
<br />
<br />Even when I (supposedly) do need to clear a block of RAM, such as the object slots used for active objects, I can usually get away with clearing just a small part of it. In the case of the object slots, each one has a byte that indicates the type of the object loaded there, and I know that the engine will check that value before anything else, and if I use 0 as a flag to indicate that the slot is empty, what do I care about the crap stored in the other bytes? And since I will surely clear those "object type" bytes before a level (re)starts, I see no need to clear that memory before that.
<br />
<br />But I know this is only my case, and I guess I can accept that people out there will benefit from clearing it all on start up. This is not for me though... Even when programming in high-level languages I can't seem to assume any values on things I haven't initialized. OK, shutting up now.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Fri Jan 18, 2008 12:56 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />In fact Tokumaru you are mostly right, it's better to rely on clean programming methods. It's simply that on the NES, it's often best to put code efficiency over colde clarity, so in some cases, but not always, initialising memory can increase code efficiency. The sound code exemple I give above is typical : Having the clearing RAM routine do it instead of a custom "SoundInit" routine is more efficient, even if that's not the cleaner programming method ever. Once the game starts, if you want to stop a music you'll have to call music_stop or something, so maybe just calling music_stop on startup would also do the trick very well.
<br />Finally, anyone is free to clear the whole RAM on startup, only a part of it or nothing at all, I guess there is nothing better or worse here. Depend on the programmer. Final Fantasy games are the only commercial games that doesn't initialise RAM at all as far I noted. Some game however only initialise zero-parge RAM or not the entiere "bss" RAM.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Skidlz</b> [ Sat Jan 19, 2008 9:35 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>bg pal?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I got some basic scrolling and collision detection going but I'm having palette trouble. How to do use multiple palettes on the background? Say I wanted a black and white could, a green bush, a yellow sun and brown ground. How would I make some bg sprites use a different palette from other bg sprites?
<br />
<br />Thanks

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sun Jan 20, 2008 12:00 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Look up the <strong>Attribute Tables</strong>. It's a bit complicated to explain everything, so you should probably read all the documentation that is already avaliable about them, then come back here and ask about what you didn't understand! =)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Skidlz</b> [ Sun Jan 20, 2008 3:07 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>been there</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I have looked at lots of things on the Attribute tables but none of them tell how to use it. I found hardware docs but I didn't find any software explanations. $23C0 is attribute table 0 and every byte controls 4 bg sprites in a square. But how do I interface it? I read the documentation on the NSA program but the code was too cryptic and I didn't see that it wrote to $23c0 so it didn't really help. I did some guess and check by dumping values into $23c0 but it only seemed to offset the sprites and leak bg tiles into foreground sprites.
<br />
<br />One thing at a time but, how big of a pain is collision detection? I've just used sprite 0 hit as a check for hitting while jumping. I don't know how to test falling or walking collision. If you could point me in the direction of some tutorials that would be greatly appreciated.
<br />
<br />Thanks for everything.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Sun Jan 20, 2008 3:22 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />There is plenty of docs arround that proprely doccument how attribute table works. Unlike the Name Table, the attribute table is only 8 blocks long and 8 blocks tall, taking 64 bytes (the nametable is 32 blocks long and 30 blocks tall) so converting adresses between the two can be a pain. Each byte control a block of 4x4 BG tiles, so the attribute byte at $23c0 correspond to tiles at $2000, $2001, $2002, $2003, $2020, $2021, $2022, $2023, $2040, $2041, $2042, $2043 and $2060, $2061, $2062 and $2063, this is the topmot leftmost 8x8 BG tiles corner.
<br />The simpler way to see this is that attribute bytes at $23c0-$23c7 controls the first 4 lines of tiles ($2000-$207f), attributes byte at $23c8-$23cf constol the next 4 lines of tiles ($2080-$20ff), etc... Each line in nametable is $20 bytes long, each 4 lines are then $80 bytes long, and an attibute line, which is $8 bytes long have control over groups of 4 lines.
<br />
<br />Each group of 2 bits in an attribute byte correspond to a smaller block of 2x2 tiles among the 4x4 block mentionned above, allowing attribute tables to control colors over groups of 2x2 tiles. Note that the attribute table allows to give attribute to 32x32 tiles, while the map is only 32x30, so there is a "ficionnal row of tiles" you give them colors, but the tiles themselves are usually never drawn on the screen. You can still draw them from the attribute table itself (wich can also be drawn as a nametable) by setting the vertical scroll values $f0-$ff, wich normally should be never used. There is hardly any good use of this, tough.
<br />
<br />Now you should know enough about attribute tables, if this isn't enough just read some docs.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Skidlz</b> [ Sun Jan 20, 2008 4:05 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Cool. I understand name table vs. attribute table allot better now. So 1 byte in attribute is 16 tiles in name and 2 bits in attribute is 4 tiles in name. I still don't understand what to send to $23c0 though. I modified gbaguy's name table loader for attribute like so...
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;&nbsp; &nbsp;ldx #0<br />load_atribute:<br />&nbsp; &nbsp;lda atribute_table, x<br />&nbsp; &nbsp;sta $23C0<br />&nbsp; &nbsp;inx<br />&nbsp; &nbsp;cpx #64<br />&nbsp; &nbsp;bne load_atribute</div>
<br />
<br />But I assume this is totally wrong because it did absolutely nothing.
<br />
<br />Thanks for the attribute tutorial there. Much better than the docs I've read.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Sun Jan 20, 2008 4:09 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />This is totally wrong. You must write to $23c0 in PPU's memory and not in CPU's memory. You must write $23, $c0 to $2006 then write your stuff in $2007.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Skidlz</b> [ Sun Jan 20, 2008 4:27 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Success!</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I thought something seemed wrong there. Strange that writing there (in cpu) during vblank offsets sprites. Thanks for setting me straight on that. Really nice to have that working. Now off to edit palettes and name tables.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sun Jan 20, 2008 10:57 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Success!</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Skidlz wrote:</div><div class="quotecontent">Strange that writing there (in cpu) during vblank offsets sprites.</div>
<br />That probably happens due to mirroring. The wiki says that <a href="http://nesdevwiki.org/wiki/index.php/NES_CPU#CPU_Memory_Map" class="postlink">$23C0 is in a erea that mirrors the PPU registers</a>, so when you wrote stuff there you were actually affecting <a href="http://nesdevwiki.org/wiki/index.php/NES_PPU#PPUCTRL_.28.242000.29" class="postlink">register $2000</a>, which controls a few parameters of sprites and background.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Skidlz</b> [ Mon Jan 21, 2008 7:02 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Well, I got bored and I felt assembly meant a little more than ASCII so I wrote something.
<br />
<br />Please Download --&gt; <!-- m --><a class="postlink" href="http://www.mediafire.com/?71xuinnmga1">http://www.mediafire.com/?71xuinnmga1</a><!-- m -->

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Mon Jan 21, 2008 8:51 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You are welcome! =) I didn't do much though...!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Skidlz</b> [ Wed Jan 23, 2008 3:23 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I feel like I'm taking advantage of you guys(and or girls) by asking so many questions. Feel free to say something if I'm being a bother. 
<br />
<br />Well, I have an uncanny skill at underestimating and overestimating varyingly. Not as bad as my friend who typed "cows" as his source code and expected a game involving cows. But I assume collision detection is somewhat difficult and I've yet to find anything that addresses it. Only some confusing source from galaxy patrol. All I can manage is sprite 0 hit and I'm sure thats not how you go about doing this. If someone could point me towards a tutorial or give me a place to start that would be wonderful.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Wed Jan 23, 2008 3:46 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Skidlz wrote:</div><div class="quotecontent">But I assume collision detection is somewhat difficult and I've yet to find anything that addresses it.</div>
<br />First would you like to learn about collision between sprite and sprite, or would you like to learn about collision between sprite and background?

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>3</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>