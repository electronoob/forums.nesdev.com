<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Raycaster-related math/trig questions</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Raycaster-related math/trig questions</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=5548">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=5548</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Tue Sep 01, 2009 4:03 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Raycaster-related math/trig questions</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Does anyone have any ideas on how to do this? Divisions are quite slow on the 6502, and I know you can optimize cases where the divisor is a constant, but I can't think of a way to speed things up when the dividend is a constant. Any ideas?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Tue Sep 01, 2009 4:12 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The only thing I could really think of is to have a look up table, and use your variable as an index for it. That might be doable, but it would take a lot of space, I think. I'm sure there's some way to do it without a LUT, but I can't think of it right now.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>byuu</b> [ Tue Sep 01, 2009 7:48 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Sometimes you can come up with interesting tricks and approximations, too. Depends on the number.
<br />
<br />(N / 7) - (N &gt;&gt; 3) ~= N / 56. As for dividing by 7, one could make a lookup table like: 7^1, 7^2, 7^3, etc and loop subtraction.
<br />
<br />There are also approximation algorithms that have rounding errors of +/- 1, like multiplying and then shifting the result right.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Tue Sep 01, 2009 7:50 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />As I understand you, you want to compute f(x) = k/x for some constant k. What's the range of x?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Tue Sep 01, 2009 8:35 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">byuu wrote:</div><div class="quotecontent">Sometimes you can come up with interesting tricks and approximations, too.</div><br />I'm not sure I can settle for approximations. If the result is off by one the walls in my raycaster might look jagged.<br /><br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">As I understand you, you want to compute f(x) = k/x for some constant k.</div><br />Yup.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">What's the range of x?</div><br />From 109 to 65535. That's because my constant is 27648 and I want to hold the result in 8 bits. If I decide to change that constant later for some reason, that lower bound will probably change.<br /><br />The fact that I only want the lower 8 bits of the result (since the divisor is never smaller than 109, the result will always fit in 8 bits) already allows me to skip the first 8 iterations of the division process, but all the shifting is still very painful.<br /><br /><div class="quotetitle">Celius wrote:</div><div class="quotecontent">The only thing I could really think of is to have a look up table, and use your variable as an index for it.</div>
<br />Too many possible inputs. I have, however, tried making a table indexed by the outputs (which are just 256) and using a sort of binary search to detect where in that table the input would be, so that the index would be the answer I'm after, but I have had some strange results with that, with the result being off by 1 at times.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Tue Sep 01, 2009 11:49 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I seem to have calculated correctly the 512-byte table that can be used in a binary search. I have tested all possible values for the variable (which represents the distance to a wall) and the search result always matches the actual division.
<br />
<br />This method actually has the cool side effect of returning 255 (the largest possible wall height) in case the distance is too small, so I don't even have to specifically check and correct that.
<br />
<br />If anyone is curious about the table or the search routine, let me know and I can post it here or explain it better.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Wed Sep 02, 2009 1:37 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Fortunately I've been able to do all the math related to the background without using divisions, but there is something bugging me about rendering objects.
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;O<br />&nbsp; &nbsp;| \<br />&nbsp; &nbsp;|&nbsp; &nbsp;\<br />&nbsp; &nbsp;|&nbsp; &nbsp; &nbsp;\ h<br />&nbsp;b |&nbsp; &nbsp; &nbsp; &nbsp;\<br />&nbsp; &nbsp;|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\<br />&nbsp; &nbsp;|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;a \<br />&nbsp; &nbsp;+-------------P<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;c<br /></div>
<br />What I need is to find the distance ("h") and the angle ("a") between the player ("P") and an object ("O"). Would anyone by any chance have any ideas about how to find angle "a" and side "h" knowing only sides "b" and "c"?
<br />
<br />The best I got so far is:
<br />1. divide "b" by "c" to find the tangent of the angle;
<br />2. binary search a table of tangents to find what angle has that tangent;
<br />3. divide "b" by the sine of "a" to find "h";
<br />
<br />The bad thing is that 2 divisions are needed. Pythagoras wouldn't be much better for finding the hypotenuse, as two multiplications and a square root can be quite slow, and there will still be the angle.
<br />
<br />If I can't find any better way to do this, I might end up doing it like this anyway. It's not like there are as many objects as wall slices in a room, so if the object count is low enough it might not have such a great impact on performance. Also, if the angle indicates that the object isn't visible (it's behind the player), the second division isn't necessary as it won't be displayed.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Wed Sep 02, 2009 1:43 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />h^2 = b^2 + c^2
<br />tan a = b/c
<br />
<br />There is no other way to do it (without inacurate aproximations), else mathematicians would have found it out for ages. In fact I have a routine in my game where I calculate something complicated involving square and roots (for enemies shooting homing projectiles at constant speed), I've used an algorithm I found on 6502.org to compute the root and it works well, better than any lockup table.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Wed Sep 02, 2009 2:01 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">h^2 = b^2 + c^2</div><br />This is Pythagoras. There are other ways of calculating the hypotenuse, as long as the angle is found first. Both h = b/sin(a) and h = c/cos(a) work, and are probably faster than 2 squares and a square root. In my case it is better to find the angle first, because I won't waste any time calculating distances (h) I won't use.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">tan a = b/c</div><br />This I couldn't run away from. But even after the division all you have is the tangent, to find the angle itself you'd need an arctangent function, which I might implement using a small lookup table and binary search.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">There is no other way to do it (without inacurate aproximations), else mathematicians would have found it out for ages.</div><br />In this case I could actually go for approximations, since object placement doesn't need to be as precise as wall heights.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I've used an algorithm I found on 6502.org to compute the root and it works well</div>
<br />I've seen that algorithm, it's very interesting.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Thu Sep 03, 2009 2:43 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">There are other ways of calculating the hypotenuse, as long as the angle is found first. Both h = b/sin(a) and h = c/cos(a) work, and are probably faster than 2 squares and a square root.</div>
<br />Well the big advantage of square and roots is that you can keep it to all whole numbers at all times, the only exeption is at the root part, but the algorithm on 6502.org returns the lower bounds of whole number with a remaining (that I just discard). That way you only work with whole number and saves the headaches fixed points brings with sin and cos functions brings (unless you only want to deal with $ff, $00, and $01 values, which I don't think you would because it would be really bad aproximations).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Thu Sep 03, 2009 9:34 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Fixed point is still integer math. All my numbers are scaled up, I don't have to do any shifting to work with fixed point, everything simply works scaled up.
<br />
<br />I'll just try and get it working when the time to use objects/enemies comes. If it ends up being too slow I'll see what I can do about it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>bitsplit</b> [ Thu Oct 01, 2009 11:13 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />What are the ranges for b and c in your calculation?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>bitsplit</b> [ Thu Oct 01, 2009 11:40 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Also, ask yourself if you really need to calculate the distance.  If you are just using this to determine if something is within a certain distance, you can avoid that by comparing the distance squares instead.  instead of 2 multiplications, an addition, and a square root, you could just have 3 multiplications, and one addition.
<br />
<br />If you really need the distance, I can't really see a way around the square root.  As to the angle, what are you using it for?  Sometimes people use angles to determine what side something is compared to another.  A lot of times, it is better to use a dot product in that case.
<br />
<br />There might be alternatives to what you want to do, even if there are none to the calculation of h and a.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Oct 01, 2009 5:01 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The classic raycaster design sends out 320 rays, one for each column of a PC monitor in 320x200px display modes. The length of the ray determines how big the column is drawn. But a quicker and more physically correct way to determine distance to a wall is to dot-product the ray from the camera to the wall with the "forward" ray; this method has the "cosine correction" built in as well.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Thu Oct 01, 2009 6:11 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">bitsplit wrote:</div><div class="quotecontent">What are the ranges for b and c in your calculation?</div><br />They are coordinates within the level map, so they are both 16-bit values, anything from 0 to 65535.<br /><br />However, since there are few angles (168 for the whole circle), I can probably get rid of a number of lower bits in order to make the calculations faster and the final result would most likely be the same, or pretty close. There are 512 units inside each block, but I already reduce that to 128 in some points to make it faster, and it's hardly noticeable.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Also, ask yourself if you really need to calculate the distance.</div><br />That is needed to know how large a sprite should be drawn (distant = small; close = big). I can't think of any other way to calculate the exact size without knowing how far it is from the player.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">As to the angle, what are you using it for?</div><br />I use it to know where to place the sprite on the screen horizontally. Rays are cast from the player from left to right and for each one the angle is incremented. I need to know the angle of an object/enemy and find where the matching angle was rendered to on the screen (if at all) in order to know where to place the center of the sprite.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">A lot of times, it is better to use a dot product in that case.</div><br />I don't really know what a dot product is, but if it can help me I'd sure like to learn about it! =)<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">There might be alternatives to what you want to do, even if there are none to the calculation of h and a.</div><br />I know. For the walls I considered many different kinds of calculations that would result in the final values I needed, instead of sticking to a set of pre-defined formulas from the start. The exact solution I found can't be seen in any existing games or tutorial on the internet.<br /><br />For the objects however, I couldn't think of anything better/faster than what I presented here. Currently, my best be is to reduce the precision of that division.<br /><br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">But a quicker and more physically correct way to determine distance to a wall is to dot-product the ray from the camera to the wall with the "forward" ray; this method has the "cosine correction" built in as well.</div>
<br />You kind lost me because of the dot product, but I'm fairly sure that the more correct way would be too slow for the NES. I move my rays across the grid a step at a time, and it's working pretty well. I have a resolution of 28 columns (much less than 320!), meaning that I have only 14 relative angles for which the "cosine correction" is necessary (the right side is a mirror of the left side), So I actually pre-corrected all the distances in my distance table for the 14 possible angles, so I don't need to do anything to get rid of fish eye distortion either.
<br />
<br />I'm not really worried about objects/enemies right now, I'm just happy because I got the walls working on the NES and it's not dead slow, it's actually pretty playable. So I'll spend some time polishing that part up before I try to place any objects in. I still welcome suggestions of course, so if anyone has any I'd be glad to hear about them.
<br />
<br />PS: I'll soon make a thread to display my achievements with this, and I'll let everyone play the demo by themselves once it's a bit less messy.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>