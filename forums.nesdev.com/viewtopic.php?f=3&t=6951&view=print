<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Yet another question about scrolling</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Yet another question about scrolling</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=6951">http://forums.nesdev.com/viewtopic.php?f=3&amp;t=6951</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tineras</b> [ Sat Sep 11, 2010 5:05 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Yet another question about scrolling</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I have read many times in several places about how VRAM can only be read/written during VBlank.  I am still a little confused about this.
<br />
<br /><strong>My question is, when do I use data written to 2005/2006 for scrolling and when do I just write to 2005/2006 and ignore the data as scroll data?</strong>  I know that sometimes what is written to those locations is used for scrolling, but not always.  I've been wrestling with this issue for some time now and I'm ready to get past it.
<br />
<br />I really would like to know how to handle data when it's being written to 2005 and 2006.  It is my understanding that VBlank and BGEnable and SPREnable are somehow involved, but I'm just to sure how.
<br />
<br />I'm not sure if either of these are going down the right path, but here is some pseudo code that probably better explains my confusion:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">if&#40;&#40;addr == 0x2005&#41; &amp;&amp; !vblank&#41;<br />&#123; //place scroll 'data' into 't' &#125;<br /><br />or<br /><br />if&#40;&#40;addr == 0x2005&#41; &amp;&amp; &#40;bgEnabled || spritesEnabled&#41;&#41;<br />&#123; //place scroll 'data' into 't' &#125;<br /><br />//and then the same idea with 2006<br /></div><br /><br />Thanks  <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br />EDIT: I guess posting some real code might help, so here it is.  This is inside of my setMemoryByte() function.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Screen Scroll Offset<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else if &#40;intAddr == 0x2005&#41;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#123;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if &#40;!PPULatchToggle&#41;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#123;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Offset X<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; t &amp;= 0xFFE0;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; t |= &#40;&#40;byteOne &amp; 0xF8&#41; &gt;&gt; 3&#41;;<br /><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; fineX = &#40;byte&#41;&#40;byteOne &amp; 0x07&#41;;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#125;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#123;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Offset Y<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; t &amp;= 0xFC1F;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; t |= &#40;&#40;byteOne &amp; 0xF8&#41; &lt;&lt; 2&#41;;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; t &amp;= 0x8FFF;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; t |= &#40;&#40;byteOne &amp; 0x07&#41; &lt;&lt; 12&#41;;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#125;<br /><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; PPULatchToggle = !PPULatchToggle;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#125;<br /><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else if &#40;intAddr == 0x2006&#41;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#123;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if &#40;!PPULatchToggle&#41;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#123;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Copy byte into temporary location<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; intPPUAccess = byteOne;<br /><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;#region Scrolling Data<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// Get first 2006 write bits<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;t &amp;= 0xC0FF;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;t |= &#40;&#40;byteOne &amp; 0x3F&#41; &lt;&lt; 8&#41;;<br /><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// Clear top two bits<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;t &amp;= 0x3FFF;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;#endregion<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#125;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else if &#40;PPULatchToggle&#41;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#123;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; intPPUAccess = byteOne + intPPUAccess * 16 * 16;<br /><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;#region Scrolling Data<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// Get second 2006 write bits<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;t &amp;= 0xFF00;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;t |= byteOne;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;#endregion<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#125;<br /><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; PPULatchToggle = !PPULatchToggle;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#125;</div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sat Sep 11, 2010 5:35 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You should <strong>always</strong> let $2005/$2006 writes affect 't' and 'v', no matter what the PPU is doing. If you emulate correctly the way the PPU makes use of 'v' while rendering, scroll changes should work without problems in case the PPU is rendering. If the PPU is not rendering, 'v' will be used by the game to access VRAM normally.
<br />
<br />What I mean is that there is no need to treat $2005/$2006 writes differently at different times, as long as your CPU and PPU are "running in parallel" and your PPU code makes use of 'v' for rendering like a real NES does.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tineras</b> [ Sat Sep 11, 2010 5:44 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">You should <strong>always</strong> let $2005/$2006 writes affect 't' and 'v', no matter what the PPU is doing. If you emulate correctly the way the PPU makes use of 'v' while rendering, scroll changes should work without problems in case the PPU is rendering. If the PPU is not rendering, 'v' will be used by the game to access VRAM normally.<br /><br />What I mean is that there is no need to treat $2005/$2006 writes differently at different times, as long as your CPU and PPU are "running in parallel" and your PPU code makes use of 'v' for rendering like a real NES does.</div>
<br />
<br />And by the ppu 'not rendering', you mean not writing lines 0-239 of the visible frame, right?
<br />
<br />Also, does the 'data' that is written to 2005/2006 actually get written to the memory location 2005/2006 all the time as well?  And isn't there a special case where the 2006 writes are used by 2007 during scrolling?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sat Sep 11, 2010 6:32 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tineras wrote:</div><div class="quotecontent">And by the ppu 'not rendering', you mean not writing lines 0-239 of the visible frame, right?</div><br />"Not rendering" is either VBlank or forced blanking (SPR <strong>and</strong> BKG off).<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Also, does the 'data' that is written to 2005/2006 actually get written to the memory location 2005/2006 all the time as well?</div><br />There is no memory mapped to $2005/$2006, whatever is written there is routed to the PPU registers and not stored in any RAM location.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">And isn't there a special case where the 2006 writes are used by 2007 during scrolling?</div>
<br />$2007 has nothing to do with scrolling (except for the fact that accessing it increments the VRAM address). Writes to $2006, like I said before, modify the VRAM address, which is used for rendering, so they always change the scroll.
<br />
<br />When a program "sets the scroll" it's doing nothing more than specifying the exact point where rendering will begin (i.e. the point that will show up at the top left corner of the screen). When rendering starts, the PPU will use the last value set for the scroll to begin the rendering of the screen, but at any point during rendering the scroll can be changed to force the PPU to render another part of the name tables.
<br />
<br />The "special case" you mentioned is not special at all, the registers behave the same way all the time. The thing is that writes to $2005 do not affect the VRAM address 'v' directly, they only modify the temporary register 't'. At the beginning of the frame, 't' is copied to 'v', but during rendering only the horizontal part of 't' is copied to 'v' every scanline, so if a program wants to modify the vertical scroll during rendering, it has to use $2006, which directly manipulates 'v'. This is "special" from the point of view of the programmer, who usually uses $2005 for setting the scroll, but from the point of view of the emulator or the NES there is nothing special about it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tineras</b> [ Sat Sep 11, 2010 7:45 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><div class="quotetitle">tineras wrote:</div><div class="quotecontent">And by the ppu 'not rendering', you mean not writing lines 0-239 of the visible frame, right?</div><br />"Not rendering" is either VBlank or forced blanking (SPR <strong>and</strong> BKG off).<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Also, does the 'data' that is written to 2005/2006 actually get written to the memory location 2005/2006 all the time as well?</div><br />There is no memory mapped to $2005/$2006, whatever is written there is routed to the PPU registers and not stored in any RAM location.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">And isn't there a special case where the 2006 writes are used by 2007 during scrolling?</div><br />$2007 has nothing to do with scrolling (except for the fact that accessing it increments the VRAM address). Writes to $2006, like I said before, modify the VRAM address, which is used for rendering, so they always change the scroll.<br /><br />When a program "sets the scroll" it's doing nothing more than specifying the exact point where rendering will begin (i.e. the point that will show up at the top left corner of the screen). When rendering starts, the PPU will use the last value set for the scroll to begin the rendering of the screen, but at any point during rendering the scroll can be changed to force the PPU to render another part of the name tables.<br /><br />The "special case" you mentioned is not special at all, the registers behave the same way all the time. The thing is that writes to $2005 do not affect the VRAM address 'v' directly, they only modify the temporary register 't'. At the beginning of the frame, 't' is copied to 'v', but during rendering only the horizontal part of 't' is copied to 'v' every scanline, so if a program wants to modify the vertical scroll during rendering, it has to use $2006, which directly manipulates 'v'. This is "special" from the point of view of the programmer, who usually uses $2005 for setting the scroll, but from the point of view of the emulator or the NES there is nothing special about it.</div>
<br />
<br />I appreciate your reply.  This is pretty much how I have things setup right now.  But I still experiencing some scrolling issues.  I posted a video below to show an example.  I believe some of these issues are just timing related.
<br />
<br />Also, a clip of SMB is included, the issues are probably not related to scrolling, but any input would be appreciated.
<br />
<br />Misc games with scroll issues:
<br /><!-- m --><a class="postlink" href="http://www.youtube.com/watch?v=uCG4POGDJJQ">http://www.youtube.com/watch?v=uCG4POGDJJQ</a><!-- m -->
<br />
<br />SMB Issues:
<br /><!-- m --><a class="postlink" href="http://www.youtube.com/watch?v=89zuJmT084E">http://www.youtube.com/watch?v=89zuJmT084E</a><!-- m -->
<br />
<br />Thanks <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Sat Sep 11, 2010 7:50 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Those look like CPU bugs.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tineras</b> [ Sat Sep 11, 2010 7:54 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Dwedit wrote:</div><div class="quotecontent">Those look like CPU bugs.</div>
<br />
<br />I am able to pass all of the Kevtris' nestest tests and all but one of the NEStress CPU tests (Fail: CPU RAM Mirror &lt;-- not sure why).
<br />
<br />Do you have any suggestions on which tests I could move on to?  Or should I just start going through Blargg's tests one by one?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Sat Sep 11, 2010 8:06 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Also, I see the "weave" bug for scanline-by-scanline scrolling.  Remember that fine X is updated "immediately", but coarse X is only updated right before Hblank time (clock 251, I think).
<br />So games tend to write to 2005 during hblank time, so the fine X is for the upcoming scanline, but the coarse X is for the scanline after that.
<br />
<br />Excitebike and Kung Fu appeared to have timing errors.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>