<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=10&amp;t=8630" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2012-02-20T15:15:00-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=10&amp;t=8630</id>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2012-02-20T15:15:00-07:00</updated>
<published>2012-02-20T15:15:00-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8630&amp;p=90239#p90239</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8630&amp;p=90239#p90239"/>
<title type="html"><![CDATA[Mapper recommendation?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8630&amp;p=90239#p90239"><![CDATA[
The original iNES format is ambiguous about presence or absence of bus-conflict-avoiding hardware. Mapper 7 encompasses both AMROM, which has bus conflicts, and ANROM and AOROM, which behave identically except for lacking them.<br /><br />It also has no standard way to denote presence or absence of PRG RAM, other than that the battery bit implies that some sort of battery-backed RAM is present. Any discrete mapper can have PRG RAM added to it. For example, mapper 0 covers both NROM (no PRG RAM) and the Family BASIC board (PRG RAM <a href="http://wiki.nesdev.com/w/index.php/PRG_RAM_circuit#Using_7420" class="postlink">decoded with a 74HC20</a>). Three different configurations are combined in mapper 4: MMC3 without PRG RAM, MMC3 with PRG RAM, and MMC6 (like MMC3 with a small amount of internal PRG RAM). StarTropics needs an MMC6, and Low G Man needs no PRG RAM. Telling the difference is one reason why kevtris designed <a href="http://wiki.nesdev.com/w/index.php/NES_2.0" class="postlink">NES 2.0</a>.<br /><br />Why do I bring up PRG RAM? A board using one side of a 74HC20 to decode PRG RAM might use the other side of it to invert PRG R/W to produce /OE for the PRG ROM chip. So I'd almost be willing to assume that a board based on a discrete mapper and modified with PRG RAM has also been modified with no bus conflicts.<br /><br /><br /><strong>Long story short: Use mapper 2.</strong><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Mon Feb 20, 2012 3:15 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Dwedit]]></name></author>
<updated>2012-02-20T14:44:11-07:00</updated>
<published>2012-02-20T14:44:11-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8630&amp;p=90234#p90234</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8630&amp;p=90234#p90234"/>
<title type="html"><![CDATA[Mapper recommendation?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8630&amp;p=90234#p90234"><![CDATA[
Some emulators will refuse to give Mapper 2 WRAM.  Some emulators will simulate bus conflicts.  Does "Mapper 2" say anything about whether there should be bus conflicts or not?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=53">Dwedit</a> — Mon Feb 20, 2012 2:44 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2012-02-20T14:14:42-07:00</updated>
<published>2012-02-20T14:14:42-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8630&amp;p=90233#p90233</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8630&amp;p=90233#p90233"/>
<title type="html"><![CDATA[Mapper recommendation?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8630&amp;p=90233#p90233"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />You must be the only one that thinks of it like this... So if someone asked you which mapper you were using you'd respond "mapper 0" because NROM is technically a board???<br /></div><br />You guessed it.<br /><br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />"A mapper is a piece of hardware soldered to a cartridge's printed circuit board that performs address decoding, bank switching, and possibly other tasks."<br /></div><br />Yeah this makes the mapper either a hardware chip (like the MMC1) or a set of chips (for example HC161+HC32) hooked in a certain way, which are basically equivalent to a concept. (I think an electric schematic is a concept).<br /><br />Calling mapper 2 "UNROM" is definitely an abuse of language everyone on NESdev does (incluind possibly me too), but it remains an abuse of language.<br /><br />There is several different ways you can get the same mapper behavior. In the case of mapper 2 UNROM is only one of the many ways to get mappre 2 functionality. There is also UNROM-style 3rd party boards (Konami, etc...), UOROM, Camerica boards, and probably a lot of other stuff I forgot.<br />Mapper 2 can also have 8k CHR-ROM, have 4-screen mirroring, have battery backed SRAM, have any size of PRG-ROM, all this the UNROM board can't, unless its hevily modified.<br /><br />Also mapper 2 is only one of the two mappers the UNROM board can implement, UNROM can also be mapper 180 (replace the '32 by a '08 and gate and the hardwired bank is at $8000-$bfff).<br /><br />This is why calling mapper 2 "UNROM" is clearly wrong - mapper 2 is not necessarly UNROM, and UNROM is not necessarly mapper 2.<br />I don't think it's I who made this up it's just facts. I just pointed this abuse of language that's all. The name UNROM is just a random chain of characters Nintendo put on some boards, it doesn't have much meaning anyways.<br /><br />UxROM is slightly less wrong, but it implicitely exclude for example 64KB or 512 KB PRG sizes, or the additional features mentioned above, which are all possible with mapper 2.<br /><br />In summary I know this is a big mess but here are my $2 about this. Sorry for getting off topic.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Mon Feb 20, 2012 2:14 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[rizz1010]]></name></author>
<updated>2012-02-19T22:04:54-07:00</updated>
<published>2012-02-19T22:04:54-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8630&amp;p=90211#p90211</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8630&amp;p=90211#p90211"/>
<title type="html"><![CDATA[Mapper recommendation?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8630&amp;p=90211#p90211"><![CDATA[
Thanks for the input everyone.  I'm leaning toward UNROM, and it appears to have a couple of great nesdev wiki pages for guidance.<br /><br />Tokumaru, I really like that idea with bank0 (for putting the chr into place, and then that bank goes away).  Thanks!<br /><br />Bregalad, I appreciate you pointing out that mapper 66 as well.  There were complexities mentioned, and I would have guessed that duplicate code in both banks would take care of these complexities (as you mentioned at the end of your post).  Either way, it appears I'm moving forward using UNROM.<br /><br />3gengames, I haven't been on the forums much lately.  The good news is that I haven't had many questions (I'm always grateful for the regulars who are quick to answer questions).  It was great to meet Memblers, Tepples &amp; Clueless last year at the Midwest Gaming Classic, and more great news - if all goes well, I plan to show my brand new game at this year's MGC which is happening in about a month.  It got started around September last year (I have a joint NES project that is currently on hold).  Hope I'll see some of you there - feel free to PM or just point out if you'll be there (I might only be there on Sunday though).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4213">rizz1010</a> — Sun Feb 19, 2012 10:04 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[infiniteneslives]]></name></author>
<updated>2012-02-19T13:06:27-07:00</updated>
<published>2012-02-19T13:06:27-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8630&amp;p=90195#p90195</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8630&amp;p=90195#p90195"/>
<title type="html"><![CDATA[Mapper recommendation?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8630&amp;p=90195#p90195"><![CDATA[
Sorry this just struck me as odd...<br /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br />Well, first I must say UNROM is NOT a mapper but a board, the mapper is mapper 2. (a mapper is a concept, not a PCB !!)<br /></div><br /><br />You must be the only one that thinks of it like this... So if someone asked you which mapper you were using you'd respond "mapper 0" because NROM is technically a board???<br /><br />Even the god (wiki: <a href="http://wiki.nesdev.com/w/index.php/MMC" class="postlink">http://wiki.nesdev.com/w/index.php/MMC</a>) disagrees :<br />"A mapper is a piece of hardware soldered to a cartridge's printed circuit board that performs address decoding, bank switching, and possibly other tasks."<br /> <br />Including a list/links of "concepts" by providing their "boards" as yo see it?  Most people would say it's a list/link of *mappers* by *name*...<br /><br /><br />But as for the actual topic:<br /><div class="quotetitle">rizz1010 wrote:</div><div class="quotecontent"><br />I haven't looked at the process of making this into a physical cartridge, but when that day comes, would certain maps make this easier?<br /></div><br />Most of the discrete mappers are pretty simple to make/manufacture.  UxROM, AxROM, BNROM could be considered simpler because you would only have to program one chip compared to GNROM or similar.  However UxROM one more part (a '161 and '32 vice just the '161 like most others).  Keep in mind the UxROM is simpler to program for the reasons everyone is pointing out with the fixed bank.  Most other mappers don't have a fixed bank and would require slightly more complex code structure without that fixed bank.<br /><br />If you really conscious of manufacturing you could also look at cost comparison between CHR RAM vs ROM. and Memory sizes for PRG.  Maybe even look at part count and board size.  Either way though most of these shouldn't have too extreme of a cost difference.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4832">infiniteneslives</a> — Sun Feb 19, 2012 1:06 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2012-02-19T12:01:41-07:00</updated>
<published>2012-02-19T12:01:41-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8630&amp;p=90190#p90190</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8630&amp;p=90190#p90190"/>
<title type="html"><![CDATA[Mapper recommendation?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8630&amp;p=90190#p90190"><![CDATA[
<div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br />Well, first I must say UNROM is NOT a mapper but a board, the mapper is mapper 2. (a mapper is a concept, not a PCB !!)<br /></div><br />I usually call it UxROM. To me, iNES numbers are just meant to be used in headers.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Another better option (IMO) would be to use mapper 66, which allows you to have exactly two 32k PRG-ROM<br /></div><br />Working with switchable 32KB banks can be hard for a beginner though... Using trampoline routines and things like that is not so trivial. Having a fixed bank makes things easier.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Sun Feb 19, 2012 12:01 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[MottZilla]]></name></author>
<updated>2012-02-19T11:04:04-07:00</updated>
<published>2012-02-19T11:04:04-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8630&amp;p=90187#p90187</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8630&amp;p=90187#p90187"/>
<title type="html"><![CDATA[Mapper recommendation?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8630&amp;p=90187#p90187"><![CDATA[
I consider UxROM is to be mapper. No one calls it "mapper 2" other than as the iNES implementation. You could call it 74*161/32 but that isn't as nice of a title.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=1726">MottZilla</a> — Sun Feb 19, 2012 11:04 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2012-02-19T03:44:43-07:00</updated>
<published>2012-02-19T03:44:43-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8630&amp;p=90173#p90173</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8630&amp;p=90173#p90173"/>
<title type="html"><![CDATA[Mapper recommendation?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8630&amp;p=90173#p90173"><![CDATA[
Well, first I must say UNROM is NOT a mapper but a board, the mapper is mapper 2. (a mapper is a concept, not a PCB !!)<br /><br />The big difference is that UNROM boards require 128k PRG-ROM while mapper 2 can take any value, so it's more generic (but I'd recomand avoiding non-power-of-two values. Non power-of-two ROM sizes are feasible in hardware but it'd be complex to do, and emulation support is not guaranteed).<br /><br />If you need 64k of PRG-ROM you could go with mapper 2, as the other says, have 1 fixed bank and 3 bankswitchable banks. I also think mapper 2 supports 8kb of (fixed) CHR-ROM, while UNROM board obviously does not (that's the second reason I don't advice you to use "UNROM" because this is a board name that is too specific).<br /><br />Another better option (IMO) would be to use mapper 66, which allows you to have exactly two 32k PRG-ROM banks and one 8k CHR-ROM bank, as you said you wanted. Also, CHR-ROM support on this mapper is official, and not hacky as it is in mapper 2, so emulator support will be complete.<br /><br />Now if you want a cool/crazy option you could do like Dragon Quest, use mapper 3 and store mainly program data in the additional 3 CHR-ROM banks, however this is only if you feel like doing something experimental and funny (which I how I always feels haha). The reason this was used is that back in 1986 larger ROMs were very expensive, tended to become hot etc... so it was simpler to make a clever use of two smaller ROMs.<br /><br />If you need code to be present at all times in the ROM just put it at the same adress in both banks.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Sun Feb 19, 2012 3:44 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[MottZilla]]></name></author>
<updated>2012-02-18T19:10:13-07:00</updated>
<published>2012-02-18T19:10:13-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8630&amp;p=90161#p90161</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8630&amp;p=90161#p90161"/>
<title type="html"><![CDATA[Mapper recommendation?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8630&amp;p=90161#p90161"><![CDATA[
You could also keep all of your code in the fixed 16K bank and only access data and subroutines in the other banks. Many games function like this.<br /><br />UxROM really is a handy mapper as 256K should be enough for a lot of types of games. It all depends on the features you need of course. If you find there is something you can't do that you need to, then you might consider getting something more complex. But if you were using NROM, UxROM is perfect. You get both more Code/Data space AND could use more CHR space as you game is no longer limited to 8K of CHR.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=1726">MottZilla</a> — Sat Feb 18, 2012 7:10 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2012-02-18T16:15:48-07:00</updated>
<published>2012-02-18T16:15:48-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8630&amp;p=90156#p90156</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8630&amp;p=90156#p90156"/>
<title type="html"><![CDATA[Mapper recommendation?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8630&amp;p=90156#p90156"><![CDATA[
UNROM is indeed the logical choice if you're reaching the limits of NROM. Since it uses CHR-RAM, the simplest thing to do would be to copy 8 KB of CHR data to the pattern tables right at the start of the program and never touch them again, so it will essentially feel like 8KB of CHR-ROM, like in NROM.<br /><br />As for the PRG, the last 16KB are always mapped to $C000-$FFFF. Your Reset, NMI and IRQ routines should be in this bank, so that they are always available to the CPU. You will probably have to rearrange the rest of your code a bit, putting in different 16KB banks parts of the program that don't need to be mapped at the same time (for example, music code and data is usually very independent from the rest of the program).<br /><br />For now, you could have a 64KB ROM with banks arranged like this:<br /><br />bank 0: 8KB of CHR and a routine to copy them to VRAM;<br />bank 1: code independent from bank 2;<br />bank 2: code independent from bank 1;<br />bank 3 (fixed): routines pointed by the CPU vectors and code that needs access to the other banks.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Sat Feb 18, 2012 4:15 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2012-02-18T16:08:20-07:00</updated>
<published>2012-02-18T16:08:20-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8630&amp;p=90155#p90155</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8630&amp;p=90155#p90155"/>
<title type="html"><![CDATA[Mapper recommendation?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8630&amp;p=90155#p90155"><![CDATA[
I second MottZilla's recommendation of UNROM. You lose about 4 to 6 KiB of PRG ROM off the bat compared to NROM because you have to copy or decompress the CHR data and write it to CHR RAM, but the 64, 128, or 256 KiB capacity of the PRG ROM makes up for that.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Sat Feb 18, 2012 4:08 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[3gengames]]></name></author>
<updated>2012-02-18T13:08:04-07:00</updated>
<published>2012-02-18T13:08:04-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8630&amp;p=90154#p90154</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8630&amp;p=90154#p90154"/>
<title type="html"><![CDATA[Mapper recommendation?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8630&amp;p=90154#p90154"><![CDATA[
Have you made a game before? Never seen you hang here. <img src="http://forums.nesdev.com/images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /> Wouldn't be the...lets guess....blow into cart alcohool game? <img src="http://forums.nesdev.com/images/smilies/icon_razz.gif" alt=":P" title="Razz" /> X)<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4311">3gengames</a> — Sat Feb 18, 2012 1:08 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[rizz1010]]></name></author>
<updated>2012-02-18T13:06:18-07:00</updated>
<published>2012-02-18T13:06:18-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8630&amp;p=90153#p90153</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8630&amp;p=90153#p90153"/>
<title type="html"><![CDATA[Mapper recommendation?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8630&amp;p=90153#p90153"><![CDATA[
I was using NROM, which looks like it won't quite cut it (my code is approaching $FD00 in the PRG.<br /><br />I would expect another 32KB would do it for the code.  I thought that even an extra 16KB would work, but with 32, I would be set.<br /><br />Tepples, hope to see you again this year at MGC.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4213">rizz1010</a> — Sat Feb 18, 2012 1:06 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[MottZilla]]></name></author>
<updated>2012-02-17T17:24:46-07:00</updated>
<published>2012-02-17T17:24:46-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8630&amp;p=90112#p90112</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8630&amp;p=90112#p90112"/>
<title type="html"><![CDATA[Mapper recommendation?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8630&amp;p=90112#p90112"><![CDATA[
I recommend UNROM if NROM isn't enough. If UNROM isn't enough, it depends on what features you need what way you should go. All the mappers have their uses. There is no best mapper.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=1726">MottZilla</a> — Fri Feb 17, 2012 5:24 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[3gengames]]></name></author>
<updated>2012-02-17T16:31:08-07:00</updated>
<published>2012-02-17T16:31:08-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8630&amp;p=90110#p90110</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8630&amp;p=90110#p90110"/>
<title type="html"><![CDATA[Mapper recommendation?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8630&amp;p=90110#p90110"><![CDATA[
CHR-RAM.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4311">3gengames</a> — Fri Feb 17, 2012 4:31 pm</p><hr />
]]></content>
</entry>
</feed>