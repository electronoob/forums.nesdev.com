<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Mapper with combined CHR-ROM and CHR-RAM?</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Mapper with combined CHR-ROM and CHR-RAM?</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=9&amp;t=11459">http://forums.nesdev.com/viewtopic.php?f=9&amp;t=11459</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>mikejmoffitt</b> [ Thu Jul 24, 2014 1:01 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Mapper with combined CHR-ROM and CHR-RAM?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />After seeing some RAM mostly piggy-backed onto the PRG IC, I thought maybe the same could happen with CHR-ROM and some addressing circuitry to control which one's /CE and /OE lines are active (and /WE, for the RAM). Maybe something interesting could be done with this? Maybe the capability to have /WE on the RAM enabled while the /CE of the ROM is enabled too to allow for quick copying of the ROM into the RAM (which could then be modified)?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Thu Jul 24, 2014 2:24 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Mapper with combined CHR-ROM and CHR-RAM?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Could be done. Only problem is, the more shared address lines between the two, the less general (and less clear how it'd be useful).<br /><br />Most obvious use to me would be for flood fills.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Thu Jul 24, 2014 2:41 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Mapper with combined CHR-ROM and CHR-RAM?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />What would be the advantage over bankable CHR-RAM? It's kinda trivial to fill up RAM pages on startup if you need the fast banking. The only advantage I can think of is not having to reserve PRG space for it, but I feel like having two CHR chips instead of one would be more expensive than doubling your PRG size.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Jul 24, 2014 3:58 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Mapper with combined CHR-ROM and CHR-RAM?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If you want <a href="http://bootgod.dyndns.org:7777/profile.php?id=276" class="postlink">High Speed</a> updates of part of the pattern table and more flexibility in the other, you need to use a technique first seen in <a href="http://bootgod.dyndns.org:7777/profile.php?id=2260" class="postlink">Napoleon Senki</a> and brought stateside in <a href="http://bootgod.dyndns.org:7777/profile.php?id=275" class="postlink">Pin-Bot</a>. See <a href="http://wiki.nesdev.com/w/index.php/MMC3_with_CHR_ROM_and_CHR_RAM" class="postlink">MMC3 with CHR ROM and CHR RAM</a>.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Drag</b> [ Fri Jul 25, 2014 11:57 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Mapper with combined CHR-ROM and CHR-RAM?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If you want my opinion (too bad, you're getting it anyway), bankable RAM is the best way to go. However, I <em>think</em> the n106 (or whatever it's called now) has both chr-rom and chr-ram, with the ram just being the last two pages.<br /><br />The best part about having a large amount of on-cart PPU memory is the fact that you could use the same RAM chip both for nametables and pattern table data. A 16kb RAM chip can hold the entirety of the pattern table, plus 8 extra nametables, in addition to the NES's internal two. With that kind of memory, you could have a large stage and scroll around without needing to paint the seam as you go.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Jul 25, 2014 12:21 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Mapper with combined CHR-ROM and CHR-RAM?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />&quot;n106&quot; is Namco 129 and 163, or iNES #19. The last two pages are the VRAM on the NES motherboard, so you get only 64 tiles of CHR RAM and have to use single screen mirroring.<br /><br />Try this: Use a mapper with 2K or smaller banking, such as MMC3, and rewire the CHR RAM socket to take a 62256 SRAM (whose size is 32768 bytes). You can do this in emulators supporting the <a href="http://wiki.nesdev.com/w/index.php/NES_2.0" class="postlink">NES 2.0 header</a> by setting the CHR RAM size to 32768 bytes (<a href="http://wiki.nesdev.com/w/index.php/NES_2.0#Byte_11_.28Video_RAM_Size.29" class="postlink">byte 11 = $09</a>). That gives you 32 1K banks of pattern tables, so you can combine CHR ROM-style bank animation combined with the tile modification traditionally associated with CHR RAM.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Fri Jul 25, 2014 8:51 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Mapper with combined CHR-ROM and CHR-RAM?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I think the fast copy to CHR-RAM is actually a neat idea, but yeah I agree the cost to benefit ratio isn't too great.  A different approach along the same line, what if you ditch the CHR-ROM and give the RAM a switched data bus to the mapper?  The mapper could be pulling that data from <em>anywhere</em>, the NES only cares if the next byte will be there after PPU-A0 changes, right?  I'd rather have the data originating from an on-cart coprocessor (but whatever it is, it's though the mapper).  But it's kind of a solution looking for a problem.  I can think of faster ways than this to load CHR-RAM with extra hardware, but this is a new one to me, and seems worth considering.<br /><br />I still wonder sometimes about the fanciful idea Bananmos mentioned long ago, what if one could force a bus conflict to cause sprite-DMA to write to $2007 instead of $2004?  I doubt that specific type of bus conflict could be caused, but if it was possible, that would have really been something, heheh.<br /><br />edit: Actually if you want to pre-calculate data to write during vblank, a large WRAM filled with LDA #imm / STA $2007 sequences is about as good as it gets.  That's just 6 cycles per byte, versus 4 cycles of this fast copy method (but without lots of setup from the NES CPU).  Kinda wish I had thought of that about 5 years ago when I was dorking with a Propeller MCU to PPU bus interface.  I think this would have been slow enough to work.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Fri Jul 25, 2014 9:19 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Mapper with combined CHR-ROM and CHR-RAM?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Memblers wrote:</div><div class="quotecontent">I still wonder sometimes about the fanciful idea Bananmos mentioned long ago, what if one could force a bus conflict to cause sprite-DMA to write to $2007 instead of $2004?<br /></div>We tested this out (at least in visual2c02): the PPU can't keep up with a <em>write</em> to $2007 every other CPU cycle. IIRC, some writes just get dropped. <em>Could</em>, however, intentionally stall the CPU a bit during writes to the PPU to allow it. Don't know by how much, though.<br /><br />And while we're at it, fixing the CPU's M2 going high before the data bus is asserted might fix some of the OAM wonkiness.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">a large WRAM filled with LDA #imm / STA $2007 sequences is about as good as it gets.<br /></div> A PLA with an automatic loop unroller might be a nicer &quot;pseudo DMA&quot;. Other than not running out of the 5 × # of bytes to transfer of address space needed, it could easily handle ROM-to-RAM and ROM-to-PPU copies.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Sat Jul 26, 2014 2:31 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Mapper with combined CHR-ROM and CHR-RAM?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />On an FPGA based mapper one could quite easily place a nametable (or couple) in block RAM, watch for OAM DMA writes as they happen and copy the values to the block RAM. Could even use a &quot;smart&quot; buffer format like often seen in software based PPU update routines (with destination address, address increment mode, etc in the buffer). This could allow up to 1 KB to be transferred in a single vblank.<br /><br />But of course FPGAs are not cheap and the amount of available block RAM is limited. I guess it might be doable with external RAM by routing all of the PPU related signals through the FPGA, but that would be somewhat more complicated.<br /><br />EDIT: I realized it wouldn't make much sense to use OAM DMA for a quick transfer to block RAM based nametable, because the nametable could just as easily be mapped directly into CPU address space...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sat Jul 26, 2014 5:18 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Mapper with combined CHR-ROM and CHR-RAM?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">thefox wrote:</div><div class="quotecontent">I guess it might be doable with external RAM by routing all of the PPU related signals through the FPGA, but that would be somewhat more complicated.</div><br />It'd probably be exactly as complicated as the MMC5. It has 1K of essentially block RAM for a third nametable or extended attributes of a 1-screen-mirrored nametable.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Drag</b> [ Sat Jul 26, 2014 11:44 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Mapper with combined CHR-ROM and CHR-RAM?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I <em>really</em> wish the 6502 had a real way to relinquish the bus like some other processors did. The ability to add an actual coprocessor to the cart would've been incredibly helpful. This is, of course, assuming Nintendo would be smart and actually put the bus control pins on the cart edge. <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" /><br /><br />I was thinking of various ways to copy large amounts of data to the vram, but every time, simply using chr-rom would be cheaper.<br /><br />I'm interested in the usefulness of the 16kb vram idea I had. I even came up with a banking scheme for it (12 1k banks from 0000-2FFF; In 2000-2FFF, pages 0 and 1 are the nes's internal nametables, so of the 16kb cart vram, only 14kb is actually shared between pattern tables and nametables), found 74-series parts to implement it and everything. 16kb is even big enough to provide the 960 unique tiles necessary to fill the screen, so I was playing around with the idea of a togglable mode where fetches to $03FF automatically advance bank 0 to the next page. That'd mean you'd fill the nametable (or a region of it) with tiles 00-3F over and over, enable this mode, and you'd get a bitmap with all points addressable. Since only one bank would be controlled in this manner, the rest of the pattern table would be free to hold other graphics, like UI elements, a font, sprites, etc (subject to what fits in the remainder of the vram).<br /><br />Even if you used none of that, you'd still have 10 nametables to work with, or 16kb of chr-ram for a combination of bankswitch animations and chr-ram animations.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sat Jul 26, 2014 11:53 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Mapper with combined CHR-ROM and CHR-RAM?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Drag wrote:</div><div class="quotecontent">so I was playing around with the idea of a togglable mode where fetches to $03FF automatically advance bank 0 to the next page.</div><br />The <a href="http://wiki.nesdev.com/w/index.php/INES_Mapper_096" class="postlink">Oeka Kids mapper</a> implements that with the simplest possible hardware. It latches A9 and A8 when A13-A12 becomes $2xxx.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Drag</b> [ Sat Jul 26, 2014 12:05 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Mapper with combined CHR-ROM and CHR-RAM?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Right, but I wanted it to be more like MMC2, so instead of the mode being based on filling the screen, you could have a smaller window on the screen instead, and you wouldn't burn so many tiles. <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sat Jul 26, 2014 12:26 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Mapper with combined CHR-ROM and CHR-RAM?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />MMC2-style behavior takes a lot of I/O pins; that's my worry.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Sat Jul 26, 2014 3:50 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Mapper with combined CHR-ROM and CHR-RAM?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />On my 8T-ROM board I used a 74HC30 (8-input NAND gate) to combine some of the address lines, freeing up 5 inputs on the CPLD.  There's also 74HC133, 13-input NAND gate, but it doesn't seem to have much availability.  If that helps.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>