<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - What determines whether an emulator is &quot;fast&quot; or &quot;slow&quot;?</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">What determines whether an emulator is &quot;fast&quot; or &quot;slow&quot;?</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=10495">http://forums.nesdev.com/viewtopic.php?f=3&amp;t=10495</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>3</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ArsonIzer</b> [ Sun Sep 15, 2013 1:52 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>What determines whether an emulator is &quot;fast&quot; or &quot;slow&quot;?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I've looked through the sources of emulators, and some of them say stuff like: <br /><br />- PPU uses scanline-based rendering, very fast<br /><br />or <br /><br />- Cycle-precision CPU, very slow<br /><br />I get the terminology of scanline-based rendering and cycle-precision and whatnot, but how is one able to determine whether his emulator is fast or slow? Is there a certain time frame in which a CPU needs to execute, let's say, 100k cycles, which decides whether it's fast or slow? For instance, and these are completely random numbers, if a CPU takes less than 50 ms to execute said amount of cycles, it's fast, 50 - 70 it's ok, and above 70 ms is slow? Or is this just based on a programmer's intuition?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sun Sep 15, 2013 5:33 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What determines whether an emulator is &quot;fast&quot; or &quot;slow&quot;?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Video game console emulation is a <a href="https://en.wikipedia.org/wiki/Real-time_computing" class="postlink">soft real-time</a> application. A &quot;fast enough&quot; emulator can reliably finish 60 frames of CPU and PPU time in one second on the target platform. An emulator supporting fast-forward is &quot;fast enough&quot; when it can hit 240 fps, possibly with skipping some PPU output stages for undisplayed frames. You gave an example of your CPU executing 100K emulated cycles. On the NES, that's about 55 ms worth of cycles. Your emulator needs to execute those cycles within 55 ms, plus the PPU and APU activity that goes along with them.<br /><br />If your emulator is designed for a PC running Windows or GNU/Linux, it needs to run at 60 fps on the slowest machine that meets the current Windows version's system requirements. Since Windows 7 was released in the fourth quarter of 2009, this has meant a 1 GHz Pentium 4 or Atom. (This reflects Windows 7's use on netbooks and Windows 8's use on x86 tablets.) FCEUX does; few other popular emulators do. An emulator that emulates multiple machines at once, such as <a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=9667" class="postlink">nemulator's Wii-inspired menu</a>, has to be even faster, but multi-core machines alleviate this somewhat because emulating multiple machines is an <a href="https://en.wikipedia.org/wiki/Embarrassingly_parallel" class="postlink">embarrassingly parallel</a> workload.<br /><br />If your emulator is designed for a device running Android OS, it needs to run at 60 fps on that device. Faster is better because whatever CPU cycles your emulator doesn't use now can be used for making urgent telephone calls later.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ArsonIzer</b> [ Sun Sep 15, 2013 6:48 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What determines whether an emulator is &quot;fast&quot; or &quot;slow&quot;?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Wow, that's almost embarrassing. My CPU is much less efficient than that. That 100K thing was just a random number, but mine is nowhere near it, and I'm not even halfway done with my PPU (let alone the APU). Then again, it's written in Java with a ton of object overhead and it's so focused on readability that I can fully understand its slowness. Thanks for the response, your explanation sounds pretty logical.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>MottZilla</b> [ Sun Sep 15, 2013 3:20 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What determines whether an emulator is &quot;fast&quot; or &quot;slow&quot;?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Maybe a more simple way to put it, a fast emulator is efficient in how is calculates and processes everything it needs to do to avoid wasting CPU time. As well as just how much it needs to process. For example your emulator would be much faster emulating games if it did so by being less accurate. For example it's faster to just draw the nametables at their scrolled position all at once at the end of the frame. This will work for simple games too. <br /><br />I think alot of what causes extra processing load in a NES emulator is CPU and PPU synchronization. Ofcourse a modern PC has a huge amount cache but on older PC's the cpu had much smaller cache so code size would be more of a concern I believe. The point is that lets saw you emulator one CPU cycle, or CPU instruction, and then catch up the PPU. You'll be constantly shifting between your CPU and PPU cores which causes alot of overhead. To avoid losing accuracy some people use catch-up type methods. With a catch-up method you save on overhead since you only switch between the CPU and PPU cores when you really have to do so. The main reason you'll have to I believe is $2002 register reads for sprite zero or other flag detection. Otherwise you can log PPU register writes/states for rendering later I believe. But this adds complexity to your emulator. <br /><br />You have to look at what platform you are going to be on and then decide what's important. You may not need to optimize performance much or at all. As long as you don't make any errors, a modern PC CPU is going to be sufficient for a high degree of accuracy and 60fps. Newer systems ofcourse probably need optimizations.<br /><br />If it's your first emulator, just focus on maintainable code, and getting things working.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>fergus_maximus</b> [ Sun Sep 15, 2013 5:41 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What determines whether an emulator is &quot;fast&quot; or &quot;slow&quot;?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">MottZilla wrote:</div><div class="quotecontent">You have to look at what platform you are going to be on and then decide what's important. You may not need to optimize performance much or at all. As long as you don't make any errors, a modern PC CPU is going to be sufficient for a high degree of accuracy and 60fps. Newer systems ofcourse probably need optimizations.<br /><br />If it's your first emulator, just focus on maintainable code, and getting things working.</div><br />Pretty much exactly this.<br /><br />I wrote mine a year ago with only PC's in mind. It had horribly naive bankswitching and occasionally silly switches that could be computed in a single line, but that didn't really matter because I could run it on any desktop as intended. Few weeks ago somebody asked me about porting to Android so I started going hog wild on optimizing for ARM. It's far easier to optimize for that kind of performance once your emulator is stable and mature and you're not fighting with getting the basic functionality in place. Rewriting all of my memory mappers was way easier knowing that as long as I was swapping banks correctly the image would render, and it wasn't a case of the PPU potentially being broken.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Sun Sep 15, 2013 8:31 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What determines whether an emulator is &quot;fast&quot; or &quot;slow&quot;?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />At one end, you have your emulators written in Javascript in a web browser that tug along slowly on a dual core machine.<br />At the other extreme, you have PocketNES, written almost entirely in ARM assembly language, which runs at real time on a 16MHz GBA (using hardware accelerated graphics).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ArsonIzer</b> [ Mon Sep 16, 2013 8:01 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What determines whether an emulator is &quot;fast&quot; or &quot;slow&quot;?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Ah, I see. My emulator is written in Java anyway, so processor-specific optimizations really aren't that viable. To add to that, this is the first thing I've done in my life that is so low-level, I have +- 2 years experience with Java (my first and currently only programming language), and I literally did not know what a CPU did until about 5 months ago (what registers were, what an instruction was, or whatever its general purpose was anyway), so even getting the CPU to work in the first place was a complete and utter disaster, so optimizing it to a point where it can run at X times 60 fps is going to be a living hell.<br /><br />Thanks for the answers and suggestions. While optimization is going to be put off for a while, the answers did give me some things to think about for the future of the emulator.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>miker00lz</b> [ Mon Sep 16, 2013 8:41 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What determines whether an emulator is &quot;fast&quot; or &quot;slow&quot;?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Writing your first CPU emulator is one hell of a learning experience for sure. My first was the 8086. That was.... taxing.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ArsonIzer</b> [ Tue Sep 17, 2013 1:20 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What determines whether an emulator is &quot;fast&quot; or &quot;slow&quot;?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">miker00lz wrote:</div><div class="quotecontent">Writing your first CPU emulator is one hell of a learning experience for sure. My first was the 8086. That was.... taxing.</div><br /><br />Haha I have to give it to you, you've got some guts to do that as your first emulator. I think I would've thrown away my laptop and lived in the woods after becoming permanently paranoid if I had to do that with the knowledge I had prior to making the 6502. Even now, I think the 8086 would be a major, several-month challenge to me that would have a pretty big chance of failure to be honest. I do, however, plan to emulate one at some point. The NES is just a start in my journey (hopefully) <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>miker00lz</b> [ Tue Sep 17, 2013 12:34 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What determines whether an emulator is &quot;fast&quot; or &quot;slow&quot;?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">ArsonIzer wrote:</div><div class="quotecontent"><div class="quotetitle">miker00lz wrote:</div><div class="quotecontent">Writing your first CPU emulator is one hell of a learning experience for sure. My first was the 8086. That was.... taxing.</div><br /><br />Haha I have to give it to you, you've got some guts to do that as your first emulator. I think I would've thrown away my laptop and lived in the woods after becoming permanently paranoid if I had to do that with the knowledge I had prior to making the 6502. Even now, I think the 8086 would be a major, several-month challenge to me that would have a pretty big chance of failure to be honest. I do, however, plan to emulate one at some point. The NES is just a start in my journey (hopefully) <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /></div><br /><br />Well, if you can do the 6502 you can definitely do the 8086. The most confusing thing on the 8086 is understanding the addressing mode byte (aka mod/reg/rm byte)... once you get that it's really not much harder. There are more opcodes and more addressing modes, so it will take more time. There are also &quot;group&quot; opcodes where the first instruction byte indicates which group, then it has a modregrm byte where one of it's fields indicates the exact operation. It can get pretty weird. Oh and there are segments to worry about too, but that's not so bad. Yeah, it DID take a few months before I was able to boot DOS.<br /><br />If you get around to doing it, let me know if you want a little help. Once you understand the couple confusing aspects, it does become about as easy as the 6502. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Tue Sep 17, 2013 2:02 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What determines whether an emulator is &quot;fast&quot; or &quot;slow&quot;?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Are 8086 and 65816 of similar complexity?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>miker00lz</b> [ Tue Sep 17, 2013 3:53 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What determines whether an emulator is &quot;fast&quot; or &quot;slow&quot;?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I don't know 65816 assembly, but reading it's specs on Wikipedia I would hazard a guess that it's roughly the same. If anything, likely a complexity edge to the 8086 because in some cases, the encoding can be pretty strange looking. There are also repetition and segment override prefixes that must be parsed and honored. I'm not sure if the 65816 has anything like that.<br /><br />This is my main CPU module for it: <!-- m --><a class="postlink" href="https://sourceforge.net/p/fake86/code/ci/master/tree/src/fake86/cpu.c">https://sourceforge.net/p/fake86/code/c ... ke86/cpu.c</a><!-- m -->

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Tue Sep 17, 2013 6:30 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What determines whether an emulator is &quot;fast&quot; or &quot;slow&quot;?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The one thing that bit me in the ass with x86 all the time, compared to 65xxx CPUs, was how the x86 handles status flags when doing <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">mov</tt> or equivalent operations.  Unlike the 65xxx many flags do not get set when moving a value or contents into a register, requiring you to use <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">test</tt> or other crap.  Can't tell you how often that caused bugs in my code when doing x86 nearly 20 years ago.<br /><br />65xxx really spoils you in a lot of regards.  Honestly the 65816 is a great piece of engineering (IMO), I just wish it had opcodes for multiplication/division (even just integer would be fine); sure, SNES/SFC has memory-mapped registers for that, but we're talking CPUs here.<br /><br />P.S. -- NSFW, but: fuck x86.  Awful processor if you ask me.  Been around too long and way too many hacks and extensions (there are I believe two 32-bit feature flags that define what each CPU is capable of, including MMX, SSE and its bazillion derivatives, blah blah).  Just so damn nasty.  Kudos to all the guys who can do x86 on today's x86 CPUs; I'm glad I stopped with the 486.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>miker00lz</b> [ Tue Sep 17, 2013 7:06 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What determines whether an emulator is &quot;fast&quot; or &quot;slow&quot;?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yeah, it's not the cleanest arch out there. That's for damn sure. I have no problem with the flags not being modified from a mov though. In fact, I like it and it makes more sense IMO. It's intended to move data, not make calculations. I might be annoyed in a lot of cases if I wanted my flags to stay as they are, but move some data before looking at them. It lets you be a lot more flexible with your code order and not have to worry about storing/restoring flags, and the cost of a test op here and there is negligible. It's only necessary when the value you want the flags to be set from is sitting in memory pre-calculated. I think usually decisions based on flags are going to be from real-time calculations.<br /><br />Also, I may be wrong since I've never used 65816, but I would bet the 8086 spanks it when it comes to block moves and string operations using rep prefixes.<br /><br />You're right though, modern x86 is NASTY!!!! And old x86 was still pretty quirky right from the beginning, but that doesn't always mean bad.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Joe</b> [ Tue Sep 17, 2013 8:21 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What determines whether an emulator is &quot;fast&quot; or &quot;slow&quot;?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">miker00lz wrote:</div><div class="quotecontent">Also, I may be wrong since I've never used 65816, but I would bet the 8086 spanks it when it comes to block moves and string operations using rep prefixes.</div>Block moves are pretty fast, but <a href="http://trixter.oldskool.org/2013/01/18/optimizing-for-the-8088-and-8086-cpu-part-3-a-case-study-in-speed/" class="postlink">decompressing RLE is faster</a>. <img src="./images/smilies/icon_lol.gif" alt=":lol:" title="Laughing" /> (Scroll down to the &quot;results&quot; section.)

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>3</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>