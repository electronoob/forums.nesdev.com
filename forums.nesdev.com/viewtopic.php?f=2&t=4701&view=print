<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Writing pattern tables / tile data</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Writing pattern tables / tile data</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=4701">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=4701</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Petruza</b> [ Sun Jan 04, 2009 5:02 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Writing pattern tables / tile data</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Now I'm following NES 101 to make some graphics.
<br />
<br />I managed to get the palette info on VRAM.
<br />But then I try to write some tiles to VRAM $1000 and then read them back to test if all went ok, the following happens:
<br /><ul>- on most emulators, only zeros come out.<br />- on Jnes the info that was written appears when read, but shifted one byte to the right. The sprite doesn't show.<br />- on my PMP with NES emulation, the same info than in Jnes is read, but here the sprite shows perfectly!</ul>
<br />I'm trying to stick the Tile data this way, as I'm coding in C and cannot include it in CHR-ROM with things like .incbin .org .bank .advance, etc.
<br />So there are two ways of doing it, in CHR-ROM and in VRAM, right?
<br />
<br />The CHR info I (try to) write to $1000 VRAM:<div class="codetitle"><b>Code:</b></div><div class="codecontent">byte tiledata&#91;&#93; = &#123;<br />0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,<br />0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, //&nbsp; &nbsp;1st tile: blank &#40;16 bytes&#41;<br />0x18,0x24,0x66,0x99,0x99,0x66,0x24,0x18,<br />0x00,0x18,0x18,0x66,0x66,0x18,0x18,0x00&nbsp; // 2nd tile: diamond &#40; another 16 bytes &#41;<br />&#125;;</div><br /><br />The data read back from VRAM $1000: ( on Jnes and my PMP ) <div class="codetitle"><b>Code:</b></div><div class="codecontent">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,<br />0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,<br />0x00,0x18,0x24,0x66,0x99,0x99,0x66,0x24, // note that this is the start of the 2nd tile, <br />0x18,0x00,0x18,0x18,0x66,0x66,0x18,0x18&nbsp; // but shifted 1 byte to the right</div><br /><br />Program:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp;...<br />&nbsp; &nbsp;#define sizeof_tiledata&nbsp; &nbsp;32<br />&nbsp; &nbsp;unsigned char i;<br />&nbsp; &nbsp;unsigned char *p;<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;// write 2 tiles to VRAM ...<br />&nbsp; &nbsp;addr&#40;0x2006&#41; = 0x10;<br />&nbsp; &nbsp;addr&#40;0x2006&#41; = 0x00;<br />&nbsp; &nbsp;for&#40; i=0, p=tiledata; i!=sizeof_tiledata; ++i, ++p &#41;<br />&nbsp; &nbsp;&nbsp; &nbsp;addr&#40;0x2007&#41; = *p; // write 2 tiles, 16 bytes each<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;// ... Read them back<br />&nbsp; &nbsp;for&#40; i=0; i!=sizeof_tiledata; ++i &#41;<br />&nbsp; &nbsp;&#123;<br />&nbsp; &nbsp;&nbsp; &nbsp;addr&#40;0x2006&#41; = 0x10;<br />&nbsp; &nbsp;&nbsp; &nbsp;addr&#40;0x2006&#41; = i;<br />&nbsp; &nbsp;&nbsp; &nbsp;cprintf&#40;&quot;%02X.&quot;, addr&#40;0x2007&#41; &#41;;<br />&nbsp; &nbsp;&#125;<br /></div>
<br />
<br />Any clues?
<br />Thanks in advance!
<br />
<br />PS: If I haven't explained myself enough, please ask.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Sun Jan 04, 2009 5:56 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The reason it's shifting to the right is because the PPU reads are buffered.  After you change the PPU address, discard the first $2007 read, and that's normal.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Petruza</b> [ Sun Jan 04, 2009 6:27 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thanks! I just missed that in the NES docs.
<br />
<br />Well, then after the code I pasted above, there's this:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;// load sprite 0 data<br />&nbsp; &nbsp;addr&#40;0x2003&#41; = 0;&nbsp; &nbsp; // sprite index<br />&nbsp; &nbsp;addr&#40;0x2004&#41; = 10;&nbsp; &nbsp;// sprite x<br />&nbsp; &nbsp;addr&#40;0x2004&#41; = 1;&nbsp; &nbsp; // tile index<br />&nbsp; &nbsp;addr&#40;0x2004&#41; = 0;&nbsp; &nbsp; // attributes<br />&nbsp; &nbsp;addr&#40;0x2004&#41; = 10;&nbsp; &nbsp;// sprite y<br />&nbsp; &nbsp;&nbsp; &nbsp;<br />&nbsp; &nbsp;// enable graphics<br />&nbsp; &nbsp;addr&#40;0x2000&#41; = bin&#40;1,0,0,0,1,0,0,0&#41;;<br />&nbsp; &nbsp;addr&#40;0x2001&#41; = bin&#40;0,0,0,1,1,1,1,0&#41;;</div>
<br />
<br />So this works in my PMP showing the sprite at 10,10. But not on emulators.
<br />I haven't set any background tiles or name tables.
<br />Should this happen this way? I know my PMP's emulation isn't sure 100% accurate. But what is missing here in order to make the sprite show?
<br />The sprite shows and has the same colors as in the NES 101 demo, so palette data must be ok.
<br />
<br />
<br />PS: I waited two VBlanks at the begining, and also disabled graphics by a zero write to both $2000 and $2001.
<br />PS2: the bin() macro should be self explanatory

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Sun Jan 04, 2009 7:35 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Writes to CHR-RAM only work if you have CHR-RAM.  If your game has CHR-ROM, good emulators (read:  not JNES*) will ignore those writes to the pattern tables because you can't write to ROM (it is "read only memory" after all).  This could explain why only JNES works and none of the other emulators.  And I don't really know what PMP is, so I can't say anything about that.
<br />
<br />As for why your sprite isn't showing...
<br />
<br />1)  you're turning on BG rendering with that $2001 write -- but are you clearing the nametable?  If you didn't, there might be solid garbage tiles being drawn which might be masking or hiding the sprite.  If you're working on just sprites and no BG, don't enable the BG yet -- just enable sprites.
<br />
<br />2)  did you set up the palettes?  Maybe the sprite is being drawn but is invisible because it has all the same colors as the background.
<br />
<br />3)  instead of using $2003 and $2004 (why oh why do tutorials teach $2004!).  Look into $4014.  This isn't really your problem but I feel I should mention it.  $2004 is useless in most practical applications.
<br />
<br />4)  could be the same confusion with CHR (pattern tables).  Are you sure tile 1 is the graphic you want?  Look at the pattern tables in a any emulator with debugging tools (like FCEUXD) to make sure they're what you expect.  The sprite may be drawing but tile 1 may be totally blank.
<br />
<br />
<br />
<br />* jnes footnote/rant:  I never understood why jnes was so popular.  I mean it was a mediocre emulator even when it first came out... yet people were drawn to it over all the other superior alternatives.  *shrug*

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Petruza</b> [ Sun Jan 04, 2009 8:52 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Sorry, PMP is portable media player, it's an MP4 player with NES ( not 100% accurate ) emulation.
<br />
<br />SO How do I decide to have or not to have CHR-RAM ?
<br />
<br />1) ok, I'll try that.
<br />2) Yes I did, and on the PMP the sprite shows with the same colours of the demo where I copied the code, so I'm pretty sure the palette data is ok.
<br />3) Yes, I'm aware of the $4014 preference. It's just that seeing $2003 work fine in the PMP made me lazy to try $4014, but I will. I swear I will.
<br />But what I don't fully understand is why is copying 64 sprites data each vblank preferred even when you are just using a couple? isn't that a waste of processor cycles?
<br />4) Well at least I think so. reading back the tile data at VRAM $1000 yields the same I wrote to it, and the tile shows perfectly in the PMP without modifying the code, it may not be the best emulator, but it's not making up the tile data.
<br />
<br />If anyone has some experience with cc65, is there a way to link with compiled asm code that puts binary data directly into ROM, like CHR-ROM?
<br />
<br />Thanks Disch!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Mon Jan 05, 2009 5:00 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Petruza wrote:</div><div class="quotecontent">SO How do I decide to have or not to have CHR-RAM ?<br /></div>
<br />
<br />Generally, you either only have CHR-ROM, or CHR-RAM.  Only in very special circumstances (with specific mappers) can you have both.  So check the .nes file you're producing.  You can either open it up in a hex editor and check offset 0x00005.  Or you can open the ROM up in an emulator which displays stats about the ROM (in FCEUXD, after you open up the ROM, go to Help | Message Log and it should say "CHR-ROM:   N x 8Kib" where 'N' is the number of CHR-ROM pages (same a the header).
<br />
<br />In either case... zero = CHR-RAM, and anything nonzero = CHR-ROM.
<br />
<br />
<br />3) Well for starters you need to copy all 64 sprites at least once so that you can ensure the sprites you aren't using are hidden (by moving them offscreen).  If you don't do this, they may appear as blocks of garbage on the screen.
<br />
<br />- Plus, $2004 isn't as quick as you might think.  LDA abs, STA abs (a typical write) is 8 cycles total.  4 bytes per sprite = 32 cycles to draw a single sprite.  Which means 16 sprites will take 512 cycles (512 cycles is how long the DMA takes).  So if you have under 16 sprites, yeah it might be a little faster... but otherwise it isn't.  And see next point
<br />
<br />- Plus, it's a speed priority issue.  Organizing and drawing all the sprites can eat precious VBlank time... whereas if you organze and draw to "shadow oam" during frame rendering and do the full DMA during VBlank, you may end up using more time overall, but will use less VBlank time.
<br />
<br />- Also there's this whole other thing with OAM decay (which emulators generally don't emulate) where you either need to keep sprites drawn, or keep refreshing OAM or else the memory "decays" and the values change (which could result in phantom garbage sprites appearing out of nowhere).
<br />
<br />4)  I really suspect this is your problem, actually.  In an earlier post you said that when you tried to read the tiles from $1000... "on most emulators, only zeros come out. ".  That tells me that $1000 is totally blank.
<br />
<br />Did you look at a debugger?  Seriously -- if you don't have FCEUXD, get it.  Load the ROM, and go to Tools | PPU Viewer.  Make sure the tile graphics are exactly what you expected them to be.  You'll be surprised how much easier debugging is when you use a debugger.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Petruza</b> [ Mon Jan 05, 2009 8:41 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Well now I see the $5 offset is 1, CHR-ROM, that's why good emulators return zeros.
<br />Ok I'll have to find out how to control the iNES header, or how to put info to ROM in c.
<br />
<br />
<br />Ok thanks for the explanation on $4014. You totally convinced me.
<br />
<br />Yes I tried FCEUXD and tiles don't show up, but now I know that that's because of the CHR data being in rom, not in ram.
<br />
<br />Thanks!
<br />
<br />Rant: People here only code in asm. People on cc65 mailing list don't like or know too much of the NES platform... I'm caught in the middle :'-(
<br />Doesn't matter, I'll get it working sometime.
<br />
<br />Update: manually changing the iNES header to set CHR-ROM blocks to zero made the tile show on FCE and other emus. <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Mon Jan 05, 2009 10:03 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Petruza wrote:</div><div class="quotecontent">Ok I'll have to find out how to control the iNES header, or how to put info to ROM in c.<br /></div><br /><br />I can't really be much help here without seeing your build settings.  Probably, though, the route you'd want to go with stick with CHR-ROM.  CHR-ROM is generally easier since you don't have to draw the tiles to CHR-RAM (they're already there), plus then the CHR doesn't use PRG space.<br /><br />cc65 is probably including some external file or something to use for the CHR.  Maybe check the .cfg file (if there is one) to see if it lists one.  I wish I could be more help with this, but I've only really used the assembler+linker in the cc65 package.  Never actually made anything in C with it.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Rant: People here only code in asm. People on cc65 mailing list don't like or know too much of the NES platform... I'm caught in the middle :'-(<br />Doesn't matter, I'll get it working sometime.</div>
<br />
<br />My sympathies.  I'm curious to see how well it works out, honestly.  I always thought C would be too high level to have practical application on the NES, but you never know.  I'm really glad you're trying it out and sticking with it.  Maybe when you're done you can write like a FAQ or tutorial or something. <img src="./images/smilies/icon_wink.gif" alt=":wink:" title="Wink" />
<br />
<br />Best of luck!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Jan 05, 2009 10:45 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Disch wrote:</div><div class="quotecontent">I always thought C would be too high level to have practical application on the NES</div>
<br />Interpreted floating-point BASIC is even slower than compiled C. Yet Oregon Trail was "fast enough" on the Apple II Plus despite being written in BASIC with a few assembly language subroutines to handle blitting. Not all games are as graphically intense as, say, Recca.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Petruza</b> [ Mon Jan 05, 2009 11:29 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Disch wrote:</div><div class="quotecontent">My sympathies.  I'm curious to see how well it works out, honestly.  I always thought C would be too high level to have practical application on the NES, but you never know.  I'm really glad you're trying it out and sticking with it.  Maybe when you're done you can write like a FAQ or tutorial or something. <img src="./images/smilies/icon_wink.gif" alt=":wink:" title="Wink" /><br /><br />Best of luck!</div>
<br />
<br />Thanks! I will. And thanks to you all for the help.
<br />
<br />The c NES library I'm writing will be for simple demos, hello-worlds and basic games. But I'm sure it will be able to do pretty good things, though.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Mon Jan 05, 2009 2:31 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />That's fun, but I recently tough about coding for the NES in C.
<br />
<br />And I tried to look at CC65, and honnestly, the way the libraries are set up discouraged me quickly. There is a incredible number of small asm files that are a complete mess and you have to deal with many shattered files and makefiles which are a real pain in the ass (to me at least, some more experienced C programmers may not find that bothersome).
<br />
<br />I think it should be perfectly possible to write decent programms in C, as long as the time critical stuff remains in assembly (aka interrupts).
<br />
<br />NMI and IRQ should be written in assembly because they need to update data to the PPU in a time-critical operaion, and in addition to this they should save the A, X and Y registers and resore them, something I don't think is possible in C (without using asm statements).
<br />Reset should be written in assembly to clear memory, initialise the C argument stack (as well as the hardware stack) and call the C main() function.
<br />
<br />I think libraries should be rewritten, and that with in mind that they are not used for a console-based computer like most C compiler are, but on a video game console that is supposed to show graphics (and not plain text), and that commands such as printf() or usual stuff like that makes absolutely no sence in this situation. Other funcitons that make sense for the NES, such as writing a string to a buffer that will be updated on the PPU on the next VBlank, should replace the standard functions.
<br />Even if this implies making a version of C wich is not standard, anyway it isn't because float, double and boolean types are not supported at all by CC65.
<br />
<br />If only CC65 could optionally have a stack that is acceded with "stack,X" instead of "(stackptr),Y", this would be much more optimised, even if it would limit the size of the stack, I think 256 bytes would be enough for something decent (if static variables are extensively used). Also, if it would be possible to retun booleans via the C flag, it would be awesome (I always do that in assembly).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Mon Jan 05, 2009 4:01 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />There was a version of Contiki that compiles with cc65.  The PPU is broken in the library, and it displayed OK on certain emulators.  <a href="http://www.sics.se/contiki/" class="postlink">http://www.sics.se/contiki/</a>
<br />
<br />That's what I was hoping to fix when I was messing with it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Petruza</b> [ Tue Jan 06, 2009 9:17 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yay! I managed to compile the nes library for cc65 with CHR-RAM instead of ROM  <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /> Happy, happy me  <img src="./images/smilies/icon_exclaim.gif" alt=":!:" title="Exclamation" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Wed Jan 07, 2009 3:12 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />That's great news. The more I think about it, the more I guess it would be really cool to programm the NES in C. Altough you'd have to get a very optimised compiler.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Petruza</b> [ Wed Jan 07, 2009 9:39 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I think the best would be having a library written in assembler with time-critical routines, and have the c header files to use that routines, and make the application body in C.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>