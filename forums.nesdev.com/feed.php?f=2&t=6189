<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=2&amp;t=6189" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2010-03-20T10:48:10-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=2&amp;t=6189</id>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2010-03-20T10:48:10-07:00</updated>
<published>2010-03-20T10:48:10-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6189&amp;p=58682#p58682</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6189&amp;p=58682#p58682"/>
<title type="html"><![CDATA[Non-fixed bank calling into other non-fixed bank via fixed?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6189&amp;p=58682#p58682"><![CDATA[
A drawback to 32 KiB banks is having to switch banks behind DMC's back unless the mapper can map RAM into $C000-$DFFF.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Sat Mar 20, 2010 10:48 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Memblers]]></name></author>
<updated>2010-03-20T10:35:40-07:00</updated>
<published>2010-03-20T10:35:40-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6189&amp;p=58681#p58681</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6189&amp;p=58681#p58681"/>
<title type="html"><![CDATA[Non-fixed bank calling into other non-fixed bank via fixed?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6189&amp;p=58681#p58681"><![CDATA[
<div class="quotetitle">Celius wrote:</div><div class="quotecontent"><br />This might be a ridiculous suggestion, but you <em>could</em> copy code to RAM and execute it there. This would probably only be useful if you had the extra 8k of SRAM so you could copy larger pieces to it.<br /></div><br /><br />I think it's a good idea, I mean today the SRAM only costs about ~$1, and I'm sure one could easily spend more than that on a fancy mapper alone.  And gameplay-wise you can generally <em>do more</em> with the RAM than the mapper.  With my Squeedo design I figured I could get away with 32kB PRG-ROM paging largely for that reason - there are 4 8kB pages of PRG-RAM that can be banked independently, which is more than enough room for code and variables.<br /><br />The vectors don't really matter when you consider that a mapper init routine can fit in probably 8 bytes per bank (load, store, JMP), and that you can point the NMI and IRQ vectors to SRAM.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=10">Memblers</a> — Sat Mar 20, 2010 10:35 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Celius]]></name></author>
<updated>2010-03-19T21:13:28-07:00</updated>
<published>2010-03-19T21:13:28-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6189&amp;p=58664#p58664</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6189&amp;p=58664#p58664"/>
<title type="html"><![CDATA[Non-fixed bank calling into other non-fixed bank via fixed?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6189&amp;p=58664#p58664"><![CDATA[
This might be a ridiculous suggestion, but you <em>could</em> copy code to RAM and execute it there. This would probably only be useful if you had the extra 8k of SRAM so you could copy larger pieces to it. But if you have only the 2k to work with (actually 1.75k, pretty much), then chances are you could squeeze any code you'd copy into the fixed bank.<br /><br />This is why I really like 8k bankswitching. You still have a fixed bank, but you can swap out more than one bank. This is really handy for something like my cutscene engine with large rendering code in one bank, and large screen definitions in another. This code is so large that it can't fit into a 16k fixed bank and leave space for other code, and it also is very crucial that everything within that code is executed at the highest speed possible. The code also accesses the data in that bank really often, and the data chunks are often around 256 or more bytes. Copying that to RAM would take a long time as well as a lot of space in RAM. So if I couldn't bankswitch more than one bank and I didn't want to copy data to RAM, I would have to waste A LOT of cycles jumping back and forth between a data bank and a code bank.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=138">Celius</a> — Fri Mar 19, 2010 9:13 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2010-03-19T07:35:28-07:00</updated>
<published>2010-03-19T07:35:28-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6189&amp;p=58619#p58619</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6189&amp;p=58619#p58619"/>
<title type="html"><![CDATA[Non-fixed bank calling into other non-fixed bank via fixed?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6189&amp;p=58619#p58619"><![CDATA[
<div class="quotetitle">Disch wrote:</div><div class="quotecontent"><br />And not being able to bankswitch when the DMC is playing<br /></div><br />True. All bankswitching would be for DMC, which means that this setup would not be suitable for a game...<br /><br /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br />This really remembers me how I did to handle 32k switching<br /></div><br />The last time I tried using 32KB bankswitching I had a lot of repeated code... Like, every bank that had level map data also had routines for decoding rows and columns from it and for testing collision detection, so that I could just select the bank and perform the task I wanted, as opposed to bankswitching a ridiculous amount of times just to read the data and perform the tasks in another bank.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Fri Mar 19, 2010 7:35 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2010-03-19T07:04:18-07:00</updated>
<published>2010-03-19T07:04:18-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6189&amp;p=58616#p58616</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6189&amp;p=58616#p58616"/>
<title type="html"><![CDATA[Non-fixed bank calling into other non-fixed bank via fixed?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6189&amp;p=58616#p58616"><![CDATA[
<div class="quotetitle">MetalSlime wrote:</div><div class="quotecontent"><br />The Guardian Legend does this a lot.  Their CHR data for example is spread across several banks, and for engines that aren't in the fixed bank (title screen, password screen, ending, etc) they have to do some bankswap voodoo to get their graphics.<br /><br />They have it streamlined down into a single subroutine that can handle all cases.  When they want to call a routine from another unfixed bank, they embed the address and bank of the target subroutine as DATA after the call to the fixed bank helper routine, like this:<br />[...]<br /><br />Just an example of how one commercial game handles this.<br /></div><br />This really remembers me how I did to handle 32k switching, I have tried something almost exactly like what you describe <a href="http://nesdev.com/bbs/viewtopic.php?t=4737&amp;highlight=mapper++kernel" class="postlink">here</a><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Fri Mar 19, 2010 7:04 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2010-03-18T20:23:58-07:00</updated>
<published>2010-03-18T20:23:58-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6189&amp;p=58605#p58605</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6189&amp;p=58605#p58605"/>
<title type="html"><![CDATA[Non-fixed bank calling into other non-fixed bank via fixed?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6189&amp;p=58605#p58605"><![CDATA[
And not being able to bankswitch when the DMC is playing<br /><br />You're better off with something MMC3 style where you can swap $C000 and $8000/$A000<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Thu Mar 18, 2010 8:23 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2010-03-18T19:42:13-07:00</updated>
<published>2010-03-18T19:42:13-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6189&amp;p=58603#p58603</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6189&amp;p=58603#p58603"/>
<title type="html"><![CDATA[Non-fixed bank calling into other non-fixed bank via fixed?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6189&amp;p=58603#p58603"><![CDATA[
<div class="quotetitle">Memblers wrote:</div><div class="quotecontent"><br />UNROM is easy to mod, replace the 74HC32 with a 74HC08 (replacing OR gates with AND gates) and it makes UNROM keep $8000-$BFFF fixed and $C000+ is banked.<br /></div><br />The only disadvantage would be having to repeat the interrupt vectors in all banks.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Thu Mar 18, 2010 7:42 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Memblers]]></name></author>
<updated>2010-03-18T18:22:02-07:00</updated>
<published>2010-03-18T18:22:02-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6189&amp;p=58600#p58600</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6189&amp;p=58600#p58600"/>
<title type="html"><![CDATA[Non-fixed bank calling into other non-fixed bank via fixed?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6189&amp;p=58600#p58600"><![CDATA[
<div class="quotetitle">Banshaku wrote:</div><div class="quotecontent"><br /><div class="quotetitle">neilbaldwin wrote:</div><div class="quotecontent">I wish you could bank-switch DPCM - it would make my life a lot easier <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /></div><br /><br />You can with some specific mapper like the MMC3 and some under ones that I don't remember.</div><br /><br />UNROM is easy to mod, replace the 74HC32 with a 74HC08 (replacing OR gates with AND gates) and it makes UNROM keep $8000-$BFFF fixed and $C000+ is banked.  That's iNES mapper #180, for Crazy Climber, and it's the type of bank setup I used in that 512kB-sized 'Chipography' NSF.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=10">Memblers</a> — Thu Mar 18, 2010 6:22 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2010-03-18T17:06:12-07:00</updated>
<published>2010-03-18T17:06:12-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6189&amp;p=58598#p58598</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6189&amp;p=58598#p58598"/>
<title type="html"><![CDATA[Non-fixed bank calling into other non-fixed bank via fixed?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6189&amp;p=58598#p58598"><![CDATA[
In games that use CHR-RAM there are usually many pages of tile data, and this is a good example of when it's OK to do these things, because the goal is to use a big amount of data at once, and probably isn't even done during gameplay, when CPU time is a very important resource. If a similar routine was used several times during gameplay to fetch small pieces of data, there would certainly be a significant impact on performance.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Thu Mar 18, 2010 5:06 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Banshaku]]></name></author>
<updated>2010-03-18T17:01:17-07:00</updated>
<published>2010-03-18T17:01:17-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6189&amp;p=58597#p58597</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6189&amp;p=58597#p58597"/>
<title type="html"><![CDATA[Non-fixed bank calling into other non-fixed bank via fixed?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6189&amp;p=58597#p58597"><![CDATA[
<div class="quotetitle">neilbaldwin wrote:</div><div class="quotecontent"><br />I wish you could bank-switch DPCM - it would make my life a lot easier <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /></div><br /><br />You can with some specific mapper like the MMC3 and some under ones that I don't remember.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3559">Banshaku</a> — Thu Mar 18, 2010 5:01 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[MetalSlime]]></name></author>
<updated>2010-03-18T15:29:17-07:00</updated>
<published>2010-03-18T15:29:17-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6189&amp;p=58594#p58594</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6189&amp;p=58594#p58594"/>
<title type="html"><![CDATA[Non-fixed bank calling into other non-fixed bank via fixed?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6189&amp;p=58594#p58594"><![CDATA[
The Guardian Legend does this a lot.  Their CHR data for example is spread across several banks, and for engines that aren't in the fixed bank (title screen, password screen, ending, etc) they have to do some bankswap voodoo to get their graphics.<br /><br />They have it streamlined down into a single subroutine that can handle all cases.  When they want to call a routine from another unfixed bank, they embed the address and bank of the target subroutine as DATA after the call to the fixed bank helper routine, like this:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">  JSR Crossbank_bridge  ;this routine performs the switch<br />  .byte $03                     ;target bank<br />  .word $8134-1              ;address of target subroutine &#40;in RTS form&#41;<br />  lda whatever                ;continue code in this bank upon return<br />  cmp something<br />  beq somewhere<br /></div><br /><br />The switching routine itself builds a bridge back to the original bank using the stack and then reads the target address:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">Crossbank_bridge:<br />  STA tempA     ;save A and Y<br />  STY tempY<br />  <br />  PLA                ;pull return address off stack and<br />  STA ptr1           ;store in a pointer variable for 3-byte data read.<br />  CLC                ;we also add 3 bytes and push it back on the stack,<br />  ADC #$03           ;building a bridge back to where we started<br />  TAY                ;we add 3 so we return to the point AFTER the embedded<br />  PLA                ;data bytes<br />  STA ptr1+1<br />  ADC #$00<br />  PHA<br />  TYA<br />  PHA<br /><br />  LDA current_bank   ;push the current bank on the stack too<br />  PHA<br />  JSR Crossbank_Go   ;perform the jump.  JSR here is important.<br />                     ;when the crossbank routine returns, it will return<br />                     ;here<br />  STA tempA <br />  STY tempY<br />  PLA                    ;pull the origin bank<br />  JMP bankswitch       ;JMP is important here.  when bankswitch returns<br />                        ;it will return to the proper place in the original bank<br />Crossbank_Go:<br />  LDY #$03<br />  LDA &#40;ptr1&#41;,Y          ;read target address in other bank   <br />  PHA                      ;address will be in the form of address-1 b/c<br />  DEY                      ;of the RTS trick<br />  LDA &#40;ptr1&#41;,Y<br />  PHA<br />  DEY<br />  LDA &#40;ptr1&#41;,Y           ;read target bank<br /><br />  STA current_bank   ;bank switch and return to the target bank<br />  TAY<br />  LDA bank_table,Y    ;UNROM bankswitch<br />  STA bank_table,Y    ;now we are in the target bank<br />  LDA tempA           ;restore vars <br />  LDY tempY <br />  RTS              ;RTS to target routine<br /></div><br /><br />Just an example of how one commercial game handles this.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3632">MetalSlime</a> — Thu Mar 18, 2010 3:29 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2010-03-18T10:15:03-07:00</updated>
<published>2010-03-18T10:15:03-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6189&amp;p=58583#p58583</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6189&amp;p=58583#p58583"/>
<title type="html"><![CDATA[Non-fixed bank calling into other non-fixed bank via fixed?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6189&amp;p=58583#p58583"><![CDATA[
Well there is many way it could be done, but you'd want to go into this order, the first being the best and the last being the worst :<br />1) Code and data related to it in one 16k bank<br />2) If 1) cannot be done because you have too much data, place code in the fixed bank and data related to it in multiple 16k banks<br />3) If 2) cannot be done because the fixed bank is aldready full, have code in a switched bank, and data related to it that exceed the switched bank being acedded trough a "trampoline" routine in the fixed bank (will be very slow !)<br />4) If it lags by using 3) because it was too slow, have your code repeated in multiple banks (at the same adress) so that it can bankswitch the data related to it quickly without using a trampoline<br /><br />Another way to solve the problem is to use 32k banks (your reset, NMI, IRQ and bankswitching routines will HAVE to be done like point 4), so you can have code and related data in a 32k bank, wich is twice as large. However, if you still overflow that limit, you'll have to deal with something similar to point 4) in all cases. However, it is much less likely you'll need that because the banks are bigger.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Thu Mar 18, 2010 10:15 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2010-03-18T10:09:27-07:00</updated>
<published>2010-03-18T10:09:27-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6189&amp;p=58582#p58582</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6189&amp;p=58582#p58582"/>
<title type="html"><![CDATA[Non-fixed bank calling into other non-fixed bank via fixed?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6189&amp;p=58582#p58582"><![CDATA[
I've seen 'actor code' used elsewhere.<br /><br />Consider this: Make each bank's code a more or less self-contained module with a defined API, as if you were making the module for other people's code to call. This should help you define the entry points used by your trampoline.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Thu Mar 18, 2010 10:09 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[GradualGames]]></name></author>
<updated>2010-03-18T10:01:23-07:00</updated>
<published>2010-03-18T10:01:23-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6189&amp;p=58581#p58581</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6189&amp;p=58581#p58581"/>
<title type="html"><![CDATA[Non-fixed bank calling into other non-fixed bank via fixed?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6189&amp;p=58581#p58581"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br /><div class="quotetitle">Gradualore wrote:</div><div class="quotecontent">That's how my code works at present. All bankswitching is done from the fixed bank, and any code that runs within a non-fixed bank only accesses data already in the currently loaded fixed-bank. What I'm thinking about is an extreme case where perhaps you have almost all of your 16k PRG block filled with entity code<br /></div><br />What is entity code? All Google can find are HTML character entities.<br /><br /></div><br /><br />I was under the impression entity was a common term used on this forum to describe in-game objects that have a lifespan and some kind of intelligence/update routine. googling "nesdev entities" or "nesdev entity" comes up with several posts by me, and a few others using this term. I think I first adopted it after some discussions with Banshaku a while back. I was originally just going to call them "enemies" since I didn't have any plans for a non enemy entity, but later on I felt the more generic term was better.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3735">GradualGames</a> — Thu Mar 18, 2010 10:01 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2010-03-18T09:51:34-07:00</updated>
<published>2010-03-18T09:51:34-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6189&amp;p=58580#p58580</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6189&amp;p=58580#p58580"/>
<title type="html"><![CDATA[Non-fixed bank calling into other non-fixed bank via fixed?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6189&amp;p=58580#p58580"><![CDATA[
<div class="quotetitle">Gradualore wrote:</div><div class="quotecontent"><br />That's how my code works at present. All bankswitching is done from the fixed bank, and any code that runs within a non-fixed bank only accesses data already in the currently loaded fixed-bank. What I'm thinking about is an extreme case where perhaps you have almost all of your 16k PRG block filled with entity code<br /></div><br />What is entity code? All Google can find are HTML character entities.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />how far have you seen this technique go in commercial games? Do you ever find functions which can marshall a call between non-fixed banks<br /></div><br />Yes. I know of three such call gates in Apple II products alone:<br /><ul><li>Apple IIe call gate bankswitches in an alternate ROM bank. </li><li>Apple II ProDOS has the so-called "MLI" call gate that switches from the upper ROM (containing BASIC and the Monitor) to the RAM (containing ProDOS). </li><li>The IIGS call gate switches to 65C816 native mode (which allows execution outside the first 64 KiB of memory) and looks up routines in a jump table. If you have a IIGS, try going into the Monitor and listing the code at $00/F89C. </li></ul><br />neilbaldwin: You can bankswitch DPCM on some mappers. I can think of at least Crazy Climber, MMC1, MMC3, and MMC5.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Thu Mar 18, 2010 9:51 am</p><hr />
]]></content>
</entry>
</feed>