<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=10&amp;t=3786" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2007-12-18T00:16:11-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=10&amp;t=3786</id>
<entry>
<author><name><![CDATA[jargon]]></name></author>
<updated>2007-12-18T00:16:11-07:00</updated>
<published>2007-12-18T00:16:11-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3786&amp;p=29704#p29704</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3786&amp;p=29704#p29704"/>
<title type="html"><![CDATA[Tutorial - jargon - Boolean Logic]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3786&amp;p=29704#p29704"><![CDATA[
<div class="quotetitle">jargon wrote:</div><div class="quotecontent"><br />%0000 thru %1111 is the binary truth table for each boolean operation.<br /><br />NULL is FALSE<br />Identity is TRUE.<br /><br />the water in the beaker is neither a nor b (%0001)<br />the orange represents input b. (%0010)<br />the apple represents input a. (%0100)<br />the purple overlap between the apple and orange is %1000 in the truth table.<br /><br />a is %1100 when including the overlap and a in the venn diagram.<br />notice in a beaker of only water and an apple this is %10<br />in a beaker of only water and an orange this is %10 too.<br /><br />notice with evey added fruit (circle) into the venn diagram the amount of digits in the binary mask doubles and all existing bits are repeated next to itself once more.<br /><br />so %0, %00, %0000 are all FALSE,<br />and %1, %11, %1111 are all TRUE.<br /><br />%10 and %1100 are both a<br />and %01 and %0011 are both not a.<br /><br />likewise %1100 is a while %1010 is b<br /><br />likewhise %0100 is just a, while %0010 is just b<br /><br />also %1000 is both a and b, but not one or the other by themself.<br /><br /><br />the result of the logic operand is simply ((%mask &gt;&gt; %b) &gt;&gt; (%a&lt;&lt;1)) &amp; %1<br /><br />where a and b are either one or zero. each<br /><br />with bitwise operations you perform that using each coupling of the bits for a,b outputting to the same bit offset.<br /><br />this expands to:<br />%11110000 which is a for 3 inputs<br />%11001100 which is b for 3 inputs<br /><br />also note:<br />%11001010 which is c for 3 inputs<br /><br />for 3 inputs it goes:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">high bit: 2 to power 7 &#40;128&#41;: all a,b,c<br />2 to 6 &#40;64&#41;: both a,b<br />2 to 5 &#40;32&#41;: both a,c<br />2 to 4 &#40;16&#41;: just a<br />2 to 3 &#40;8&#41;: both b,c<br />2 to 2 &#40;4&#41;: just b<br />2 to 1 &#40;2&#41;: just c<br />low bit: 2 to power 0 &#40;1&#41;: none of a,b,c<br /></div><br /><br />this also expands to %111111110000000 which is a for 4 inputs<br /><br />and so on.<br /><br />it follows a very predictable pattern of permutations.<br /><br />if you dump all the operations in order, counting values for last input to first input (a), it acts as a perfect clock counter.<br /><br />for example:<br /><br />%0000 thru %1111<br /><br />dumps as %0 thru %11111111<br /><br />basically adds the dimension c.<br /><br />you can recurse this once more in order to add the dimension d. (%0 thru %1111111111111111)<br /><br />and so on.<br /><br />hope this helps blargg. <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br />that is basically the grand unified ring theory of boolean logic in a nutshell.<br /><br />%0000 thru %1111 basically map to a logic cube, that is a hypercube with each bit as an axis, each segment being 1 bit in length.<br /><br />false/true is basically a one bit long line segment. being a beaker either with or without water.<br /><br />false,!a,a,true is basically a square with one bit long line segments. being a beaker either with or without water, with or without an apple.<br /><br />my poster shows 16 possibilities, and 16 operations has 4 bit truth tables, that being a venn diagram of two overlapping circles master card logo style, of which produces a cube centered in another cube with all nearest vertices connected of which each vertice a beaker containing water or not containing water, containing a partial apple or not containing a partial apple, containing a partial orange or not containing a partial orange, or containing a merged apple and orange or not containing a merged apple and orange, of which each segment is 1 bit long, for a total of 16 vertices and 32 segments <img src="http://forums.nesdev.com/images/smilies/icon_wink.gif" alt=";)" title="Wink" /> each neighbor vertice is only different by a single bit in its truth table. <img src="http://forums.nesdev.com/images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /><br /><br />i came up with a c code generator for each truth table set called Seles in 2002, using this permutation ring theory i call Morsyl.<br /><br />however Seles got corrupted and no longer works.<br /><br />i attempted to use Seles to reverse engineer the S-DD1 conversions between input and output for Star Ocean and Street Fighter Alpha 2, but the only existing dumps from Seles are for Star Ocean, and only contain the final output in each part of the dump.<br /><br />it should have dawned on me that S-DD1 had to have used barrel shifting due to the massive size of the dumps.<br /><br />my final goal was to combine the two models it produced in order to spawn a common conversion for the two games, however the emulator itself if compiled, would have been uncountably larger than the zSNES emulator, the star ocean/street fighter alpha 2 S-DD1 output, and the star ocean/street fighter alpha 2 roms combined.  <img src="http://forums.nesdev.com/images/smilies/icon_rolleyes.gif" alt=":roll:" title="Rolling Eyes" /><br /><br />it would prolly have compiled as a binary larger than the entire storage space of all of the net at the time.<br /></div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3449">jargon</a> — Tue Dec 18, 2007 12:16 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[jargon]]></name></author>
<updated>2007-12-18T00:05:23-07:00</updated>
<published>2007-12-18T00:05:23-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3786&amp;p=29703#p29703</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3786&amp;p=29703#p29703"/>
<title type="html"><![CDATA[Tutorial - jargon - Boolean Logic]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3786&amp;p=29703#p29703"><![CDATA[
jargon's Boolean Beakers posters.<br /><br /><div class="quotetitle">jargon wrote:</div><div class="quotecontent"><br /><a href="http://mediaplague.com/gallery/index.php?gal=jargon&amp;alb=Boolean+Beakers+Posters" class="postlink">MediaPlague.com :: Boolean Beakers Posters</a><br /><br />0, 1, 2 input "Boolean Beakers" overview thumbnail<br /><img src="http://mediaplague.com/gallery/jargon/Boolean%20Beakers%20Posters/boolean%20beakers%20-%20thumb.gif" alt="Image" /> <br /><br />0 input "Boolean Beakers" poster<br /><img src="http://mediaplague.com/gallery/jargon/Boolean%20Beakers%20Posters/boolean%20beakers%20-%200%20input%20-%20poster.gif" alt="Image" /><br /><br />1 input "Boolean Beakers" poster<br /><img src="http://mediaplague.com/gallery/jargon/Boolean%20Beakers%20Posters/boolean%20beakers%20-%201%20input%20-%20poster.gif" alt="Image" /><br /><br />2 input "Boolean Beakers" poster<br /><img src="http://mediaplague.com/gallery/jargon/Boolean%20Beakers%20Posters/boolean%20beakers%20-%202%20input%20-%20poster.gif" alt="Image" /><br /><br />I grant NESdev permission to use these copyrighted images in their unmodified gif89a condition for the NESdev Newbie Survival Guide, however no derivative works shall be created.<br /></div><br /><br /><div class="quotetitle">jargon wrote:</div><div class="quotecontent"><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">----------------------------------------------------+<br />Boolean Beakers &#40;text version&#41;                      |<br />&#40;c&#41; Copyright Mon, 2007 12/17 Timothy Robert Keal   |<br />-----+----------------------------------------------+<br />pop3 | jargon juno com                              | <br />http | mediaplague.com                              |<br />icq  | 41981241                                     |<br />yim  | stereotypicalhacker                          |<br />yim  | stereotypicalhacker2pt0                      |<br />aim  | alias jargon                                 |<br />msn  | msn.im.TRK omnisis.org                       |<br />skype| timothy.robert.keal                          |<br />-----+----------------------------------------------+<br />3 2 1 0  Truth Table Power Of 2 Bit Index           |<br />----------------------------------------------------+<br />0 0 0 1  Neither  A,B                               |<br />0 0 1 0  Just       B                               |<br />0 1 0 0  Just     A                                 |<br />1 0 0 0  Both     A,B                               |<br />----------------------------------------------------+<br />1 1 0 0  Input    A                                 |<br />1 0 1 0  Input      B                               |<br />----------------------+---------+---------+---------+<br />0 0 0 0    NOT TRUE   |FALSE    |NULL     |         |<br />0 0 0 1  A NOT   OR B |NOR   A,B|         |         |<br />0 0 1 0  A NOT LIMP B |NLIMP A,B|         |         |<br />0 0 1 1  A NOT        |NOT   A  |         |         |<br />0 1 0 0  A NOT RIMP B |NRIMP A,B|NIMP  A,B|         |<br />0 1 0 1    NOT      B |NOT     B|         |         |<br />0 1 1 0  A NOT  EQV B |NEQV  A,B|XOR   A,B|EOR   A,B|<br />0 1 1 1  A NOT  AND B |NAND  A,B|         |         |<br />- - - - - - - - - - - + - - - - + - - - - + - - - - +<br />1 0 0 0  A      AND B |AND   A,B|         |         |<br />1 0 0 1  A      EQV B |EQV   A,B|XNOR  A,B|ENOR  A,B|<br />1 0 1 0             B |        B|         |         |<br />1 0 1 1  A     RIMP B |RIMP  A,B|IMP   A,B|         |<br />1 1 0 0  A            |      A  |         |         |<br />1 1 0 1  A     LIMP B |LIMP  A,B|         |         |<br />1 1 1 0  A       OR B |OR    A,B|         |         |<br />1 1 1 1        TRUE   |TRUE     |Identity |         |<br />----------------------+---------+---------+---------+</div><br /><br />I grant NESdev permission to use this copyrighted chart in its unmodified ASCII condition for the NESdev Newbie Survival Guide, however no derivative works shall be created.<br /></div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3449">jargon</a> — Tue Dec 18, 2007 12:05 am</p><hr />
]]></content>
</entry>
</feed>