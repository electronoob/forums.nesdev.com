<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Attribute updates</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Attribute updates</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=1545">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=1545</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>3</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Sun May 21, 2006 1:49 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Attribute updates</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hello, everyone.
<br />
<br />I have created my sidescroller level engine, and when I was done creating it, I realized that I forgot all about attributes! Then I thought, "How the hell am I going to do this?"
<br />
<br />My game uses 2x2 metatiles, but it uses game objects. Like my routine says, "Store object at $xxxx into RAM", and an arrangement of metatiles is stored into RAM, then put on the screen when necissary. I was thinking this could be easy, but what if 2 objects share the same attribute "block"? It will be alot more complicated, and I think I'd have to keep the attribute bytes in RAM, so I could do some sort of and/ora thing, then store it on screen. What do you think?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sun May 21, 2006 2:23 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Many games do keep a copy of the attribute table for a column, row, or entire screen depending on how they scroll.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sun May 21, 2006 3:42 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'm in the middle of a huge struggle with attributes myself... I guess most of the time it feels like a waste to store a copy of the attributes in RAM.
<br />
<br />My advice goes something like this: You probably update a column of metatiles to the screen every 16 pixels the camera moves, right? So, you do something similar for the attributes, but every 32 pixels. Every 32 pixels, you activate a routine that will read your decoded screens in RAM and create an appropriate attribute byte for every square of 4 metatiles from the top to the bottom of the screen. Save that to a buffer, to output during VBlank. This way you won't need any buffers.
<br />
<br />That's how I'd do if I were only scrolling sideways. But I'm also scrolling vertically and the part where the name tables meet makes it all difficult.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sun May 21, 2006 4:07 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Are you doing a 2-screen-tall level (like <em>Super Mario Bros. 3</em>), or are you doing true 4-way scrolling?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Sun May 21, 2006 5:11 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">So, you do something similar for the attributes, but every 32 pixels.</div>
<br />
<br />Aren't attributes applied in 16-pixel chunks? If so, that implies that you'd want to update attributes every 16 pixels, not 32.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Sun May 21, 2006 5:19 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />No, attributes are applied per 32 pixels. You could update it per 16 pixels, but that'd be just way too complicated. Or more complicated than 32 pixels. 1 byte is stored for a 4x4 tile chunk. 2 bits for each 2x2 section.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Sun May 21, 2006 5:34 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Celius wrote:</div><div class="quotecontent">No, attributes are applied per 32 pixels.</div><br /><br />But you can control each 16x16 square, not just every 32x32 pixel square.  If you only update every 32 pixels, you will have LARGE color distortion on the edge of the screen as it scrolls (at best, 16 pixels on either end)<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">You could update it per 16 pixels, but that'd be just way too complicated.</div>
<br />
<br />Not really.  Many commercial games keep $80 bytes of RAM reserved for attribute tables (kind of like how it keeps $100 bytes for sprite data, each $40 bytes of this reserved data is an exact copy of what's in the attribute tables).  As the screen scrolls you can update the RAM copy of attribute at will -- then in VBlank, you can copy the whole-shabang to the real attribute table with ease.
<br />
<br />
<br />Games often have a whole byte to indicate which palette each 2x2 metatile uses, despite the fact that only 2 bits are needed.  Values are always either $00, $55, $AA, or $FF.  This way every 2-bit pair is identical, and you can just mask out the bits you need without having to count shifts and whatnot.
<br />
<br />
<br />Updating attribute with Horizontal or Vertical scrolling isn't all that difficult -- though it does get a bit more complicated with 4-way scrolling.
<br />
<br />I'll see if I can't come up with some dummy code to portray the idea I have in mind.  I may edit this post later (or make a new post if I take long enough and someone else replies)
<br />
<br />EDIT  -  bah screw coming up with dummy code.  Too much work.  If you don't understand what I mean I suppose I could try and clarify more though.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Sun May 21, 2006 5:47 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'm working on my engine right now, and I am doing a SMB1 type thing, I'm updating way off screen, well, 32 pixels ahead of the scroll, I update. So each time 32 more pixels are scrolled, I update the next column of attributes off screen. I think I'm going to have a routine, though it's not something you'd usually want to do, where each metatile has a specific attribute number to it:
<br />
<br />80 - 0 ;Tiles 80-83
<br />84 - 1 ;Tiles 84-87
<br />88 - 2 ;etc.
<br />8C - 3
<br />
<br />Since I already made my level engine, I don't want to go back and change it, because I'm lazy. I would do something like this though:
<br />
<br />80 - 0
<br />81 - 1
<br />82 - 2
<br />83 - 3
<br />
<br />All the same metatile, but different attribute numbers. The last two bits of the metatile ID keep the attribute number for that metatile. I'd have to change my routine though, and I think this'll do fine. It's a 32k PRG and 8k CHR NROM game, so it's nothing really big.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Sun May 21, 2006 6:04 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Celius wrote:</div><div class="quotecontent">I'm working on my engine right now, and I am doing a SMB1 type thing, I'm updating way off screen,</div>
<br />
<br />Ah.  In that case, yeah, you should be fine with doing it in 32x32 blocks how you have it set up.
<br />
<br />In fact -- if you have 32x32 blocks in your level format, you might even want to save time and just have a byte to specify the attribute info for that 32x32 block which is totally independent of the 16x16 metatiles within that block.  Just a thought though.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Sun May 21, 2006 6:19 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I don't get what you're trying to say, sorry. With my method, I'm having my RAM screens (every metatile on NT1+2 is in $300-$4FF) read, and my routine will store attributes on screen according to what is in RAM. So if it sees this:
<br />
<br />$80, $84, $xx......
<br />$84, $80, $xx
<br />
<br />It will know to store this into the attribute table:
<br />
<br />$14
<br />
<br />or
<br />
<br />0001
<br />0100
<br />
<br />Because of what I said about my metatiles, remember? But clarify what you were trying to say, I didn't understand, and I'd like to.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sun May 21, 2006 8:03 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Disch wrote:</div><div class="quotecontent">If you only update every 32 pixels, you will have LARGE color distortion on the edge of the screen as it scrolls (at best, 16 pixels on either end)</div><br />Not with horizontal mirroring... You save yourself 128 bytes of RAM just by calculating a whole attribute byte at once and avoiding the creepy read-modify-write thing. I never said the whole byte would use the same pallete. I said he should scan the 4 tile wide column, building each attribute byte, with the individual palettes used by each 16x16 block.<br /><br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">Are you doing a 2-screen-tall level (like <em>Super Mario Bros. 3</em>), or are you doing true 4-way scrolling?</div>
<br />The true kind. And I'd say it's more 8-way than 4-way, as nothing stops the screen from moving diagonally. I use 32x32 metatiles, that come with a handy attribute byte ready for use. Except after entering a new name table, vertically speaking, when the metatiles would not be aligned to the attribute table anymore.
<br />
<br />I though about ignoring the bottom half of the last row of metatiles of the screens used to build the levels, and have screens of the same height as the NES screen, but that would make level design a bit weird (the metatiles that would be cut would have to be chosen carefully) and collision detection would be pretty funky too, trying to ignore part of the level that was physically supposed to be there...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Sun May 21, 2006 8:16 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />yeah you're right.
<br />
<br />If you only have one kind of scrolling and the coresponding mirroring mode setup (such as how SMB, Ice Climber, Balloon Fight, Excitebike are), then you can work as described.
<br />
<br />I suppose you only really need to worry if you do 4-way scrolling, or have a scrolling mode which conflicts with the mirroring mode (vert scrolling with vert mirroring, for example).
<br />
<br />My mistake.  Apparently I was making the situation more complicated than it had to be ^^.  I have to remember to KISS

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sun May 21, 2006 8:29 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Disch wrote:</div><div class="quotecontent">I suppose you only really need to worry if you do 4-way scrolling, or have a scrolling mode which conflicts with the mirroring mode (vert scrolling with vert mirroring, for example).</div>
<br />Yeah, sure. Updating a full byte of attributes with the setup of SMB3, for example, would look really ugly. I find it ugly enough with 8 pixels of attribute trash.
<br />
<br />With 4-way scrolling I guess there is no way to easily calculate the attributes on the fly... Maybe in this case the mirror in RAM is the best choice. I guess with my 32x32 metatiles I could lay the attributes as if they were aligned to the screen, and then shift them all down, pushing everything half a metatile down... doing it to 64 or 128 bytes at a time would be pretty slow, though. Maybe some sort of lookup table? I'm still trying to figure this one out...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sun May 21, 2006 8:53 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Disch wrote:</div><div class="quotecontent">Games often have a whole byte to indicate which palette each 2x2 metatile uses, despite the fact that only 2 bits are needed.  Values are always either $00, $55, $AA, or $FF.  This way every 2-bit pair is identical, and you can just mask out the bits you need without having to count shifts and whatnot.</div>
<br />Either that, or store them as $00, $01, $02, and $03, so that the engine can just ASL ASL ORA.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Sun May 21, 2006 9:59 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">Either that, or store them as $00, $01, $02, and $03, so that the engine can just ASL ASL ORA.</div>
<br />
<br />AND+ORA is much simpler than ASL+ASL+ASL+ASL+ORA (between 0-6 ASL's).  Shifting a variable amount of times leads to more counting and is ultimately harder to do.
<br />
<br />The 00, 55, AA, FF method is suprisingly efficient:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">LDA desired_mask&nbsp; &nbsp;; load desired mask<br />AND tile_attrib&nbsp; &nbsp; ; mask out desired bits of the tile's attribute<br />STA temp&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; back up<br /><br />LDA desired_mask&nbsp; &nbsp;; get the mask again<br />EOR #$FF&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; invert it<br />AND attribute_byte ; AND with attribute byte<br />ORA temp&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; plug in our new attribute bits<br />STA attribute_byte ; and write back<br /></div>
<br />
<br />where 'desired_mask' is $03, $0C, $30, or $C0 indicating which attribute bits are to be updated.  'tile_attrib' is the $00, $55, $AA, or $FF attribute assignment for the 16x16 tile.  And 'attribute_byte' is the byte in the attribute table that you're changing.
<br />
<br />Of course that above code could be optimized and stuff -- it's just to demonstrate the idea.
<br />
<br />If you use 00, 01, 02, and 03, shifting the desired number of times will end up being more work.  You'll either have to write 4 seperate routines (one to shift 0 times, one to shift twice, one 4 times, and one 6 tiems) -- or you'll have to deal with extra loops to make it dynamic.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>3</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>