<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Do you use source control?</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Do you use source control?</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=5&amp;t=5778">http://forums.nesdev.com/viewtopic.php?f=5&amp;t=5778</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>GradualGames</b> [ Sat Nov 28, 2009 10:48 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Do you use source control?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Do you use source control for your NES projects? I've been using it since about July or August, and I personally find it has many more benefits beyond just coordinating with other developers. I like the ability to efficiently try, fail, revert, try, fail, revert if I am attempting something new that I am somewhat unsure about. Previously I had to rename files dozens of times and had a big mess on my hands; source control abstracts this part of the development process.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sat Nov 28, 2009 11:13 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I don't. I'm comfortable with the file/folder structure I use.
<br />
<br />All my programs have "source" and "assets" folders, which I further organize as necessary. The "source" folder has folders for categories like "video" and "audio" where code and data specific to those areas are. There is also a different folder for each "module" of the game, such as title screen, level gameplay, and so on. The actual code is divided in several asm files. Each subroutine has it's own file, that carries it's name preceded by "sub_". Each table also has it's own file, with it's name preceded by "table_". Small tables and subroutines that are only used by a single subroutine can stay in that subroutine's file with temporary labels.
<br />
<br />All of this is coordinated by a master asm file at the root of "source", that includes all the files at the locations they should be in the ROM. This may seem complicated, but has helped me a lot. Locating subroutines is a lot easier, as is having many of them visible at the same time. This also prevents the existence of extremely long files (but some subroutines are extremely long, there is no way around those).
<br />
<br />In addition to all of that, at the end of the day I make backups of whatever projects I worked on during that day.
<br />
<br /><strong>Just in case, here's a message for tepples:</strong> Please don't compare me to BumpityBoo.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Sat Nov 28, 2009 11:16 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />What is source control anyways ?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sat Nov 28, 2009 11:33 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Bregalad: <!-- m --><a class="postlink" href="http://en.wikipedia.org/wiki/Revision_control">http://en.wikipedia.org/wiki/Revision_control</a><!-- m -->
<br />
<br />tokumaru: Your source code files are shorter than mine, but otherwise, I follow a similar structure. I also have a folder called "obj" where files generated from other files (e.g. .chr from .bmp/.png, .o from .s, etc.) go.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Hojo_Norem</b> [ Sat Nov 28, 2009 11:38 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">What is source control anyways ?</div>
<br />
<br />If I remember correctly, source control (eg CVS or SVN) works kind like a physical library does.  You have a project with all its files and for some reason you want to work on a portion of it so you 'check it out' of the system.  Once you do that nobody else is able to do so.  You work on the portion you checked out and then submit the new version back and the code becomes available again.  If you make a balls-up of it and somebody else notices they can revert it back to the previous version (like you can with a Wiki).
<br />
<br />Anyhoow, thats how I remember it being taught nearly 10 years ago.
<br />
<br />edit: tepples beat me to it  <img src="./images/smilies/icon_lol.gif" alt=":lol:" title="Laughing" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sat Nov 28, 2009 11:50 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">tokumaru: Your source code files are shorter than mine, but otherwise, I follow a similar structure. I also have a folder called "obj" where files generated from other files (e.g. .chr from .bmp/.png, .o from .s, etc.) go.</div>
<br />I see. My CHRs go into the "assets" folder, along with binary tables. I chose not to deal with .o files, because they confuse the crap out of me (I really don't understand them), by using ASM6 (which just spits out my .nes file ready to go).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Sat Nov 28, 2009 1:25 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />All of my projects are organized sort of like what was described by tokumaru, but a bit different. I of course have everything under a folder called whatever the name of the project is, and then everything is categorized from there. I have a "Code" folder, which contains all the pieces of code that make up the game engine, and a "Data" folder, which contains things like levels, graphics, you know, data. Above these folders, a "main" source file links everything together from these folders.
<br />
<br />Within each folder, things are separated into another subfolder, but I don't usually go beyond that. In each subfolder is code or data (depending on whether it is under code or data) relating to its name. So for example, the CHR files will be under Data, and then under "Graphics". Or the code for drawing objects will be under Code, and then "ObjectDraw". In each of these subfolders, there is a file bundling everything in the subfolder all together, and that file is included in the "main" file. There is usually also a file that defines variables and macros for each subfolder, and I include this at the beginning of the "main" file.
<br />
<br />Also, to help with this, I use kind of a class system for naming my routines and variables. For example, all of the AI routines will be named something like "AI.Process" or "AI.SpawnObject". And variables are named the same way. Unfortunately, I started a big project and there is nothing to distinguish between a label and a variable name, which is probably something I should have thought of before. But for now, I feel pretty organized and nothing is very difficult to change at all. Actually, since I have it set up the way I do, I am able to add and remove things with much ease. Maybe it's just a sloppy mess, but I think my system works for me.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sat Nov 28, 2009 1:48 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Celius wrote:</div><div class="quotecontent">Unfortunately, I started a big project and there is nothing to distinguish between a label and a variable name, which is probably something I should have thought of before.</div><br />I try to name all my labels like we name methods in OO programs, they are all actions, describing what happens from the point where they are onwards. I use names like "ClearCoordinates", "UpdateScroll", and things like that, so that they sound like commands, not like variables. Sometimes what happens under a label isn't so clear and it's hard to pick a name, but I usually figure something out. Also, only the label of the main subroutine of a file (the one that names the file) is a global label, all others are temporary/local, because they are only used by the main subroutine.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Also, to help with this, I use kind of a class system for naming my routines and variables.</div>
<br />I do sometimes feel the need to do something like this, to make it clear who owns the "methods", but I can't seem to think of something that will work for all cases.
<br />
<br />Like you, I do find it easy to locate things in my sources and don't feel the need for any version control whatsoever. Specially considering that I constantly use 3 different computers (sometimes more) to work on my projects, so for me it works better to move my most recent daily backups around.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Banshaku</b> [ Sat Nov 28, 2009 5:30 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />With ca65, you have the notion of modules and scope which help a lot for managing access to symbols.
<br />
<br />I don't go as far as to separate all function in it's own file but usually I separate by their responsibilities. If I have something related to the view, it will go in the ViewManager.asm, for sound, SoundManager.asm etc. If one module contains a sub responsibility but share some of the variables, I will not create a new module but create a different file called ViewManager.metasprite.inc and include it. This avoid exporting variables just for that specific part and make the main file smaller.
<br />
<br />For ZP variable usually I use zp in front of them but nothing for normal ones. I try to give command for label like Tokumaru but in the past I may have not followed that rule well so I will have to clean up the code someday.  Inside a module, my function are always preceded with sub so if I see a function call with sub, I now it was a call from that module. Then when a module is exported, I create a scope inside the H file.  So when I need to use the init method from the view, I don't need to call it subViewManagerInit , which would "pollute" the namespace inside the VienManager module but only do so when I export it. So inside ViewManager, you call subInit but outside it , I create a scope so I can call it this way:  ViewManager::Init.
<br />
<br />To do this, ca65 allow you to export name under a different one. For example, inside the view manager, you export the method this way:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.export __subViewManagerInit&nbsp; := subInit<br /></div><br /><br />Then inside my header file (ViewManager.h) I will define my scope this way:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.import __subViewManagerInit<br /><br />.scope ViewManager<br />&nbsp; &nbsp; &nbsp; Init =&nbsp; __subViewManagerInit<br />.endscope<br /></div><br /><br />Now I can call it like an object. Usually I will put some inner scope for variable too.<br /><br />I use struct to define the location of item in memory to avoid using magic numbers for position. If the position of an item change, only the struct is affected, not the code.<br /><br />Another thing I started recently is to rename my temp variable in the .proc scope to make the code easier to read. Usually what you use the temp variables is either for paramters or local temp variable but if your variable are called Param1, param2, param3, temp8bit etc, you lose the meaning of the usage of that temp variable compared to higher level language. Since I decided to give up for now my stack based parameter for my current project, I had to make a new naming convention. This is how I ended up doing it:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.proc subPutEntityInOam<br />;---------------- Parameters definitions ----------------<br />.scope Param<br />&nbsp; &nbsp;entityPosX&nbsp; &nbsp;&nbsp; &nbsp;= zpParam1&nbsp; &nbsp;; X coordinate <br />&nbsp; &nbsp;entityPosY&nbsp; &nbsp;&nbsp; &nbsp;= zpParam2&nbsp; &nbsp;; Y coordinate<br />&nbsp; &nbsp;entityDir&nbsp; &nbsp;&nbsp; &nbsp;= zpParam3&nbsp; &nbsp;; Which direction entity is facing<br />&nbsp; &nbsp;entityAdr&nbsp; &nbsp;&nbsp; &nbsp;= zpParam4 &nbsp; &nbsp;; Adress of data, uses zpParam5 too<br />.endscope<br />.scope Local<br />&nbsp; &nbsp;centerSprite &nbsp; &nbsp;&nbsp; &nbsp;= zpTemp8Bit&nbsp; &nbsp;; Use 1 temp8Bit for center or sprite retrival<br />&nbsp; &nbsp;entityMetaSpriteAdr &nbsp; &nbsp;= zpTemp16Bit<br />.endscope&nbsp; &nbsp;<br />;---------------------------------------------------------<br /></div><br /><br />So if I want to use a parameter, I will do Param::entityPosX. It will be quite clear in the code what is the value inside. Same thing for the local variable Local::entityDir.  If someday I have some code that could conflict by using the same temp variable, instead to have to code all the code, I only have to scan the definition at the top.<br /><br />And when it times to set the parameter, I will do this:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;lda #$00&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;<br />&nbsp; &nbsp;sta subPutEntityInOam::Param::entityPosX<br /></div>
<br />
<br />The code document itself. I want to set the paramter entityPosX for the subPutEntityInOam function. It does make names longer but once the code is working, hwo many time will you change this? And how easier will it be to debug it in 6 month? That's the advantage, for maintenance.
<br />
<br />I may have other things but this is what comes to mind when I code with ca65.  My way of doing things changed a lot in 1 year. I always try new things when I have time to make my code simpler to maintain, the thing many people tends to forget not only for hobby but in the professional world too.
<br />
<br />Edit:
<br />
<br />About source control, the subject of this thread ( ^^;; ), I don't use it for now.  I usually make a backup of the complete project for a specific day before doing some edit to it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>cpow</b> [ Sat Nov 28, 2009 5:58 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">I don't. I'm comfortable with the file/folder structure I use.<br /><br />Please don't compare me to BumpityBoo.</div>
<br />
<br />It was a good comparative laugh, though.  Thanks!
<br />
<br />I use CM [ClearCase, Subversion] all of the time at work and have been thinking about Subversion for home use.  I have tens of NESICIDE.mmddyyyy named folders on a couple of different memory sticks, on my home PC, and on my work laptop [no, I never work on my NES projects at work...never...].  Sometimes it's fun to go look at the early days, but I don't have ANY rhyme or reason to why I cut a .ddmmyyyy folder on that particular .ddmmyyyy.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Nessie</b> [ Sat Nov 28, 2009 6:08 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I use svn at work but stick to git at home since it's so much faster.
<br />If you've never used any sort of revision control it might seem unintuitive at first, but once you get into the workflow you won't believe you ever managed to write code without it.
<br />Same thing goes for automated testing btw!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Sat Nov 28, 2009 7:13 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />For NES or assembly projects: none.
<br />For *IX C projects: CVS.
<br />For configuration files, etc.: none.
<br />For HTML, text docs, etc.: none, but on occasion RCS.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>GradualGames</b> [ Sun Nov 29, 2009 9:41 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">NESICIDE wrote:</div><div class="quotecontent"><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">I don't. I'm comfortable with the file/folder structure I use.<br /><br />Please don't compare me to BumpityBoo.</div><br /><br />It was a good comparative laugh, though.  Thanks!<br /><br />I use CM [ClearCase, Subversion] all of the time at work and have been thinking about Subversion for home use.  I have tens of NESICIDE.mmddyyyy named folders on a couple of different memory sticks, on my home PC, and on my work laptop [no, I never work on my NES projects at work...never...].  Sometimes it's fun to go look at the early days, but I don't have ANY rhyme or reason to why I cut a .ddmmyyyy folder on that particular .ddmmyyyy.</div>
<br />
<br />This is precisely the reason I use source control---it abstracts the process of timestamping and backing up your project at a particular state. In addition, it encourages you to make a comment about what that particular revision had changed in it. Not to mention it allows you to selectively look at differences between files, etc.
<br />
<br />In addition, I've learned that individual revision files are very small, so it allows you to back up your project in dozens of past states but with a lot less disk space than backing the entire thing up each day.
<br />
<br />I can't imagine working without it now. I saw someone mentioned git---I've considered switching to git. I wish it had a nice GUI interface like Tortoise though =)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sun Nov 29, 2009 9:59 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Gradualore wrote:</div><div class="quotecontent">I saw someone mentioned git---I've considered switching to git. I wish it had a nice GUI interface like Tortoise though =)</div>
<br /><a href="http://code.google.com/p/tortoisegit/" class="postlink">Wish granted</a>.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>peppers</b> [ Sun Nov 29, 2009 12:47 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I want a pony and a race car.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>