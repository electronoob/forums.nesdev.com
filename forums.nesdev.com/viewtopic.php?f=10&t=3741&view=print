<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - bit-shifting and ANDing(masking)</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">bit-shifting and ANDing(masking)</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=3741">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=3741</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>3</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Laserbeak43</b> [ Tue Nov 27, 2007 12:47 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>bit-shifting and ANDing(masking)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hi,
<br />i've been reading a few documents, on and off line to help me understand bit-shifting and ANDing(masking really). it's not totaly clicking. not even simple stuff i try in windows calculator. will rodnay zaks' book "programming the 6502" help me to better understand this concept?
<br />and why is is so important? when i look at source code, i'm seeing a lot of shifting and masking in important parts of the code. but i don't understand why it's necessary.
<br />
<br />i guess i should be reading hacker's delight or something.....  <img src="./images/smilies/icon_rolleyes.gif" alt=":roll:" title="Rolling Eyes" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Tue Nov 27, 2007 1:13 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Shifting and masking are useful for interacting with <a href="http://en.wikipedia.org/wiki/Bit_field" class="postlink">bit fields</a> within a byte. For example, NES PPU attribute tables have four 2-bit fields in each byte.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>WedNESday</b> [ Tue Nov 27, 2007 3:55 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />ANDing, EORing and ORing are God-sent methods of bit manipulation.
<br />
<br />If you want to clear bits within a byte, you AND the byte with a number that only includes the bits you want to keep. This is most useful in situations where the value of Data is unknown.
<br />
<br />Data = ??;
<br />Data &amp;= 0x3C; &lt;-- bits 0, 1 and 7 cleared (not matter if they were set or not)
<br />
<br />If you want to flip (i.e. 1 becomes 0 or 0 becomes 1) bits within a byte you EOR the byte with a number that includes the bits you want to flip.
<br />
<br />Data = 0xFF;
<br />Data ^= 0x1F; &lt;-- Data becomes 0xE0;
<br />
<br />If you want to set bits within a byte, you OR the byte with a number that includes the bits you want to set. This is most useful in situations where the value of Data is unknown.
<br />
<br />Data = ??;
<br />Data |= 0x20; &lt;-- bit 5 set (not matter if it was set or not)
<br />
<br />*Phew*

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Tue Nov 27, 2007 6:10 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp; ????????<br />AND 00010011<br />------------<br />&nbsp; &nbsp; 000?00??<br /><br />&nbsp; &nbsp; ????????<br />OR&nbsp; 00010011<br />------------<br />&nbsp; &nbsp; ???1??11<br /><br />&nbsp; &nbsp; 11001010<br />XOR 01100110<br />------------<br />&nbsp; &nbsp; 10101100</div>
<br />
<br />AND is useful for replacing unwanted bits with zeroes so they don't interfere. OR is good for putting things back together, as long as you know the two values have zero bits where the other one is. XOR is used more like ADC and SBC, for doing arithmetic.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Tue Nov 27, 2007 6:14 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You'll eventually feel the need to use them. Just wait until you start coding.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Laserbeak43</b> [ Wed Nov 28, 2007 12:34 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">WedNESday wrote:</div><div class="quotecontent">ANDing, EORing and ORing are God-sent methods of bit manipulation.<br /><br />If you want to clear bits within a byte, you AND the byte with a number that only includes the bits you want to keep. This is most useful in situations where the value of Data is unknown.<br /><br />Data = ??;<br />Data &amp;= 0x3C; &lt;-- bits 0, 1 and 7 cleared (not matter if they were set or not)<br /><br />If you want to flip (i.e. 1 becomes 0 or 0 becomes 1) bits within a byte you EOR the byte with a number that includes the bits you want to flip.<br /><br />Data = 0xFF;<br />Data ^= 0x1F; &lt;-- Data becomes 0xE0;<br /><br />If you want to set bits within a byte, you OR the byte with a number that includes the bits you want to set. This is most useful in situations where the value of Data is unknown.<br /><br />Data = ??;<br />Data |= 0x20; &lt;-- bit 5 set (not matter if it was set or not)<br /><br />*Phew*</div><br /><br />thanks, this page is definately going to be bookmarked, heck i think i'm going to print it,<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Data = ??;<br />Data &amp;= 0x3C; &lt;-- bits 0, 1 and 7 cleared (not matter if they were set or not)<br /></div>
<br />windows calculator only shows six bits. is this calc.ex truncating the 0 at MSB?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Wed Nov 28, 2007 1:26 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Laserbeak43 wrote:</div><div class="quotecontent">windows calculator only shows six bits. is this calc.ex truncating the 0 at MSB?</div>
<br />I just tried it in Windows XP's calculator, and yes, it truncates leading zeroes from the displayed numerals.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Laserbeak43</b> [ Wed Nov 28, 2007 2:02 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent"><div class="quotetitle">Laserbeak43 wrote:</div><div class="quotecontent">windows calculator only shows six bits. is this calc.ex truncating the 0 at MSB?</div><br />I just tried it in Windows XP's calculator, and yes, it truncates leading zeroes from the displayed numerals.</div>
<br />thanks <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>WedNESday</b> [ Wed Nov 28, 2007 3:20 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Laserbeak43 wrote:</div><div class="quotecontent">thanks, this page is definately going to be bookmarked, heck i think i'm going to print it,</div>
<br />You're welcome. All of the other bits are uneffected, naturally. ORing is useful when changing Name Tables in your PPU code.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>dXtr</b> [ Thu Nov 29, 2007 3:40 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If you need something for experimenting then this one is pretty nice <a href="http://www.analogx.com/contents/download/program/pcalc.htm" class="postlink">AnalogX PCalc</a>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Laserbeak43</b> [ Thu Nov 29, 2007 6:45 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">dXtr wrote:</div><div class="quotecontent">If you need something for experimenting then this one is pretty nice <a href="http://www.analogx.com/contents/download/program/pcalc.htm" class="postlink">AnalogX PCalc</a></div>
<br />
<br />nice thanks a lot <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Thu Nov 29, 2007 10:24 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I don't think anyone has mentioned one of the most common uses of shifting+AND:
<br />
<br />Left shifting mimics a multiply-by-2 operation.  If you notice:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">$16 = 0001 0110<br />$2C = 0010 1100<br /></div><br /><br />$16 left shift 1 = $2C = $16 * 2<br /><br />Therefore you can left shift once to multiply by 2, twice to multiply by 4, 3 times to multiply by 8, etc.<br /><br />Right shifting works similarly, and mimics a divide-by-2 operation.<br /><br />AND can also be used as a pseduo-modulous operation.  That is, it can give you the remainder after a division:<br /><br />9 mod 4 = 1<br />because<br />9/4 = 2 remainder 1<br /><br />you can simulate this with AND by ANDing with the mod number-1.  That above example would translate to:<br /><br />9 AND 3 = 1   (3 is one less than the 4 you'd mod with)<br /><br />but be sure note that this only works with power-of-two numbers.  2, 4, 8, 16, 32, etc.  You cannot use AND to do a "mod 5" operation or something similar.<br /><br /><br />For a practical example -- let's say a game has a background animation routine.  It will cycle through 4 different steps of animation, changing steps every 8 frames.  To accomplish this, this routine makes use of a frame-counter... which is just a number in RAM that the game increments every frame:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">LDA frame_counter&nbsp; ; load the frame counter<br /><br />LSR A<br />LSR A<br />LSR A&nbsp; &nbsp;; divide it by 8 &#40;we only want it to advance every 8 frames&#41;<br /><br />AND #$03&nbsp; ; mod by 4<br /><br />; A is now 0, 1, 2, or 3 -- indicating which frame of animation to use<br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Laserbeak43</b> [ Thu Nov 29, 2007 3:52 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />wow! great sets of tutorials! it's all getting a bit clearer
<br /><div class="quotetitle">Disch wrote:</div><div class="quotecontent">you can simulate this with AND by ANDing with the mod number-1.  That above example would translate to:<br /><br />9 AND 3 = 1   (3 is one less than the 4 you'd mod with)<br /></div><br /><br />so you're saying 3 is four? is that because to the asembler, 0 is 1 when counting?<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><div class="codetitle"><b>Code:</b></div><div class="codecontent">LDA frame_counter&nbsp; ; load the frame counter<br /><br />LSR A<br />LSR A<br />LSR A&nbsp; &nbsp;; divide it by 8 &#40;we only want it to advance every 8 frames&#41;<br /><br />AND #$03&nbsp; ; mod by 4<br /><br />; A is now 0, 1, 2, or 3 -- indicating which frame of animation to use<br /></div></div>
<br />
<br />nice! i'd like to try this out one day, when i finaly figure out how to assemble a rom!!
<br />(i should be able to do it)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Thu Nov 29, 2007 4:25 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Laserbeak43 wrote:</div><div class="quotecontent">so you're saying 3 is four? is that because to the asembler, 0 is 1 when counting?</div>
<br />
<br />No.  You use 3 instead of 4 because AND is not the same thing as Mod -- it just so happens that it has the same results when used this way.  Look at the details of how this works:
<br />
<br />Example:
<br />
<br />  $1D mod 8 = 5    which can be mimiced with:
<br />  $1D AND 7 = 5
<br />
<br />why mod works:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; $1D / 8 = 3 &#40;rounded down&#41;<br />&nbsp; 3 * 8 = $18<br />&nbsp; &#40;$1D - $18&#41; = 5&nbsp; &lt;--- 5 is the remander after division<br /></div><br /><br />AND, however, works differently:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; $1D = %0001 1101<br />&nbsp; $07 = %0000 0111<br />&nbsp; ----------------<br />&nbsp; $05 = %0000 0101&nbsp; &lt;-- result of AND<br /></div><br /><br />Mod effectively returns a value of [0..n-1] (where n is the divisor).  Ex:  when dividing by 8, the highest remainder you can have is 7 (a remainder of 8 or higher would make no sense).<br /><br />AND, however, returns a value of [0..n].  It is entirely possible to AND a number by N and get N back.<br /><br /><br />I must stress again, though, that AND can only be used in this way when you want to mod by a power-of-2 value.  The reason for this is because there can't be "gaps" in the bits you're ANDing.  For an example:<br /><br />$17 mod $0A = $03<br /> because:<br />   $17 - (($17 / $0A) * $0A) = $03<br /><br />however...  $17 AND $09 = $01 !!!!  because:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; $17 = %0001 0111<br />&nbsp; $09 = %0000 1001&nbsp; &lt;-- notice the &quot;gap&quot; of zeros<br />&nbsp; -------------^^-<br />&nbsp; $01 = %0000 0001&nbsp; &lt;-- result of AND<br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Thu Nov 29, 2007 5:41 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Think of the equivalent in decimal. You want to get the ones digit of a value. So you divide by 10 and take the remainder. Another way is to keep only the last digit.
<br />
<br />  1234 / 10 gives remainder of 4
<br />  0004  there's the 4
<br />
<br />If you want to find the remainder after 100, keep the last 2 digits
<br />
<br /> 1234 / 100 gives remainder of 34
<br /> 0034 there's the 34
<br />
<br />If you instead wanted the remainder after dividing by 9, you wouldn't be able to use this shortcut. So with base 10, you can use it only if your divisor is a power of 10. With base 2, you can use it only if your divisor is a power of 2.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>3</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>