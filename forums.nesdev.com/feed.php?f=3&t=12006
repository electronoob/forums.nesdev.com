<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=3&amp;t=12006" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2014-11-14T10:38:09-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=3&amp;t=12006</id>
<entry>
<author><name><![CDATA[Dwedit]]></name></author>
<updated>2014-11-14T10:38:09-07:00</updated>
<published>2014-11-14T10:38:09-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12006&amp;p=136429#p136429</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12006&amp;p=136429#p136429"/>
<title type="html"><![CDATA[Re: Please check out my browser-based javascript emulator]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12006&amp;p=136429#p136429"><![CDATA[
It's telling me that every file has an invalid header now.  This is when I use the Open button at the bottom.  Dragging files works though.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=53">Dwedit</a> — Fri Nov 14, 2014 10:38 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[peteward44]]></name></author>
<updated>2014-11-14T09:21:00-07:00</updated>
<published>2014-11-14T09:21:00-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12006&amp;p=136427#p136427</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12006&amp;p=136427#p136427"/>
<title type="html"><![CDATA[Re: Please check out my browser-based javascript emulator]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12006&amp;p=136427#p136427"><![CDATA[
I've updated the live demo with WebGL compatibility, i've noticed some increase in performance. I'll start work on the key remapper soon.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6766">peteward44</a> — Fri Nov 14, 2014 9:21 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2014-11-13T10:03:53-07:00</updated>
<published>2014-11-13T10:03:53-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12006&amp;p=136375#p136375</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12006&amp;p=136375#p136375"/>
<title type="html"><![CDATA[Re: Please check out my browser-based javascript emulator]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12006&amp;p=136375#p136375"><![CDATA[
There should be some way to query the driver to find its preferred texture format, such as channel ordering within a texel, whether Z-ordering (interleaving of X and Y coordinate bits, sometimes called &quot;swizzling&quot;, or &quot;twiddling&quot; in KGL for Dreamcast) is needed for acceptable cache performance, etc.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Thu Nov 13, 2014 10:03 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Sik]]></name></author>
<updated>2014-11-13T09:10:51-07:00</updated>
<published>2014-11-13T09:10:51-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12006&amp;p=136372#p136372</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12006&amp;p=136372#p136372"/>
<title type="html"><![CDATA[Re: Please check out my browser-based javascript emulator]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12006&amp;p=136372#p136372"><![CDATA[
<div class="quotetitle">Dwedit wrote:</div><div class="quotecontent"><br />Texture sizes should be powers of 2, so 256x256 for a NES screen, and pixel format should be 32-bit BGR.<br /></div><br />I thought it had to be BGRA for optimal performance (i.e. no internal texture conversion)? Especially since as far as I know now RGB textures aren't used anymore, they always get the alpha channel added by the driver (R and RG are untouched). Just for the sake of remarking, OpenGL's BGRA is Direct3D's ARGB (yeah, they have different endianness)<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4526">Sik</a> — Thu Nov 13, 2014 9:10 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Dwedit]]></name></author>
<updated>2014-11-13T08:57:02-07:00</updated>
<published>2014-11-13T08:57:02-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12006&amp;p=136370#p136370</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12006&amp;p=136370#p136370"/>
<title type="html"><![CDATA[Re: Please check out my browser-based javascript emulator]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12006&amp;p=136370#p136370"><![CDATA[
I hear that for opengl, it's best to use glTexSubImage2D, then draw a quad containing the texture.  Texture sizes should be powers of 2, so 256x256 for a NES screen, and pixel format should be 32-bit BGR.<br /><br />If you're trying for dirty rectangles, proper OpenGL lets you update arbitrary rectangular regions from the source image by using glPixelStorei(GL_UNPACK_SKIP_PIXELS, x);  glPixelStorei(GL_UNPACK_SKIP_ROWS, y);  glPixelStorei(GL_UNPACK_ROW_LENGTH, width); before your call to glTexSubImage2D, but WebGL is based on OpenGL ES 2.0, which does not support those commands for some stupid reason.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=53">Dwedit</a> — Thu Nov 13, 2014 8:57 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[peteward44]]></name></author>
<updated>2014-11-13T05:30:10-07:00</updated>
<published>2014-11-13T05:30:10-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12006&amp;p=136369#p136369</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12006&amp;p=136369#p136369"/>
<title type="html"><![CDATA[Re: Please check out my browser-based javascript emulator]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12006&amp;p=136369#p136369"><![CDATA[
Some really interesting ideas here. I think what i'm going to experiment with is having a WebGL implementation with a canvas fallback if it's not supported properly. Sadly WebGL doesn't support glPutPixels() so i'll have to write to a texture first, but that shouldn't be too bothersome. I'll report back with my results.<br /><br />@koitsu I never realised that the sprite overflow made that much a difference on some commercial games. I think i'll reinstate my old overflow code in that case, and maybe leave it as an option to turn it off.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6766">peteward44</a> — Thu Nov 13, 2014 5:30 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Sik]]></name></author>
<updated>2014-11-13T00:29:37-07:00</updated>
<published>2014-11-13T00:29:37-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12006&amp;p=136362#p136362</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12006&amp;p=136362#p136362"/>
<title type="html"><![CDATA[Re: Please check out my browser-based javascript emulator]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12006&amp;p=136362#p136362"><![CDATA[
I think all browsers are affected though. The problem is that canvas resizing is done through the DOM renderer, and that part of browsers has always been notoriously slow (and the main target of hate of a lot of people working with javascript, and now people doing CSS3 animations and transformations as well).<br /><br />And of course I assume they don't even care about this issue since they expect you to use WebGL and let the GPU scale it for you...<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4526">Sik</a> — Thu Nov 13, 2014 12:29 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2014-11-12T20:55:27-07:00</updated>
<published>2014-11-12T20:55:27-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12006&amp;p=136350#p136350</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12006&amp;p=136350#p136350"/>
<title type="html"><![CDATA[Re: Please check out my browser-based javascript emulator]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12006&amp;p=136350#p136350"><![CDATA[
Has anyone complained to bugzilla.mozilla.org about this slow resizing yet?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Wed Nov 12, 2014 8:55 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Dwedit]]></name></author>
<updated>2014-11-12T17:59:21-07:00</updated>
<published>2014-11-12T17:59:21-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12006&amp;p=136339#p136339</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12006&amp;p=136339#p136339"/>
<title type="html"><![CDATA[Re: Please check out my browser-based javascript emulator]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12006&amp;p=136339#p136339"><![CDATA[
The bottleneck is in how the browser resizes canvases, not your code.<br />You can make a little test JS page that fills a canvas red and blue at 60FPS, and even that will run too slowly.<br />This is such a stunning display of incompetence from the browser makers.  In Windows, you can just make a DirectDraw surface in offscreen video memory.  Blitting a video ram surface to the primary buffer can run at around 1900FPS, and that's with stretching.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=53">Dwedit</a> — Wed Nov 12, 2014 5:59 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2014-11-11T20:45:37-07:00</updated>
<published>2014-11-11T20:45:37-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12006&amp;p=136314#p136314</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12006&amp;p=136314#p136314"/>
<title type="html"><![CDATA[Re: Please check out my browser-based javascript emulator]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12006&amp;p=136314#p136314"><![CDATA[
In any case, you can probably skip much of your rendering code if the tab is not visible (Page Visibility API) and the mapper doesn't snoop on PPU reads (like MMC2 and MMC4, and to a lesser extent MMC3 and JY). Only the scanlines containing sprite 0 or containing at least 8 sprites have any effect that the rest of the system can see.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Tue Nov 11, 2014 8:45 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[43110]]></name></author>
<updated>2014-11-11T19:53:39-07:00</updated>
<published>2014-11-11T19:53:39-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12006&amp;p=136312#p136312</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12006&amp;p=136312#p136312"/>
<title type="html"><![CDATA[Re: Please check out my browser-based javascript emulator]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12006&amp;p=136312#p136312"><![CDATA[
I didn't mean WebGL exclusively. I have not written a NES emulator but I imagine PPU emulation is CPU bound anyway, and that its output is going to be a byte array of indexed pixels. That byte array could either be converted into RGBA pixels by the CPU to load to Canvas, or (if available) take 1/4 the GPU bandwidth by loading the byte array directly via opengl. In any case proper profiling needs to be conducted before making informed optimizing decisions, and the pixel bandwidth may not even be a issue.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6385">43110</a> — Tue Nov 11, 2014 7:53 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2014-11-11T16:31:49-07:00</updated>
<published>2014-11-11T16:31:49-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12006&amp;p=136310#p136310</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12006&amp;p=136310#p136310"/>
<title type="html"><![CDATA[Re: &quot;use asm&quot;]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12006&amp;p=136310#p136310"><![CDATA[
<div class="quotetitle">43110 wrote:</div><div class="quotecontent"><br />If pixel pushing is a bottleneck, using WebGL might be a good path to take.<br /></div><br />Which would make the ability to run the emulator at all, even if not at full speed, depend on the installed video drivers. Here's what <a href="http://get.webgl.org/" class="postlink">a spinning cube</a> looks like in Firefox 33 on Xubuntu 14.04 on an Atom N450:<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Hmm. While your browser seems to support WebGL, it is disabled or unavailable. If possible, please ensure that you are running the latest drivers for your video card.<br /><br /><a href="https://support.mozilla.com/en-US/kb/how-do-i-upgrade-my-graphics-drivers" class="postlink">For more help, please click this link</a>.<br /></div><br /><br />Then I try <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">about&#058;support</tt> and get this:<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />WebGL Renderer: Blocked for your graphics card because of unresolved driver issues.<br /></div><br /><br />Apparently WebGL requires OpenGL 2 or something, and some Atom IGPs can't handle more than OpenGL 1.4 without <a href="http://www.cnx-software.com/2011/11/13/enable-opengl-2-0-and-webgl-for-intel-gma3150-in-ubuntu/" class="postlink">prohibitively slow software rendering</a>.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Tue Nov 11, 2014 4:31 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[43110]]></name></author>
<updated>2014-11-11T15:26:55-07:00</updated>
<published>2014-11-11T15:26:55-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12006&amp;p=136307#p136307</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12006&amp;p=136307#p136307"/>
<title type="html"><![CDATA[Re: &quot;use asm&quot;]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12006&amp;p=136307#p136307"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />I wonder if it might help to write certain parts in C and use Emscripten to compile them to asm.js, a subset of JavaScript designed for maximum JIT performance. It still probably wouldn't run at full speed on an Atom, but oh well.<br /></div><br />You might get a similar performance gain by using ArrayBuffers for all of the NES state, including memory, CPU registers, and anything byte based, but this was originally ported from C++, so Emscripten is an option.<br />If pixel pushing is a bottleneck, using WebGL might be a good path to take. WebGL can at least <a href="https://stackoverflow.com/questions/19695658/emulating-palette-based-graphics-in-webgl-v-s-canvas-2d" class="postlink">offload the palette conversion to the GPU</a>.<br /><br /><div class="quotetitle">Dwedit wrote:</div><div class="quotecontent"><br />Performance goes way down when the window is made big.<br /></div><br />Maybe using css transforms, instead of repainting a scaled version in a larger canvas, might help?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6385">43110</a> — Tue Nov 11, 2014 3:26 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2014-11-11T13:33:01-07:00</updated>
<published>2014-11-11T13:33:01-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12006&amp;p=136306#p136306</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12006&amp;p=136306#p136306"/>
<title type="html"><![CDATA[&quot;use asm&quot;]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12006&amp;p=136306#p136306"><![CDATA[
<div class="quotetitle">peteward44 wrote:</div><div class="quotecontent"><br />I have spent a lot of time trying to make it run as quickly as possible but sadly Javascript just isn't as fast as i'd like it to be. Like i said before, i don't think i can really optimise any further but hopefully browsers and hardware will catch up in due time.<br /></div><br />I wonder if it might help to write certain parts in C and use Emscripten to compile them to asm.js, a subset of JavaScript designed for maximum JIT performance. It still probably wouldn't run at full speed on an Atom, but oh well.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />- I did try to get .7z support working as it is my preferred compression method, but i couldn't find a decent enough JS library that can handle them. So maybe when someone gets round to publishing one i can implement that.<br /></div><br />Is there an LZMA library written in C that you can compile to JavaScript using Emscripten?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Tue Nov 11, 2014 1:33 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[koitsu]]></name></author>
<updated>2014-11-11T09:46:26-07:00</updated>
<published>2014-11-11T09:46:26-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12006&amp;p=136304#p136304</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12006&amp;p=136304#p136304"/>
<title type="html"><![CDATA[Re: Please check out my browser-based javascript emulator]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12006&amp;p=136304#p136304"><![CDATA[
Speaking generally here (not a support request), re: sprite overflow:<br /><br />Castlevania 2: Simon's Quest: when walking through a swamp, the lower half of Simon's body is visible (normally should be hidden by the swamp).  I've attached screenshots from Nestopia (001.png = with sprite overflow implemented/enabled, 002.png = with sprite overflow disabled).<br /><br />Majou Densetsu II: Daimashikyou Galious, which I demonstrated <a href="https://www.youtube.com/watch?v=9XHXYhb_gDo" class="postlink">in a 2-part Youtube video</a> (2nd part goes over more of the technical aspects).<br /><br />Point I'm trying to make: there are games that &quot;use&quot; this (more clearly, rely on the behaviour); what's more common is that people don't have a good/concise list of games that do (and where/how in the game to verify).  I think this is something &quot;we&quot; (community) should be adding to the nesdev wiki, similar to our <a href="http://wiki.nesdev.com/w/index.php/Game_bugs" class="postlink">game bugs</a>, <a href="http://wiki.nesdev.com/w/index.php/Program_Compatibility" class="postlink">program compatibility</a>, and <a href="http://wiki.nesdev.com/w/index.php/Tricky-to-emulate_games" class="postlink">tricky-to-emulate games</a> sections.  Thus I've <a href="http://wiki.nesdev.com/w/index.php/Sprite_overflow_games" class="postlink">created such a page</a>.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3">koitsu</a> — Tue Nov 11, 2014 9:46 am</p><hr />
]]></content>
</entry>
</feed>