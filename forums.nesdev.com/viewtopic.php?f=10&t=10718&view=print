<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - an NROM to a cart with WRAM</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">an NROM to a cart with WRAM</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=10718">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=10718</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>yogi</b> [ Sat Nov 23, 2013 11:01 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>an NROM to a cart with WRAM</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hi all. can some one point me to some docs or advise me. There is a homebrew, cajoNES,  that is:  32K PRG ROM, 8K CHR ROM, so NROM right? The author, Neil Baldwin, also has a version that uses 8K WRAM for saves. I was checking out the iNES header in Nestopia and it lists the mapper as 0 and has Save memory enabled. <br />So my question is how does this translate to a real cart? Which mapper can you load an NROM onto without having to patch for banking? Is there a kind of extended NROM mapper?<br />Yogi

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sat Nov 23, 2013 11:10 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: an NROM to a cart with WRAM</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Family BASIC exemplifies mapper 0 with WRAM. It was originally distributed with 2K or 4K of WRAM, but the decoding would be the same for 8K, which is what emulators typically implement.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>yogi</b> [ Sat Nov 23, 2013 12:32 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: an NROM to a cart with WRAM</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />OK, I did see that noted on the nrom page of the NESDEV wiki. I'm guessing that it being the only title, it would be VERY difficult to lay my hands on one for a donor (and more valuable to a collector). <br />So I was going through the SxROM page on the wiki, thinking:<br /> !. That it might be possible to use a SNROM board. Rewire it, bypassing the MMC, in effect to create a NROM+BatBacked RAM cart. <br /> 2. Or if I leave the MMC and pad the PRG chip with the 32K bin and replace the CHR RAM with ROM? <br />Does any of this seem workable, or am I missing a big issue? And Yes, the simplest answer is 'PowerPak'; but I like hardware hacks.<br />Yogi

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sat Nov 23, 2013 12:39 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: an NROM to a cart with WRAM</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />What you can do is add the <a href="http://wiki.nesdev.com/w/index.php/PRG_RAM_circuit#Using_7420" class="postlink">same circuit that Family BASIC uses</a> to your NROM donor. Start by getting a 74HC20 and a 6264 or 62256 SRAM. I'd bet others can finish the explanation. If you can't do that, a mapper hack to SNROM is probably the best way to proceed, so long as you can find about 128 bytes of free space in $C000-$FFFF to insert code that sets up the MMC1 registers and copies 8K from ROM to RAM.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Sat Nov 23, 2013 12:40 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: an NROM to a cart with WRAM</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />For reference, a wonderful person reverse-engineered the PCB used by Family BASIC:<br /><!-- m --><a class="postlink" href="http://www43.tok2.com/home/cmpslv/Famic/Fambas.htm">http://www43.tok2.com/home/cmpslv/Famic/Fambas.htm</a><!-- m -->

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>yogi</b> [ Sat Nov 23, 2013 1:13 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: an NROM to a cart with WRAM</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />@ tepples  Thank you very much! This is very much what I was looking for. For the moment I want to find a HW solution. Just getting started with NES software; not too different from Atari,  aside from NES' memory mapping architecture (very different!) Had not considered the impact of the MMC in my question#2, and without looking at the source code don't know how $C0 page is handled.<br />@ lidnariq Thanks to you also, very good link, Thank the webgods for Google translate! Will be digging into it.<br />Thanks again for the input, seems very doable now, just some more reasearch!<br />Yogi

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>qbradq</b> [ Mon Nov 25, 2013 8:13 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: an NROM to a cart with WRAM</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yogi, do you want to run this particular homebrew with SRAM support on hardware, or are you looking for an easy-to-use development platform for the NES?<br /><br />If the former, you can look into modifying the ROM to work with MMC1. In a nutshell, you would alter the reset routine to initialize the MMC1 and set up the expected banks, then jump to the original reset routine.<br /><br />If the latter, INL's boards and programmer are all you need. You can order them pre-populated with WRAM and pre-loaded with a mapper of your choice.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>yogi</b> [ Mon Nov 25, 2013 11:46 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: an NROM to a cart with WRAM</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hi qbardq. ATM  I was hoping to avoid patching the rom; the source is not released and I haven't approached Neil Baldwin (though he seems like a nice guy that would share). Also my skill level with NES programming is at the very bottom of the learning curve; well sort of, have been banging out 8bit firmware on different platforms over the years but the NES is new to me <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" /> <br /> For me, a hardware/cart mod is far easier and a good learning exercise. After comparing eprom and ram pin outs, I plan to repurpose a SNROM board (it has footprints for almost all). Remove the MMC1, add a 74hc20 Ram decoder, replace the CHR ram with CHR rom and a little blue wire routing. 2-27c256s and a 74hc20. SNROM to NROM w/BBRam, simple right? (Ha Ha Ha &lt;evil_ Laugh&gt;, well we'll see)<br /> I have ordered a kazzo/retro dumper and SXROM flash board from INL already, to run two other titles from Neil. So very happy to find INL's project; but for this case, the mod I plan on seems like a good starting point. <br />One point I could use some help with: PPU Horz vs Vert mirroring. In this case the code doesn't scroll the screen, so is there any difference between V or H if you aren't using scrolling? Or does this setting apply to the tiles that make up a single screen? <br />  NROM boards have the H/V solder bridge pads and the MMC1 controls it on SxROM boards; from the pinouts I under how to jumper for one or the other, but don't know how to tell which, V or H, to setup.  <br /> Yogi

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Nov 25, 2013 12:20 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: an NROM to a cart with WRAM</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The difference is that some non-scrolling games might depend on a particular mirroring for whatever reason. A couple of my games, for example, use a constant scroll value to center the display.<br />You can use an emulator to view the ROM image's header. But emulators tend to use <a href="http://wiki.nesdev.com/w/index.php/Mirroring#Nametable_Mirroring" class="postlink">&quot;mirroring&quot; terminology</a>, while Nintendo cartridge boards use the opposite &quot;arrangement&quot; terminology.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>yogi</b> [ Mon Nov 25, 2013 12:45 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: an NROM to a cart with WRAM</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Doh! I'm such a noob! I had looked at the iNES header earlier, but didn't pay attention to the Mirroring. Nestopia shows Horz mirroring checked, so an NROM cart would have Vert bridged, yes? <br />Yogi

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Mon Nov 25, 2013 1:38 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: an NROM to a cart with WRAM</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I just looked inside the cajoNES(and +) ROM: it's actually only about 6KiB in size; almost all program. You could just program it onto an 8KiB PRG ROM. Similarly there's only 2KiB of CHR, although it'd require a little work to compress it below 4KiB.<br />It's also written to work (mostly?) correctly on an MMC1 board; it has a stub in both the first and last 16KiB halves that resets the MMC1 (although doesn't do anything more, such as initialize CHR banks)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>yogi</b> [ Mon Nov 25, 2013 7:20 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: an NROM to a cart with WRAM</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">lidnariq wrote:</div><div class="quotecontent">I just looked inside the cajoNES(and +) ROM: it's actually only about 6KiB in size; almost all program. You could just program it onto an 8KiB PRG ROM. Similarly there's only 2KiB of CHR, although it'd require a little work to compress it below 4KiB.</div><br />  When you say &quot;... compress it below 4KiB.&quot; don't follow you. So you mean trying to fit the PRG and CHR in a 8K rom, there wouldn't be enough space? The only reason I mentioned 27C256 eproms is I have a stash stored away from way back when of my 8052 uC days. <br /> Don't know how CHR data is structured on a MMC1 PRG rom too well. As I understand, CHR data is moved from the PRG rom onto the CHR ram at runtime. This is controlled by the kernel. Right so far? So the structure of the 'game' determines when new screen data is moved into CHR ram. All under the control of the 2A03? <br /> Not that this is directly related  to this case, but If you had say 30K of game kernel and 12K of CHR data, you would need at least 3 16k banks on the PRG rom? Would the CHR data be a contiguous block or distributed within the relevant kernel code? Or is the choice more of a style matter?<br />  <br /><div class="quotetitle">lidnariq wrote:</div><div class="quotecontent">It's also written to work (mostly?) correctly on an MMC1 board; it has a stub in both the first and last 16KiB halves that resets the MMC1 (although doesn't do anything more, such as initialize CHR banks)</div><br />  So to do so, I would need to merge the CHR data into the PRG bin and include code to load to the CHR ram or rechip a SNROM board with PRG and CHR roms? <br />Sorry for all the questions and thanks for your help,<br />Yogi

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Mon Nov 25, 2013 8:31 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: an NROM to a cart with WRAM</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Sorry, my mistake for leaving too much implicit.<br /><br />The NES has two entirely disjoint memory spaces: the CPU's and PPU's. The iNES dump format (.nes) stores the PRG ROM as a multiple of 16 KiB. When I looked at the actual data Neil provided, the first 16 KiB and final 10 KiB were almost all padding. So there's only 6 KiB of actual program code and data the CPU sees. This could have its padding removed by taking the 8172 bytes starting at byte 16400, and then appending the 16 bytes starting at byte 32768, for a total of 8KiB to be burned in an 28C64.<br /><br />The NES can have either RAM or ROM connected to its video generator. Most early games used ROM, because it is simpler. CajoNES uses ROM, and if you look at it, it's 4 KiB of data, followed by 4 KiB of padding. (Additionally, those 4 KiB of data contain 2 KiB of padding inside it, but not in a way that is easy to remove). Then again, it's not exactly easy to find 27C32s or 27C16s any more, so it's not like the CHR optimization is all that worthwhile.<br /><br />For games that use CHR RAM, the program will need to upload data to it before it can display anything. <br /><br />Using MMC1 is orthogonal to the question of RAM or ROM—almost no &quot;mapper chips&quot; require one or the other.<br /><br />Go ahead and use the two 27C256s. You might consider using an SJROM or SKROM donor instead. Since you don't want to modify the program yet, you can remove the CHRRAM and replace it with ROM.<br /><br />Since the program is MMC1 compatible, you don't need to remove the MMC1. The MMC1 already provides the logic to enable save RAM at the right time. (That said, since you're using UVEPROMs, do you have an eraser in case something goes wrong?)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>yogi</b> [ Mon Nov 25, 2013 10:21 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: an NROM to a cart with WRAM</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">lidnariq wrote:</div><div class="quotecontent">Sorry, my mistake for leaving too much implicit.<br /><br />The NES has two entirely disjoint memory spaces: the CPU's and PPU's. The iNES dump format (.nes) stores the PRG ROM as a multiple of 16 KiB. When I looked at the actual data Neil provided, the first 16 KiB and final 10 KiB were almost all padding. So there's only 6 KiB of actual program code and data the CPU sees. This could have its padding removed by taking the 8172 bytes starting at byte 16400, and then appending the 16 bytes starting at byte 32768, for a total of 8KiB to be burned in an 28C64.</div><br />OK very clear.<br /><br /><div class="quotetitle">lidnariq wrote:</div><div class="quotecontent">The NES can have either RAM or ROM connected to its video generator. Most early games used ROM, because it is simpler. CajoNES uses ROM, and if you look at it, it's 4 KiB of data, followed by 4 KiB of padding. (Additionally, those 4 KiB of data contain 2 KiB of padding inside it, but not in a way that is easy to remove). Then again, it's not exactly easy to find 27C32s or 27C16s any more, so it's not like the CHR optimization is all that worthwhile.</div><br /> I know I read it somewhere, but can't recall; what is the max of the PPU's memory map, I.E. 8K addressable without bank-switching?<br /><div class="quotetitle">lidnariq wrote:</div><div class="quotecontent">For games that use CHR RAM, the program will need to upload data to it before it can display anything. <br /><br />Using MMC1 is orthogonal to the question of RAM or ROM—almost no &quot;mapper chips&quot; require one or the other.</div><br />OK, so CHR ram is really a savings to commercial producers, only one mask PROM onto a generic board<br /><br /><div class="quotetitle">lidnariq wrote:</div><div class="quotecontent">Go ahead and use the two 27C256s. You might consider using an SJROM or SKROM donor instead. Since you don't want to modify the program yet, you can remove the CHRRAM and replace it with ROM.<br /><br />Since the program is MMC1 compatible, you don't need to remove the MMC1. The MMC1 already provides the logic to enable save RAM at the right time. (That said, since you're using UVEPROMs, do you have an eraser in case something goes wrong?)</div><br />After taking a closer look at the SJ/SKROM boards; thanks for the pointer. OK I see, the boards support larger CHR roms. They all have the same MMC, so it's the assignment of the available output bits on the MMC that dictate the usable rom sizes on the different boards. And of course how the code uses them. Cool.<br />  As to my tool chain, yea I'm set. The UV box has been in a drawer mostly since I switched to flash PICs back around 2000. I replaced my old burner with a Williem 5c a couple years ago when I got more active with Atari 2600 stuff ( but then ended up getting a Harmony cart), the old commercial software wasn't supported past Win98. <br />  Thanks so much for your advice, idnariq. Really only just started digging into the NES, and all the help here is speeding up the process!<br />Yogi

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Mon Nov 25, 2013 11:37 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: an NROM to a cart with WRAM</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">yogi wrote:</div><div class="quotecontent"> I know I read it somewhere, but can't recall; what is the max of the PPU's memory map, I.E. 8K addressable without bank-switching?<br /></div> 8 KiB of pattern tables (8x8 2bpp tiles), 4 KiB of name tables (screen layout), 28 bytes of palette memory, in that memory space.<br />The PPU actually has <em>another</em> disjoint memory space, 256 bytes just for sprites, but it's entirely internal.<br /><div class="quotetitle">yogi wrote:</div><div class="quotecontent">OK, so CHR ram is really a savings to commercial producers, only one mask PROM onto a generic board<br /></div>I'm not even certain about that. RAMs and ROMs seem to be pretty comparable in cost. The big thing is that RAMs can dynamically update their contents, such as done by Color A Dinosaur or (most impressively) by Elite. On the other hand, ROMs can be told to change what's drawn on screen much more rapidly, such as all the animations in SMB2.<br /><br />By the way, CajoNES+ only uses 2KiB of the save memory, that mapped from $7000 to $77FF. This is identical to the behavior Family BASIC v2.0. (Not that 2K RAMs are all that trivial to find, either)<br /><br />I keep on having this feeling like I should be trying to encourage you to not use an ASIC'd donor board, but there aren't all that many good options and DIP stacking is goofy.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>