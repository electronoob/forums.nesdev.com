<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=21&amp;t=6703" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2010-07-28T13:51:23-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=21&amp;t=6703</id>
<entry>
<author><name><![CDATA[Kasumi]]></name></author>
<updated>2010-07-28T13:51:23-07:00</updated>
<published>2010-07-28T13:51:23-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6703&amp;p=65027#p65027</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6703&amp;p=65027#p65027"/>
<title type="html"><![CDATA[Diagonal poses in top-down games]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6703&amp;p=65027#p65027"><![CDATA[
It's not really mentioned, but I don't see tile use as the problem with games like this, unless you're using NROM.<br /><br />I've made HUGE (16 x 32) eight direction walking sprites for an adventure game I might make after I finish my current game. The main character's hair is slightly asymmetrical and I keep her head (16x16) consistent since I only use 3 tiles more the each flipped direction. (east/west 1, northeast/northwest 1, southeast/southwest 1.)<br /><br />I gain those tiles (and I think one more) back because I can reuse a few tiles again to form the back of her head. (Black haired character).<br /><br />Standing eight directions (head and body) is like 32 tiles for these huge sprites. Then only the body changes, and it's 32 more for the two frames of walking she'll do. 4*3 for everything but north and south for one frame. Flipping makes it 3 and not 6. +2 for North since it can be flipped so its use is divided for the other frame. Same for south. So (4*3+4)x2. For the remaining walking tiles. <br /><br />That's 64 total. I admit that's a lot but these sprites are huge, and NPCs don't need eight directions. Depending on if they move they might just need one. <br /><br />For smaller sprites, it comes out at (4*3+4)*3 = 48. Take some for re-usuability. If you only have 2 frames it's only 32.<br /><br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />One disadvantage of a scheme with a lot of directions is that it takes a lot of memory and thus a lot of time to load the tile images into memory.<br /></div><br /><br />I haven't thought much on the implementation, but I'm pretty sure I could get something decent with CHR RAM. If I keep the main characters tiles in RAM at all times I can always delay NPC tiles from loading if say... two want to change frames at the same time. It's harder, but I'm positive I can do it. <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /> with well designed CHR ROM banks I'd even say it's easy.<br /><br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />Sprite flipping can generate west and possibly some cels of south and north, though <a href="http://tvtropes.org/pmwiki/pmwiki.php/Main/AmbidextrousSprite" class="postlink">it may create artifacts too</a>.<br /></div><br /><br />I wouldn't bother doing it for a fighting game, but I've always liked preserving asymmetrical features of sprites across directions. My current platform character(16x16) actually has an asymmetrical walk animation. His right and left foot do different things. But because of how he's put together it costs me very few tiles to preserve this across his 16 directions. 30 tiles for all that plus a crouching animation. Character design that lets you reuse tiles goes a long way.<br /><br />One thing to be careful about when doing things Link's Awakening style movement, is to avoid moonwalking. In Link's Awakening after doing nearly any action, it's possible to make Link walk backwards. Grab a rock to your right. While picking it hold up + left. You're walking backwards. Swing your sword right. (Don't hold the button down, that causes an intentional backwards walk.) While it's swinging press up or down/left. Or while facing right just press up and left in the same frame and hold them. You can walk backwards facing any direction. They don't bother changing direction if two directions are pressed at once. Though I actually think it's pretty fun to do whenever possible. Maybe the developers thought so too.<br /><br />Edit: Depending on the game, there's also the option of assigning one direction to the diagonals. In an older game I made, moving up/left or down/left would play the left walking animation. Up/right or down/right would play the right one. Though in a game with sword attacking like Link's Awakening you'd lose some precision doing this.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3504">Kasumi</a> — Wed Jul 28, 2010 1:51 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2010-07-28T13:08:40-07:00</updated>
<published>2010-07-28T13:08:40-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6703&amp;p=65025#p65025</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6703&amp;p=65025#p65025"/>
<title type="html"><![CDATA[Diagonal poses in top-down games]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6703&amp;p=65025#p65025"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />In a 4-way diagonal scheme, sprite animations face northeast, southeast, southwest, and northwest. Again, the west cels may be flipped. This is seen in "isometric" games like Q*bert and Solstice.<br /></div><br /><br />This has the advantage you can have only 2 views flipped, but the game has to be isometric, then it's not top-down as you say on the start of your post.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />A Link to the Past and Link's Awakening use "rounding": they allow diagonal motion, but the animation uses the last pressed cardinal direction.<br /></div><br />Dragon Skill, the game I'm developing does this. It's really simple to code, and fluid. It also has the sword as a separate sprite so that I can have my sprite always use the same hand to handle it.<br /><br />Having a character look west or north when walking northwest will be okay, but have a character looking northwest when walking west or north is likely to look horrible.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Wed Jul 28, 2010 1:08 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2010-07-28T08:52:57-07:00</updated>
<published>2010-07-28T08:52:57-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6703&amp;p=65020#p65020</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6703&amp;p=65020#p65020"/>
<title type="html"><![CDATA[Diagonal poses in top-down games]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6703&amp;p=65020#p65020"><![CDATA[
Top-down games have four schemes for allocating sprite cels to movement directions:<br /><br />In a <strong>4-way cardinal</strong> scheme, sprite animations face north, east, south, and west. Sprite flipping can generate west and possibly some cels of south and north, though <a href="http://tvtropes.org/pmwiki/pmwiki.php/Main/AmbidextrousSprite" class="postlink">it may create artifacts too</a>. <em>Pac-Man</em>, <em>The Legend of Zelda</em>, and <em>Pokemon</em> use this because their movement code emulates a 4-way joystick. <em>A Link to the Past</em> and <em>Link's Awakening</em> use "rounding": they allow diagonal motion, but the animation uses the last pressed cardinal direction. I don't know whether RPG Maker uses 4-way movement or rounding, but all the sprite sheets I've seen for RPG Maker have only front, side, and back views.<br /><br />In a <strong>4-way diagonal</strong> scheme, sprite animations face northeast, southeast, southwest, and northwest. Again, the west cels may be flipped. This is seen in "isometric" games like <em>Q*bert</em> and <em>Solstice</em>.<br /><br />An <strong>8-way</strong> scheme has cels from both cardinal and diagonal schemes. Overhead levels in <em>Super C</em> are like this, as are <em>Ikari Warriors</em> and <em>Mission: Impossible</em>. So is <em>Super Mario RPG</em>. Schemes with more angles are possible in games whose characters move in circles like race cars, such as <em>Galaga</em> and <em>R.C. Pro-Am</em>.<br /><br />One disadvantage of a scheme with a lot of directions is that it takes a lot of memory and thus a lot of time to load the tile images into memory. ROM is cheaper than it used to be, but RAM is still limited. With fewer directions, you can load the cels and forget them, but with more directions, you may have to keep swapping them in more often during gameplay. Another disadvantage is that it can prove harder for a pixel artist to keep all directions in proportion and in sync, and it takes more memory. I'm learning <a href="http://en.wikibooks.org/wiki/Blender_3D:_Noob_to_Pro" class="postlink">Blender</a> so that I can make proper 8-way references to trace over with pixels.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Wed Jul 28, 2010 8:52 am</p><hr />
]]></content>
</entry>
</feed>