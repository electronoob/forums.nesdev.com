<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=9&amp;t=41" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2004-11-18T19:44:48-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=9&amp;t=41</id>
<entry>
<author><name><![CDATA[kyuusaku]]></name></author>
<updated>2004-11-18T19:44:48-07:00</updated>
<published>2004-11-18T19:44:48-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=41&amp;p=199#p199</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=41&amp;p=199#p199"/>
<title type="html"><![CDATA[Guidance please]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=41&amp;p=199#p199"><![CDATA[
<div class="quotetitle">Memblers wrote:</div><div class="quotecontent"><br />Can you do address decoding for the IRQ vector, $FFFE and $FFFF, shutting the regular ROM off and putting something else in?<br /></div><br />I think I can, I don't have a good understanding of how fast everything is. I was also sort of wondering if it could possibly be done without IRQs. Somehow if I could simply disable the ROM and get my hardware to feed the CPU "JSR $XXXX" that'd work just as well. I haven't thought about it too much but it seems it would screw up the game, at least the program counter no doubt. <br /><br /><div class="quotetitle">Memblers wrote:</div><div class="quotecontent"><br />If the game is already in an interrupt, it won't work unless they enable IRQs inside the routine.<br /></div><br />I see, I'll take that into account. <br /><br /><div class="quotetitle">Memblers wrote:</div><div class="quotecontent"><br />I'm not sure what you mean by how fast can a register generate an IRQ.  But the IRQ is level-sensitive and pretty quick.  As soon as the current instruction finishes, it'll run the IRQ code if the /IRQ signal is low.<br /></div><br />I should have worded it: If I write to a theoretical register which will hold /IRQ low (lets say with 0 latency), will it happen before the system starts on the next instruction? I would like my hardware to intercept a write and generate an IRQ before the next instruction to give me some serious control over the system one instruction at a time.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=20">kyuusaku</a> — Thu Nov 18, 2004 7:44 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Memblers]]></name></author>
<updated>2004-11-18T15:10:33-07:00</updated>
<published>2004-11-18T15:10:33-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=41&amp;p=195#p195</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=41&amp;p=195#p195"/>
<title type="html"><![CDATA[Guidance please]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=41&amp;p=195#p195"><![CDATA[
Can you do address decoding for the IRQ vector, $FFFE and $FFFF, shutting the regular ROM off and putting something else in?<br /><br />If the game is already in an interrupt, it won't work unless they enable IRQs inside the routine.<br /><br />I'm not sure what you mean by how fast can a register generate an IRQ.  But the IRQ is level-sensitive and pretty quick.  As soon as the current instruction finishes, it'll run the IRQ code if the /IRQ signal is low.<br /><br />But I don't know how to do what you're asking, really.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=10">Memblers</a> — Thu Nov 18, 2004 3:10 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[kyuusaku]]></name></author>
<updated>2004-11-17T20:54:15-07:00</updated>
<published>2004-11-17T20:54:15-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=41&amp;p=183#p183</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=41&amp;p=183#p183"/>
<title type="html"><![CDATA[Guidance please]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=41&amp;p=183#p183"><![CDATA[
I'm designing some game enhancing hardware, I have no clue where to begin my hardware's exploit. The hardware will generate an interrupt, which should trigger the console to run some custom code. To do this, I think I need my hardware to hijack the IRQ vector for just that one instruction. How should I do this? What if the game is halted already in an interrupt? Can a register generate an IRQ before the next instruction? How fast are IRQs? Thanks!<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=20">kyuusaku</a> — Wed Nov 17, 2004 8:54 pm</p><hr />
]]></content>
</entry>
</feed>