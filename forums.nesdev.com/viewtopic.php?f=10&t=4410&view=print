<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - My results so far</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">My results so far</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=4410">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=4410</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>3</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Banshaku</b> [ Sat Sep 27, 2008 10:37 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>My results so far</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I started to learn on how to program the nes at the end of june, when I subscribed to this forum and started to bombard everyone with my questions <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />
<br />
<br />Now that I have something that moves on the screen (not much though), I decided that it was about time to show my progress, like clueless did recently.  I now have some space to host the file so I can now give access to it:
<br />
<br /><a href="http://www14.ocn.ne.jp/~banshaku/myFirstSample.zip" class="postlink">My first sample</a>
<br />
<br />I worked maybe a month on it at 1h or less per day.  I stopped for a month and just restarted on it.  
<br />
<br />What it does:
<br />
<br />- Load some name table data/pattern table data from an existing game
<br />- Show the name table data
<br />- Show one sprite (no animation yet)
<br />- Allow to scroll the screen 
<br />
<br />It doesn't do much yet but I'm quite happy since I started from nothing.  I included the source since it's mostly test code.
<br />
<br />If some people have a chance to read the code and give their opinion, I will be more than happy to hear your feedbacks.  
<br />
<br />Most of the code and way of programming are experiments with ca65 and 6502 programming: this mean that I'm not sure if I'm doing things the right way, it just works <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />  So what I want to know is if there is some things that I should avoid to do, comment on the structure and way to use segments, etc.
<br />
<br />Thanks in advance for your comments!  Now it's 2:41 in the morning, I'm tired and will go sleep <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sat Sep 27, 2008 10:04 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I didn't catch anything strange about the initialization steps, except that I'd place the disabling of interrupts and NMI as close as possible to the start of the program, even before the stack is set. I believe that most games begin with "sei" for a reason. You certainly don't want anything interrupting your initialization, and although it might not be such a big deal now (your IRQ routine is just an rti), you must think of the future.
<br />
<br />For the same expandability reasons, I feel that your main loop could be much better structured. Sequentially shifting the bits of controller data out of the accumulator is really not the best idea. Notice how you kept pushing it to the stack and restoring it. That kind of unnecessary use of the stack might cause complications, because when you have many conditional branches it is easy get confused and forget something on the stack because different paths are taken each time.
<br />
<br />It'd be easier to just keep a copy of the controller data in a variable. With the controller constants you've defined, you can read the status of the A button like this:
<br />
<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">	lda #BTN_A<br />	and ControllerData<br />	beq ANotPressed<br />	;handle pressed A</div>
<br />It's simpler and is also faster. Another clear advantage is that you don't need to process all the buttons at once. For example, in a menu screen you could just handle up, down and start and forget about the rest.
<br />
<br />This also allow you to better organize your code. For example, in a game, most buttons control the player, except for start, that usually pauses the game. You can read all the player-related buttons in the part of the code that handles the player, and handle the start button, say, after the whole frame is ready, without mixing unrelated pieces of code.
<br />
<br />I noticed you are somewhat shy about using variables. Don't be afraid of it, although 2KB of RAM isn't much, the first few pages of RAM are a great place to store small variables. You program is simple now, but you will not be able to keep using X and Y exclusively for holding scroll values for long. The scroll values should be stored in variables.
<br />
<br />I guess this is it, you need a better structure for the main loop, and be less shy about using variables. Other than that, the program is well organized, and you seem to have got the basic idea of how to control the NES, you are just not used to structuring logic blocks in assembly. I suggest you expand this program a bit, and there will probably be more things we can discuss.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Banshaku</b> [ Sun Sep 28, 2008 7:25 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">I didn't catch anything strange about the initialization steps, except that I'd place the disabling of interrupts and NMI as close as possible to the start of the program, even before the stack is set</div><br /><br />I didn't know it could have been that sensible so I put it in the init routine.  The only one I couldn't put was the stack init since you need the stack to jump to that routine.  Noted. I will move SEI at the beginning then.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">For the same expandability reasons, I feel that your main loop could be much better structured. </div><br /><br />My main loop is the worst code in this application right now <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /> I used it only for testing how to use the nes so I didn't put any effort in it yet.  This one I'm fully aware that I have to improve it.  From your comment, my hunch was good that this code was terrible!<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">because when you have many conditional branches it is easy get confused and forget something on the stack because different paths are taken each time.</div><br /><br />Exactly. I didn't like that I had to worry if I restore properly my information from the stack. So that way was flawed from the beginning.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">It'd be easier to just keep a copy of the controller data in a variable. With the controller constants you've defined, you can read the status of the A button like this:<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">	lda #BTN_A<br />	and ControllerData<br />	beq ANotPressed<br />	;handle pressed A</div><br /></div><br /><br />After reading the joystick, which I used one routine from the wiki or from Blarg's tutorial I cannot remember the source, I do keep the content in one variable in the ZP. <br /><br /> Wow, that a lot simpler then what I did.  I will update the code right away.<br />This is what is missing for me right now, how to thing in 6502. It will come as soon as I can see some good example. Thanks for this one.<br /><br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I noticed you are somewhat shy about using variables. Don't be afraid of it, although 2KB of RAM isn't much, the first few pages of RAM are a great place to store small variables. You program is simple now, but you will not be able to keep using X and Y exclusively for holding scroll values for long. The scroll values should be stored in variables.</div><br /><br />This quirk actually comes from the fact that I'm still using the sample code from the wiki/tutorial and that I don't have any engine yet.  I do have a way to try to avoid the use of variable, if I can. In that case, I guess once I made my engine, I will need at least:<br /><br />- world coordinate<br />- name table related coordinate<br /><br />The current code doesn't support this since I'm not at that stage of development. Thanks for pointing it out, I will put those values in global variables then.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I suggest you expand this program a bit, and there will probably be more things we can discuss.</div>
<br />
<br />Yes, I will do as soon as I can find the time between job and family things <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />
<br />
<br />There's a few hardware/compiler related issues that I would like to know, and maybe other beginners would like to know too.
<br />
<br />First, I must mention that my rom right now use the setting for a MMC3 game.
<br />
<br />For example, I have a segment called CODE_UTIL. This segment point to my util module. By putting the code in a module, I can decide the scope of every methods, which I find useful. Right now, it is in bank 0.  My problem is, if I want this code to be available for bank 1, how do I do that?  Do I have to duplicate the code in another file (irk) or I have to convert that file to an include, which remove the scope of every procedure?
<br />
<br />Another one is when I decide that the code segment is only $4000 (so I can do multiple banks), the screen becomes gray. I'm not sure what I'm doing wrong and how to define all my banks.
<br />
<br />Last one is I may want to switch to CHR-RAM but I cannot find yet the documentation on how to set it properly.  Must I set the same bank as CHR0 in my memory definition and say that CHARS segment is RW? Is it the only thing to do?
<br />
<br />Thanks again for you comments, I really appreciate it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sun Sep 28, 2008 8:37 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />CHR RAM requires three significant changes to the code and build process: <ul><li>You don't append the CHR to the PRG when building the iNES binary. </li><li>Your code has to .incbin the CHR and copy it to the PPU before displaying anything. </li><li>Animated tiles (e.g. SMB2 quicksand, SMB3 ? blocks) operate differently: you have to copy CHR data during vblank instead of changing a mapper register. </li></ul>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Banshaku</b> [ Sun Sep 28, 2008 9:19 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">CHR RAM requires three significant changes to the code and build process: <ul><li>You don't append the CHR to the PRG when building the iNES binary. </li><li>Your code has to .incbin the CHR and copy it to the PPU before displaying anything. </li><li>Animated tiles (e.g. SMB2 quicksand, SMB3 ? blocks) operate differently: you have to copy CHR data during vblank instead of changing a mapper register. </li></ul></div>
<br />
<br />First and second point, make sense since it's becomes part of the code, you have to do the job yourself by software.
<br />
<br />Last point follow in the same vein as the previous ones, which make sense too. You said that you have to do it during the vblank,which is good to know since my code for now rely only on the NMI to control the framerate and not vblank since everybody recommends it. So I still need the vblank for at least (?) CHR-DATA operation. 
<br />
<br />Since you don't include any bank for CHR-DATA, how do you set your you memory maps in CA65 for accessing it?  This is one point that I'm ambiguous about and couldn't find any information on the wiki (didn't look enough I guess).
<br />
<br />Thanks Tepples for your comments, always appreciated.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sun Sep 28, 2008 10:07 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Banshaku wrote:</div><div class="quotecontent">Since you don't include any bank for CHR-DATA, how do you set your you memory maps in CA65 for accessing it?</div>
<br />The same way you set memory maps for anything else that's bankswitched into PRG. Make seven memory areas, each 16 KiB in size, that all start at $8000. Make an eighth located at $C000. Then make segments to load into each memory area. An ld65 script like the following should work for SNROM and UNROM:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent"># Link script for building NES S*ROM PRG files on cc65 toolchain<br /># By Damian Yerrick<br /><br />MEMORY &#123;<br />&nbsp; ZP:&nbsp; &nbsp; &nbsp;start = $10, size = $f0, type = rw;<br />&nbsp; # use first $10 zeropage locations as locals<br />&nbsp; RAM:&nbsp; &nbsp; start = $0300, size = $0500, type = rw;<br />&nbsp; WRAM:&nbsp; &nbsp;start = $6000, size = $2000, type = rw;<br />&nbsp; ROM0:&nbsp; &nbsp;start = $8000, size = $4000, type = ro, file = %O, fill=yes, fillval=$FF;<br />&nbsp; ROM1:&nbsp; &nbsp;start = $8000, size = $4000, type = ro, file = %O, fill=yes, fillval=$FF;<br />&nbsp; ROM2:&nbsp; &nbsp;start = $8000, size = $4000, type = ro, file = %O, fill=yes, fillval=$FF;<br />&nbsp; ROM3:&nbsp; &nbsp;start = $8000, size = $4000, type = ro, file = %O, fill=yes, fillval=$FF;<br />&nbsp; ROM4:&nbsp; &nbsp;start = $8000, size = $4000, type = ro, file = %O, fill=yes, fillval=$FF;<br />&nbsp; ROM5:&nbsp; &nbsp;start = $8000, size = $4000, type = ro, file = %O, fill=yes, fillval=$FF;<br />&nbsp; ROM6:&nbsp; &nbsp;start = $8000, size = $4000, type = ro, file = %O, fill=yes, fillval=$FF;<br />&nbsp; ROM:&nbsp; &nbsp; start = $C000, size = $4000, type = ro, file = %O, fill=yes, fillval=$FF;<br />&#125;<br /><br />SEGMENTS &#123;<br />&nbsp; ZEROPAGE: load = ZP, type = zp;<br />&nbsp; BSS:&nbsp; &nbsp; &nbsp; load = RAM, type = bss, define = yes, align = $100;<br />&nbsp; CODE:&nbsp; &nbsp; &nbsp;load = ROM, type = ro, start = $C000;<br />&nbsp; RODATA:&nbsp; &nbsp;load = ROM, type = ro, align = $100;<br />&nbsp; DPCM:&nbsp; &nbsp; &nbsp;load = ROM, type = ro, align = $40, optional=yes;<br />&nbsp; VECTORS:&nbsp; load = ROM, type = ro, start = $FFE0;<br />&nbsp; RODATA0:&nbsp; load = ROM0, type = ro, align = $100;<br />&nbsp; RODATA1:&nbsp; load = ROM1, type = ro, align = $100;<br />&nbsp; # Et cetera<br />&#125;<br /><br />FILES &#123;<br />&nbsp; %O: format = bin;<br />&#125;</div>
<br />
<br />I take it all your projects before today have been NROM or CNROM, right?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sun Sep 28, 2008 11:17 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Banshaku wrote:</div><div class="quotecontent">You said that you have to do it during the vblank,which is good to know since my code for now rely only on the NMI to control the framerate and not vblank since everybody recommends it. So I still need the vblank for at least (?) CHR-DATA operation.</div>
<br />The NMI simply tells you when VBlank started. "Wait for VBlank" and "Wait for the NMI" mean exactly the same thing, except that the NMI is a much more reliable way to do it than reading PPUSTATUS. So, updating tiles is just one more thing to do along with all other in game PPU operations (which must be during VBlank or there will be corrupted graphics), nothing special about it.
<br />
<br />The only bad thing about CHR-RAM animated tiles is that each tile uses 16 bytes, so even updating a small number of them eats a lot of the available VBlank time. Considering that in a regular game you also need to update name tables, pattern tables, palettes and sprites, not much time is left for animating more than a couple of tiles. Of course you could implement a slot system, where more tiles are copied if other operations are not necessary (palette didn't change, camera didn't scroll), but this is hardly worth the trouble. This is why most CHR-RAM games don't do it. Games with heavy background animation are most likely CHR-ROM, because it takes practically no time to select a new CHR page during VBlank.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Banshaku</b> [ Sun Sep 28, 2008 7:37 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">The same way you set memory maps for anything else that's bankswitched into PRG. Make seven memory areas, each 16 KiB in size, that all start at $8000. Make an eighth located at $C000. Then make segments to load into each memory area. </div><br /><br />Thanks for the sample, this will help me figure out where I went wrong and learn new way of using the configuration script for ld65.<br /><br />After reading this mail, at first it didn't answer my question regarding chr-ram and asked my self "maybe I didn't ask my question properly?". So I decided to read the wiki and figured out how stupid was my question in the first place <img src="./images/smilies/icon_redface.gif" alt=":oops:" title="Embarassed" /> <br /><br />Since CHR-ROM data was in the CPU address space, I though it would be the same for CHR-RAM and wanted to define a segment to write there. I was sooo wrong.  Of course the CHR-RAM is in the PPU address space and I need to use a register to write to it... <br /><br />Sorry for the dumb question. At least I realized where I was wrong <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" /><br /><br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">I take it all your projects before today have been NROM or CNROM, right?</div> <br /><br />Technically yes since I was not switching any bank but I was using the setting for ines mapper 4 (MMC3) without using any of the hardware features.  Now this is the next step in my learning process for the hardware layer, how to switch banks.<br /><br /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">This is why most CHR-RAM games don't do it. Games with heavy background animation are most likely CHR-ROM, because it takes practically no time to select a new CHR page during VBlank.</div>
<br />
<br />I was sure at first that games like Ninja gaiden II or double dragon III were using CHR-RAM because the content was changing in VRAM. After checking bootgod DB, I was wrong.
<br />
<br />Bionic commando does use it but it doesn't change any of the background. I don't see the advantage in that case thought.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>BMF54123</b> [ Sun Sep 28, 2008 9:07 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Banshaku wrote:</div><div class="quotecontent">Bionic commando does use it but it doesn't change any of the background. I don't see the advantage in that case thought.</div>
<br />Perhaps it was cheaper to go that way, since you wouldn't need the CHR ROM. Wasn't ROM pretty expensive back then?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Banshaku</b> [ Sun Sep 28, 2008 10:21 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">BMF54123 wrote:</div><div class="quotecontent">Perhaps it was cheaper to go that way, since you wouldn't need the CHR ROM. Wasn't ROM pretty expensive back then?</div>
<br />
<br />Yes, this could be quite probable but now I think I can see one reason. I played recently the japanese version and they were using kanji compared to the the current games of the time who were using only hiragana/katakana.  This could have been a motive behind the use CHR-RAM.
<br />
<br />So maybe using CHR-RAM for an action game is maybe not a good reason after all and I should stick to rom only. If I do an RPG, I can see some advantage for selecting the random enemy.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>BMF54123</b> [ Sun Sep 28, 2008 10:54 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Banshaku wrote:</div><div class="quotecontent">So maybe using CHR-RAM for an action game is maybe not a good reason after all and I should stick to rom only.</div>
<br />There's nothing wrong with using CHR-RAM for an action game, provided you manage it properly.
<br />
<br />Battletoads is a good example of <em>great</em> CHR-RAM management.
<br />Strider is a good example of <em>awful</em> CHR-RAM management. (PROTIP: you can't store two different tiles in the same spot <em>at the same time,</em> Capcom!)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>kyuusaku</b> [ Mon Sep 29, 2008 1:16 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">BMF54123 wrote:</div><div class="quotecontent">Perhaps it was cheaper to go that way, since you wouldn't need the CHR ROM. Wasn't ROM pretty expensive back then?</div>
<br />Yeah, but so was SRAM, probably moreso; and with CHR-RAM you need a bigger PRG ROM unless compression can make it worth your while. I don't think any developers would have chosen it unless they thought they needed it for visual effects or the cost of CHR-ROM bankswitching from a more powerful mapper was too high. Nintendo must have gotten a deal on 6264 though since you rarely see any 3rd party publishers use CHR-RAM and a few went out of their way to avoid 6264 for saving in favor of mapper-internal RAM and SEEPROM.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Banshaku</b> [ Thu Oct 02, 2008 10:38 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Tepples, I have a question regarding your cfg script.  I tried to use it and it doesn't work like I expected.  I'm sure your script is fine it mus be the way I use it. I don't need that functionality now but I have that itch and want to know why it fails <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />  Could you guide me to cure that itch?
<br />
<br />I stripped down the cfg file to explain my issue:
<br />
<br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent"><div class="codetitle"><b>Code:</b></div><div class="codecontent">MEMORY &#123;<br />&nbsp; ROM0:&nbsp; &nbsp;start = $8000, size = $4000, type = ro, file = %O, fill=yes, fillval=$FF;<br />&nbsp; ROM1:&nbsp; &nbsp;start = $8000, size = $4000, type = ro, file = %O, fill=yes, <br />&nbsp; #etc<br />&nbsp; ROM:&nbsp; &nbsp;start = $C000, size = $4000, type = ro, file = %O, fill=yes, <br />&#125;<br /><br />SEGMENTS &#123;<br />&nbsp; CODE:&nbsp; &nbsp; &nbsp;load = ROM, type = ro, start = $C000;<br />&nbsp; RODATA:&nbsp; &nbsp;load = ROM, type = ro, align = $100;<br />&nbsp; # etc<br />&nbsp; RODATA0:&nbsp; load = ROM0, type = ro, align = $100;<br />&nbsp; RODATA1:&nbsp; load = ROM1, type = ro, align = $100;<br />&#125;<br /></div><br /></div>
<br />
<br />I understand that ROM0 and 1 overlaps since they will be banks that will be switched by the mapper.  RODATA0 and 1 are the segments that will contains the actual data.
<br />
<br />Everything is clear about that. But when I try to implement it, I only get a gray screen.  If I put the code at $C000 or $8000, the same issues happen.  
<br />
<br />If I decide to comment out ROM1/RODATA1: working fine.  Is it possible that I'm missing something like some init code for the mapper and that would be the reason it fail?
<br />
<br />That's the only thing I can see, without some init code with multiple bank, it will fail.
<br />
<br />Am I in the right direction?
<br />
<br />edit:
<br />
<br />After debugging the code, what is in memory is only $00 at $8000 (which is fine) and at $C000 too. hmmm....
<br />
<br />edit2:  
<br />
<br />I saw that I forgot to update the number of banks in the INES header.  This was one reason my code was not working when I didn't have the 2 basic banks at $8000/$C000.  So I changed the number to 3 but without success. I'm getting closer I guess.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>kyuusaku</b> [ Thu Oct 02, 2008 11:50 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Banshaku wrote:</div><div class="quotecontent">Everything is clear about that. But when I try to implement it, I only get a gray screen.  If I put the code at $C000 or $8000, the same issues happen.  <br /><br />If I decide to comment out ROM1/RODATA1: working fine.  Is it possible that I'm missing something like some init code for the mapper and that would be the reason it fail?</div>
<br />Which mapper are you using? UOROM? Perhaps your code isn't in $C000 (the static bank) or is not switched into $8000.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Banshaku</b> [ Fri Oct 03, 2008 12:18 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">kyuusaku wrote:</div><div class="quotecontent">Which mapper are you using? UOROM? Perhaps your code isn't in $C000 (the static bank) or is not switched into $8000.</div>
<br />
<br />I'm using in my ines mapper setting mapper #4, which I think is TxROM.  One of my possible dev cart will contain this mapper.  For now I'm testing how to use multiple bank.  I started my learning process with that ines header, without using any banks.
<br />
<br />I must be missing just a little something I guess.  My code bank is now at $C000.  I put 2 dummy banks at $8000 to test how the rom will react for multiple banks. I updated my ines mapper for 3 banks.  I didn't put any init code in the $C000 bank regarding this.
<br />
<br />Nintendulator says that I have 3 banks (after reading the ines header I guess). The rom is around 57k. With an hex editor, some content seems inside.
<br />
<br />When I check with the debugger, there is no code at $C000 at all. Something must have went wrong and the code was not allocated at the right place.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>3</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>