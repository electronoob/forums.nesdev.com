<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=6&amp;t=8762" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2012-06-28T17:13:26-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=6&amp;t=8762</id>
<entry>
<author><name><![CDATA[ionustron]]></name></author>
<updated>2012-06-28T17:13:26-07:00</updated>
<published>2012-06-28T17:13:26-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8762&amp;p=96187#p96187</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8762&amp;p=96187#p96187"/>
<title type="html"><![CDATA[N163 trick ~ Odd out of bounds tone behavior]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8762&amp;p=96187#p96187"><![CDATA[
hahah, interesting! It sounds like it's using the whole waveform, making a tire screech. That's hilarious.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4342">ionustron</a> — Thu Jun 28, 2012 5:13 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[jrlepage]]></name></author>
<updated>2012-06-26T15:34:12-07:00</updated>
<published>2012-06-26T15:34:12-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8762&amp;p=96060#p96060</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8762&amp;p=96060#p96060"/>
<title type="html"><![CDATA[N163 trick ~ Odd out of bounds tone behavior]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8762&amp;p=96060#p96060"><![CDATA[
I do apologise for the massive bump, but I tried playing your Famicompo entry (in which you used this exploit) on hardware, and I can confirm this doesn't work on a real N163. <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br /><a href="http://www.mediafire.com/download.php?n42qmxauh545irz" class="postlink">Here's the recording</a> (FLAC, 5.73 MB). Skip to 0m37s so hear the part where the exploit happens.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5260">jrlepage</a> — Tue Jun 26, 2012 3:34 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[ionustron]]></name></author>
<updated>2012-03-28T19:19:38-07:00</updated>
<published>2012-03-28T19:19:38-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8762&amp;p=91944#p91944</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8762&amp;p=91944#p91944"/>
<title type="html"><![CDATA[N163 trick ~ Odd out of bounds tone behavior]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8762&amp;p=91944#p91944"><![CDATA[
You might with the y command, but otherwise I think most of the direct frequency write commands are disabled on the N163 channels in PPmck for some silly reason and bring up the engrish error "Unuse command on this track."<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4342">ionustron</a> — Wed Mar 28, 2012 7:19 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[rainwarrior]]></name></author>
<updated>2012-03-28T16:56:24-07:00</updated>
<published>2012-03-28T16:56:24-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8762&amp;p=91939#p91939</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8762&amp;p=91939#p91939"/>
<title type="html"><![CDATA[N163 trick ~ Odd out of bounds tone behavior]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8762&amp;p=91939#p91939"><![CDATA[
Sure, I think it's probably "safe" to abuse... I mean, an NSF player should be able to do it fine, I guess, but there is probably a better way to do it (the ppMCK bug might have other side effects). Are you allowed to write the frequency registers yourself? (I don't know ppMCK very well.)<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5165">rainwarrior</a> — Wed Mar 28, 2012 4:56 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[ionustron]]></name></author>
<updated>2012-03-28T14:27:58-07:00</updated>
<published>2012-03-28T14:27:58-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8762&amp;p=91929#p91929</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8762&amp;p=91929#p91929"/>
<title type="html"><![CDATA[N163 trick ~ Odd out of bounds tone behavior]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8762&amp;p=91929#p91929"><![CDATA[
aha!<br /><br />So then I wonder if you could just define a single buffer waveform and access those frequencies normally. My thought is that this could be used on a more common carefully made waveform working on a channel and then wrapping to the 1st buffer occasionally, sharing on some percussion or effect sound duty and saving a little bit of data used for an extra definition.<br /><br />But do you think this is a safe bug to abuse?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4342">ionustron</a> — Wed Mar 28, 2012 2:27 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[rainwarrior]]></name></author>
<updated>2012-03-28T13:14:56-07:00</updated>
<published>2012-03-28T13:14:56-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8762&amp;p=91921#p91921</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8762&amp;p=91921#p91921"/>
<title type="html"><![CDATA[N163 trick ~ Odd out of bounds tone behavior]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8762&amp;p=91921#p91921"><![CDATA[
I think this is just a bug in ppMCK.<br /><br />The frequency is controlled by 18 bits in registers $78, $7A, $7C, but only two bits of $7C are used for frequency. The rest are used to control the length of your waveform.<br /><br />So, when it gets to the bottom, it wraps, and I guess ppMCK is trying to make a frequency number with more than 18 bits in it and they bleed over into the waveform length bits.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5165">rainwarrior</a> — Wed Mar 28, 2012 1:14 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[ionustron]]></name></author>
<updated>2012-03-28T01:11:21-07:00</updated>
<published>2012-03-28T01:11:21-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8762&amp;p=91904#p91904</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8762&amp;p=91904#p91904"/>
<title type="html"><![CDATA[N163 trick ~ Odd out of bounds tone behavior]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8762&amp;p=91904#p91904"><![CDATA[
I was mentioning this round compo time, and forgot to get back to it...<br /><br />There's a curious trick you can do with the N163 to get it to produce tones much higher than intended with MML. The effect seems to be very aliased or gets screwy with the filtering and makes for vastly different results across emulators. I'm not certain it hardware supports it either.<br /><br />It's the simplest thing really, I'm sure someone has to have figured it out as well. Since the SA command was added, we have much more control over tuning and sweeps on the channels. Make it go as high as it'll go and it'll eventually settle on an odd tone before cycling back to the lowest hz it can output. Even with note envelopes, it still cycles through the tones. However, something very curious happens when we apply a pitch envelope with a decreasing value. Once it hits the lowest level, it cycles back to an extremely shrill range with harmonics bouncing all over it sometimes. Sometimes it goes silent.<br /><br />When I messed around with it further, I noticed on a waveform of many buffers, it would remove all but the first buffer when cycling back through the tones. If you let it continue sweeping to the bottom and cycling back to the top again, it would add the next buffer samples back into the waveform, adding another buffer every full sweep until the entire waveform is back and then cutting back to only one buffer upon the next cycle through the tones.. This is why it would go silent sometimes, when the first buffer(s) were just flat waveforms with no difference. It would stay silent until the sweep reached a buffer that had different samples, and the shrill would kick right back in.<br /><br />The thought was then to make an envelope to hit a sweet spot in the tone and then bounce it between a couple spots, add some volume and noise channel flourish and voila! A tambourine or sleigh bell effect. This was used roughly halfway into the Shining Force II cover that was entered in the compo. Course it sounds like crap in the flash player, and it's all over the place everywhere else...<br /><br />Digging through a testing mml, here's another fun testing example to compile;<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">//////////////////////////////////////////////////////////////<br /><br />#EX-NAMCO106 8<br />#PITCH-CORRECTION<br /><br />PQRSTUVW @t20,20<br /><br />@EP1 = &#123;|-10&#125;<br /><br />@N10 = &#123;3 10 10 10 0 10 10 10 0 0 0 10 10 15 15 10 10 0 0 10 10 0 0 0 10 10 0 0 10 10 0 0 0&#125;<br />/&#40;the buffers past the first 4 samples shouldn't matter on this waveform. It was just from an early test.&#41;<br /><br />@v1 = &#123;1 1 1 2 2 2 3 3 3 4 4 4 5&#125;<br />@v2 = &#123;5 5 5 5 5 5 5 5 5 5 5 5 5 5 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0&#125;<br /><br />PQRSTU o1 EP1 SA1 @@10 l16<br />Q K1<br />R K2<br />S K3<br />T K4<br />U K5<br /><br />PQRSTU v0 c8. @v1 EP0 w1^1^1^2 EPOF w1^1<br />P @v2w1<br />Q ^@v2w1<br />R ^8@v2w1<br />S ^8^@v2w1<br />T ^4@v2w1<br />U ^4@v2w1<br /><br />//////////////////////////////////////////////////////////////<br /></div><br /><br />In the example, a brief time is spent silent because the volume is at zero while it's descending but before the sweep. Setting this to octave 0 will start it much sooner if not instantly.<br /><br />I'm sorry as always that I probably don't have the right sound terminology, I just wished to share an interesting trick that I'm not sure is legitimately useful or not given what I've learned about having many sound channels active since the compo. Any explanation would be very helpful and interesting.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4342">ionustron</a> — Wed Mar 28, 2012 1:11 am</p><hr />
]]></content>
</entry>
</feed>