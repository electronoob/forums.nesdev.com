<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Stability issues, free software and proprietary software</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Stability issues, free software and proprietary software</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=5&amp;t=10018">http://forums.nesdev.com/viewtopic.php?f=5&amp;t=10018</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Sun Apr 14, 2013 3:03 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Stability issues, free software and proprietary software</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It really is counter intuitive, but at work I have to work with proprietary software. From personal experience I've noticed that often, free softs tends to be very stable, while proprietary software tends to be bloated stuff with lots of stability issues - random errors that come out of nowhere and disappear just as suddently, random crashes, etc, etc...<br /><br />So the question is, why if you pay for something, you get a lower quality product ?<br /><br />I think I have a reason for it though. People who develop proprietary software are not likely to be less skilled than people who develop free software. However, they very likely have strong time limitations, so they are forced to write something in a limited amount of time, because their boss asks them to. For this reason, the end product often is rushed, unstable and crappy. This problem does not arise with free software.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>TmEE</b> [ Sun Apr 14, 2013 3:15 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Stability issues, free software and proprietary software</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I have observed opposite for the stuff I deal with. But it has been a lot easier for me to get a bugfix happen quickly in some free soft than commercial stuff.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Sun Apr 14, 2013 7:05 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Stability issues, free software and proprietary software</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I've noticed it. Look at LibreOffice and Audacious. Even simple stuff is better than the big-business alternatives Apple and MS provide. And I agree, paid software has just tons of unnecessary bloat and crappiness to it. I think this is attributed with the hate of all the modern &quot;programmers&quot; wanting to write their stuff in Visual C# instead of C/C++, and all the other crap languages out there. And with that, they're unnecessarily complex with so many stupid functions, except the ones you need! Even Win8 shows this, as the apps run basically as web pages, which don't have the ability to do crap compared to C/C++ and is also slower than native apps by a ton.<br /><br />It may be contributed that I hate how programming is going higher and higher up with just so many more layers of garbage to work through, or it may be real. But still, I hate it. Embedded software too, slow as hell and that's usually written in C/C++! A loading screen for the next screen of just buttons? That's a joke.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Shiru</b> [ Sun Apr 14, 2013 7:42 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Stability issues, free software and proprietary software</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I've seen both on both sides. I think stability is directly related to overall complexity of modern software, not just paid/free.<br /><br />I'd say that free software, although sometimes pretty powerful and could compete with paid software feature-wise, is often has major usability issues. I consider it to be a price of some kind, either you pay tons of money and get comfort, or don't pay money, get abilities to do the same things, but lose extra time doing it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sun Apr 14, 2013 9:16 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Stability issues, free software and proprietary software</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">3gengames wrote:</div><div class="quotecontent">I've noticed it. Look at LibreOffice and Audacious. Even simple stuff is better than the big-business alternatives Apple and MS provide.</div><br />Unless you need to interoperate with everyone around you who uses Excel and Access.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I think this is attributed with the hate of all the modern &quot;programmers&quot; wanting to write their stuff in Visual C# instead of C/C++</div><br />Wanting? C# is the only language that runs at all in Silverlight or XNA. Without it, no one can develop Xbox Live Indie Games or Windows Phone 7 applications.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Even Win8 shows this, as the apps run basically as web pages, which don't have the ability to do crap compared to C/C++ and is also slower than native apps by a ton.</div><br />I wonder how much of that comes from a desire to protect the user's data and the user's capped, billed-by-the-bit Internet connection from abuse by malicious applications that the user installed without knowing of their malicious nature.<br /><br />Anyway, the typical business models used to support development of business applications as free software don't apply as easily to video games. Games don't need &quot;support&quot;, for instance, unless they're MMO. And it's hard for hobbyists working for free to climb the <a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=5927" class="postlink">complexity</a> wall alone.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Sun Apr 14, 2013 9:26 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Stability issues, free software and proprietary software</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />1st quote I don't get.<br /><br />2nd quote: Yeah, but what good programmer uses either of those? I honestly like silverlight more than flash, but it's still a wasteland for anything outside of MS's xbox.com.<br /><br />3rd is sort of a good point, but still...a computer is a tool. If you don't want to learn how to use it properly, that's not Microsoft's fault. Or Googles. Or Apples. Nobodies fault but the EU. And billed by the bit internet would make 10x more sense to run applications one at a time on top of that, but they're always updating so that makes no sense to call it a reason. I mean, all the apps constantly update and one app updating with 1KB of bandwidth a minute take up 40MB/mo per app. That's a decent amount already.<br /><br />And as an example of open source being better than paid...the Linux kernel is basically raping the Windows whole OS layout, and is (as far as I know) better than even the Unix kernel it strives to be. That's a big testament to free software IMO. Especially since on those platforms, Linux with the GTK and whatever else have ya is very easy to work with compared to basically any library Microsoft ever churned out, which is overly complex and just stupid to use to anyone who needs to get stuff done.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sun Apr 14, 2013 9:43 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Stability issues, free software and proprietary software</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">3gengames wrote:</div><div class="quotecontent">1st quote I don't get.</div><br />If you want to use LibreOffice, but the vast majority of those around you are using Microsoft Office, it's going to be difficult for you to exchange information with them.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Yeah, but what good programmer uses either of those?</div><br />A programmer who wants to reach users of Windows Phone 7 devices. Or a programmer who is trying to establish himself without having to move hundreds of miles away and do a multi-year internship with an established studio.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">3rd is sort of a good point, but still...a computer is a tool. If you don't want to learn how to use it properly, that's not Microsoft's fault. Or Googles. Or Apples.</div><br />To some users who are not programmers, perhaps a majority, tools that do the anticipated job while taking less time to learn to use safely are superior to tools that do the anticipated job and more but take more time to learn to use safely.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">And billed by the bit internet would make 10x more sense to run applications one at a time on top of that, but they're always updating so that makes no sense to call it a reason.</div><br />I was under the impression that the user could choose to disable downloads of application updates while on cellular (3 GB/mo) but enable them while on home Wi-Fi (250 GB/mo) or restaurant Wi-Fi (included in meal price).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>zzo38</b> [ Sun Apr 14, 2013 2:19 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Stability issues, free software and proprietary software</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />What software is better depends on the software; both free/open-source and proprietary software can be good and bad software. But with free-software/open-source, it can be improved by anyone, and that is one of the benefits (there are others too). Therefore when I write computer programs it is free-software/open-source as much as possible, and in programming languages that are portable and not &quot;trapped&quot;; I write a lot of programs in C (and since there are free assemblers and emulators for NES/Famicom, you can write software for that too and expect it to work; the same thing applies to the Z-machine, and partially to DOS programs).<br /><br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">If you want to use LibreOffice, but the vast majority of those around you are using Microsoft Office, it's going to be difficult for you to exchange information with them.</div>I think the old Microsoft formats are mostly compatible with both. I mostly use TeX for typesetting, myself, though. For databases I just use SQLite.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">To some users who are not programmers, perhaps a majority, tools that do the anticipated job while taking less time to learn to use safely are superior to tools that do the anticipated job and more but take more time to learn to use safely.</div>I still think that if you operate a computer, you should learn how to operate a computer. Even disregarding that, if the different tools can use compatible file formats, then less of a problem, since then free and proprietary software can both work, and even more than one of each, depending on your preference, and it can still work.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I was under the impression that the user could choose to disable downloads of application updates while on cellular (3 GB/mo) but enable them while on home Wi-Fi (250 GB/mo) or restaurant Wi-Fi (included in meal price).</div>I don't know; I still think local programs which are compiled into native code are usually best (the FSF agrees on this).<br /><br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">Anyway, the typical business models used to support development of business applications as free software don't apply as easily to video games. Games don't need &quot;support&quot;, for instance, unless they're MMO. And it's hard for hobbyists working for free to climb the <a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=5927" class="postlink">complexity</a> wall alone.</div>It is true that they are different, although depending on the game, it still can be, or the program can be free software and the graphics/music/etc under different licenses. Or possibly the game engine is free software, but it might support scripts and so on that are separately (for example, MegaZeux).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sun Apr 14, 2013 2:25 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Stability issues, free software and proprietary software</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">zzo38 wrote:</div><div class="quotecontent"><div class="quotetitle">tepples wrote:</div><div class="quotecontent">If you want to use LibreOffice, but the vast majority of those around you are using Microsoft Office, it's going to be difficult for you to exchange information with them.</div>I think the old Microsoft formats are mostly compatible with both. I mostly use TeX for typesetting, myself, though. For databases I just use SQLite.</div><br />What do you use for designing the forms used to query and update your SQLite databases? Microsoft Access allows non-programmers to design and implement forms and reports. And what do you use to access Access database files that your coworkers, clients, or suppliers have created?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Sun Apr 14, 2013 2:42 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Stability issues, free software and proprietary software</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />A big reason not to support shareware, commercial, or any other kind of closed-source software is that some day all the source code will disappear with the company, even if it had value to the community.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Sun Apr 14, 2013 2:52 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Stability issues, free software and proprietary software</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />One of the big reasons people choose to use commercial software is that if (i.e. when) you have problems with it, there is professional support you can call to get help.<br /><br />There is good and bad software of both kinds. A great deal of free software is buggy, unfinished, abandoned, poorly written, unmaintainable, etc. If Bregalad hasn't found this to be the case I think he is either lucky, or willfully ignoring it. Though, at least with free software, if it turns out to be crap, you didn't pay anything for it.<br /><br />The big problem arises when it does most of what you need, so you start using it and get invested in it, but after a while you hit a wall and you have no way to proceed. If you're a programmer, and the source happens to be maintainable, you might be able to solve the problem yourself (big advantage of open source, here), but if this is not the case you may be completely out of luck. Open source software that is good and useful tends to draw a crowd, but the availability of talented people willing to maintain open source software is often lacking.<br /><br />There's also plenty of types of software for which the commercial software drastically outperforms current open source alternatives. Video editing, for example.<br /><br />Honestly, though, building complex software is difficult for anybody, open source or professional. Most software is crap. Yes, commercial software companies are motivated to put out their unpolished crap, because they need to sell it. At the same time, it also motivates them to get something out there that at least works. There is a ton of unfinished crappy open source projects out there. I can't count the number of times I've tried to find an open source solution for something and found 10 things that would be able to solve my problem if they weren't all unfinished.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Sun Apr 14, 2013 2:57 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Stability issues, free software and proprietary software</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I sit happily on the fence about this matter, pointing fingers at both sides.  Both models (commercial vs. free (I assume you mean open-source)) have their pros, and both have their cons.<br /><br />The one thing that both suffer from is lack of proper ownership/responsibility, but this affects open-source much much deeper (and has for decades (I've been involved in the open-source world since 1993)).  Ignore all the other aspects and focus just on the ownership/responsibility one for what I'm about to say.<br /><br />Lack of responsibility has catastrophic effects in the open-source world because there's no fallout from a software author(s) saying &quot;fuck it&quot; + no longer maintaining or supporting their software (just look at how much utter <strong>garbage</strong> there is on Sourceforge and Freshmeat sometime!).  With commercial software companies, failure to meet deadlines or take responsibility often means decrease in sales, which in turn means loss of jobs or other crap I'd rather not discuss.<br /><br />Eric Raymond's <a href="http://en.wikipedia.org/wiki/The_Cathedral_and_the_Bazaar" class="postlink">The Cathedral and the Bazaar</a> is an article that some years ago I wrote a ~30 page rebuttal to (have since lost it, sorry) because of how absolute rose-tinted Raymond paints open-source.  Raymond's essay still to this day pisses me off.<br /><br />There are two open-source &quot;mantras&quot; which to this day make me so irate that I often have to step away from my workstation for a good 6-8 hours else I'll punch someone in the face (and I'm an open-source author myself): the belief that <a href="http://en.wikipedia.org/wiki/Linus%27s_Law" class="postlink">&quot;given enough eyes, all bugs are shallow&quot;</a> and the whole <a href="http://programmers.stackexchange.com/questions/68740/whats-the-canonical-retort-to-its-open-source-submit-a-patch" class="postlink">&quot;send patches or STFU&quot;</a> mentality (often used as a rebuttal if a user expects support from something that's open-source).<br /><br />Both of these are <strong>outrageously</strong> bullheaded and unrealistic, simply because ~98% of the population does not have the slightest idea how to debug software (not to mention the time to do so), and of those remaining ~2% virtually none -- except the author(s) themselves -- have intricate knowledge of how the software works; thus asking (and expecting!) every user of open-source software to reverse-engineer shit to fix a bug + submit patches = utter horseshit.<br /><br />The belief system I've always had with open-source software (applied to my own): my code == my bugs == my fault == my responsibility.  That's how I was raised -- you take responsibility for things you create, and especially things that are made public.  Here's a comparison I use: imagine if parents of misbehaved children said &quot;hey, fix it yourself, send patches&quot; -- sounds preposterous doesn't it?  And it damn well should.<br /><br />In the case of my old NES and SNES documentation -- which I do not maintain any longer -- I made those public domain for a lot of reasons, and (at least at the time) I was fairly vocal about stating what those reasons were.  There is still a part of me that feels bad about &quot;bailing&quot; (see above, re: responsibility), but sometimes there are greater things of importance/severity that outweigh the necessity.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sun Apr 14, 2013 3:07 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Stability issues, free software and proprietary software</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">koitsu wrote:</div><div class="quotecontent">The belief system I've always had with open-source software (applied to my own): my code == my bugs == my fault == my responsibility.  That's how I was raised -- you take responsibility for things you create, and especially things that are made public.</div><br />So does releasing a piece of free software entitle the world to support without charge for the life of the author? The fact that you stepped down as maintainer of your NES and Super NES documentation shows that the answer is no, but where should one draw the line?<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Here's a comparison I use: imagine if parents of misbehaved children said &quot;hey, fix it yourself, send patches&quot; -- sounds preposterous doesn't it?</div><br />Parents in some industrialized countries do tend to expect that from school systems. &quot;It takes a village&quot; and all that.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Sun Apr 14, 2013 3:23 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Stability issues, free software and proprietary software</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent"><div class="quotetitle">koitsu wrote:</div><div class="quotecontent">The belief system I've always had with open-source software (applied to my own): my code == my bugs == my fault == my responsibility.  That's how I was raised -- you take responsibility for things you create, and especially things that are made public.</div><br />So does releasing a piece of free software entitle the world to support without charge for the life of the author? The fact that you stepped down as maintainer of your NES and Super NES documentation shows that the answer is no, but where should one draw the line?</div><br />You introduced a phrase that completely skews/messes up the point: you introduced the phrase <strong>without charge</strong>.<br /><br />The fact that something is free does not mean the person is off the hook when it comes to responsibility (there are lots of examples of this being proven true legally too).  Money should have no bearing on this situation -- remember, &quot;free as in free beer&quot; and &quot;open-source is awesome because it's free&quot; and all that nonsense.  So please don't introduce the financial aspect into it...<br /><br />I believe very strongly that if someone releases open-source software publicly, they have a responsibility to maintain it all the way up until their departure from the project.  Part of that responsibility means you don't take your crappy uncommented code with no docs or explanations of how it works/details and throw it up on github and leave it there to rot -- this does nobody any good except the author, who then gives off a narcissistic &quot;fuck everyone else, only looking out for number one&quot; vibe.<br /><br />In my opinion, responsibility dictates 4 things before project departure:<br /><br />1) Address all the aforementioned items before &quot;their last/final commit&quot; -- i.e. get the software into a usable, stable, well-documented state before leaving,<br /><br />2) If maintained by a single person: that they do their best to try and find someone who can actively maintain it who is also willing to accept the responsibilities.  (I mention that acceptance for a reason -- proftpd is a great example of open-source software that got handed over to people who had no idea what the fuck they were doing with it / did not understand it (and existed in this form for something like 4-5 full years!).  The history of that program is an absolute clusterfuck, it's one of the biggest examples of open-source failing the world, and is only slightly an example of how open-source benefits the world),<br /><br />3) Publicly explain why (and always be honest) they can't (or don't want to) maintain the software any longer,<br /><br />4) Be reasonable about future support requests, even in cases where they couldn't find someone to maintain the software.  One should <strong>expect</strong>, for at least 2-3 years, to possibly be tracked down + contacted about issues in the software.  And be polite in communication -- an example would be &quot;Hi, I'm sorry but I don't maintain that software any longer.  The reasons I don't are listed in the foobarblat.txt file {link to it}.  That said, the bug you describe sounds like it's within function xyz() and may relate to a change in abc introduced elsewhere.  I can't help past this point -- my apologies&quot;.<br /><br />This is all common sense shit to me.  I don't know why having to outline it is necessary.  God what I'd give for us Americans to go back to common sense...  :P

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>zzo38</b> [ Sun Apr 14, 2013 3:28 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Stability issues, free software and proprietary software</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent"><div class="quotetitle">zzo38 wrote:</div><div class="quotecontent"><div class="quotetitle">tepples wrote:</div><div class="quotecontent">If you want to use LibreOffice, but the vast majority of those around you are using Microsoft Office, it's going to be difficult for you to exchange information with them.</div>I think the old Microsoft formats are mostly compatible with both. I mostly use TeX for typesetting, myself, though. For databases I just use SQLite.</div><br />What do you use for designing the forms used to query and update your SQLite databases? Microsoft Access allows non-programmers to design and implement forms and reports. And what do you use to access Access database files that your coworkers, clients, or suppliers have created?</div>As it turns out I happen to have Microsoft Office too (as well as Microsoft Windows), so I can open those files, but I don't use it for my own files, and anyways it is rare that I ever need to deal with any Microsoft Office files. (Anyways, I mostly work for Free Geek and they use LibreOffice; I don't have LibreOffice on this computer but that doesn't matter because when I am working for them I use their computers.)<br /><br />I don't usually need forms, since I can use views and triggers, but in case they are needed (or if I want to generate reports), I have written a C program for writing templates with embedded SQL codes. If they are HTML, then forms can be made up that way, too (I have also written a CGI wrapper for this purpose) (I have once done this for Free Geek, to write a program to keep track of their inventory; yes, their inventory program is written purely in SQL and HTML, no PHP or anything like that).<br /><br />However, there probably are other programs allowing non-programmers to make forms for SQLite databases too, or someone might write them if it doesn't already exist, so if the format is compatible then it can work.<br /><br />For my own typesetting I use Plain TeX, which is probably the most portable programming language ever. Mostly I never need to send the files to anyone else, although some are available for other people to see (such my Dungeons&amp;Dragons recordings), although when writing printable stuff for Free Geek I also use TeX.<br /><br />What do <em>you</em> use?<br /><br /><div class="quotetitle">blargg wrote:</div><div class="quotecontent">A big reason not to support shareware, commercial, or any other kind of closed-source software is that some day all the source code will disappear with the company, even if it had value to the community.</div>I absolutely agree. Some people do agree to make their software open-source if they abandoned it. I make it open-source even at first, and that works too, possibly even better.<br /><br /><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent">One of the big reasons people choose to use commercial software is that if (i.e. when) you have problems with it, there is professional support you can call to get help.</div>Yes. Commercial software can still be free/open-source, though; sometimes it is.<br /><br /><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent">There is good and bad software of both kinds. A great deal of free software is buggy, unfinished, abandoned, poorly written, unmaintainable, etc. If Bregalad hasn't found this to be the case I think he is either lucky, or willfully ignoring it. Though, at least with free software, if it turns out to be crap, you didn't pay anything for it.</div>Yes, this is true. Well, if it is free as in price then you didn't pay anything for it. If it is free as in speech, then if it turns out to be no good, you might be able to fix it, if such a thing seems reasonable, and if it doesn't, it is probably free as in price too, so you still didn't pay anything for it.<br /><br /><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent">The big problem arises when it does most of what you need, so you start using it and get invested in it, but after a while you hit a wall and you have no way to proceed. If you're a programmer, and the source happens to be maintainable, you might be able to solve the problem yourself (big advantage of open source, here), but if this is not the case you may be completely out of luck. Open source software that is good and useful tends to draw a crowd, but the availability of talented people willing to maintain open source software is often lacking.</div>Yes, it is true.<br /><br /><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent">There's also plenty of types of software for which the commercial software drastically outperforms current open source alternatives. Video editing, for example.</div>Video editing is one of the things currently on FSF's high priority list.<br /><br /><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent">Honestly, though, building complex software is difficult for anybody, open source or professional. Most software is crap. Yes, commercial software companies are motivated to put out their unpolished crap, because they need to sell it. At the same time, it also motivates them to get something out there that at least works. There is a ton of unfinished crappy open source projects out there. I can't count the number of times I've tried to find an open source solution for something and found 10 things that would be able to solve my problem if they weren't all unfinished.</div>Yes; it is like confirmation bias. This is often the reason why unfinished open-source programs that are not very good are often found, but actually proprietary software is just as bad. However, some unfinished open-source programs might be worked on more by some people; there are more people to work on it. I also wrote some unfinished open-source<br />programs, and may finish them later. Even if I don't, other people can.<br /><br /><div class="quotetitle">koitsu wrote:</div><div class="quotecontent">I sit happily on the fence about this matter, pointing fingers at both sides.  Both models (commercial vs. free (I assume you mean open-source)) have their pros, and both have their cons.</div>Free software is mostly the same as open-source (this free is often capitalized &quot;Free&quot; to tell the difference); this is <strong>not</strong> the same thing as freeware (although much of Free software is also freeware).<br /><br /><div class="quotetitle">koitsu wrote:</div><div class="quotecontent">The one thing that both suffer from is lack of proper ownership/responsibility, but this affects open-source much much deeper (and has for decades (I've been involved in the open-source world since 1993)).  Ignore all the other aspects and focus just on the ownership/responsibility one for what I'm about to say.<br /><br />Lack of responsibility has catastrophic effects in the open-source world because there's no fallout from a software author(s) saying &quot;fuck it&quot; + no longer maintaining or supporting their software (just look at how much utter <strong>garbage</strong> there is on Sourceforge sometime!).....</div>Like you mention, there is Cathedral and Bazaar development models for open-source; this affects it a bit too. I tend to work on the projects only by myself, which avoids some of those problems with open-source (although also avoids some of the advantages; however, someone can still fork it if they want to, and changes can be merged both ways).<br /><br />I see how much garbage there is on Sourceforge; this is a kind of confirmation bias, like I have said.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>