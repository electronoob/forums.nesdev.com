<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=10&amp;t=3693" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2009-04-05T22:30:31-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=10&amp;t=3693</id>
<entry>
<author><name><![CDATA[Celius]]></name></author>
<updated>2009-04-05T22:30:31-07:00</updated>
<published>2009-04-05T22:30:31-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3693&amp;p=45213#p45213</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3693&amp;p=45213#p45213"/>
<title type="html"><![CDATA[Comparison Question]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3693&amp;p=45213#p45213"><![CDATA[
Yeah, I figured it would to check for the opposite. It's simply because the carry is set when A is greater than <em>or</em> equal to B, so you have to check for that. If you check if A is less than B, you can get a result a lot quicker because you know it's not true when the carry is set.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=138">Celius</a> — Sun Apr 05, 2009 10:30 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2009-04-05T20:47:53-07:00</updated>
<published>2009-04-05T20:47:53-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3693&amp;p=45208#p45208</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3693&amp;p=45208#p45208"/>
<title type="html"><![CDATA[Comparison Question]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3693&amp;p=45208#p45208"><![CDATA[
<div class="quotetitle">Celius wrote:</div><div class="quotecontent"><br />It might take less time to see if B is less than A, though.<br /></div><br />The following code does the same thing as yours, but is shorter:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   lda BH<br />   cmp AH<br />   bcc IfTrue<br />   bne +<br />   lda BL<br />   cmp AL<br />   bcc IfTrue<br />+</div><br />Sometimes it is faster/easier to check for the opposite conditions.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Sun Apr 05, 2009 8:47 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Celius]]></name></author>
<updated>2009-04-05T20:04:30-07:00</updated>
<published>2009-04-05T20:04:30-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3693&amp;p=45206#p45206</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3693&amp;p=45206#p45206"/>
<title type="html"><![CDATA[Comparison Question]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3693&amp;p=45206#p45206"><![CDATA[
Okay, thanks for clearing that up. I just thought you meant it assumes that it's set, meaning you set it before, in the same way SBC assumes that you set it. This is really good news because I have a loop comparing numbers, and it would really add up with all those SECs in there.<br /><br />To compare two 16 bit numbers, I do this:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">;Checks if A is greater than B. If true, go to &quot;IfTrue&quot;<br /><br />;AH - A High<br />;AL - A Low<br />;BH - B High<br />;BL - B Low<br /><br />   lda AH<br />   cmp BH<br />   bcc ++<br />   beq +<br />   bcs IfTrue<br />+<br />   lda AL<br />   cmp BL<br />   beq ++<br />   bcs IfTrue<br />++<br /></div><br /><br />It first checks the high bytes of the values to save the most time, because if they're not equal, it's really easy to tell if A is greater than B. It might take less time to see if B is less than A, though.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=138">Celius</a> — Sun Apr 05, 2009 8:04 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2009-04-05T20:38:52-07:00</updated>
<published>2009-04-05T16:44:26-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3693&amp;p=45200#p45200</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3693&amp;p=45200#p45200"/>
<title type="html"><![CDATA[Comparison Question]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3693&amp;p=45200#p45200"><![CDATA[
<div class="quotetitle">blargg wrote:</div><div class="quotecontent"><br />Ahhh, so that's how you conveniently compare 16-bit values:<br /></div><br />This is the way to do it without branches. Only the first byte of a multi-byte number can be compared with CMP when you do it like this. The alternative to your code, using only CMP, is this:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   lda i+1<br />   cmp j+1<br />   bne done<br />   lda i<br />   cmp j<br />done:</div><br />Which is not bad, because if the highest byte alone can tell which number is larger, you don't even need to compare the lower bytes.<br /><br />EDIT: Deleted incorrect information.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Sun Apr 05, 2009 4:44 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2009-04-04T23:19:23-07:00</updated>
<published>2009-04-04T23:19:23-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3693&amp;p=45197#p45197</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3693&amp;p=45197#p45197"/>
<title type="html"><![CDATA[Comparison Question]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3693&amp;p=45197#p45197"><![CDATA[
Ahhh, so that's how you conveniently compare 16-bit values:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda i<br />cmp j ; = SEC then SBC j<br />lda i+1<br />sbc j+1</div><br />Carry set if i &gt;= j.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Sat Apr 04, 2009 11:19 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2009-04-04T18:41:45-07:00</updated>
<published>2009-04-04T18:41:45-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3693&amp;p=45186#p45186</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3693&amp;p=45186#p45186"/>
<title type="html"><![CDATA[Comparison Question]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3693&amp;p=45186#p45186"><![CDATA[
You don't need the SEC... I said CMP *assumes* the carry is set but that was probably a bad word to use. CMP doesn't expect you to set the carry, it just operates as if it was always set (i.e. CMP works the same regardless of the carry flag). This is why you can't use it to compare 16-bit (or larger) numbers, unless you have a branch instruction after comparing each byte.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Sat Apr 04, 2009 6:41 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Celius]]></name></author>
<updated>2009-04-04T14:48:09-07:00</updated>
<published>2009-04-04T14:48:09-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3693&amp;p=45181#p45181</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3693&amp;p=45181#p45181"/>
<title type="html"><![CDATA[Comparison Question]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3693&amp;p=45181#p45181"><![CDATA[
<div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><br />Now, to understand this part you must understand how subtraction works on the 6502. You know that we always set the carry flag before a subtraction (and that the CMP instruction assumes that the carry is set).<br /></div><br /><br />Does this mean you have to set the carry before using the CMP instruction? I swear, everywhere I see:<br /><br />lda Blah<br />cmp Something<br />bcs/bcc SomeLabel<br /><br />With no SEC before it.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=138">Celius</a> — Sat Apr 04, 2009 2:48 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Celius]]></name></author>
<updated>2008-12-06T13:21:33-07:00</updated>
<published>2008-12-06T13:21:33-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3693&amp;p=40531#p40531</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3693&amp;p=40531#p40531"/>
<title type="html"><![CDATA[Comparison Question]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3693&amp;p=40531#p40531"><![CDATA[
Thanks for the responses guys. I'll study what you were saying blargg. I am actually going to create a nice macro for this (I've created macros for lots of other branch conditions with WLA-DX), so I don't have to think about typing it in. It's obviously more intuitive to write something like:<br /><br />checkAgreaterthanBsigned(A,B,Label)<br /><br />Where it branches to "Label" if A is greater than B. Though I have a system where I shorten the words to:<br /><br />csAgtB<br /><br />Which stands for: check (signed) if A is greater than B. I have these handy macros for 16 bit comparisons where I can just quickly type that in without thinking (and sometimes, I get confused with comparisons, so I'll sit there and waste coding time thinking about how to compare two numbers).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=138">Celius</a> — Sat Dec 06, 2008 1:21 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2008-12-06T10:16:25-07:00</updated>
<published>2008-12-06T10:16:25-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3693&amp;p=40530#p40530</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3693&amp;p=40530#p40530"/>
<title type="html"><![CDATA[Comparison Question]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3693&amp;p=40530#p40530"><![CDATA[
OK, I got this figured out. The first way avoids using overflow. It's the easiest to understand. The next uses overflow by adding a signed value that would cause overflow in the interesting case (ADC/SBC set/clear the overflow flag when the signed result would be outside the -128 to +127 range a signed 8-bit value can hold). Finally, some ca65 macros to encapsulate the method.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">; Avoiding overflow flag:<br /><br />; If A &gt;= n, branch to GE, where n &lt; 0<br />   cmp #0 ; can eliminate if you last operation was on A<br />    bpl GE<br />    cmp #n<br />    bcc GE<br />    ...<br /><br />; If A &lt; n, branch to LT, where n &gt;= 0<br />   cmp #0 ; can eliminate if you last operation was on A<br />    bmi LT<br />    cmp #n<br />    bcc LT<br />    ...<br /><br />; Using overflow flag:<br /><br />; If A &gt;= n, branch to GE, where n &lt; 0<br />    sec<br />    sbc #n - -128<br />    bvc GE<br />    ...<br /><br />; If A &lt; n, branch to GE, where n &gt; 0<br />    clc<br />    adc #128 - n<br />    bvs GE<br />    ...<br /><br />; ca65 macros:<br /><br />; If A &gt;= n, branches to label. A and n are 8-bit signed.<br />; Preserved: X, Y<br />.macro scmp_bge n,label<br />    .if &#40;n&#41; &lt; 0<br />        sec<br />        sbc #&#40;n&#41; - -128<br />        bvc label<br />    .elseif &#40;n&#41; = 0<br />        cmp #0<br />        bpl label<br />    .else<br />        clc<br />        adc #128 - &#40;n&#41;<br />        bvs label<br />    .endif<br />.endmacro<br /><br />; If A &lt; n, branches to label. A and n are 8-bit signed.<br />; Preserved: X, Y<br />.macro scmp_blt n,label<br />    .if &#40;n&#41; &lt; 0<br />        sec<br />        sbc #&#40;n&#41; - -128<br />        bvs label<br />    .elseif &#40;n&#41; = 0<br />        cmp #0<br />        bmi label<br />    .else<br />        clc<br />        adc #128 - &#40;n&#41;<br />        bvc label<br />    .endif<br />.endmacro</div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Sat Dec 06, 2008 10:16 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[doynax]]></name></author>
<updated>2008-12-06T10:08:26-07:00</updated>
<published>2008-12-06T10:08:26-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3693&amp;p=40529#p40529</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3693&amp;p=40529#p40529"/>
<title type="html"><![CDATA[Comparison Question]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3693&amp;p=40529#p40529"><![CDATA[
<div class="quotetitle">Celius wrote:</div><div class="quotecontent"><br />Okay, sorry, I found some info with google (I know, I know, just f-ing google it XD). It seems like you could do signed comparisons with BVC and BVS, but another way, though it may be time wasting, is to just convert signed numbers to unsigned numbers to compare them. You can do:<br /><br />lda Num1<br />eor #$80<br />sta TempVar<br />lda Num2<br />eor #$80<br />cmp TempVar<br /><br />It's at least less thinking.<br /></div>Yeah, this works nicely. It's especially fast if you can store one or both of the values in biased form to begin with (such as when comparing to a constant.)<br /><br />Nevertheless the "proper" way to do signed comparisons comes in handy every once in a while. The idea here is to check whether the overflow and sign flags differ from each other or not. Unfortunately the naive implementation through a set of branches results in some rather unmanageable control flow, though it's the fastest way if you can afford to duplicate some code. I was taught to use this cute trick instead:<div class="codetitle"><b>Code:</b></div><div class="codecontent">   lda a<br />   sec<br />   sbc b<br />   bvc *+4<br />   eor #$80<br />   bmi less</div><br />Admittedly I can just barely manage to remember what the carry flag is supposed to mean, so I always end up having to work out just what BMI means but aside from that it's hard to get it wrong. Besides, you could always write it down..<br />By the way, 6502.org has rather nice <a href="http://6502.org/tutorials/compare_beyond.html" class="postlink">tutorial</a> on this and many other details and tricks involving comparisons.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=56">doynax</a> — Sat Dec 06, 2008 10:08 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Celius]]></name></author>
<updated>2008-12-05T23:22:24-07:00</updated>
<published>2008-12-05T23:22:24-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3693&amp;p=40522#p40522</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3693&amp;p=40522#p40522"/>
<title type="html"><![CDATA[Comparison Question]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3693&amp;p=40522#p40522"><![CDATA[
Okay, sorry, I found some info with google (I know, I know, just f-ing google it XD). It seems like you could do signed comparisons with BVC and BVS, but another way, though it may be time wasting, is to just convert signed numbers to unsigned numbers to compare them. You can do:<br /><br />lda Num1<br />eor #$80<br />sta TempVar<br />lda Num2<br />eor #$80<br />cmp TempVar<br /><br />It's at least less thinking.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=138">Celius</a> — Fri Dec 05, 2008 11:22 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2008-12-05T12:19:59-07:00</updated>
<published>2008-12-05T12:19:59-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3693&amp;p=40512#p40512</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3693&amp;p=40512#p40512"/>
<title type="html"><![CDATA[Comparison Question]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3693&amp;p=40512#p40512"><![CDATA[
Heh, now you get to learn the most obscure instructions that test the overflow flag: BVC and BVS. Overflow is the true signed equivalent to the carry flag. Er and you must use ADC or SBC, since only they set/clear the overflow flag based on the result.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Fri Dec 05, 2008 12:19 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Celius]]></name></author>
<updated>2008-12-05T01:49:46-07:00</updated>
<published>2008-12-05T01:49:46-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3693&amp;p=40498#p40498</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3693&amp;p=40498#p40498"/>
<title type="html"><![CDATA[Comparison Question]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3693&amp;p=40498#p40498"><![CDATA[
This is a very old topic, I know. But I have a question that fits the topic, so no need to start a new one.<br /><br />I'm working with comparing two signed numbers now. So I think in order to compare signed numbers to see if one's greater than the other, you'd do:<br /><br />lda A<br />cmp B<br />bpl GreaterThan<br /><br />This seems like it'd work, but it won't work with something like this:<br /><br />lda #$80  (-127)<br />cmp #$20 (32)<br />bpl GreaterThan<br /><br />This branches. Because $80-$20 = $60, in which case bit 7 is not set, the code is allowed to branch. Obviously, -127 is not greater than 32. So is there something I'm missing here? I've never really dealt with signed numbers, but I see that they're really handy so I'll have to learn how to effectively compare them. Thanks in advance.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=138">Celius</a> — Fri Dec 05, 2008 1:49 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2007-11-14T10:40:04-07:00</updated>
<published>2007-11-14T10:40:04-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3693&amp;p=28270#p28270</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3693&amp;p=28270#p28270"/>
<title type="html"><![CDATA[Comparison Question]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3693&amp;p=28270#p28270"><![CDATA[
Signed numbers aren't a headache at all, just compute two's complement (invert all bits and add one, more specifically xor with #$ff and increment if you prefer) and you get the negative number, ranging from -128 to 127 for one single byte. So $ff is -$01, $fe is -$02, etc... $81 is -$7f and $80 is -$80, the smaller number you can represent that way. You can add and substracts numbers without caring with their sign, you won't have problems. In fact yes, if you do something like $7e + $04, you will end up with $82, wich is an overflow since you dont want to have -$7e as a result, so that's why the overflow flag is here. To compare two signed numbers I'm not sure how to do this, but I guess it's not THAT complicated if you carefully read your opcodes's doccumentation carefully.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Wed Nov 14, 2007 10:40 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Celius]]></name></author>
<updated>2007-11-14T10:06:45-07:00</updated>
<published>2007-11-14T10:06:45-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3693&amp;p=28269#p28269</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3693&amp;p=28269#p28269"/>
<title type="html"><![CDATA[Comparison Question]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3693&amp;p=28269#p28269"><![CDATA[
I'm sure that will be fun when I get to it. I've never really dealt with making my own sound engine. I've only tried to do stuff with NSF files, but I can see that being not such a good idea. I'd rather know how my sound engine works, and be able to adjust it when I want. I don't know if I'll be using signed numbers. That sounds like a headache I can do without.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=138">Celius</a> — Wed Nov 14, 2007 10:06 am</p><hr />
]]></content>
</entry>
</feed>