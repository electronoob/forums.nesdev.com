<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Adding a &quot;Sands of Time&quot; feature to an emulator</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Adding a &quot;Sands of Time&quot; feature to an emulator</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=331">http://forums.nesdev.com/viewtopic.php?f=3&amp;t=331</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>3</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Jagasian</b> [ Sun Jun 05, 2005 8:53 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Can you interrupt rewinding to play the "past" forward noninteractively and interactively (rerecord)?  I would love to have a setup with a SNES or PSX L button as rewind, the R button as forward speed throttle.  Can you post binaries or source.  Linux binaries or source if ya got them.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Sun Jun 05, 2005 9:06 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><em>Can you interrupt rewinding to play the "past" forward noninteractively and interactively (rerecord)?</em>
<br />
<br />Not currently, but it's just a matter of implementing it. I'll probably post again if I make it really sleek and flexible, as confirmation that it is all workable in practice. After proving that the basic idea works, I'm confident there are no serious limitations.
<br />
<br /><em>Can you post binaries or source. Linux binaries or source if ya got them.</em>
<br />
<br />Unfortunately it won't be usable to anyone else. It's written for Classic Mac OS based on an old set of libraries I've written over the years. The source is quite messy (very experimental) and it only runs a handful of older games (MMC1 basically). Sorry :(
<br />
<br />When I clean it up I'll post the core backwards/forwards code as a guide for someone else implementing it in their emulator. This should be a breeze to implement in a well-written emulator (including playing audio backwards, heh).
<br />
<br />I was finally able to play through Castlevania without dying or losing the holy water :)   "Oops, just got the knife. Reverse a second. Now don't get it!" etc.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Zepper</b> [ Mon Jun 06, 2005 5:40 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />blargg, what's the impact on emulation speed? You said low CPU % usage but... the own context implies extra work.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Jagasian</b> [ Mon Jun 06, 2005 11:14 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Sound backwards?  I was doubtful that it would be easy enough to do that.  Smooth 60FPS backwards video and sound would be a trip to see and hear in game.  If you can post a concise writeup of how to implement it, I could really see it becoming the new hot emulator feature... possibly even for SNES emulators.
<br />
<br />To keep things simple, it is probably best to <strong>not</strong> have non-interactive forward playback.  Its only use would be to correct for over-rewinding.  If things rewound at half-speed slow-motion, over-rewinding wouldn't be a problem.  So, I think the best interface for the final polished implementation would just be one button, that when held rewinds at half-speed and when released, interrupts the rewind, returning gameplay to normal forward interactive mode.  Hence there are only two modes of gameplay...
<br />
<br />1. forward: full speed, interactive, interruptable on SoT-button press
<br />2. rewind: half speed, noninteractive, interruptable on SoT-button release
<br />
<br />...where as the previous ideas involved a third gameplay mode to correct to correct for over-rewinding.  So yeah, scratch the idea about that third, forward mode of noninteractive, interruptable on action button press.  It makes things too complicated from a user-interface point of view.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Mon Jun 06, 2005 1:06 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I definitely plan on writing a tutorial on implementing this in an emulator, since I'd like to see this feature adopted. Your focus on user-interface is good, because a refined minimal user-interface can make a big difference in its use. That's something useful I can do with my emulator.
<br />
<br />Playing audio backwards might be a little tricky regarding seamless transition between each separately-emulated second (or whatever the snapshot interval is). I haven't implemented backwards audio yet. If I do I'll try putting a short fade at the transitions, which shouldn't be too audible since backwards audio will sound quite odd anyway.
<br />
<br />I'll try again at summarizing it.
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">Emulator is running normally. When joypad read occurs, add byte to history buffer. Every second, take snapshot of emulator state and current position in history buffer.<br /><br />&nbsp; 1&nbsp; &nbsp; &nbsp;2&nbsp; &nbsp; &nbsp;3&nbsp; &nbsp; &nbsp;4&nbsp; &nbsp; &nbsp;5&nbsp; &nbsp; &nbsp;snapshots<br />-----------------------------&nbsp; &nbsp;joypad history <br /><br /><br />Emulator switches to reverse mode. For simplicity, assume this occurs just before the next snapshot.<br /><br />&nbsp; 1&nbsp; &nbsp; &nbsp;2&nbsp; &nbsp; &nbsp;3&nbsp; &nbsp; &nbsp;4&nbsp; &nbsp; &nbsp;5&nbsp; &nbsp;rewind initiated<br />------------------------------&lt;<br /><br />Restore snapshot 5 and replay joypad input from history buffer, generating 60 frames into an image buffer without displaying anything on screen:<br /><br />5&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;snapshots<br />-----------------&nbsp; &nbsp;joypad history <br />0 1 2 3 ... 58 59&nbsp; &nbsp;image buffer<br /><br />Now you have 60 completely rendered graphic frames of the last second.<br /><br />Restore snapshot 4 and set joypad replay to corresponding position in history buffer. Display frame 59 on screen then emulate frame 0 into the image buffer:<br /><br />4&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;5&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;snapshots<br />-----------------------------------&nbsp; &nbsp;joypad history <br />0 1 2 3 ... 58 59 0 1 2 3 ... 58 59&nbsp; &nbsp;image buffer<br />^&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;^<br />emulated frame 0&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;displayed frame 59<br /><br />Then display frame 58 and emulate next frame &#40;1&#41;:<br /><br />4&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;5&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;snapshots<br />-----------------------------------&nbsp; &nbsp;joypad history <br />0 1 2 3 ... 58 59 0 1 2 3 ... 58 59&nbsp; &nbsp;image buffer<br />&nbsp; ^&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;^<br />emulated frame 1&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;displayed frame 58<br /><br />Eventually frame 0 from the next snapshot will be displayed and frame 59 from the previous snapshot will have been emulated, just in time to be displayed next:<br /><br />4&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;5&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;snapshots<br />-----------------------------------&nbsp; &nbsp;joypad history <br />0 1 2 3 ... 58 59 0 1 2 3 ... 58 59&nbsp; &nbsp;image buffer<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;^&nbsp; ^<br />emulated frame 59 displayed frame 0<br /></div>
<br />
<br />At this point the process repeats. Restore snapshot 3 and joypad history position, display frame 59, emulate frame 0.
<br />
<br />The image buffer only needs to hold 60 images. In the above example, the emulated frame 0 is placed where the just-displayed frame 59 was, frame 1 where 58 was, etc. Then for the next snapshot, the image buffer is run through in the opposite direction.
<br />
<br />As you can see, for each frame displayed, only one frame is being emulated, and state is only being restored every 60 frames, so CPU usage is similar to that of normal emulation. I just profiled it on my 400 MHz G3 PowerMac and normal emulation uses 39% CPU, backwards 43% CPU. Double-speed uses 45% for forward, 53% for backwards. Running everything (including PPU emulation and rendering) but not copying it to the video display, I get 8% CPU for forwards, 11% for backwards.
<br />
<br />If sound were emulated backwards, it would be totally cool to have it slow down to a rumbling crawl before changing directions, like in The Matrix. That would actually be useful so you could get ready to continue playing.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Mon Jun 06, 2005 1:12 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Couldn't you apply the same logic to reverse audio?  As long as you're rendering 60 frames, couldn't you just render 44100 or whatever samples and play them in reverse?  Wouldn't be very slow at all, wouldn't use much memory, and would perform the desired effect.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Mon Jun 06, 2005 3:13 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yep, audio is easy; I just implemented it and it works well. Along with each frame image you also store whatever samples were generated during emulation of that frame. Then when displaying that frame later, play the samples in reverse. Fade in the first sample buffer just after restoring the state, and fade out the last frame just before restoring the previous second's state.
<br />
<br />I also implemented the Matrix-like slowdown and speed up when changing directions. It's totally cool and really helps when picking up play while it's rewinding. I am able to pick up jumps in Mario after rewinding just a fraction of a second before landing on a platform. It is totally seamless changing directions, and you can change back and forth at any time, replaying the same moves over and over. I can't make a video but here's the audio which is kind of fun:
<br />
<br /><a href="http://www.io.com/~greens/temp/smb_matrix.mp3" class="postlink">smb_matrix.mp3</a>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Jagasian</b> [ Mon Jun 06, 2005 6:11 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">blargg wrote:</div><div class="quotecontent">Yep, audio is easy; I just implemented it and it works well. Along with each frame image you also store whatever samples were generated during emulation of that frame. Then when displaying that frame later, play the samples in reverse. Fade in the first sample buffer just after restoring the state, and fade out the last frame just before restoring the previous second's state.<br /><br />I also implemented the Matrix-like slowdown and speed up when changing directions. It's totally cool and really helps when picking up play while it's rewinding. I am able to pick up jumps in Mario after rewinding just a fraction of a second before landing on a platform. It is totally seamless changing directions, and you can change back and forth at any time, replaying the same moves over and over. I can't make a video but here's the audio which is kind of fun:<br /><br /><a href="http://www.io.com/~greens/temp/smb_matrix.mp3" class="postlink">smb_matrix.mp3</a></div>
<br />
<br />blargg you are awesome!  That mp3 sells it.  Real-time rewind isn't just useful gameplay-wise, it is freakin cool looking and cool sounding <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />
<br />
<br />PoP:SoT does the "Matrix" slow down during transition, but they don't do reverse audio, which after listening to the mp3 is a must!  This is so fricking cool!  You said you can't get video, but if you could find a way to get some video of it, with audio, that alone would sell the feature to emulation authors <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />  Prince of Persia doesn't do reverse audio because its implementation is most likely very high-level.  Doing rewind at a lower-level apparently gives more results for "free".
<br />
<br />I forgot to ask.  Is there a noticable delay for the first 60 frames to queue up?  Once that buffer is created, I realize that it would be basically as fast as doing normal forward emulation, but while it is buffering in the very beginning, on slower computers, there would be a very small delay, of at most 1 second, right?  If 60 frames are going to be in memory at a time during rewind, why not just keep the 60 most recent frames in memory during forward play, to eliminate possible buffering delay?
<br />
<br />Also, what does memory consumption look like?  CPU overhead looks very small, of course it would be worse for the ultra-accurate emulators such as Nintendulator, but I think you have proven that CPU overhead is not a worry.
<br />
<br />...well, I am going to listen to that mp3 one more time, as the reverse audio addition has really got me pumped  <img src="./images/smilies/icon_eek.gif" alt=":shock:" title="Shocked" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Tue Jun 07, 2005 2:20 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><em>I forgot to ask. Is there a noticable delay for the first 60 frames to queue up? Once that buffer is created, I realize that it would be basically as fast as doing normal forward emulation, but while it is buffering in the very beginning, on slower computers, there would be a very small delay, of at most 1 second, right?</em>
<br />
<br />It would have to be less, since at worst it's doing one second of emulation without having to play the audio or display the graphics (no pixel doubling, slower video memory, etc.)
<br />
<br />If I disable the Matrix-style slowdown when changing directions, I notice a very slight pause when going into reverse, on the order of 1/8 second or so. With the Matrix-style slowdown enabled, it's slowed down to near zero when changing directions, thus the pause isn't noticeable.
<br />
<br /><em>If 60 frames are going to be in memory at a time during rewind, why not just keep the 60 most recent frames in memory during forward play, to eliminate possible buffering delay?</em>
<br />
<br />Right, that's the general idea I have (but haven't worked out completely). Consider going into reverse in the middle of a second. The 60-frame buffer would have frames 0 to 29 from the current second, then 30 to 59 from the previous second. Display frame 29, restore snapshot from previous second and generate frame 0 from the previous second in its place ... display frame 0 from the current second, generate frame 29 from the previous second. At this point the buffer has the complete previous second, in the order 29, 28 ... 1, 0, 30, 31 ... 59. Now restore the snapshot from two seconds ago and go from there normally.
<br />
<br />This is more complex because the image buffer isn't arranged neatly. This could be solved by adding a simple image allocation layer that knows where particular frames are stored (like a file system on a disk). It gets more complex when changing back to forward before reverse has run for very long. I'll have to work out the details. I might find a way to handle this concisely and simply. It will be nice and elegant if I do.
<br />
<br />If this overhead when going into reverse can't be removed, it can at least be reduced by using a smaller image buffer, say 30 frames. 
<br />
<br /><em>Also, what does memory consumption look like? CPU overhead looks very small, of course it would be worse for the ultra-accurate emulators such as Nintendulator, but I think you have proven that CPU overhead is not a worry.</em>
<br />
<br />I render graphics to an "offscreen" 8-bit work area, then copy that to the screen and double the pixels. If an emulator uses an 8-bit work area, then at most a frame uses 64K memory (assuming 256x256 area), or about 3.75MB for the fixed 60 frame buffer. The state snapshots are around 8K each, or about 480K per minute. At worst, the joypad history is 3600 bytes per minute. Being able to rewind the last minute is plenty.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>hap</b> [ Tue Jun 07, 2005 5:05 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I've implemented this feature in an emulator of mine, not NES though. And I must say that the result is indeed awesome. Before implementing it, I thought it would be an unnecessary feature, but I've changed my mind now. It's very handy (and cool ;p ) to use it, especially in action games where you'd savestate every 10 seconds instead. I died/got hit ? oh, I'll just rewind 2 seconds and retry.
<br />
<br />If you're hesistating to implement this, just create a test version of this feature first. It'll just take a few minutes.
<br />
<br />something like this (psuedocode, only rewind, no playback):
<br />
<br />BYTE* rs[1000]; // lots of savestates
<br />int r=0; // rewind location
<br />newframe();
<br />if (readkeys()==rewindkey) loadstate(rs[r--]);
<br />else savestate(rs[r++]);
<br />r&lt;0?:r=999.. r&gt;999?:r=0

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Jagasian</b> [ Tue Jun 07, 2005 8:04 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I put in a feature request for real-time rewind (we should probably drop the copyrighted name) at the Nintencer forums.  Nintencer is the sucessor to FCE Ultra:
<br /><!-- m --><a class="postlink" href="http://nintencer.fobby.net/">http://nintencer.fobby.net/</a><!-- m -->
<br />
<br />... the author seems to be interested to give it a try.  As far as accuracy and game compatibility go, the FCE Ultra lineage is pretty high up there.  I would even say up in the top 3, but I am sure those more in the know will correct me on that.  It is also one of the most portable NES emulators, and has had ports in the past to: DOS, Windows, Linux, various BSDs, Mac OSX, Solaris, and even the Xbox.  Though currently Nintencer only officially supports Linux and Windows.  It may still compile for other platforms.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Tue Jun 07, 2005 8:26 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />A little anecdote.  I remember playing FF3j translated on an emulator years ago (probably in NESticle), saving my game with a savestate.  One time I saved it when walking around, right before getting into an unwinnable battle.  D'oh!  Since I never saved using the game's interface, losing the battle meant all my progress was gone.  For times like that a rewind feature would've been really nice.  But I was more careful about when I saved states in any games after that, heheh.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Jagasian</b> [ Tue Jun 07, 2005 8:46 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Memblers wrote:</div><div class="quotecontent">A little anecdote.  I remember playing FF3j translated on an emulator years ago (probably in NESticle), saving my game with a savestate.  One time I saved it when walking around, right before getting into an unwinnable battle.  D'oh!  Since I never saved using the game's interface, losing the battle meant all my progress was gone.  For times like that a rewind feature would've been really nice.  But I was more careful about when I saved states in any games after that, heheh.</div>
<br />
<br />Slower paced games will require a larger rewind window, but according to blargg's benchmarks, a 1 minute rewind window is feasible memory and CPU-wise.  That should be far more than enough for any action game.  However, I think that some Final Fantasy battles can last longer than 1 minute.  So that could be a problem.  However, if real-time saves keep the rewind time window with the save, then your situation would have been fix-able as you would load the save which is right at the start of the battle and try to win the battle again, rinse and repeat a few times until you realize that it is un-winnable.  So then you load the save one last time but then rewind right after loading it, just enough to avoid the battle.
<br />
<br />Hence we have a perfect example of the power of real-time saving and real-time rewinding used together.  You no longer have to worry about quick-saving yourself into a corner.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Tue Jun 07, 2005 8:58 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Jagasian wrote:</div><div class="quotecontent">So then you load the save one last time but then rewind right after loading it, just enough to avoid the battle.</div>
<br />
<br />That wouldn't work.  There would be nothing to rewind to.  Once you play forward from that savestate, the 'rewind window' as you called it gets filled with data <strong>after</strong> the savestate.  Loading a state will not allow you to rewind any further back from the time of the state -- not unless you do something crazy like actually save 61 states with the savestate (to re-create the rewind window on state load)
<br />
<br />
<br />I really think such a feature would work well with user customizable savestate benchmarks, and length of the time to save.  This way a user would be able to extend the savestate window past 1 minute if they're willing to cough up the extra needed RAM -- and other users could keep the window smaller (or disable it completely) if they don't have the RAM/CPU to spare.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Jagasian</b> [ Tue Jun 07, 2005 11:16 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Disch wrote:</div><div class="quotecontent"><div class="quotetitle">Jagasian wrote:</div><div class="quotecontent">So then you load the save one last time but then rewind right after loading it, just enough to avoid the battle.</div><br /><br />That wouldn't work.  There would be nothing to rewind to.  Once you play forward from that savestate, the 'rewind window' as you called it gets filled with data <strong>after</strong> the savestate.  Loading a state will not allow you to rewind any further back from the time of the state -- not unless you do something crazy like actually save 61 states with the savestate (to re-create the rewind window on state load)<br /></div><br /><br />Well, save stating could be implemented by writing the state at the beginning of the rewind window and all of the user data after that up until the current state.  The total size of that would be very small, basically the size of a state plus a movie.  On load, this could be converted back into the format needed for real-time rewind and the emulator could also recreate the final state in the time window so that emulation could start where the gamer left off.  This way a copy of the rewind window, at the moment at which the save state button was pressed, is written to disk, but it is done in a way that doesn't waste disk space.<br /><br /><div class="quotetitle">Disch wrote:</div><div class="quotecontent">I really think such a feature would work well with user customizable savestate benchmarks, and length of the time to save.  This way a user would be able to extend the savestate window past 1 minute if they're willing to cough up the extra needed RAM -- and other users could keep the window smaller (or disable it completely) if they don't have the RAM/CPU to spare.<br /></div>
<br />
<br />Yeah, definitely make it configurable so the spoiled sports emulating the NES with a 3Ghz CPU / 2GB RAM power house can crank the rewind window to an hour <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />  Of course variable speed rewind will be needed then as rewinding through an hour of history, even at normal speed, would be a lesson in patience.  For really long rewind windows, it would become worthwhile  to use blargg's more complicated algorithm that keeps older snapshots with less frequency.  This would put memory overhead close to that required for movies.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>3</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>