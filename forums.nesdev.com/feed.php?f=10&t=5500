<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=10&amp;t=5500" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2017-07-12T23:28:12-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=10&amp;t=5500</id>
<entry>
<author><name><![CDATA[na_th_an]]></name></author>
<updated>2017-07-12T23:28:12-07:00</updated>
<published>2017-07-12T23:28:12-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5500&amp;p=200104#p200104</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5500&amp;p=200104#p200104"/>
<title type="html"><![CDATA[Re: ways to measure frame/cpu usage]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5500&amp;p=200104#p200104"><![CDATA[
Gosh, it seems that I reinvented the wheel once again <img src="http://forums.nesdev.com/images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />  <img src="http://forums.nesdev.com/images/smilies/icon_lol.gif" alt=":lol:" title="Laughing" />  <img src="http://forums.nesdev.com/images/smilies/icon_lol.gif" alt=":lol:" title="Laughing" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6012">na_th_an</a> — Wed Jul 12, 2017 11:28 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2017-07-12T10:45:37-07:00</updated>
<published>2017-07-12T10:45:37-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5500&amp;p=200061#p200061</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5500&amp;p=200061#p200061"/>
<title type="html"><![CDATA[Re: ways to measure frame/cpu usage]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5500&amp;p=200061#p200061"><![CDATA[
Doesn't sound so different from the technique discussed <a href="http://forums.nesdev.com/viewtopic.php?f=22&amp;t=12538&amp;start=45#p144909" class="postlink">here</a>, which is very similar to how many Capcom NES games handled scrolling.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Wed Jul 12, 2017 10:45 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[GradualGames]]></name></author>
<updated>2017-07-12T10:27:46-07:00</updated>
<published>2017-07-12T10:27:46-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5500&amp;p=200060#p200060</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5500&amp;p=200060#p200060"/>
<title type="html"><![CDATA[Re: ways to measure frame/cpu usage]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5500&amp;p=200060#p200060"><![CDATA[
<div class="quotetitle">na_th_an wrote:</div><div class="quotecontent"><br />For two way horizontal scrollers, I take advantage in the fact that the &quot;virtual&quot; screen, when using vertical mirroring, is so wide (twice as big as the visible area). On initialization, I draw well past the boundaries of the viewport, at least two extra columns left and two extra columns right.<br /><br />My game &quot;Cheril the Goddess&quot; draws 32 pixel wide columns, split across several frames. It draws new data to the left or right of the viewport depending on the direction of the scrolling. When the player switches direction, the column being currently updated is abandoned as it is, and the scroller begins rendering the new column. As the drawing happens well far ahead the viewport boundaries, there's no visible glitches. By the time a column has to enter the visible screen, it is always completely rendered. <br /><br />If you watch the nametables in fceux you can see this in action.<br /></div><br /><br />Neat idea...are all of your column decode routines still in C? Man, this is such a cool idea to draw far past the edge of the screen, that way you could maybe even turn a column decoder into a coroutine and arbitrarily pause the operation when it's *just* fast enough to beat the scrolling speed, or something. Not sure if I'm going to bother adding that complexity to my own engine but its fun to think about.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3735">GradualGames</a> — Wed Jul 12, 2017 10:27 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[na_th_an]]></name></author>
<updated>2017-07-12T02:32:00-07:00</updated>
<published>2017-07-12T02:32:00-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5500&amp;p=200039#p200039</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5500&amp;p=200039#p200039"/>
<title type="html"><![CDATA[Re: ways to measure frame/cpu usage]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5500&amp;p=200039#p200039"><![CDATA[
For two way horizontal scrollers, I take advantage in the fact that the &quot;virtual&quot; screen, when using vertical mirroring, is so wide (twice as big as the visible area). On initialization, I draw well past the boundaries of the viewport, at least two extra columns left and two extra columns right.<br /><br />My game &quot;Cheril the Goddess&quot; draws 32 pixel wide columns, split across several frames. It draws new data to the left or right of the viewport depending on the direction of the scrolling. When the player switches direction, the column being currently updated is abandoned as it is, and the scroller begins rendering the new column. As the drawing happens well far ahead the viewport boundaries, there's no visible glitches. By the time a column has to enter the visible screen, it is always completely rendered. <br /><br />If you watch the nametables in fceux you can see this in action.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6012">na_th_an</a> — Wed Jul 12, 2017 2:32 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[GradualGames]]></name></author>
<updated>2017-07-10T11:40:12-07:00</updated>
<published>2017-07-10T11:40:12-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5500&amp;p=199936#p199936</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5500&amp;p=199936#p199936"/>
<title type="html"><![CDATA[Re: ways to measure frame/cpu usage]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5500&amp;p=199936#p199936"><![CDATA[
<div class="quotetitle">na_th_an wrote:</div><div class="quotecontent"><br />It's more splitting the scrolling routine across several frames.<br /><br />For example, I have a side scrolling game which uses 32x32 metatiles. The scrolling area is 6 metatiles high. The scrolling routine is the split accross four frames: first frame I decode the map data to a buffer, extracting the 6 metatile indexes, reading the attribute bytes from a LUT indexed by metatile index, and putting them into VRAM. frames 2, 3 and 4 I draw two metatiles each. This means that once a new backdround column is needed, the engine takes 4 frames to draw it. <br /><br />Doing it that way, the routine is so light that I can place it before the sprite 0 hit I use for the screen split. As scrolling speed is never &gt; 8 (not even &gt; 4) pixels per frame, and I'm using vertical mirroring, by the time the new column enters the screen and is visible it is 100% drawn.<br /><br />Depending on the game, the scrolling direction(s), the metatile size, etc. I use several approaches but, in the end, I always split the action accross several frames. Time is tight. I could do all the scrolling in 1 frame, but that frame would have a sudden CPU peak.<br /><br />As for developing in C, I guess it has to do with your mindset or maybe with what you are used to. You can get pretty low level in C, which is also a plus, and you can always rewrite a couple of routines in assembly if you need <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /> My games are not very complex. At the end of the day, it is whatever floats your boat, or whatever makes the experience more enjoyable for you <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /></div><br /><br />That's actually a really neat idea of spreading out the processing, since you'd only need it every 8 pixels or so. I suppose if one allows the scrolling speed to increase beyond a certain amount suddenly you'd have to do all the calculations once per frame anyway though.<br /><br />What if you reverse directions suddenly though? Does your engine &quot;hurry up&quot; and do all the calculation needed for a column all in one frame, if required?<br /><br />Funny thing about me and C on NES is, I love high level languages, love coding in them. But on NES, C just feels way too bloated and slow. I'm sure I'm ultimately wrong though, I mean there are plenty of great games being made in it! I just don't have the desire to get used to it I guess. I have a set of macros that get me past the most repetitive/confusing aspects of daily 6502 coding.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3735">GradualGames</a> — Mon Jul 10, 2017 11:40 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[na_th_an]]></name></author>
<updated>2017-07-10T02:07:47-07:00</updated>
<published>2017-07-10T02:07:47-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5500&amp;p=199911#p199911</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5500&amp;p=199911#p199911"/>
<title type="html"><![CDATA[Re: ways to measure frame/cpu usage]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5500&amp;p=199911#p199911"><![CDATA[
It's more splitting the scrolling routine across several frames.<br /><br />For example, I have a side scrolling game which uses 32x32 metatiles. The scrolling area is 6 metatiles high. The scrolling routine is the split accross four frames: first frame I decode the map data to a buffer, extracting the 6 metatile indexes, reading the attribute bytes from a LUT indexed by metatile index, and putting them into VRAM. frames 2, 3 and 4 I draw two metatiles each. This means that once a new backdround column is needed, the engine takes 4 frames to draw it. <br /><br />Doing it that way, the routine is so light that I can place it before the sprite 0 hit I use for the screen split. As scrolling speed is never &gt; 8 (not even &gt; 4) pixels per frame, and I'm using vertical mirroring, by the time the new column enters the screen and is visible it is 100% drawn.<br /><br />Depending on the game, the scrolling direction(s), the metatile size, etc. I use several approaches but, in the end, I always split the action accross several frames. Time is tight. I could do all the scrolling in 1 frame, but that frame would have a sudden CPU peak.<br /><br />As for developing in C, I guess it has to do with your mindset or maybe with what you are used to. You can get pretty low level in C, which is also a plus, and you can always rewrite a couple of routines in assembly if you need <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /> My games are not very complex. At the end of the day, it is whatever floats your boat, or whatever makes the experience more enjoyable for you <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6012">na_th_an</a> — Mon Jul 10, 2017 2:07 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[GradualGames]]></name></author>
<updated>2017-07-07T12:49:06-07:00</updated>
<published>2017-07-07T12:49:06-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5500&amp;p=199730#p199730</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5500&amp;p=199730#p199730"/>
<title type="html"><![CDATA[Re: ways to measure frame/cpu usage]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5500&amp;p=199730#p199730"><![CDATA[
<div class="quotetitle">na_th_an wrote:</div><div class="quotecontent"><br />I use the grayscale bit, it gives me an idea. It's also good for noticing that there's a rogue over-busy frame (my scrollers in C are &quot;multiplexed&quot; across several frames and this helps me balance the load better).<br /></div><br /><br />Do you mean you update entities/objects on one frame and update the scrolling on another frame or something else? So far I do everything every frame...I still code in 6502 though...I can't believe you and others are making games in C. I tried it for a few months and...it's really not for me, holy cow. Lol. I think it takes me more time to work through issues from C than just coding in 6502. That's not in any way a slam on C, I'm just impressed anybody does it is all!<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3735">GradualGames</a> — Fri Jul 07, 2017 12:49 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[GradualGames]]></name></author>
<updated>2017-07-07T12:47:31-07:00</updated>
<published>2017-07-07T12:47:31-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5500&amp;p=199729#p199729</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5500&amp;p=199729#p199729"/>
<title type="html"><![CDATA[Re: ways to measure frame/cpu usage]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5500&amp;p=199729#p199729"><![CDATA[
Not every day one finds a post from 8 years ago bumped, lol. I'm still using the monochrome bit trick even today <img src="http://forums.nesdev.com/images/smilies/icon_wink.gif" alt=";)" title="Wink" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3735">GradualGames</a> — Fri Jul 07, 2017 12:47 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[pubby]]></name></author>
<updated>2017-07-04T20:42:11-07:00</updated>
<published>2017-07-04T20:42:11-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5500&amp;p=199591#p199591</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5500&amp;p=199591#p199591"/>
<title type="html"><![CDATA[Re: ways to measure frame/cpu usage]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5500&amp;p=199591#p199591"><![CDATA[
FCEUX's debugger shows the cycles elapsed between breakpoints. This is what I used to make my constant-cycle music engine.<br /><br />The greyscale trick is useful, too.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7486">pubby</a> — Tue Jul 04, 2017 8:42 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[na_th_an]]></name></author>
<updated>2017-07-03T05:49:16-07:00</updated>
<published>2017-07-03T05:49:16-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5500&amp;p=199518#p199518</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5500&amp;p=199518#p199518"/>
<title type="html"><![CDATA[Re: ways to measure frame/cpu usage]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5500&amp;p=199518#p199518"><![CDATA[
I use the grayscale bit, it gives me an idea. It's also good for noticing that there's a rogue over-busy frame (my scrollers in C are &quot;multiplexed&quot; across several frames and this helps me balance the load better).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6012">na_th_an</a> — Mon Jul 03, 2017 5:49 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[rychan]]></name></author>
<updated>2017-06-29T01:08:12-07:00</updated>
<published>2017-06-29T01:08:12-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5500&amp;p=199252#p199252</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5500&amp;p=199252#p199252"/>
<title type="html"><![CDATA[Re: ways to measure frame/cpu usage]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5500&amp;p=199252#p199252"><![CDATA[
I have to try this out tonight! I miss the CPU meter that I relied upon in BGB for Gameboy Development so any way to visualise it is great!<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=8549">rychan</a> — Thu Jun 29, 2017 1:08 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[GradualGames]]></name></author>
<updated>2009-10-17T15:01:52-07:00</updated>
<published>2009-10-17T15:01:52-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5500&amp;p=51493#p51493</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5500&amp;p=51493#p51493"/>
<title type="html"><![CDATA[JNes choking on monochrome bit trick]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5500&amp;p=51493#p51493"><![CDATA[
<div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><br /><div class="quotetitle">Dwedit wrote:</div><div class="quotecontent">Turn on Monochrome or Color Emphasis and count the number of remaining scanlines.<br /></div><br />That's what I usually do. I Print Screen, paste it in MS Paint, use the selection tool to count the scanlines and multiply by 341 then divide by 3 in order to know how many cycles I have left.<br /><br />I'm hardly interested in an exact number though, I mostly use the monochrome bit to time individual tasks and optimize them as much as possible.</div><br /><br />I finally got around to using the monochrome bit trick to measure my CPU usage during a frame. It works great on Nestopia, Nintendulator, and FCEUXDSP. But it seems to choke JNes a little bit and cause it to stutter. This doesn't worry me too much since I know JNes to be a bit inaccurate compared to others, but I wondered if anyone else has experienced that. The trick reveals I'm using about a third of my available time during a frame, so I don't think it would be a difference in execution time between emulators.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3735">GradualGames</a> — Sat Oct 17, 2009 3:01 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2009-08-15T17:13:57-07:00</updated>
<published>2009-08-15T17:13:57-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5500&amp;p=49881#p49881</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5500&amp;p=49881#p49881"/>
<title type="html"><![CDATA[ways to measure frame/cpu usage]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5500&amp;p=49881#p49881"><![CDATA[
<div class="quotetitle">Dwedit wrote:</div><div class="quotecontent"><br />Turn on Monochrome or Color Emphasis and count the number of remaining scanlines.<br /></div><br />That's what I usually do. I Print Screen, paste it in MS Paint, use the selection tool to count the scanlines and multiply by 341 then divide by 3 in order to know how many cycles I have left.<br /><br />I'm hardly interested in an exact number though, I mostly use the monochrome bit to time individual tasks and optimize them as much as possible.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Sat Aug 15, 2009 5:13 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Dwedit]]></name></author>
<updated>2009-08-15T07:14:54-07:00</updated>
<published>2009-08-15T07:14:54-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5500&amp;p=49860#p49860</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5500&amp;p=49860#p49860"/>
<title type="html"><![CDATA[ways to measure frame/cpu usage]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5500&amp;p=49860#p49860"><![CDATA[
You could use an .org directive to force your delay loop to start at a page aligned boundary.  I know in TASM, the syntax is " .org ($ + $FF) &amp; $FF00" to move the origin ahead to the next 256 byte page.  Or you could put it at the beginning.<br /><br />Of course, there's also the alternative: Turn on Monochrome or Color Emphasis and count the number of remaining scanlines.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=53">Dwedit</a> — Sat Aug 15, 2009 7:14 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[GradualGames]]></name></author>
<updated>2009-10-17T14:59:50-07:00</updated>
<published>2009-08-15T04:56:53-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5500&amp;p=49855#p49855</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5500&amp;p=49855#p49855"/>
<title type="html"><![CDATA[ways to measure frame/cpu usage]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5500&amp;p=49855#p49855"><![CDATA[
A technique I have been using to determine how many cycles I have "left" in my main game loop is to program a nested loop with x and y, and make it long enough that it slows down my frame rate, then decreasing it gradually until the framerate is normal again. Here is my loop with some hardcoded values:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">;the following loops are used to measure how much time we have left in the main loop.<br />  ldy #17      ;2<br />:<br />  ldx #$ff      ;2<br />:<br />  dex           ;2 * 255<br />  bne :-         ;3 * 254 &#40;taken&#41; + 2 &#40;not taken&#41;<br />  <br />  dey           ;2 * 17<br />  bne :--        ;3 * 16 &#40;taken&#41; + 2 &#40;not taken&#41;</div><br /><br />Then the actual # of cycles this would take would be:<br /><br />xLoopCycles = 2 + 2*255 + 3*254 + 2 = 1276<br />y loop cycles = 17 * xLoopCycles + 2 + 2*17 + 3*16 + 2<br /><br />total:  21778<br /><br />Does this look right? I guess there's a possibility my branches are crossing a page boundary---how would I determine if this is the case? I suppose looking at a listing of my code?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3735">GradualGames</a> — Sat Aug 15, 2009 4:56 am</p><hr />
]]></content>
</entry>
</feed>