<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=9&amp;t=8921" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2014-09-21T11:08:22-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=9&amp;t=8921</id>
<entry>
<author><name><![CDATA[lidnariq]]></name></author>
<updated>2014-09-21T11:08:22-07:00</updated>
<published>2014-09-21T11:08:22-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8921&amp;p=134138#p134138</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8921&amp;p=134138#p134138"/>
<title type="html"><![CDATA[Re: NROM larger than 32K?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8921&amp;p=134138#p134138"><![CDATA[
No, FCEUX didn't add NROM368 support. IIRC, Shiru and I just both established that was easy and did it to our own local copies. (my patch had too much code duplication to be comfortable submitting it)<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3512">lidnariq</a> — Sun Sep 21, 2014 11:08 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[alphamule]]></name></author>
<updated>2014-09-21T06:09:04-07:00</updated>
<published>2014-09-21T06:09:04-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8921&amp;p=134129#p134129</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8921&amp;p=134129#p134129"/>
<title type="html"><![CDATA[Re: NROM larger than 32K?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8921&amp;p=134129#p134129"><![CDATA[
I tried &quot;alterego-nrom368.nes&quot; and it doesn't seem to work in FCEUX 2.2.2.  I thought support was added?  Of course trying it in Nintendulator gave a bunch of 'illegal opcodes' after clicking 'run' (it paused itself for a reason, hehe).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6660">alphamule</a> — Sun Sep 21, 2014 6:09 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[etabeta]]></name></author>
<updated>2014-02-01T01:13:12-07:00</updated>
<published>2014-02-01T01:13:12-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8921&amp;p=124814#p124814</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8921&amp;p=124814#p124814"/>
<title type="html"><![CDATA[Re: NROM larger than 32K?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8921&amp;p=124814#p124814"><![CDATA[
sorry for the further necro-bump, but I wanted to let you know that MESS now supports NROM368 extension, in case you want to use the MAME debugger to develop new software for this<br /><br /><img src="http://mamedev.emulab.it/etabeta/fast/files/0000_658952012.png" alt="Image" /> <img src="http://mamedev.emulab.it/etabeta/fast/files/0001_964296677.png" alt="Image" /><br /><img src="http://mamedev.emulab.it/etabeta/fast/files/0002_133615816.png" alt="Image" /> <img src="http://mamedev.emulab.it/etabeta/fast/files/0003_302592714.png" alt="Image" /><br /><br />at the moment, I haven't added support for the CNROM/CPROM extension, but if you have any software for that just point me to that and I will add it <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=1627">etabeta</a> — Sat Feb 01, 2014 1:13 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[yogi]]></name></author>
<updated>2013-11-21T14:20:25-07:00</updated>
<published>2013-11-21T14:20:25-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8921&amp;p=121241#p121241</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8921&amp;p=121241#p121241"/>
<title type="html"><![CDATA[Re: NROM larger than 32K?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8921&amp;p=121241#p121241"><![CDATA[
<div class="quotetitle">qbradq wrote:</div><div class="quotecontent"><br />Yogi,<br /><br />This community loves to necro-bump. This thread was last posted to like two weeks ago <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /> Interestingly enough, this technique is coming back in the FPGA world for complex address decoding thanks to having LUTs everywhere.<br /></div><br />Haha, yea I suffer from 'ol' fart' flashbacks every now and then <img src="http://forums.nesdev.com/images/smilies/icon_wink.gif" alt=";)" title="Wink" />  It's bad when I'm reading posts like this one, that cover a lot of ground.<br />Yogi<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6258">yogi</a> — Thu Nov 21, 2013 2:20 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[qbradq]]></name></author>
<updated>2013-11-21T13:16:55-07:00</updated>
<published>2013-11-21T13:16:55-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8921&amp;p=121238#p121238</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8921&amp;p=121238#p121238"/>
<title type="html"><![CDATA[Re: NROM larger than 32K?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8921&amp;p=121238#p121238"><![CDATA[
Yogi,<br /><br />This community loves to necro-bump. This thread was last posted to like two weeks ago <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /> Interestingly enough, this technique is coming back in the FPGA world for complex address decoding thanks to having LUTs everywhere.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3706">qbradq</a> — Thu Nov 21, 2013 1:16 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[yogi]]></name></author>
<updated>2013-11-21T10:20:19-07:00</updated>
<published>2013-11-21T10:20:19-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8921&amp;p=121234#p121234</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8921&amp;p=121234#p121234"/>
<title type="html"><![CDATA[Re:]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8921&amp;p=121234#p121234"><![CDATA[
<div class="quotetitle">Shiru wrote:</div><div class="quotecontent"><br />No logic would be required, just three ROMs - PRG, CHR, and the extra ROM. The extra ROM would be basically 9th bit ('enable') for every byte of PRG, like D0 of the extra ROM connected to OE or CS of the PRG ROM.<br /><br />Actually, it starts to look not that impractical, because price of the ROM chip is comparable with a CPLD, but you don't need extra tools to program that ROM, unlike CPLD.<br /></div><br />OK before I'm engulfed in flames for necro'ing this post, Shiru is talking about a simple FSM; which was used before the widespread use of PLAs. I have seem designs from the '70 to decode complex switch panels as well as generating unique logic sums with PROMs. <br />The ADR lines are used as logic inputs and the DATA lines are the logic sum, depending on the stored values. Very complex truth tables could be designed.<br />The introduction of PLAs and uCs made this approach die out. In a way FPGA tech is very close to the same idea.<br />OK flashback over, sorry <img src="http://forums.nesdev.com/images/smilies/icon_wink.gif" alt=";)" title="Wink" /><br />Yogi<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6258">yogi</a> — Thu Nov 21, 2013 10:20 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[infiniteneslives]]></name></author>
<updated>2013-11-08T15:07:20-07:00</updated>
<published>2013-11-08T15:07:20-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8921&amp;p=120451#p120451</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8921&amp;p=120451#p120451"/>
<title type="html"><![CDATA[Re: NROM larger than 32K?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8921&amp;p=120451#p120451"><![CDATA[
<div class="quotetitle">qbradq wrote:</div><div class="quotecontent"><br />Seems like it'd be a pretty easy target for the INL-ROM board. I've got too much going at the moment to hook up a JTAG header and build a programmer though <img src="http://forums.nesdev.com/images/smilies/icon_sad.gif" alt=":(" title="Sad" /><br /></div>  If you're interested in programming CPLDs on my boards I'd recommend the blackcat USB JTAG programmer.  Those are what I use, they're on ebay for $35.<br /><br /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br />The problem is that nobody will implement this on a PCB if there is no proper software to test it, and nobody will write software if there is no proper hardware to test it.<br /></div>A test rom has already been written, and alterego was ported to this variant.  It's been tested on real hardware.  The things you say 'nobody will do' were done well over a year ago...<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />The hard part is making a game with it that anyone cares about.<br /></div>Indeed...<br /><br />I've got my boards configured with PRG A12-14 as inputs to the CPLD.  It'd be trivial to implement, I've already provided the verilog earlier in the thread.  If someone has a use for it I'll go through the trouble of putting it on one of my boards.  But because there wasn't anything produced beyond a test/port and it was never requested it's been on the bottom of my 'to implement on my boards' list.  <br /><br />At that point I'd suggest something that makes better use of the hardware though if one were to go the CPLD route and presumably had 128KB of flash rom.  Something like $6000-FFFF of linear fixed rom for code and a 4KB swapable bank at $5000-5FFF strictly for game data.  That's about as basic as bankswitching could get IMO, and it effectively costs nothing in hardware.  Even if one never used it, the bank would initialize to the first bank and could be treated as if there were NO bankswitching as long as the user never wrote to the bank select register.  Then if at some point the user decided they wanted to store a little more game data and dabble with bankswitching they could start utilizing that bank they never touched previously.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4832">infiniteneslives</a> — Fri Nov 08, 2013 3:07 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Shiru]]></name></author>
<updated>2013-11-08T14:13:49-07:00</updated>
<published>2013-11-08T14:13:49-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8921&amp;p=120447#p120447</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8921&amp;p=120447#p120447"/>
<title type="html"><![CDATA[Re: NROM larger than 32K?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8921&amp;p=120447#p120447"><![CDATA[
The thing seems to be going to the second loop.<br /><br />We have two emulators already. There is no need to have hardware to write a software for this mapper. To make hardware implementation happen we only need a software that is worth to be put on a cart. Not a test code.<br /><br />I don't have time for NES projects currenty, and there aren't too many people who write NES games in C, so we'll have to wait for some time before a game that uses this mapper will appear.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4205">Shiru</a> — Fri Nov 08, 2013 2:13 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[rainwarrior]]></name></author>
<updated>2013-11-08T13:52:54-07:00</updated>
<published>2013-11-08T13:52:54-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8921&amp;p=120446#p120446</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8921&amp;p=120446#p120446"/>
<title type="html"><![CDATA[Re: NROM larger than 32K?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8921&amp;p=120446#p120446"><![CDATA[
Well, all you really need to do is write a good piece of software that people want to play that needs this. The funny thing is that writing a good game is a much harder problem than trying to trim a few kb. After going the distance to make a decent game, where do you find motivation to push new hardware at the same time?<br /><br />Maybe someone would like to make an expanded version of an existing homebrew. Alter Ego with more levels and music, for example? A project like that might make the extra space worthwhile. (Still, this is kind of a situation where an existing mapper would normally solve the problem without much fuss.)<br /><br /><br />I've been working on a project with infiniteneslives to bring an NSF album into cartridge form, and for that one having a new specialized mapper made it drastically more feasible. I dunno if anyone will want to emulate it the new mapper, but we had motivation to create it because of the technical needs of the project. There's a similar story with Streemerz / Action 53, I suppose. You need to find (and execute) a worthwhile project that also requires the proposed hardware, and that's not an easy thing to do!<br /><br />As a developer, it's not too hard to hack a new mapper into FCEUX or some other open source emulator, and use that to develop your software. That part of it is pretty easy to get going on. The hard part is making a game with it that anyone cares about.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5165">rainwarrior</a> — Fri Nov 08, 2013 1:52 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2013-11-08T13:30:32-07:00</updated>
<published>2013-11-08T13:30:32-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8921&amp;p=120445#p120445</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8921&amp;p=120445#p120445"/>
<title type="html"><![CDATA[Re: NROM larger than 32K?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8921&amp;p=120445#p120445"><![CDATA[
The problem is that nobody will implement this on a PCB if there is no proper software to test it, and nobody will write software if there is no proper hardware to test it.<br /><br />The only way to break this loop is to write an emulator extension that supports X-NROM, and to write a demo using this configuration.<br /><br />Personally I think it's great to get an extra memory without bankswitching, but you get so little more than you might just as well optimize code and compress data for the same result, without the extra hardware and emulation incompatibilities.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Fri Nov 08, 2013 1:30 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[qbradq]]></name></author>
<updated>2013-11-08T12:58:37-07:00</updated>
<published>2013-11-08T12:58:37-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8921&amp;p=120443#p120443</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8921&amp;p=120443#p120443"/>
<title type="html"><![CDATA[Re: NROM larger than 32K?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8921&amp;p=120443#p120443"><![CDATA[
Seems like it'd be a pretty easy target for the INL-ROM board. I've got too much going at the moment to hook up a JTAG header and build a programmer though <img src="http://forums.nesdev.com/images/smilies/icon_sad.gif" alt=":(" title="Sad" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3706">qbradq</a> — Fri Nov 08, 2013 12:58 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2013-11-08T12:42:41-07:00</updated>
<published>2013-11-08T12:42:41-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8921&amp;p=120439#p120439</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8921&amp;p=120439#p120439"/>
<title type="html"><![CDATA[Re: NROM larger than 32K?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8921&amp;p=120439#p120439"><![CDATA[
Five months later, did anyone ever get around to implementing this in a cart PCB?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Fri Nov 08, 2013 12:42 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[rainwarrior]]></name></author>
<updated>2013-06-13T20:34:44-07:00</updated>
<published>2013-06-13T20:34:44-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8921&amp;p=113222#p113222</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8921&amp;p=113222#p113222"/>
<title type="html"><![CDATA[Re: NROM larger than 32K?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8921&amp;p=113222#p113222"><![CDATA[
Well, I understand the ideal goal is to have the C layer abstract away the idea of banks and just transparently figure out how to execute code or read data between banks, but yes, that kind of thing is either extremely onerous to accomplish in CC65 and/or would require significant modification to the compiler and linker. Movax12 probably has some interesting macro solutions for CA65, but I don't really like complex macros, myself.<br /><br />There are some fairly simple paradigms for doing bankswitching in CC65/CA65, which require some organization and at least a little bit of assembly knowledge, but IMHO this works pretty well. Not really for the newbie who just wants to write in C and could use a bit of extra space (for this person expanded NROM is nice), but for someone with a little bit of comfort in assembly I think this is a lot more versatile than just having another 16k to work with. I'd like to give a good open source example, but I'm not ready to share it yet, probably in a few months.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5165">rainwarrior</a> — Thu Jun 13, 2013 8:34 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[lidnariq]]></name></author>
<updated>2013-06-13T19:51:21-07:00</updated>
<published>2013-06-13T19:51:21-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8921&amp;p=113221#p113221</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8921&amp;p=113221#p113221"/>
<title type="html"><![CDATA[Re: NROM larger than 32K?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8921&amp;p=113221#p113221"><![CDATA[
<div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent"><br />Aside from the &quot;main&quot; C bank, each bank has a trampoline entry point at a fixed address (part of the stuff I put in every bank). I don't do any managing of resource locations, the resources within a bank are only ever consumed by code within that bank. Basically I put a few arguemnts on zp, switch to the desired bank and jump on the trampoline. In C that's abstracted away, and in practice the code I write looks like: &quot;load_chr_block(3,2);&quot; that loads 1k CHR data block &quot;2&quot; into 1k CHR-RAM slot &quot;3&quot;, implemented by the trampoline in a bank that holds all my CHR data and assembly CHR-RAM upload code. Similarly the map bank trampoline just dumps a small block of map data into a designated place in RAM. The music bank trampoline has a couple of different functions, but in the C code portion it's just basically &quot;play_sound(7);&quot;.<br /></div><br />&lt;facepalm&gt; Thanks for explaining. Somehow I kept on thinking you were using a more explicit symbol table.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3512">lidnariq</a> — Thu Jun 13, 2013 7:51 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[rainwarrior]]></name></author>
<updated>2013-06-13T19:24:58-07:00</updated>
<published>2013-06-13T19:24:58-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8921&amp;p=113220#p113220</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8921&amp;p=113220#p113220"/>
<title type="html"><![CDATA[Re: NROM larger than 32K?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8921&amp;p=113220#p113220"><![CDATA[
Aside from the &quot;main&quot; C bank, each bank has a trampoline entry point at a fixed address (part of the stuff I put in every bank). I don't do any managing of resource locations, the resources within a bank are only ever consumed by code within that bank. Basically I put a few arguemnts on zp, switch to the desired bank and jump on the trampoline. In C that's abstracted away, and in practice the code I write looks like: &quot;load_chr_block(3,2);&quot; that loads 1k CHR data block &quot;2&quot; into 1k CHR-RAM slot &quot;3&quot;, implemented by the trampoline in a bank that holds all my CHR data and assembly CHR-RAM upload code. Similarly the map bank trampoline just dumps a small block of map data into a designated place in RAM. The music bank trampoline has a couple of different functions, but in the C code portion it's just basically &quot;play_sound(7);&quot;.<br /><br />If you do want to manage resource locations inter-bank, which I don't, it's actually possible to get the CC65 toolchain to generate and use the kinds of labels and addresses you need, but it is fairly complicated and I don't think I'd get much use out of it. As I said, I'm still a long way off of filling up 32k with C code (with no data in there, there's a lot of room left for code), and the rest are basically just data banks with very little code in them.<br /><br />That's also why I didn't really proceed much father looking at C in multiple banks. I verified that it can be done with separate linking and block concatenation, but I never ended up with a use for it. Once I started partitioning my data so it doesn't have to share space with the C code, I've had lots of room for that code. And, well, this is why I think it might be an attractive solution for people who are considering expanded NROM as well. Being able to move your sound/map data out of the main bank likely makes at least as much room for your C code as expanding NROM does, and potentially gives you A LOT more room for data.<br /><br /><br />Anyhow, my suggestion that the expanded NROM spec should go down to $4020 is that on the emulator side this is no harder than supporting it at $4800, and is &quot;backward&quot; (upward?) compatible with the smaller memory sizes. I understand it makes a less complicated circuit, and I already said so, but I don't see why the emulator implementations should be limited like that. Homebrewers can still pad to $4800, build their cart with the simple circuit, and have it emulate fine even if the emulator goes down to $4020. Why restrict that person who really needs to squeeze in an extra 2k?<br /><br />There's no &quot;surprises&quot; to avoid here, if someone knows how to make a repro for an expanded NROM they should know enough to figure out how much padding is in the ROM to determine what circuit they'd need to build. There's already a bunch of factors to look at when building an NROM repro, this is just one more to learn. There's going to be somebody for whom an extra 2k of space is worth 40 cents, and we shouldn't pre-emptively take that option away from them. I'm saying that a strong recommendation is better than a frustrating arbitrary limitation, if emulators adopted $4800 instead of $4020. It doesn't take away from the people who want to use $4800 for hardware reasons to also support to $4020 in emulators.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5165">rainwarrior</a> — Thu Jun 13, 2013 7:24 pm</p><hr />
]]></content>
</entry>
</feed>