<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=2&amp;t=4212" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2008-08-11T01:49:53-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=2&amp;t=4212</id>
<entry>
<author><name><![CDATA[nineTENdo]]></name></author>
<updated>2008-08-11T01:49:53-07:00</updated>
<published>2008-08-11T01:49:53-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4212&amp;p=35710#p35710</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4212&amp;p=35710#p35710"/>
<title type="html"><![CDATA[Mandelbrot Set demo]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4212&amp;p=35710#p35710"><![CDATA[
ive been looking up on how to do actual fractal sets like yours. (kick ass by the way)  its a bit complex but i think its a task i might be able to handle. Which is the best  book you read that helped you understand Fractals better than any other.  im reading Programming fractals in C but not to much theory behind it although i still think i will need it when i get a better grasp on how they work.  any info helps.  <br /><br />keep truckin:)<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=352">nineTENdo</a> — Mon Aug 11, 2008 1:49 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[jason_m]]></name></author>
<updated>2008-07-27T12:16:07-07:00</updated>
<published>2008-07-27T12:16:07-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4212&amp;p=35345#p35345</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4212&amp;p=35345#p35345"/>
<title type="html"><![CDATA[Mandelbrot Set demo]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4212&amp;p=35345#p35345"><![CDATA[
I can't seem to zoom out to see more than one fractal.  Zooming in worked as it made the black "hole" area bigger.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3589">jason_m</a> — Sun Jul 27, 2008 12:16 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[LoneKiltedNinja]]></name></author>
<updated>2008-07-27T08:28:53-07:00</updated>
<published>2008-07-27T08:28:53-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4212&amp;p=35330#p35330</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4212&amp;p=35330#p35330"/>
<title type="html"><![CDATA[Mandelbrot Set demo]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4212&amp;p=35330#p35330"><![CDATA[
I actually got a reset glitch on Nestopia on a PC that I'd never seen on my Mac.  I may need to double-check that I do everything I want to be doing at the reset vector.<br /><br />Controls are documented in the included readme(s).  Each time you press a button, it starts redrawing the screen with the revised parameters (even if no revision was actually made, e.g. you try to zoom out from 1x zoom or pan off the edge of the visible space).  Just be patient.  Also, unless you pump up the render depth by about 10 (Start button), you won't get much more detail zoomed in than zoomed out.  That's just the nature of the beast- to get more detail, you need to crunch more cycles, which means things draw slower.  I set the default depth to one which would show the whole fractal at passable detail at 1x within the first full iteration of the bgm.  That said, I also experienced some control glitchiness under PC Nestopia that wasn't there under OSX Nestopia, so I may need some more PC and/or hardware testing to polish this thing up.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3570">LoneKiltedNinja</a> — Sun Jul 27, 2008 8:28 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[jason_m]]></name></author>
<updated>2008-07-27T08:17:00-07:00</updated>
<published>2008-07-27T08:17:00-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4212&amp;p=35329#p35329</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4212&amp;p=35329#p35329"/>
<title type="html"><![CDATA[Mandelbrot Set demo]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4212&amp;p=35329#p35329"><![CDATA[
Tested on a real nes with a powerpak.  Only real glitch is pushing reset.......  just blank screen.  Not sure how to get the other screens you posted though... pushing buttons tends to make a more messed up version of the previous screen.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3589">jason_m</a> — Sun Jul 27, 2008 8:17 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[LoneKiltedNinja]]></name></author>
<updated>2008-07-08T17:47:18-07:00</updated>
<published>2008-07-08T17:47:18-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4212&amp;p=34717#p34717</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4212&amp;p=34717#p34717"/>
<title type="html"><![CDATA[Mandelbrot Set demo]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4212&amp;p=34717#p34717"><![CDATA[
niiiiice...<br /><br />Truth be told, after cranking this out in a week and change, my brain doesn't want to jump right back into 65xx ASM just yet.  It would much rather finish up Star Ocean 3 and possibly start roughing out a new C++ game.  <br /><br />The block preview mode in your TG codebase is a nice idea- I might rig something similar in a later version of mine.  On the whole, though, I'm certain my code is slower.  Case in point: my 16-bit multiply<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">mul16:<br /> stx mul16_xcache<br /> lda mul16Flag1<br /> ora mul16Flag2<br /> and #%00000010<br /> beq mul16_no_overflow<br /> sta mul16Flag2 ; what?  You want I should preserve the negative flag on a junk call?<br />mul16_no_overflow:<br /> ; basic shift-and-add method<br /> ; keep halving mul*1 and popping bits off mul*2<br /> ; if the bit off mul*2 is a 1, add the remaining mul*1 to result<br /> lda #0<br /> sta lsh16Flag<br /> sta rsh16Flag<br /> sta add16Flag1<br /> sta add16Flag2<br /> sta add16Hi2<br /> sta add16Lo2<br /> lda mul16Hi1<br /> sta rsh16Hi<br /> lda mul16Lo1<br /> sta rsh16Lo<br /> lda mul16Hi2<br /> sta lsh16Hi<br /> lda mul16Lo2<br /> sta lsh16Lo<br /> clc<br /> jsr rsh16 ; since the highest power place in mul*2 is 1/2<br /> ldx #0<br />mul16_loop:<br /> jsr lsh16 ; which pops the shifted-out bit into carry<br /> bcc mul16_loop_no_add ; so we can act on it right away<br /> lda rsh16Hi<br /> sta add16Hi1<br /> lda rsh16Lo<br /> sta add16Lo1<br /> jsr add16<br />mul16_loop_no_add:<br /> jsr rsh16<br /> inx<br /> cpx #15 ; after 15 rshs, we're guaranteed to have 0 in the rsh input<br /> bne mul16_loop<br />; visual break to bookend the loop<br /> lda add16Hi2<br /> sta mul16Hi2<br /> lda add16Lo2<br /> sta mul16Lo2<br /> lda mul16Flag1<br /> eor mul16Flag2<br /> sta mul16Flag2 ; safe, since we know we can't have overflowed, so only the sign flags might be unequal, producing a negative<br /> ldx mul16_xcache<br /> rts<br /><br />; for reference, the above math is done on non-2's-complement 16-bit values, highest place being 1/2, lowest being 1/64k, with a flag byte consisting of 6 unused bits followed by an overflow flag and a negative flag<br /></div><br /><br />Kinda important for mandelbrot, and yet every call probably spends more cycles shifting stuff between the inputs of my various other routines than accomplishing actual computation.  That, and I use straight-up shift-and-add.  I'd have to spend an hour parsing your innermost multiply code before it would make total sense, but it looks like you take some shortcuts at the higher levels.  I almost used 32-bit precision, but by the time I wrapped my head back around the math to see how easy it was, I was too lazy to go and change all my zeropage allocation for more subroutine input bytes.<br /><br />I also have a nice little restraining order in there called itersPerNMI which I've set quite low indeed for the sake of the music.  Come to think of it, I should reset my counter in the NMI routine rather than the mandelbrot loop since that's not the only place I ever waitNMI... *changes code* ... great.  Now it chugs even more <img src="http://forums.nesdev.com/images/smilies/icon_razz.gif" alt=":P" title="Razz" />  I could just dec the address rather than dey and reload y to catch what are probably NMIs that occur just before I'd wait for an NMI but that would cost 5 cycles in my inner loop as opposed to 2... bleh.  Clearly more work is needed.<br /><br />When I allow as much frameskip as is needed to crunch out an entire tile before actively waiting, iirc it runs a good deal faster.  But the music hiccoughs something fierce.<br /><br />Is that an iso I see with FractalEngine?  Meaning I could run it on my actual TurboDuo? Crazy talk!  <img src="http://forums.nesdev.com/images/smilies/icon_cool.gif" alt="8)" title="Cool" />  I'll have to get by on Nestopia and good sense for mine unless I can scrounge a dev cart and/or EEPROM burner.<br /><br />edit: new version uploading as I type.  My iterations-per-frame counting was way off, so my wait calls were eating a lot of time.  I decided to nix the whole iteration-counting deal and instead just let frameskips happen and update the music as needed.  The result cuts runtime to 75% what it used to be.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3570">LoneKiltedNinja</a> — Tue Jul 08, 2008 5:47 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[ccovell]]></name></author>
<updated>2008-07-08T07:30:33-07:00</updated>
<published>2008-07-08T07:30:33-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4212&amp;p=34704#p34704</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4212&amp;p=34704#p34704"/>
<title type="html"><![CDATA[Mandelbrot Set demo]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4212&amp;p=34704#p34704"><![CDATA[
Hey, cool, a nice implementation of the Mandelbrot set.  I don't know if it will help you any, but a little under a year ago, I made a Mandelbrot generator for the PC-Engine/Turbografx-16.  I don't know if my code is faster or if yours is, but I did put in a few optimizations, like cyclical testing for the black areas.<br /><br /><!-- m --><a class="postlink" href="http://www.disgruntleddesigner.com/chrisc/fractalengine.html">http://www.disgruntleddesigner.com/chri ... ngine.html</a><!-- m --><br /><br />The ASM code is free for you to check out too.  Hu6280 and 6502 ASM are quite similar, so even though the instructions might not be the same, the program logic is.<br /><br />Ironic that last year, I couldn't find a single example of fractal code on the 6502, and now there are two!<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=355">ccovell</a> — Tue Jul 08, 2008 7:30 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[LoneKiltedNinja]]></name></author>
<updated>2008-07-07T19:52:49-07:00</updated>
<published>2008-07-07T19:52:49-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4212&amp;p=34688#p34688</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4212&amp;p=34688#p34688"/>
<title type="html"><![CDATA[Mandelbrot Set demo]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4212&amp;p=34688#p34688"><![CDATA[
Glad to see nesdev has active boards even if the site itself is getting a little stale <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br />I've been poking around with NES development ever since Bob Rost taught his class at CMU in '04.  I've graduated from nbasic to full-out assembly, but still haven't taken on anything in assembly as grand as a full game.  I've got a smaller, more humorous demo in the final stages for the Famicom's 25th anniversary this month, but I just got <a href="http://www.andrew.cmu.edu/user/spkelly/portfolio/software/Mandelbrot.zip" class="postlink">this little beauty</a> presentable the other night.<br /><br />It's not raster-effects-and-DMC-saw-waves technical, but it still took a handful of custom math routines.  I may inline the math a little later, which would definitely improve speed.<br /><br />Enjoy.  I'm kinda curious what a real NES dev communnity thinks of it after bouncing it off a couple friends and a general emulation forum...<br /><br /><img src="http://www.andrew.cmu.edu/user/spkelly/portfolio/software/screens/mandel1.png" alt="Image" /><br /><img src="http://www.andrew.cmu.edu/user/spkelly/portfolio/software/screens/mandel2.png" alt="Image" /><br /><img src="http://www.andrew.cmu.edu/user/spkelly/portfolio/software/screens/mandel3.png" alt="Image" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3570">LoneKiltedNinja</a> — Mon Jul 07, 2008 7:52 pm</p><hr />
]]></content>
</entry>
</feed>