<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - What filters does Blargg's Blip_Buffer use?</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">What filters does Blargg's Blip_Buffer use?</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=16709">http://forums.nesdev.com/viewtopic.php?f=3&amp;t=16709</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>zeroone</b> [ Wed Nov 15, 2017 11:11 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>What filters does Blargg's Blip_Buffer use?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Blargg's Blip_Buffer performs band-pass filtering and decimation.  What specific filter (or filters) are used?  <br /><br />The source is available, but it's just a bunch of equations with little explanation of the mechanics behind it.  And, formulae for many filters look very similar to each other.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Wed Nov 15, 2017 11:40 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What filters does Blargg's Blip_Buffer use?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />A <a href="https://stackoverflow.com/questions/175312/bandlimited-waveform-generation" class="postlink">BLEP (band-limited step)</a> is a <a href="https://en.wikipedia.org/wiki/Heaviside_step_function" class="postlink">Heaviside step</a> convolved with a low-pass filter. It's generated at the input frequency and then decimated to the output frequency at offsets from zero to the frequency ratio minus one.<br /><br />If the <a href="https://en.wikipedia.org/wiki/Gibbs_phenomenon" class="postlink">Gibbs wiggles</a> are the same on both side of the step, the low-pass filter is a linear-phase finite impulse response (FIR) filter. These are usually some <a href="https://en.wikipedia.org/wiki/Window_function" class="postlink">windowed</a> <a href="https://en.wikipedia.org/wiki/Sinc_filter" class="postlink">sinc function</a>, such as the <a href="https://en.wikipedia.org/wiki/Lanczos_resampling" class="postlink">Lanczos filter</a>. Convolution of an FIR kernel or any other discrete signal with a Heaviside step is the same as taking a running sum.<br /><br />Choice of sinc cutoff and window shape varies from one BLEP implementation to another, though the sinc frequency is usually about 45% of the sample rate, which provides some headroom below the Nyquist frequency (half the sample rate) to compensate for finite window width. Or were you seeking to identify the exact parameters of the window in Blargg's implementation?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>zeroone</b> [ Wed Nov 15, 2017 12:11 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What filters does Blargg's Blip_Buffer use?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thanks for the long response.  What order FIR is used?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Wed Nov 15, 2017 12:23 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What filters does Blargg's Blip_Buffer use?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Blargg's library appears to make the low-pass filter as wide as 8, 12, or 16 output samples depending on the chosen resampling quality. If you are making your own BLEP, you can vary the order based on how sharp you want the cutoff to be.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>zeroone</b> [ Wed Nov 15, 2017 12:53 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What filters does Blargg's Blip_Buffer use?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />For my NES emulator, I used a 13th-order Elliptic filter.  I'm considering working on a Game Boy emulator, but it produces sound samples at a faster rate: ~2.34x the NTSC NES and it has stereo sound.  Consequentially, my elliptic filter implementation will eat up ~4.7x the CPU, possibly making it impractical to use.  <br /><br />My filtering knowledge is limited.  How bad would it be if I averaged together every 5 samples and then fed it into an elliptic filter?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Wed Nov 15, 2017 3:09 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What filters does Blargg's Blip_Buffer use?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />DSP wise, &quot;averaged together every 5 samples&quot; is equivalent to:<br />* Convolve with 5-sample long &quot;boxcar&quot; filter i.e. [1 1 1 1 1]<br />* Decimation by 5. (i.e. retaining one, then discarding the next four)<br /><br />This, in turn, is roughly the same as a 1st order lowpass at 1/5th the sample rate, and then some alias folding. There are also some very specific frequency bands that it will attenuate perfectly. Would the frequency content line up such that the aliases won't end up in the audible band? That's basically the context under which it would work well.<br /><br />You will probably get better results from multiple rounds of resampling. Also, polyphase FIR filters might be worth trying.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>zeroone</b> [ Wed Nov 15, 2017 3:26 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What filters does Blargg's Blip_Buffer use?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">lidnariq wrote:</div><div class="quotecontent">You will probably get better results from multiple rounds of resampling. Also, polyphase FIR filters might be worth trying.</div><br /><br />Well, I guess I'm looking for a balance between computational time and quality.  I can always use Blargg's filter if that really is the best option.  It's difficult to evaluate without knowing all the details.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Wed Nov 15, 2017 3:43 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What filters does Blargg's Blip_Buffer use?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Sure? Boxcar filters are almost always the worst option¹, unless all of the nulls just <em>happen</em> to line up usefully, such as bisqwit's NTSC decoder.<br /><br />¹ <span style="font-size: 67%; line-height: normal">(Carefully carved out exception: the 2-sample FIR filter [1 1] has perfect rejection of the nyquist rate)</span><br /><br />Filtering is always a calculus of &quot;how much undesired signal is allowed to stick around&quot; (-40dB is ≈8-bit sound quality), and when you decimate, you fold this correlated high-frequency content over the signal you want to keep, producing aliasing noise.<br /><br />But each time you decimate, you also get to reduce your computational load for successive stages.<br /><br />Blargg's bit_blep is very likely the mostly computationally effective solution.<br /><br />The vast majority of the computational load difference between FCEU-0.98 and modern FCEUX is the latter spends lots of time in its audio filtering, so you do have company here.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Rahsennor</b> [ Wed Nov 15, 2017 8:35 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What filters does Blargg's Blip_Buffer use?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If your signal is entirely pulse waves/sample-and-hold signals, BLEP resampling is almost certain to be the best speed/quality tradeoff. It only has to do work on transitions, so the input samplerate is irrelevant - performance depends entirely on the switching rate of the signal.<br /><br /><span style="font-size: 50%; line-height: normal">Which can do more harm than good when some idiot decides to mute the triangle channel by making it ultrasonic, but that's another story.</span>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>zeroone</b> [ Thu Nov 16, 2017 7:57 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What filters does Blargg's Blip_Buffer use?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Does anyone have a Bode Plot of Blargg's Blip_Buffer decimating from NES NTSC APU rate to 48 KHz?  I'm curious how it compares to <a href="http://i.imgur.com/YNmSEgk.png" class="postlink">the Elliptic Filter</a>.  I can always rig up the Elliptic Filter with a lower order to make it compute faster.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Nov 16, 2017 8:20 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What filters does Blargg's Blip_Buffer use?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Suggested test procedure:<br /><br /><ol style="list-style-type: decimal"><li>Make a module in FamiTracker with only the note <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">D-#</tt> (corresponding to period setting 1, or 112 kHz) in the noise channel. This gives enough headroom over the Nyquist rate that it should be flat before the rolloff associated with the zero-order hold.</li><li>Export to NSF.</li><li>Render to 16-bit LPCM (WAV, etc.) with an NSF player based on Game_Music_Emu, which uses Blip_Buffer. I used <a href="https://forums.nesdev.com/viewtopic.php?f=6&amp;t=16218" class="postlink">gmewav</a>, which has the drawback that it's currently hardcoded to 44.1 kHz, not 48 kHz.</li><li>Run spectral analysis using your preferred tool. </li></ol><br />I've done steps 1, 2, and 3 for you. When attempting to upload the result of step 3, I received the following error messages:<br /><br /><blockquote style="margin-left: 1%; padding-left: 1%; border-left: 3px solid #555577;">
The extension wav is not allowed.<br />The extension flac is not allowed.<br />The extension aif is not allowed.<br />The extension aiff is not allowed.
</blockquote><br /><br />Presumably this is to encourage users discussing NES music to use lossy codecs such as .ogg for storage and bandwidth efficiency. That's fine for music, not so fine for the precise spectral analysis that you are requesting. This means you will need to extract the result of step 3 from a zipfile before proceeding to step 4.

		
			<br clear="all" /><br />

			<table class="tablebg" width="100%" cellspacing="1">
			<tr>
				<td><b class="genmed">Attachments: </b></td>
			</tr>
			
				<tr>
					<td>
			<span class="genmed">
				<img src="./images/upload_icons/mid.gif" alt="" /> 
				<a href="./download/file.php?id=10808">bliptest_step1.ftm</a> [763 Bytes]
			</span><br />
			<span class="gensmall">Downloaded 27 times</span>
		

		<br />
	</td>
				</tr>
			
				<tr>
					<td>
			<span class="genmed">
				<img src="./images/upload_icons/mid.gif" alt="" /> 
				<a href="./download/file.php?id=10807">bliptest_step2.nsf</a> [5.78 KiB]
			</span><br />
			<span class="gensmall">Downloaded 28 times</span>
		

		<br />
	</td>
				</tr>
			
				<tr>
					<td>
			<span class="genmed">
				<img src="./styles/subsilver2/imageset/icon_topic_attach.gif" width="14" height="18" alt="" title="" /> 
				<a href="./download/file.php?id=10806">bliptest_step3.zip</a> [382.74 KiB]
			</span><br />
			<span class="gensmall">Downloaded 30 times</span>
		

		<br />
	</td>
				</tr>
			
			</table>
		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>zeroone</b> [ Thu Nov 16, 2017 8:55 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What filters does Blargg's Blip_Buffer use?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thanks tepples.  When I get a chance, I'll open that in Audacity.  I think it can generate something similar to a Bode Plot.  <br /><br />I wish I could plug Blargg's filter directly into my own toolset, but unfortunately, I'm a Java coder.  If I end up translating his code, I might strip out the low-pass filter part if that provides an extra speed boost.  On a side note, the Game Boy supposedly contains some low-pass filtering to prevent interference noise from being rendered as speckles on the LCD matrix.  But, there were suggestions on various forums to not emulate that to improve the sound quality.<br /><br />Side note #2: Since my filtering knowledge is limited, I wrote a program that simply generates sine waves and it records how they get attenuated or amplified by a filter.  It slowly tries all possible frequencies within some range.  There is probably a much better way to generate Bode Plots, but taking direct measurements at least checks against possible coding bugs and it also enables me to see how fast the filter reacts to a signal.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Nov 16, 2017 9:17 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What filters does Blargg's Blip_Buffer use?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I tried making a <a href="https://forums.nesdev.com/viewtopic.php?p=192001#p192001" class="postlink">pink noise and sine sweep generator</a> a few months ago, but the sine sweep ended up extremely aliased, and I couldn't tell why.<br /><br />There's another test for &quot;how fast the filter reacts to a signal&quot;. The procedure resembles the above, except instead of FamiTracker's noise channel, use Z00 and Z7F effects in the DPCM channel to generate Heaviside steps. Then render as before and read the step response off the wave.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>