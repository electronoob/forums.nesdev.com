<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=12&amp;t=7359" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2011-01-05T20:19:41-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=12&amp;t=7359</id>
<entry>
<author><name><![CDATA[gompertz]]></name></author>
<updated>2011-01-05T20:19:41-07:00</updated>
<published>2011-01-05T20:19:41-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7359&amp;p=72376#p72376</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7359&amp;p=72376#p72376"/>
<title type="html"><![CDATA[Help with small macro implementation]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7359&amp;p=72376#p72376"><![CDATA[
Thanks I'll fiddle with your suggestions tomorrow when back on the devcomp <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br />It also dawned on me afterwards I need to convert the raw x and y positions into x-tile and y-tile positions by doing modulus 8 on x and y (my sprite is 8x8).  And THEN do the whole multiplying by 32 etc etc.<br /><br />I really wonder if I'm going about this collision detection the right way however and am curious how it was really done way back when.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4657">gompertz</a> — Wed Jan 05, 2011 8:19 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Dwedit]]></name></author>
<updated>2011-01-05T17:11:48-07:00</updated>
<published>2011-01-05T17:11:48-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7359&amp;p=72370#p72370</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7359&amp;p=72370#p72370"/>
<title type="html"><![CDATA[Help with small macro implementation]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7359&amp;p=72370#p72370"><![CDATA[
Something like this?<br />#define Locate(xx,yy)  lda #((xx) + (yy) * 32) &amp; $FF \ sta PPUADDR \ lda #((xx) + (yy)*32) / 256 \ sta PPUADDR<br /><br />This is for TASM, change your syntax accordingly.<br />Edit: that's just for constants unfortunately.<br /><br /><br />To multiply by 32 easily in 6502 asm:<br />lda YPos<br />sta temp<br />lda #0<br />ror temp<br />ror a<br />ror temp<br />ror a<br />ror temp<br />ror a<br />;a = xxx.....<br />;temp = ...xxxxx<br />Then you use 'temp' as your high byte, and add X to A as your low byte.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=53">Dwedit</a> — Wed Jan 05, 2011 5:11 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[gompertz]]></name></author>
<updated>2011-01-05T15:53:08-07:00</updated>
<published>2011-01-05T15:53:08-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7359&amp;p=72365#p72365</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7359&amp;p=72365#p72365"/>
<title type="html"><![CDATA[Help with small macro implementation]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7359&amp;p=72365#p72365"><![CDATA[
Hi All,<br /><br />I'm stumped at the best approach for the following situation:<br /><br />I've created a non-scrolling level of 32x28 8x8tiles to fill the screen, and I have stored the existence of a platform tile as a 00000001 or a 00000000 for each of these 896 tiles starting at address 0xa00. (Yes, big waste of memory using a whole byte on each tile, but trying to keep it simple for now).<br /><br />Anyways, my sprite has its x and y position stored at $0900 and $0901 respectively and am trying to implement the below macro:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.macro BoolDown<br />; Input: X and Y co-ordinates<br />; Output: Result if legal move stored in $0902<br />; Purpose: Given X and Y position, if there is a platform tile below <br />;               the current position then $0902 is 1, otherwise 0.<br />ldx $0900 ; load x position<br />ldy $0901 ; load y position <br />lda #&#40;????&#41;<br />cmp #%00000001<br />bne +<br />lda #1<br />sta $0902<br />+<br />lda #0<br />sta $0902<br />.endm</div><br /><br />My first instinct to locate in memory the address of the tile below me is along the lines of the following<br />   If ($0901+1)*32+$0900+0xa00 is 1 then $0902 set to 0; o/w 1.<br /><br />I've added 1 to $0901 so that we're talking one tile "row" down from my current position.<br /><br />However I am stumped on how to implement this in asm without tons of complicated asl sort of deals.<br /><br />Alas, Is this style even acceptable for collision detection?<br /><br />Any help is appreciated!<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4657">gompertz</a> — Wed Jan 05, 2011 3:53 pm</p><hr />
]]></content>
</entry>
</feed>