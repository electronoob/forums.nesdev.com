<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=3&amp;t=16355" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2017-08-21T22:12:12-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=3&amp;t=16355</id>
<entry>
<author><name><![CDATA[Gilbert]]></name></author>
<updated>2017-08-21T22:12:12-07:00</updated>
<published>2017-08-21T22:12:12-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=16355&amp;p=203003#p203003</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=16355&amp;p=203003#p203003"/>
<title type="html"><![CDATA[Re: Spot bug in Mesen and Nintaco]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=16355&amp;p=203003#p203003"><![CDATA[
Sorry for derailing this thread a bit, but every time I read its topic I interpret it as &quot;<em>find</em> bug in Mesen and Nintaco&quot; (though of course, Spot is the name of a game here). In some sense, this alternate interpretation is still correct though.  <img src="http://forums.nesdev.com/images/smilies/icon_rolleyes.gif" alt=":roll:" title="Rolling Eyes" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4653">Gilbert</a> — Mon Aug 21, 2017 10:12 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Sour]]></name></author>
<updated>2017-08-21T20:38:34-07:00</updated>
<published>2017-08-21T20:38:34-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=16355&amp;p=203002#p203002</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=16355&amp;p=203002#p203002"/>
<title type="html"><![CDATA[Re: Spot bug in Mesen and Nintaco]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=16355&amp;p=203002#p203002"><![CDATA[
Thanks for the research on this.<br /><br />For a moment, I thought Mesen paused between frames on scanline 240, but that was a change I had done when I originally added support for Bizhawk &amp; FCEUX's movie formats.  Moving the pause from scanline -1 to 240 ended up causing issues with the overclocking logic, so I reverted it back to -1 - which explains why this particular game breaks.<br /><br />Using a game-specific setting to solve this is not a bad idea - I might end up doing that too.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7406">Sour</a> — Mon Aug 21, 2017 8:38 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[zeroone]]></name></author>
<updated>2017-08-20T13:31:28-07:00</updated>
<published>2017-08-20T13:31:28-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=16355&amp;p=202858#p202858</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=16355&amp;p=202858#p202858"/>
<title type="html"><![CDATA[Re: Spot bug in Mesen and Nintaco]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=16355&amp;p=202858#p202858"><![CDATA[
Here's my final thoughts on this: Spot's options menu does suffer from exactly the same problem as Quattro Sports BMX Simulator: Around the pre-render scanline, it caches the button values.  And, later within the frame, it polls the controllers 2 or 3 times, comparing against the cached values.  <br /><br />Emulators can get away with updating button values once per frame as long as the update doesn't occur around the pre-render scanline.  Since the issue only affects the 2 aforementioned games, I'm considering actually marking them in Nintaco's cart DB, enabling input to be injected mid-frame, rather than top-of-frame.  I'd rather not make a change to inputs that could affect games in general.  Maybe the reverse issue will show up elsewhere if I do.  <br /><br />There are other ways to deal with this, but the button values are also used for Rewind Time and movies, which not only requires sampling exactly once-per-frame, it must always be updated at exactly the same point within each frame.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6828">zeroone</a> — Sun Aug 20, 2017 1:31 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[zeroone]]></name></author>
<updated>2017-08-19T13:26:19-07:00</updated>
<published>2017-08-19T13:26:19-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=16355&amp;p=202802#p202802</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=16355&amp;p=202802#p202802"/>
<title type="html"><![CDATA[Re: Spot bug in Mesen and Nintaco]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=16355&amp;p=202802#p202802"><![CDATA[
As a test, I modified Nintaco to update the cached button state at various scanlines.  I found that the Spot menu works as long as the update doesn't happen around the pre-render scanline.  There is a margin around it, though it's not that well-defined.  Avoiding the range +/- ~16 scanlines about the pre-render scanline enables the menu to function properly.  As mentioned prior in this thread, Nintaco does the cache update at the pre-render scanline.  I also found that at or around the NMI scanline still enables it to work without issues.  In fact, anywhere away from the pre-render scanline does the job.  I'll have to investigate why this is the case and what other emulators are doing.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6828">zeroone</a> — Sat Aug 19, 2017 1:26 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[zeroone]]></name></author>
<updated>2017-08-18T18:37:43-07:00</updated>
<published>2017-08-18T18:37:43-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=16355&amp;p=202747#p202747</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=16355&amp;p=202747#p202747"/>
<title type="html"><![CDATA[Re: Spot bug in Mesen and Nintaco]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=16355&amp;p=202747#p202747"><![CDATA[
I got a chance to examine the controller code in Spot (see below), but I'm still confused.  Nintaco updates the cached controller values once per frame, on the first dot of the pre-render scanline.  The only unusual thing I found about the code below is that an interrupt often takes place between the second and third polls.  Consequentially, the third polls may happen on a successive frame (after the cached values are updated).  <span style="text-decoration: underline">But</span>, the cached values only become relevant when the controllers are strobed; it shouldn't matter at what point in the frame cycle that the cached values are updated.  I'll study this further, but currently it doesn't look like an invariant value within frames is the culprit. <br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">                        ; This is a multitap game designed for NES Four Score / NES Satellite<br />                        ; and even for additional controllers connected to the Famicom expansion port.<br />                        ; Controllers #1 and #2 end up at &#91;0&#93; and &#91;1&#93;, respectively.<br />                        ; Controllers #3 and #4 end up at &#91;2&#93; and &#91;3&#93;, respectively.<br />                        ; <br />                        ; Strobe the multitap to reset it for reading.<br />0F:FE43  LDX #$01       ; <br />0F:FE45  STX $4016      ; &#91;PORT&#93; = 1;<br />0F:FE48  DEX            ; <br />0F:FE49  STX $4016      ; &#91;PORT&#93; = 0;<br />0F:FE4C  INX            <br /><br />                        ; Read NES / Famicom controllers #1 and #2 into &#91;0&#93; and &#91;1&#93;, respectively.<br />                        ; <br />loop2:                  ; for(X = 1; X &gt;= 0; X--) { <br />0F:FE4D  LDY #$08       <br />loop1:                  ;   for(Y = 8; Y &gt; 0; Y--) {<br />0F:FE4F  LDA $4016,X    ;     <br />0F:FE52  AND #$03       ; <br />0F:FE54  CMP #$01       ; <br />0F:FE56  ROL $00,X      ;     &#91;X&#93; = (&#91;X&#93; &lt;&lt; 1) | ((&#91;PORT + X&#93; &amp; 3) &gt;= 1);<br />0F:FE58  DEY            ; <br />0F:FE59  BNE $FE4F      ; <br />0F:FE5B  DEX            ;   }<br />0F:FE5C  BEQ $FE4D      ; }<br />                        <br />                        ; Read NES multitap controllers #3 and #4 into &#91;6&#93; and &#91;7&#93;, respectively.<br />                        ; Read Famicom controllers #3 and #4 into &#91;4&#93; and &#91;5&#93;, respectively.                        <br />                        ;<br />0F:FE5E  LDX #$01       ; for(X = 1; X &gt;= 0; X--) {<br />loop4:                  ;<br />0F:FE60  LDY #$08       ;   for(Y = 8; Y &gt; 0; Y--) {<br />loop3:                  ;<br />0F:FE62  LDA $4016,X    ;     A = &#91;PORT + X&#93;;<br />0F:FE65  LSR A          ;      <br />0F:FE66  ROL $06,X      ;     &#91;6 + X&#93; = (&#91;6 + X&#93; &lt;&lt; 1) | (A &amp; 1);<br />0F:FE68  LSR A          ;     <br />0F:FE69  ROL $04,X      ;     &#91;4 + X&#93; = (&#91;4 + X&#93; &lt;&lt; 1) | ((A &gt;&gt; 1) &amp; 1);<br />0F:FE6B  DEY            ; <br />0F:FE6C  BNE $FE62      ;   }<br />0F:FE6E  DEX            ; <br />0F:FE6F  BEQ $FE60      ; }<br /><br />                        ; Read potential NES multitap signatures into &#91;$A&#93; and &#91;$B&#93;, expecting $10 and $20 for <br />                        ; the input ports #1 and #2, respectively.<br />                        ; Read potential Famicom expansion port signatures into &#91;8&#93; and &#91;9&#93;, expecting $00 and<br />                        ; $10 for input ports #1 and #2, respectively.<br />0F:FE71  LDX #$01       ; for(X = 1; X &gt;= 0; X--) {<br />loop6:<br />0F:FE73  LDY #$08       ;   for(Y = 8; Y &gt; 0; Y--) {<br />loop5:<br />0F:FE75  LDA $4016,X    ;     A = &#91;PORT + X&#93;;<br />0F:FE78  LSR A          ;     <br />0F:FE79  ROL $0A,X      ;     &#91;$A + X&#93; = (&#91;$A + X&#93; &lt;&lt; 1) | (A &amp; 1);<br />0F:FE7B  LSR A          ;     <br />0F:FE7C  ROL $08,X      ;     &#91;8 + X&#93; = (&#91;8 + X&#93; &lt;&lt; 1) | ((A &gt;&gt; 1) &amp; 1);<br />0F:FE7E  DEY            ;     <br />0F:FE7F  BNE $FE75      ;   }<br />0F:FE81  DEX            ; <br />0F:FE82  BEQ $FE73      ; }<br /><br />                        ; If the signatures are detected in &#91;8&#93;, &#91;9&#93;, &#91;$A&#93; or &#91;$B&#93;, mark bits of &#91;$C&#93; accordingly.        <br />0F:FE84  LDA #$00       ; <br />0F:FE86  STA $000C      ; &#91;$C&#93; = 0;<br />0F:FE88  LDA $0008      ; <br />0F:FE8A  CMP #$20       ;<br />0F:FE8C  BNE $FE94      ; if (&#91;8&#93; == $20) {<br />0F:FE8E  LDA #$80       ;   &#91;$C&#93; |= $80;<br />0F:FE90  ORA $000C      ; }<br />0F:FE92  STA $000C      ; <br />label7:<br />0F:FE94  LDA $0009      ; <br />0F:FE96  CMP #$10       ;<br />0F:FE98  BNE $FEA0      ; if (&#91;9&#93; == $10) {<br />0F:FE9A  LDA #$40       ;   &#91;$C&#93; |= $40;<br />0F:FE9C  ORA $000C      ; }<br />0F:FE9E  STA $000C      ; <br />label8:<br />0F:FEA0  LDA $000A      ; <br />0F:FEA2  CMP #$10       ;<br />0F:FEA4  BNE $FEAC      ; if (&#91;$A&#93; == $10) {<br />0F:FEA6  LDA #$20       ;   &#91;$C&#93; |= $20;<br />0F:FEA8  ORA $000C      ; }<br />0F:FEAA  STA $000C      ; <br />label9:<br />0F:FEAC  LDA $000B      ; <br />0F:FEAE  CMP #$20       ;<br />0F:FEB0  BNE $FEB8      ; if (&#91;$B&#93; == $20) {<br />0F:FEB2  LDA #$10       ;   &#91;$C&#93; |= $10;<br />0F:FEB4  ORA $000C      ; }<br />0F:FEB6  STA $000C      ; <br /><br />                        ; If Famicom signatures are detected, then copy &#91;4&#93; and &#91;5&#93; (Famicom contollers #3 and #4) <br />                        ; to &#91;2&#93; and &#91;3&#93;, respectively.<br />label10:<br />0F:FEB8  LDA $000C      ; <br />0F:FEBA  CMP #$C0       ;<br />0F:FEBC  BNE $FEC8      ; if (&#91;$C&#93; == $C0) {<br />0F:FEBE  LDX #$02       ;   for(X = 2; X &gt; 0; X--) {<br />label11:<br />0F:FEC0  LDA $03,X      ;     <br />0F:FEC2  STA $01,X      ;     &#91;1 + X&#93; = &#91;3 + X&#93;;<br />0F:FEC4  DEX            ;     <br />0F:FEC5  BNE $FEC0      ;   }<br />0F:FEC7  RTS            ;   <br />                        ; <br /><br />                        ; Otherwise, if NES signatures are detected, copy &#91;6&#93; and &#91;7&#93; (NES controllers #3 and #4)<br />                        ; to &#91;2&#93; and &#91;3&#93;, respectively.<br />label12:<br />0F:FEC8  CMP #$30<br />0F:FECA  BNE $FED5      ; } else if (&#91;$C&#93; == $30) {<br />0F:FECC  LDX #$02       ;   for(X = 2; X &gt; 0; X--) {<br />label13:<br />0F:FECE  LDA $05,X      ; <br />0F:FED0  STA $01,X      ;     &#91;1 + X&#93; = &#91;5 + X&#93;;<br />0F:FED2  DEX            ; <br />0F:FED3  BNE $FECE      ;   }<br />                        ; }<br /><br />label14:<br />0F:FED5  RTS            ; return;</div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6828">zeroone</a> — Fri Aug 18, 2017 6:37 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[zeroone]]></name></author>
<updated>2017-08-16T07:15:42-07:00</updated>
<published>2017-08-16T07:15:42-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=16355&amp;p=202629#p202629</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=16355&amp;p=202629#p202629"/>
<title type="html"><![CDATA[Re: Spot bug in Mesen and Nintaco]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=16355&amp;p=202629#p202629"><![CDATA[
<div class="quotetitle">Sour wrote:</div><div class="quotecontent"><br />Can't say I really have any good ideas on how to solve this.<br />The obvious way to do it is to space out the frame's emulation across the whole 16ms, but Windows is not a real-time OS - you can only expect so much precision from sleeps (e.g not much at all). It would be pretty tricky to do this without potentially causing issues on some computers (the thread may take longer than expected to wake, causing the whole frame to be delivered late, etc.)<br /><br />At the moment I'm tempted to just ignore the issue, unless it's something that actually happens in several games and hinders gameplay.  Of course, this is all assuming that my assumption is correct in the first place.<br /></div><br /><br />There's probably a simple solution that will take care of Spot and Quattro Sports.  The Spot options menu works in FCEUX and FCEUX is well-known for it's FM2 movie format.  FM2 is a recording of input that is sampled only once per frame.  Meaning, FCEUX is getting away with keeping the controller input values constants throughout entire frames.  The likely difference, as mentioned earlier in this thread, is the point that the cached inputs are updated within the frame cycle.  If only 2 known games are affected, then that seems like a reasonable engineering solution, even though it's not a perfect one.<br /><br />Also, when I get a chance, I'll study the exact code to better understand how these games are doing their polling.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6828">zeroone</a> — Wed Aug 16, 2017 7:15 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2017-08-16T05:39:27-07:00</updated>
<published>2017-08-16T05:39:27-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=16355&amp;p=202626#p202626</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=16355&amp;p=202626#p202626"/>
<title type="html"><![CDATA[Re: Spot bug in Mesen and Nintaco]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=16355&amp;p=202626#p202626"><![CDATA[
<a href="http://forums.nesdev.com/viewtopic.php?f=5&amp;t=1798" class="postlink">Quattro Sports has the same problem</a>.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Wed Aug 16, 2017 5:39 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Sour]]></name></author>
<updated>2017-08-15T15:41:59-07:00</updated>
<published>2017-08-15T15:41:59-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=16355&amp;p=202610#p202610</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=16355&amp;p=202610#p202610"/>
<title type="html"><![CDATA[Re: Spot bug in Mesen and Nintaco]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=16355&amp;p=202610#p202610"><![CDATA[
Can't say I really have any good ideas on how to solve this.<br />The obvious way to do it is to space out the frame's emulation across the whole 16ms, but Windows is not a real-time OS - you can only expect so much precision from sleeps (e.g not much at all). It would be pretty tricky to do this without potentially causing issues on some computers (the thread may take longer than expected to wake, causing the whole frame to be delivered late, etc.)<br /><br />At the moment I'm tempted to just ignore the issue, unless it's something that actually happens in several games and hinders gameplay.  Of course, this is all assuming that my assumption is correct in the first place.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7406">Sour</a> — Tue Aug 15, 2017 3:41 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[zeroone]]></name></author>
<updated>2017-08-14T15:17:27-07:00</updated>
<published>2017-08-14T15:17:27-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=16355&amp;p=202483#p202483</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=16355&amp;p=202483#p202483"/>
<title type="html"><![CDATA[Re: Spot bug in Mesen and Nintaco]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=16355&amp;p=202483#p202483"><![CDATA[
<div class="quotetitle">Sour wrote:</div><div class="quotecontent"><br />I think I finally understand what might be going on. Mesen polls the keyboard/gamepads every time it needs to update the NES controllers' state.  There is no particular point in the frame where this occurs - however, since the frame is executed in a fraction of the time it takes on a real NES (e.g 2-3ms instead of 16ms), the odds of the input changing during the frame is pretty low.  If the game expects the input to change between 2 points in the same frame, it's very unlikely that it would (the keypress would need to occur within that window).  Odds are you are pressing the controller while the emulation thread is sleeping (between both frames) - this is probably why playing the game with no speed limit fixes the issue.<br /></div><br /><br />Sounds like a plausible hypothesis.  Any idea how you are going to resolve this?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6828">zeroone</a> — Mon Aug 14, 2017 3:17 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Sour]]></name></author>
<updated>2017-08-14T14:21:13-07:00</updated>
<published>2017-08-14T14:21:13-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=16355&amp;p=202480#p202480</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=16355&amp;p=202480#p202480"/>
<title type="html"><![CDATA[Re: Spot bug in Mesen and Nintaco]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=16355&amp;p=202480#p202480"><![CDATA[
I think I finally understand what might be going on. Mesen polls the keyboard/gamepads every time it needs to update the NES controllers' state.  There is no particular point in the frame where this occurs - however, since the frame is executed in a fraction of the time it takes on a real NES (e.g 2-3ms instead of 16ms), the odds of the input changing during the frame is pretty low.  If the game expects the input to change between 2 points in the same frame, it's very unlikely that it would (the keypress would need to occur within that window).  Odds are you are pressing the controller while the emulation thread is sleeping (between both frames) - this is probably why playing the game with no speed limit fixes the issue.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7406">Sour</a> — Mon Aug 14, 2017 2:21 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Alyosha_TAS]]></name></author>
<updated>2017-08-14T13:26:08-07:00</updated>
<published>2017-08-14T13:26:08-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=16355&amp;p=202469#p202469</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=16355&amp;p=202469#p202469"/>
<title type="html"><![CDATA[Re: Spot bug in Mesen and Nintaco]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=16355&amp;p=202469#p202469"><![CDATA[
<div class="quotetitle">zeroone wrote:</div><div class="quotecontent"><br /><div class="quotetitle">Mednafen wrote:</div><div class="quotecontent">1: Game reads input port, checks for changes from previous state.<br />2: Emulator updates emulated gamepad state.<br />3: Game reads input port again to set previous state variables.<br /><br />With various lengths of time passing between the steps.<br /></div><br /><br />If the game polls the controller ports twice within the same frame and it only looks for changes between those 2 polls, then it would occasionally fail to detect even on real hardware.</div><br /><br />Only rarely. Since the total polling routine takes about 30 scanlines you have about a 10% change of this happening on hardware. But in NEStaco there seems to be about a 100% chance, since trace logger indicates that a 'frame' starts at scanline -1 but at that point 1 of the 3 controller polls has already taken place.<br /><br />It's actually more of a mystery how it ever accepts any input, since this seems like it should fail every time.   <img src="http://forums.nesdev.com/images/smilies/icon_confused.gif" alt=":?" title="Confused" /> <br /><br />Also when I was using trace logger, sometimes the trace would start at random scanlines, I'm not sure why.<br /><br />EDIT: I should be clear that I am referring to what is happening in NESTaco.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7612">Alyosha_TAS</a> — Mon Aug 14, 2017 1:26 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[zeroone]]></name></author>
<updated>2017-08-14T09:40:15-07:00</updated>
<published>2017-08-14T09:40:15-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=16355&amp;p=202450#p202450</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=16355&amp;p=202450#p202450"/>
<title type="html"><![CDATA[Re: Spot bug in Mesen and Nintaco]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=16355&amp;p=202450#p202450"><![CDATA[
<div class="quotetitle">Mednafen wrote:</div><div class="quotecontent"><br />1: Game reads input port, checks for changes from previous state.<br />2: Emulator updates emulated gamepad state.<br />3: Game reads input port again to set previous state variables.<br /><br />With various lengths of time passing between the steps.<br /></div><br /><br />If the game polls the controller ports twice within the same frame and it only looks for changes between those 2 polls, then it would occasionally fail to detect even on real hardware.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6828">zeroone</a> — Mon Aug 14, 2017 9:40 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2017-08-14T08:53:37-07:00</updated>
<published>2017-08-14T08:53:37-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=16355&amp;p=202447#p202447</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=16355&amp;p=202447#p202447"/>
<title type="html"><![CDATA[Re: Spot bug in Mesen and Nintaco]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=16355&amp;p=202447#p202447"><![CDATA[
At what (x, y) position do writes to $4016 occur in both emulators where the game works and emulators where it fails?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Mon Aug 14, 2017 8:53 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Mednafen]]></name></author>
<updated>2017-08-14T08:34:06-07:00</updated>
<published>2017-08-14T08:34:06-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=16355&amp;p=202445#p202445</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=16355&amp;p=202445#p202445"/>
<title type="html"><![CDATA[Re: Spot bug in Mesen and Nintaco]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=16355&amp;p=202445#p202445"><![CDATA[
1: Game reads input port, checks for changes from previous state.<br />2: Emulator updates emulated gamepad state.<br />3: Game reads input port again to set previous state variables.<br /><br />With various lengths of time passing between the steps.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=1026">Mednafen</a> — Mon Aug 14, 2017 8:34 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[zeroone]]></name></author>
<updated>2017-08-14T08:26:21-07:00</updated>
<published>2017-08-14T08:26:21-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=16355&amp;p=202444#p202444</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=16355&amp;p=202444#p202444"/>
<title type="html"><![CDATA[Re: Spot bug in Mesen and Nintaco]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=16355&amp;p=202444#p202444"><![CDATA[
<div class="quotetitle">Mednafen wrote:</div><div class="quotecontent"><br />The game is probably poorly written in such a way that updating emulated gamepad state only around a certain single point in a frame will cause input changes to be ignored by the game.  Try updating state at NMI time instead of near line 0, or vice-versa, to check.<br /></div><br /><br />But, it's a loop.  If the actual controller hardware is polled once a frame and that recorded state is made available to the controller ports at any time within the loop, how does it matter?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6828">zeroone</a> — Mon Aug 14, 2017 8:26 am</p><hr />
]]></content>
</entry>
</feed>