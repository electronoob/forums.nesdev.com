<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Designing a NES compatible console - nesdev designs, part 2.</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Designing a NES compatible console - nesdev designs, part 2.</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=5&amp;t=16181">http://forums.nesdev.com/viewtopic.php?f=5&amp;t=16181</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>5</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FrankenGraphics</b> [ Thu Jul 06, 2017 11:54 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Designing a NES compatible console - nesdev designs, part 2.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />We've had the <a href="http://forums.nesdev.com/viewtopic.php?f=5&amp;t=16010" class="postlink">NesDev designs a console</a> thread, where many cool ideas were presented, and we've had <a href="http://forums.nesdev.com/viewtopic.php?f=5&amp;t=16176" class="postlink">the latest thread on the homebrew scene</a>, which is largely, as the article discusses, about why NES is the predominant homebrew platform for games.  I've grown determined that if we would design a console, it would have to be backwards compatible with the NES, for reasons mentioned in those threads. <br /><br />The purpose of this thread is to discuss that particular outlook; narrowing down the options to a new console that can chew old nes games.<br /><br />To get things started, this is a rudimentary treatise i came up at downtime during work. The working name is &quot;N+&quot; throughout the document: <br /><br /><strong>1) Chief goals (as i imagine them):</strong><br />1.1) Establish a standard for the production and emulation of a nesdev-designed console that is close to 100% backwards compatibility with the current software library for the NES. If there's a few obscure wierdo games that won't make it, though, it's not much of a problem.<br />1.2) Emulation should be relatively easy/effortless; mainly or wholly building on device blocks already present in NES emulation.<br />1.3) FPGA Programming should at least to some extent be repeatable, that is, reusing blocks, to lessen the burden. <br />1.4) The standard should be open to anyone who wants to pursue coming up with a working physical unit. <br />1.5) The experience should be recognizable as something NES-like. Think (loosely about) Shovel Knight. <br /><br /> <br /><strong>2) Audio:</strong><br />2.1) For maximum compability with games; old, new, future, famicom and nes, the ext. audio line will be bridged. HOWEVER,<br />2.2) if no cartridge makes the connection complete, it will be pulled to an internal extra APU; let's call it APU2. <br />2.3) The design of APU2 should, for the ease of emulation and (possibly) FPGA programming, either be (A) a full clone of the original APU (APU1), or (B) a well-known, documented and impremented audio device such as the Famicom Disk System Wavetable synth. <br />2.4) &quot;N+&quot; games may use this extra built-in audio, or its own device, like any ”expansion sound” game does today, ensuring maximum forward-compability aswell. Looking at recent development, expansion audio will become more common in NES homebrewing.<br />2.5) The fact that there's an internal ”expansion audio” device means that future homebrew using the extended capabilities of ”N+” don't have to have an expensive synth device onboard to have impressive sound features. It will keep production costs down for anyone not wanting a specific synth. <br /> <br /><br /><strong>3) Picture Processing</strong><br />3.1) The design assumes cloned instances of the original PPU, again for the ease of emulation and FPGA programming, rather than designing a whole new PPU/GPU. <br />3.2a) There's two roads here: In a physical NES you could theoretically daisy-chain one PPU to another. The picture of the one ”plugged in” would be rendered as background using the subpalettes of the other PPU:s background layer. This would yield more layers, but not more simultaneous subpalettes, and it would consequently also greatly lessen the versatility of the daisychained PPU:s sprites.  <br />3.2b) The other road would be layering different PPU instances externally via another block. We would gain full control of each PPU:s full colour capability (including individual emphasis bit settings, allowing a more nuanced and wider total master palette), and possibly even control over blending modes, ordering, and opacity.  <br />3.3) Depending on cost and FPGA limits, the number of PPU instancesin the design might vary. My suggestion is two or three. Just two will yield some great rewards, but you cannot facilitate all of them at the same time without sacrifices. Three covers about all bases i can think of*. More layers will likely result in diminishing returns per PPU.<br /> <br /><strong>4) CPU:</strong><br />4.1) Could be FPGA emulated, but is there a market-available microprocessor that's 100% backwards compatible with the 6502?  That would save logic on the FPGA and save time developing it, at the cost of one extra unit. <br />4.2) Unless it somehow breaks compatibility, let's have decimal mode.<br />4.3) Programmable frequency (adjust to regions and possibly new modes) <br /><br /><br /><strong>5) Memory:</strong><br />5.1) For CIRAM, No reason not to go for 8kB, right?<br />5.2) Internal ExRAM: A register could be set to enable internal ExRAM for the PPU:s. This way, individual carts won't need to have this capability in themselves.<br /><br /><br /><strong>6)Peripheral support and ports: </strong><br />6.1) 2 controller ports are minimum, 4 are preferrable. <br />6.2) How to make the console &quot;controller with more buttons&quot; ready?<br />6.3) How to support light gun games in this era? <br />6.4) Console to console connection for local multiplayer gaming?<br /><br /><br /><strong>7) Software Standards:</strong><br />7.1) Software should be categorized for users, perhaps as follows:<br />a)NES software (works on both, but no additional features on ”N+”)<br />b)NES/N+ software (works on both, but with additional features on ”N+”)<br />c)N+ (is using features of the ”N+” so extensively/intricately it's no longer compatible with the NES)<br />7.2) The golden mark for nesdev homebrewers would probably be ”NES/N+” as that's how you get most to use your software while being able to add extras if you want to, but you're free to do N+ only. <br /><br /><br /><strong>Notes:</strong><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">*Some practical PPU configurations, using 2 vs 3 instances:<br /><br />Imagine a layer system where the top is shown front-most.<br /><br />PPU1 BG<br />PPU1 Sprites<br />-----------------------<br />PPU2 Sprites<br />PPU2 BG<br /><br />= Double the scanline tolerance and max sprite count. Concealing foreground, walk-in-front-of background Simple.<br /><br />PPU1 Sprites<br />PPU2 BG<br />------------------<br />PPU 1 Sprites<br />PPU 2 BG <br /><br />or <br /><br />PPU1 Sprites<br />PPU1 BG<br />------------------<br />PPU2 BG<br />PPU2 Sprites<br /><br />= Normal gameplay on PPU1, Added background sceneries and sprite effects in the rear of things. <br /><br />Those are the basic options. Either double sprite count/scanline tolerance on what is percieved as the same plane, OR amazing sceneries. You might be able to hack around this limitation, with some pain and limits. With 3 PPU:s, however:<br /><br />PPU1 BG<br />PPU1 Sprites<br />-----------------<br />PPU2 Sprites<br />PPU2 BG<br />-----------------<br />PPU3 BG<br />PPU3 Sprites<br /><br />(For example)<br /><br />= Double sprite count/scanline tolerance on what is percieved as the same plane, AND amazing sceneries without hassle.</div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Jul 06, 2017 12:26 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Designing a NES compatible console - nesdev designs, par</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">FrankenGraphics wrote:</div><div class="quotecontent">1.1) Establish a standard for the production and emulation of a nesdev-designed console that is close to 100% backwards compatibility with the current software library for the NES. If there's a few obscure wierdo games that won't make it, though, it's not much of a problem.</div><br />Would <em>Castlevania III: Dracula's Curse</em>, <em>Laser Invasion</em>, and six Koei war sims (source: <a href="http://bootgod.dyndns.org:7777/search.php?region_op=%21%3D%60%40%60&amp;region=Japan&amp;ines=5&amp;group=groupid" class="postlink">non-Japan MMC5 games in NesCartDB</a>) be &quot;a few obscure wierdo games&quot;? Or were you asking for something like &quot;<em>Super Cars</em>, Virgin's <em>Aladdin</em>, and <em>STREEMERZ</em> break, and <em>Puzznic</em> would need additional testing&quot; (source: <a href="https://wiki.nesdev.com/w/index.php/CPU_unofficial_opcodes#Games_using_unofficial_opcodes" class="postlink">&quot;Games using unofficial opcodes&quot; on the wiki</a>)?<br /><br /><div class="quotetitle">FrankenGraphics wrote:</div><div class="quotecontent">1.5) The experience should be recognizable as something NES-like. Think (loosely about) Shovel Knight.</div><br />If <em>Shovel Knight</em> is a target, then 7.16 MHz (3 master clocks per pixel) with a 336x224 pixel active area needs to be an option, so that games can be optimized for anamorphic widescreen play while retaining a pan-and-scan mode for 4:3 sets. This means the high bit of X coordinates will need to go somewhere.<br /><br /><div class="quotetitle">FrankenGraphics wrote:</div><div class="quotecontent">2.3) The design of APU2 should, for the ease of emulation and (possibly) FPGA programming, either be (A) a full clone of the original APU (APU1), or (B) a well-known, documented and impremented audio device such as the Famicom Disk System Wavetable synth.</div><br />&quot;Impremented&quot;? Found the Japanese :p<br /><br />If we're going FDS, why not just go Namco 163? It's the same thing, just with more channels and without a hardware pitch envelope. Load the appropriate waveforms, and it can replicate the capability of the FT community's favored VRC6.<br /><br /><div class="quotetitle">FrankenGraphics wrote:</div><div class="quotecontent">3.2a) There's two roads here: In a physical NES you could theoretically daisy-chain one PPU to another.<br />[...]<br />3.2b) The other road would be layering different PPU instances externally via another block.</div><br />In either case, you'd need to hook up some sort of video memory to this second PPU.<br /><br /><div class="quotetitle">FrankenGraphics wrote:</div><div class="quotecontent">is there a market-available microprocessor that's 100% backwards compatible with the 6502?</div><br /><a href="http://www.westerndesigncenter.com/wdc/" class="postlink">Western Design Center</a> still sells the 65C02 and 65816, as well as versions of both with a few integrated MMIO peripherals. These wouldn't run games using most unofficial instructions, though games using $89 (NOP #ii on 6502, BIT #ii on 65C02 and 65816) might squeak by. There may be problems with a few page crossing penalty edge cases.<br /><br /><div class="quotetitle">FrankenGraphics wrote:</div><div class="quotecontent">5.1) For CIRAM, No reason not to go for 8kB, right?</div><br />That depends on how many PPUs. One PPU can address 4 KiB at once, but you might want two 4 KiB banks for the playfield and status bar. And you might want CHR RAM for the second PPU, or both if you want to attempt support for single-chip games.<br /><br /><div class="quotetitle">FrankenGraphics wrote:</div><div class="quotecontent"><strong>6)Peripheral support and ports: </strong><br />6.1) 2 controller ports are minimum, 4 are preferrable. <br />6.2) How to make the console &quot;controller with more buttons&quot; ready?</div><br />NES and Super NES controller ports have the same protocol, and there are pin adapters for both. The biggest problem would be in sourcing receptacles for these.<br /><br /><div class="quotetitle">FrankenGraphics wrote:</div><div class="quotecontent">6.3) How to support light gun games in this era?</div><br />We can answer that for sure in 2026 when the Wii Remote patents expire.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FrankenGraphics</b> [ Thu Jul 06, 2017 1:13 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Designing a NES compatible console - nesdev designs, par</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">Would <em>Castlevania III: Dracula's Curse</em>, <em>Laser Invasion</em>, and six Koei war sims (source: <a href="http://bootgod.dyndns.org:7777/search.php?region_op=%21%3D%60%40%60&amp;region=Japan&amp;ines=5&amp;group=groupid" class="postlink">non-Japan MMC5 games in NesCartDB</a>) be &quot;a few obscure wierdo games&quot;? Or were you asking for something like &quot;<em>Super Cars</em>, Virgin's <em>Aladdin</em>, and <em>STREEMERZ</em> break, and <em>Puzznic</em> would need additional testing&quot; (source: <a href="https://wiki.nesdev.com/w/index.php/CPU_unofficial_opcodes#Games_using_unofficial_opcodes" class="postlink">&quot;Games using unofficial opcodes&quot; on the wiki</a>)?</div><br /><br />I was thinking about the latter. I don't think it's a too large sacrifice if some games would break because of illegal opcodes not being handled correctly anymore. <br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">If <em>Shovel Knight</em> is a target, then 7.16 MHz (3 master clocks per pixel) with a 336x224 pixel active area needs to be an option, so that games can be optimized for anamorphic widescreen play while retaining a pan-and-scan mode for 4:3 sets. This means the high bit of X coordinates will need to go somewhere.<br /></div><br /><br />I didn't think of <em>SK</em> as a literal target set of features, but it almost sounds like an option.<br /> <br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">If we're going FDS, why not just go Namco 163? It's the same thing, just with more channels and without a hardware pitch envelope. Load the appropriate waveforms, and it can replicate the capability of the FT community's favored VRC6.</div><br />If that's more flexible, that sounds better (in a double sense). Just about anything hardware accelerated is a welcome bonus, but if we're going with a stronger CPU at a programmable frequency, it matters even less. <br />Edit: Actually, say we locked in on Namco 163 as the internal expansion, we could practically begin to make &quot;n+&quot; soundtracks this very day (as opposed to a cloned 2A03/07) with existing software (even though FamiTracker doesn't have a full implementation at this point). That's a plus. A slight minus would be implementing a low pass filter to cancel the multichannel noise. While it's a super simple electric device, it'll be varyingly supported in emulators. Not a big problem, but it's there. <br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><a href="http://www.westerndesigncenter.com/wdc/" class="postlink">Western Design Center</a> still sells the 65C02 and 65816, as well as versions of both with a few integrated MMIO peripherals. These wouldn't run games using most unofficial instructions, though games using $89 (NOP #ii on 6502, BIT #ii on 65C02 and 65816) might squeak by. There may be problems with a few page crossing penalty edge cases.</div> Nice! So, it needs to be tested to verify the exact compability rate, but sounds acceptable from that standpoint, i think. The improved address range means we could map &quot;n+&quot; extras more liberally, like as much internal RAM we would need.   <br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">NES and Super NES controller ports have the same protocol, and there are pin adapters for both. The biggest problem would be in sourcing receptacles for these.</div><br /><br />The alternative would be switching to a standard with available parts, which would require modifications/adapters to existing nes/snes controllers, but make it easier to manufacture new controllers fit for the task. I don't know if the gain equates the mess, though.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>psycopathicteen</b> [ Thu Jul 06, 2017 7:49 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Designing a NES compatible console - nesdev designs, par</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If we're using an RGB palette, which NES palette should we use?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FrankenGraphics</b> [ Thu Jul 06, 2017 11:19 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Designing a NES compatible console - nesdev designs, par</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I think Video Output is a whole category in itself. <br /><br />8.1) Should we assume one video out standard or several? Which one/s? Having multiple options would add to the unit production price. Things to consider/balance: The aim to make the experience nes-like vs modern conditions. A compromise could be one output, and expansion pins for those wanting to tinker an expansion. There's also the option to omit the row of expansion pins and leave their solder holes unpopulated to cut costs even further (hardware like that tends to build up on the price per unit), assuming the average builder or buyer will be satisfied with just the one option. <br /><br />8.2) A maxim could be one unit, all regions. Then we would need the selection of master palette to be programmable to some extent. <br />Many emulators already kind of cover this feature via preferences, which would at least be enough when developing test suites, demos, games and other software. Unless animated changes to the master palette becomes a feature.  <img src="./images/smilies/icon_eek.gif" alt=":shock:" title="Shocked" /><br /><br />And Regions could also be a distinct category:<br /><br />9.1) Three options for setting default region: A) Jumpers on the PCB (no switch saves money), or B) programmable via a &quot;system cartridge/ROM&quot;, or C) an onboard BIOS of sorts. Proposed interface: Power on without cartridge. Possibly hold down start on controller, else console behaves like a NES with no CIC. I'm leaning towards (B) because it's the simplest solution requiring the least additions. Providers could program the unit prior to shipping according to wishes, and users could run the system software off any cart providing the necessary means, such as a downloadable free ROM running on powerpak/everdrive and the like, or via included settings in an &quot;n+&quot; game.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FrankenGraphics</b> [ Fri Jul 07, 2017 12:24 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Designing a NES compatible console - nesdev designs, par</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The more i look at N163, the more certain i become it's the right choice for an internal &quot;ext audio&quot;. <br /><br />Wavetable synthesis is easily the most flexible form of synthesis on the table without using a sampler. With it, we can at least to some extent mimic subractive, additive and FM synthesis. It would cover most needs that VRC6 (like tepples said), VRC7 (partly), MMC5 and sunsoft 5b pulses, FDS sound would. It also goes beyond the sound capabilities of those devices in some areas.<br /><br />What's omitted would be full-blown FM capabilities and the extra DCM of the MMC5. <br /><br />Note that the wavetable of the N163 has a granularity up to 256 samples per cycle. Currently, the FamiTracker engine (and probably any emulator not updated post-discovery) only offers a wave size of 32, which currently limits its capabilities to simulate other forms of synthesis by some. So there's additional untapped potential.<br /><br />Any other thoughts?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>GradualGames</b> [ Fri Jul 07, 2017 5:51 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Designing a NES compatible console - nesdev designs, par</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Wonder if somebody could just ask bunnyboy to add extended features to the AVS? (after raising funds perhaps) After all it took him years of research and perfection to get it to work with the NES library. Adding NEW features that would only work with new <s>homebrews</s> games, I imagine, would be perhaps easier (though in the realm of electronics design, I know nothing)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FrankenGraphics</b> [ Fri Jul 07, 2017 6:32 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Designing a NES compatible console - nesdev designs, par</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Maybe one thing won't exclude the other - i mean, once the specifications have been chiseled out sufficiently, nothing's to stop anyone (be it the community, a person or a business) from doing a crowdfunding campaign to make the thing real. In that respect, bunnyboy would be halfway (so to speak) there thanks to prior work, should he be interested.<br /><br />I also suppose that at some point, the standard/specification will need to be informed by actual tests and experiments which will require labour put into practical hardware-, software-, and assets design. The hardware bit will introduce costs above the time spent, which could be reason for a fundraiser.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FrankenGraphics</b> [ Fri Jul 07, 2017 7:30 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Designing a NES compatible console - nesdev designs, par</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />How's this for a first-draft roadmap? Envisioned as a community project with lots of room for individual projects for anyone interested enough, over a couple of/maybe several years:<br /><br />-Establish what blocks to reuse, and what (if any) that must be new.<br />-Some time later, have at least an emulator or fork of emulator run a conceptual emulation, with a few rudimentary demos.<br />-Maybe involve the compo to some extent at this point.For example,  &quot;n+&quot; features could be rewarded by a &quot;best n+ prototype&quot; award judged separately. Games that are both legit NES roms and have &quot;n+&quot; features don't get points for the latter in the ordinary competition. It's just a special award. <br />-Findings, notes and experiences from experimenting with practical &quot;n+&quot; software (and hardware) implementations will inform the final design of the new console. Having experimented means you have more to say about how the details should work, which is kind of rewarding in itself.<br />-Rince and repeat until we reach a point where it's time to get into the actual EE part of the project.<br />-Hardware buffs can more or less take it from there if they're interested.<br />-A compo where entries whose &quot;n+&quot; features are actually legit for cart inclusion is held somewhere beyond this point.  This to incite development and give the console a good starting field upon release.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Fri Jul 07, 2017 8:40 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Designing a NES compatible console - nesdev designs, par</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />One thing that's much needed (sorry if it's already been brought up, I'm out and couldn't read everything) is DMA to VRAM, specially if the dual/triple PPU design is used. With the current architecture, we barely have enough time to pull off fast movement/animations, if we have twice or 3 times the amount of updates to make, the good old unrolled PLA/STA loop just won't cut it.<br /><br />Another concern is the attribute tables, that even DMA can't help if you need to update columns, due to the lack of an &quot;increment by 8&quot; mode in the PPU. For this reason, a new attribute table layout a la MMC5's ExGraphics would not only improve the visuals but also simplify and speed up scrolling (as long as there's a DMA feature).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>TmEE</b> [ Fri Jul 07, 2017 9:12 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Designing a NES compatible console - nesdev designs, par</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The CPU will definitely have to be at least twice the speed to get anywhere, there's lot more housework to do with all the extra hardware and you are gonna have less CPU time left for the game.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Fri Jul 07, 2017 9:19 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Designing a NES compatible console - nesdev designs, par</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />DMA, increased CPU speed, extra VRAM... This sounds kinda like how the GBC improved the original GB. Can we draw some inspiration from how Nintendo upgraded that system while maintaining compatibility with older games?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Jul 07, 2017 9:29 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Designing a NES compatible console - nesdev designs, par</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You're trying to launch a new famiclone console, and what you've described so far is an NES with two PPUs, a Namco WSG-inspired wavetable synth, and Super NES controller ports. Thus it is to the NES as the SuperGrafx is to the PC Engine.<br /><br />Anyone considering an N+ game would have to answer a question: &quot;Why not just make a Super NES game? It'll work on all the Super NES and FC Twin consoles out there, which is far greater than the N+ install base.&quot; <a href="https://forums.nesdev.com/viewtopic.php?p=163304#p163304" class="postlink">The traditional answer to that</a> is that people expect a Super NES game to look no less graphically complex than the Super NES launch titles, such as <em>Super Mario World</em>, whereas an NES game's art style can be anywhere between <em>Donkey Kong</em> and <em>Bucky O'Hare</em>.<br /><br />So N+ games would have to fit into a narrow gap: projects that are too complex for the NES, less complex than <em>SMW</em>, and appealing to those few people who have purchased an N+ console. Like <a href="https://en.wikipedia.org/wiki/N%2B" class="postlink">Metanet's <em>N+</em></a>, I assume.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Fri Jul 07, 2017 9:38 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Designing a NES compatible console - nesdev designs, par</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You still won't beat an Allwinner system-on-a-chip running a NES emulator.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FrankenGraphics</b> [ Fri Jul 07, 2017 9:54 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Designing a NES compatible console - nesdev designs, par</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />There's a bit more appeal to that than filling the gap between nes and snes. First off, the message is the medium - meaning in this case, the format of the medium will be embedded in every expression done with it. It will be a decidedly NES-like expression. SNES looks, sounds, plays different. And is expected to, as you mention. Secondly, the scope of a project is also very NES-like. That's the real meat on the hook. You can make a game just like you would a NES game, but more conveniently so because you can use the extra resources if that's a quicker way to completion. Or, you could complement your code with richer assets. Or, you could just make a NES ROM that plays normalt on the NES but adds footsteps to the walking cycle without cutting music on the &quot;n+&quot; (just an example). It would, simply put, make homebrew more convenient for those who want to keep the scope similar, give more ways to reach your goal, which should especially be attractive for beginner-brewers (just consider what extra cycles would do on the actual nes), or, you could team up and make full use of everything - if that's your thing.<br /><br />The install base will be small; especially on physical units. But so would any community developed 'retro' console. I think a nes compatible one would be more rational.<br /><br />Oh, and &quot;n+&quot; is of course just a placeholder name for the standard.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>5</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>