<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - MD vs. SNES</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">MD vs. SNES</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=12&amp;t=6842">http://forums.nesdev.com/viewtopic.php?f=12&amp;t=6842</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>5</strong> of <strong>8</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Sik</b> [ Tue Aug 17, 2010 11:45 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">byuu wrote:</div><div class="quotecontent"><div class="quotetitle">Sik wrote:</div><div class="quotecontent">EDIT: talking about SA-1, these instructions are listed in the docs: <!-- m --><a class="postlink" href="http://srb2town.sepwich.com/junk/lolinstructions.PNG">http://srb2town.sepwich.com/junk/lolinstructions.PNG</a><!-- m --><br />(just mentioning for the sake of it, couldn't miss the chance XD)</div><br />Those are SuperFX instructions, but yes. I've tried to make a juvenile program, but haven't had much luck.</div><br />Gah. I hate going through the <span class="posthilit">SNES</span> docs to figure out to what does each thing belong, OK? =P (I guess I skipped where did the SuperFX stuff start)<br /><br /><div class="quotetitle">byuu wrote:</div><div class="quotecontent"><div class="codetitle"><b>Code:</b></div><div class="codecontent">SexyPlot:<br />&nbsp; STOP<br />&nbsp; LINK<br />&nbsp; WITH<br />&nbsp; CACHE<br />&nbsp; AND<br />&nbsp; HAVE<br />&nbsp; SEX<br />&nbsp; OR<br />&nbsp; ; ... I got nothin'</div></div>
<br />WTF?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>psycopathicteen</b> [ Tue Aug 17, 2010 12:06 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">TmEE wrote:</div><div class="quotecontent"><div class="quotetitle">byuu wrote:</div><div class="quotecontent">You don't even want to know the bandwidth without DMA.</div><br /><br />Hehe, must be really slow then <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" /><br /><br /></div>
<br />
<br />Well, if you want to do something completely useless like filling the v-ram with $05 without a DMA, using the fastest way method possible you can do this.
<br />
<br />
<br />rep #$20
<br />lda #$2100
<br />tcd
<br />lda #$0505
<br />sta $18
<br />sta $18
<br />sta $18
<br />sta $18
<br />sta $18
<br />sta $18
<br />sta $18
<br />sta $18
<br />sta $18
<br />sta $18...
<br />
<br />In 16-bit mode "sta $18" takes 4 cycles and stores 2 bytes, so it takes 2 cycles to load 1 byte, which should be about 4kB.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Tue Aug 17, 2010 1:04 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">In 16-bit mode "sta $18" takes 4 cycles and stores 2 bytes, so it takes 2 cycles to load 1 byte, which should be about 4kB.</div>
<br /><span class="posthilit">SNES</span> timing is best done in master clocks, not CPU cycles, since the cycle length varies depending on where the memory is.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>byuu</b> [ Tue Aug 17, 2010 3:47 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Sik wrote:</div><div class="quotecontent">WTF?</div><br /><br />I'll be nice:<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I've tried to make a juvenile program, but haven't had much luck. <br />Maybe one of you can come up with a funnier sentence using only the above words.</div>
<br />
<br />In other words, as you astutely pointed out with your "lolinstructions.PNG" image, many of the opcode names sound rather dirty, or juvenile. So that was an example of trying to string multiple opcodes together in such an order that it comes off as if you were actually saying something dirty or offensive. I screwed it up anyway because HAVE isn't a valid opcode.
<br />
<br />If you still don't follow, then I will quote Samuel L. Jackson from Pulp Fiction. You've been warned :P

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Wed Aug 18, 2010 12:42 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />SEX is an instruction. Oh my god. What were they thinking ??

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>mic_</b> [ Wed Aug 18, 2010 1:14 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Maybe the same thing as the <a href="http://ironbark.bendigo.latrobe.edu.au/staff/mal/6809.htm" class="postlink">6809 designers</a>? The 6809 also had a COMA instruction (which sadly doesn't put the processor in a hibernated state for an indefinite period of time).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>psycopathicteen</b> [ Wed Aug 18, 2010 7:38 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">blargg wrote:</div><div class="quotecontent"><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">In 16-bit mode "sta $18" takes 4 cycles and stores 2 bytes, so it takes 2 cycles to load 1 byte, which should be about 4kB.</div><br /><span class="posthilit">SNES</span> timing is best done in master clocks, not CPU cycles, since the cycle length varies depending on where the memory is.</div>
<br />
<br />I didn't touch work ram.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>MottZilla</b> [ Wed Aug 18, 2010 9:13 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />That wasn't his point. Point was that CPU Cycles mean nothing because depends on access to FastROM, SlowROM, WRAM, Registers, and Internal Operations the length of time taken will vary. And if you are concerned about the actual time you have in VBLANK to transfer data that matters.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>psycopathicteen</b> [ Wed Aug 18, 2010 9:22 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />sta $18
<br />
<br />okay lets analyse this instruction
<br />
<br />first cycle it accesses ROM (3.58 Mhz)
<br />second cycle it access ROM again (3.58 Mhz)
<br />third cycle it accesses v-ram data port (3.58 Mhz)
<br />last cycle it accesses v-ram data port (3.58 Mhz)
<br />
<br />I didn't touch anything that used 2.68 Mhz.
<br />
<br />Anyway, my post was supposed to be a joke since nobody would ever use that kind of method in the first place.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tomaitheous</b> [ Thu Aug 19, 2010 10:39 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">blargg wrote:</div><div class="quotecontent"><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Who knows, maybe Nintendo went with the 65816 rather than the 68000 because they had envisioned NES compatibility.</div><br />Or developer compatibility. <strong>By using a similar scheme as the NES, all the NES developers would be able to pick up the <span class="posthilit">SNES</span> more quickly.</strong> Same for the graphical scheme, which is quite similar.</div><br /><br /> That's what I thought as well. And probably the biggest reason why the Hudson chose to go with a 65x variant processor for the PC-Engine over a 16bit bus processor (as both the 16bit graphic chips support full 16bit data bus mode processor interface as well). <br /><br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">And the PC Engine has more colors but only one tilemap, and 8KB of RAM, and an 8-bit CPU, besides the fact that nothing was known about the <span class="posthilit">SNES</span> (was it even in active development or just research phases?).</div><br /><br /> I don't see what that has to do with Sega's decision on CRAM?<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Like I said, it's very possible that CRAM memory actually ate up a lot of space on the die. CRAM memory needs to be fast so it's probably SRAM, which is usually implemented using complex gates (e.g. NOR gates), which eat up quite a fair share of transistors and thereby space. VSRAM may be the same too, which may explain why it has its own memory instead of being stored in VRAM (which is a separate chip in the original VDP). </div>
<br /> And? By comparison, it's still only bytes, not kilobytes more (or more precisely, bits. I highly doubt CRAM is 16bit wide, but more likely 9bit internally). I highly doubt it would have broke the bank or come anywhere near that, to include another 64 entries of 9bit SRAM on the chip. Giving sprites access to either block and each layer access to either block. No external DAC needed. 
<br />
<br /> Anyway, wasn't this thread originally about which system is easier to program for? Or did I miss something?
<br />
<br /> Not which is better, but which is easier or more straight forward:
<br /> Genesis:
<br /> 68k;
<br /> A very lovely cpu. The instruction set is very powerful in that you don't have to write a lot of small logic. This translated into speed, of course, if it matches to what you need to accomplish. And at other times, it can be slow. But the main point, is that it's very nice. The addressing modes (EA) being the real bread and butter, IMO. Follow very closely with a straight linear address range. No banking or mapping. Pure bliss. I have to say, from the small projects I've done on the 68k - it was like I was on vacation (coming directly off of a 65x project). The downsides were small. Minding your WORD and INT boundaries, small set of address registers (depends on how you code, on the 65x I use a lot of ZP just for address registers - making the 68k feel a little cramped to me in that regard), and unable to create equates for address names (probably just a limitation of the assembler I used). The last one made my code less clear (again, coming from 65x my address regs had corresponding names and even normal zp variables did - ZP being uses a data register VS 68k's use of Dn, by comparison). 
<br /> 
<br />VDP; 
<br />
<br /> Everything is straight forward. Nothing felt convoluted or restricted, much. You have a wide range of sprite sizes for any SAT entry. Tilemaps were easy to setup. Tiles and sprites used the same cell format. You're a little restricted as to where to place the tilemap pointers, but no a problem really. The only thing that I disliked, was the convoluted vram address setup for the COMMAND port. Not sure WTF they were thinking there. It was a real pain/chore first time around, getting used to it. Given how powerful the instruct set it, linear address range, powerful addressing mode, etc - makes it perfect for something like a C compiler. But where's the fun in that??? C for these old consoles? Pfft.
<br />
<br /> Sound;
<br /> 
<br /> Didn't really do anything in this department, but reading over the DOCs - the 2612 looks fairly simple to use (interface with, that is).
<br />
<br /> z80;
<br />
<br /> Haven't touched it yet. I've done some z80 work in the past, and it is what is it. Can't say that I'm a fan of the z80 ('cause I'm not <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" />), but you're not going to be doing a lot with this little as either way.
<br />
<br /> <span class="posthilit">SNES</span>:
<br />
<br /> sPPU;
<br />
<br /> Very convoluted IMO. Lot of strict limitations too on the layout of things (tiles, sprites, formats, etc). Strange, both convoluted, kind of a mess, and strict about layouts, and yet very powerful and a lot of features. 
<br />
<br /> sCPU;
<br />
<br /> It's 65x. Like all 65x based/similar processors, you need to learn to cut on teeth on these. In general, the processor itself isn't that hard to learn (IMO), but becoming really proficient is a whole 'nother story. You can really get some speed out of this arch, but the code almost always results in a convoluted mess of near unreadable code to most other coders. One of the reasons I love this processor. The rewards are worth the labor. But for any sort of speed related programming, definitely *not* a beginners processor. C compilers also suck for this arch (and understandably so).
<br />
<br /> SPC/DSP;
<br />
<br /> Haven't touched either. Sound registers look straight forward. I like the instruction set of the little processor <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /> I'd honestly take a 7.16mhz version of that little 8bit processor over the funky slow banked '816 as the main console processor, but that's just me <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Sik</b> [ Thu Aug 19, 2010 11:17 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tomaitheous wrote:</div><div class="quotecontent"><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">And the PC Engine has more colors but only one tilemap, and 8KB of RAM, and an 8-bit CPU, besides the fact that nothing was known about the <span class="posthilit">SNES</span> (was it even in active development or just research phases?).</div><br /><br /> I don't see what that has to do with Sega's decision on CRAM?</div><br />They most likely thought that having two tilemaps made it superior to the PC Engine (which they didn't care so much anyways since they were looking at the NES), and they probably knew nothing about what the <span class="posthilit">SNES</span> would do with color, so they just stuck with that because it was better than both the Master System and the NES.<br /><br /><div class="quotetitle">tomaitheous wrote:</div><div class="quotecontent"><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Like I said, it's very possible that CRAM memory actually ate up a lot of space on the die. CRAM memory needs to be fast so it's probably SRAM, which is usually implemented using complex gates (e.g. NOR gates), which eat up quite a fair share of transistors and thereby space. VSRAM may be the same too, which may explain why it has its own memory instead of being stored in VRAM (which is a separate chip in the original VDP). </div><br /> And? By comparison, it's still only bytes, not kilobytes more (or more precisely, bits. I highly doubt CRAM is 16bit wide, but more likely 9bit internally). I highly doubt it would have broke the bank or come anywhere near that, to include another 64 entries of 9bit SRAM on the chip. Giving sprites access to either block and each layer access to either block. No external DAC needed. </div><br />Actually, I'm not sure. I should check what happens when reading CRAM, it's possible that actually all 16 bits are stored. Pointless, but hey, this is Sega, they also screwed up majorly other things. I believe this is the same situation for VSRAM (despite the fact that only 10 bits would be needed).<br /><br /><div class="quotetitle">tomaitheous wrote:</div><div class="quotecontent">and unable to create equates for address names (probably just a limitation of the assembler I used)</div><br />Yeah, definitely your assembler. ASM68K supports aliasing of registers.<br /> <br /><div class="quotetitle">tomaitheous wrote:</div><div class="quotecontent">The only thing that I disliked, was the convoluted vram address setup for the COMMAND port. Not sure WTF they were thinking there.</div><br />By doing it this way, the 68000 never gets direct access to video memory and has to go through the VDP. Then the VDP can decide if allow the access or make it wait because it needs the memory first.<br /><br /><div class="quotetitle">tomaitheous wrote:</div><div class="quotecontent"> Sound;<br /> <br /> Didn't really do anything in this department, but reading over the DOCs - the 2612 looks fairly simple to use (interface with, that is).</div><br />Until you try to use the DAC. There's a complete lack of hardware timing, and no buffering at all, so you need to load samples at the exact moment they should play. Not fun at all. That's why many drivers are 68000+Z80, while some are Z80 only and hope it sounds decent, and some simply completely ignore the DAC.<br /><br /><div class="quotetitle">tomaitheous wrote:</div><div class="quotecontent"> z80;<br /><br /> Haven't touched it yet. I've done some z80 work in the past, and it is what is it. Can't say that I'm a fan of the z80 ('cause I'm not <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" />), but you're not going to be doing a lot with this little as either way.</div>
<br />The Z80 is fine... until you stumble against bank switching. What was Sega thinking on? I know that 9 bits don't fit in one byte, but there wasn't any reason for having to write to an address 1 bit per time... that's extremely slow. Writing two bytes (separate addresses if needed) instead would have been much better.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Aug 19, 2010 11:49 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Sik wrote:</div><div class="quotecontent">The Z80 is fine... until you stumble against bank switching. What was Sega thinking on? I know that 9 bits don't fit in one byte, but there wasn't any reason for having to write to an address 1 bit per time</div>
<br />Probably to save pin count, same as on MMC1. The MMC1's serial port allows connection to just D0 and D7 instead of D0, D1, D2, D3, and D4, allowing the IC to use the next smaller package size. Yet NES PCM engines worked around this limitation: how many words can you make before the sun goes down?
<br />
<br />As for "complete lack of hardware timing", can't the Z80 see the HV counter?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>TmEE</b> [ Thu Aug 19, 2010 12:03 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />That timing would be software based, and it would not be too useful... no more than YM2612 timers.
<br />
<br />Regarding serial banker, pincount has nothing to do with it, Z80 is wired parallel to one of the ASICs, and all magic happens in that ASIC.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>psycopathicteen</b> [ Thu Aug 19, 2010 1:43 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Something that was actually a good idea for Nintendo was having a 16x16 pixel tile mode.  No longer a need for metatiles, and you can update a lot more onscreen tiles without running out of time.  I wonder why this wasn't used much.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>MottZilla</b> [ Thu Aug 19, 2010 1:54 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />How do you know that it wasn't used much? I would imagine a fair number of games probably used it. Pretty sure BS-Zelda uses it.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>5</strong> of <strong>8</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>