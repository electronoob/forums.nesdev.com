<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Accessing data or &quot;strings&quot; in data segment</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Accessing data or &quot;strings&quot; in data segment</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=9839">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=9839</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>3</strong> of <strong>4</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dafydd</b> [ Sun Feb 24, 2013 5:26 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Accessing data or &quot;strings&quot; in data segment</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Glad to have that sorted out. Thanks!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Sun Feb 24, 2013 5:33 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Accessing data or &quot;strings&quot; in data segment</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Dafydd wrote:</div><div class="quotecontent">Thanks, but I was referring to those 2KB of internal RAM ($0000-$07FF), which is not laid out in detail on this page. Wasn't very clear there, was I  :wink:</div><br />Hehe, nope not clear, but.  :-)<br /><br />The 2KB of internal RAM from $0000 to $07FF is literally just that -- it's 2KBytes of RAM.  You can do whatever you want with it, however you want... mostly.  I'll explain:<br /><br />Zero page ($00 to $FF addresses when using ZP instructions) resides from $0000 to $00FF.  You can always, of course, access this RAM via non-ZP addressing (e.g. <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">LDA $0000</tt> rather than <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">LDA $00</tt>).<br /><br />The stack &quot;generally&quot; resides between $0100 and $01FF.  You can change this too if you want, by use of the <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">TXS</tt> instruction (e.g. <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">LDX #$04 ; TXS</tt> would move the stack to $0400 to $04FF).  The stack pointer in the CPU (which we all call &quot;S&quot;) defines the upper byte of what the effective 16-bit address would expand to.  Yep, that simple.  But the default is to usually set S=$01.<br /><br />The rest of RAM, and how you use it / where you put what, is <strong>entirely</strong> up to you and your program.  There is absolutely no &quot;universal standard&quot; aside from where ZP lies (you can't change that on 6502/65c02), and the &quot;recommendation&quot; of S=$01.<br /><br />Also, just in case you're wondering if you could do something like set S=$00 -- you sure can, and now the stack resides from $0000 to $00FF and thus &quot;conflicts&quot; with ZP.  So your ZP writes are going to stomp all over the stack, and stack pushes/pops are going to stomp over whatever you may have put in ZP.  So don't do that!.<br /><br />Footnote: On the 65816 (e.g. Super Nintendo/Super Famicom) the situation is different because ZP is no longer hard-wired to $00xx.  You can change it via CPU register &quot;D&quot; (on 65816 it's called &quot;direct page&quot; not &quot;zero page&quot;, hence &quot;D&quot;) -- and a lot of games do to be clever bastards (I'm looking at you, Square/Enix!).  For example they'll do [/tt]LDA #$0021 ; TCD [/tt] to make direct page reside between $2100 and $21FF instead of the usual $0000 to $00FF.  $2100 is where the SNES's memory-mapped registers start -- and then start doing things like [/tt]LDA #$0F ; STA $00[/tt] to write to $2100.  It's faster (less CPU cycles).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sun Feb 24, 2013 5:45 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Accessing data or &quot;strings&quot; in data segment</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">koitsu wrote:</div><div class="quotecontent">The stack &quot;generally&quot; resides between $0100 and $01FF.  You can change this too if you want, by use of the <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">TXS</tt> instruction (e.g. <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">LDX #$04 ; TXS</tt> would move the stack to $0400 to $04FF).  The stack pointer in the CPU (which we all call &quot;S&quot;) defines the upper byte of what the effective 16-bit address would expand to.  Yep, that simple.  But the default is to usually set S=$01.</div><br />Sorry to butt in, koitsu, but this is all wrong. Maybe you're thinking of the SNES or something, but on the 6502 the stack is hardcoded to $0100-$01FF, no way to change that. And the stack pointer (S) is the LOW byte, not the HIGH byte.<br /><br />S is usually initialized as $FF, so that the stack is filled from $01FF down, but nothing stops you from initializing S to $7F and using the upper 128 bytes of page 1 for something else. Or you can initialize it to $FF anyway and use the bottom 128 bytes of page 1 for something else, as long as the stack doesn't grow larger than 128 (otherwise it will start overwriting your variables, not good!).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dafydd</b> [ Sun Feb 24, 2013 5:53 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Accessing data or &quot;strings&quot; in data segment</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It's both encouraging and discouraging, in a way, to see people with a postcount that high be wrong about something like this... <img src="./images/smilies/icon_lol.gif" alt=":lol:" title="Laughing" /><br /><br />What happens on stack overflow, btw? Does it just wrap back around to $01FF, is there an interrupt, what? Conversely, what happens on stack underflow?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sun Feb 24, 2013 6:08 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Accessing data or &quot;strings&quot; in data segment</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Push with SP=$0100 wraps SP to $01FF. Pull with SP=$01FF wraps SP to $0100.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dafydd</b> [ Sun Feb 24, 2013 6:14 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Accessing data or &quot;strings&quot; in data segment</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Alright then, I think that's all I need to know... for now. I'm so excited about finally getting this ball rolling, haha.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Sun Feb 24, 2013 10:10 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Accessing data or &quot;strings&quot; in data segment</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><div class="quotetitle">koitsu wrote:</div><div class="quotecontent">The stack &quot;generally&quot; resides between $0100 and $01FF.  You can change this too if you want, by use of the <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">TXS</tt> instruction (e.g. <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">LDX #$04 ; TXS</tt> would move the stack to $0400 to $04FF).  The stack pointer in the CPU (which we all call &quot;S&quot;) defines the upper byte of what the effective 16-bit address would expand to.  Yep, that simple.  But the default is to usually set S=$01.</div><br />Sorry to butt in, koitsu, but this is all wrong. Maybe you're thinking of the SNES or something, but on the 6502 the stack is hardcoded to $0100-$01FF, no way to change that. And the stack pointer (S) is the LOW byte, not the HIGH byte.<br /><br />S is usually initialized as $FF, so that the stack is filled from $01FF down, but nothing stops you from initializing S to $7F and using the upper 128 bytes of page 1 for something else. Or you can initialize it to $FF anyway and use the bottom 128 bytes of page 1 for something else, as long as the stack doesn't grow larger than 128 (otherwise it will start overwriting your variables, not good!).</div><br />You're free to butt in (as is everyone -- please do!).  Yep, I'm 100% wrong about this.  More than happy to admit that -- it's good to be wrong.<br /><br />For whatever reason at that moment in time, my brain intermixed two separate things: the fact that the upper value of the effective 16-bit value of S on the 6502 is hard-wired to $01, and B on the 65816 being changeable using <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">PLB</tt>.  Yup, really.  That's what my brain was intermixing, despite the latter having absolutely nothing to do with the stack.  Welcome to what happens when you work with too many CPU architectures while doing 4 or 5 other unrelated things simultaneously (one was discussing the merits behind using <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">malloc&#40;&#41;</tt> over statically-allocated buffers on FreeBSD and how there's a stack vs. heap delineation on FreeBSD while there isn't as much on Linux, and how the kernel stack size limit on i386 on FreeBSD differs greatly from amd64/x64).<br /><br />Excuses aside, I really shouldn't post when I'm already engaged in other matters.<br /><br /><div class="quotetitle">Dafydd wrote:</div><div class="quotecontent">It's both encouraging and discouraging, in a way, to see people with a postcount that high be wrong about something like this... :lol:</div><br />The post could should have absolutely no bearing on whether or not something is correct or not -- case in point above.  :-)  I can refer you to all sorts of &quot;PC tech&quot; forums where there are people with 4 or 5-digit post counts who do not understand jack squat about what it is they're giving advice on, yet continue to give the advice which then proliferates repeatedly.  I even rant about this exact problem <a href="http://koitsu.wordpress.com/2013/02/12/how-intels-ssd-toolbox-optimizer-trim-feature-works/" class="postlink">in a blog post of mine</a> (see very bottom).<br /><br />My point: sure, I've been working with 65xxx since I was roughly 12 years old (I'm presently 36), but that doesn't mean I'm bound to remember everything correctly.  It's important to understand that while a lot of the time I am right, I am in no way as active with &quot;this stuff&quot; as I used to be -- most of the other folks here <strong>are</strong> active, so hands down you should trust what they say over anything I say.  Have no qualms admitting/stating that.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sun Feb 24, 2013 10:41 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Accessing data or &quot;strings&quot; in data segment</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Heh, I was thinking about the stack and I remembered there's one 6502 machine that has the stack in a page other than 1: the Atari 2600. Although the CPU is technically making accesses to $01XX when manipulating the stack, since that machine only has 128 bytes of RAM (yep, not even an entire page of memory), $0100-$01FF is just a mirror of $0000-$00FF. The lower half of that range is used for memory mapped IO and the upper half is RAM. It's kinda interesting how this machine has mixed zero page and the stack page into a single thing.<br /><br />@koitsu: Yeah, nothing wrong with being wrong sometimes, and it's good that you're cool with that. I've said some pretty stupid things here because I wasn't thinking straight or because I hadn't had contact with the topic of the conversation in a while...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dafydd</b> [ Wed Feb 27, 2013 12:12 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Accessing data or &quot;strings&quot; in data segment</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Movax12 wrote:</div><div class="quotecontent">You can specify addresses like that if you really want, but (it looks like you are using CA65) you should probably use <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.res</tt> after specifying a zeropage or BSS segment. Plus in your example you are using the stack page, which you shouldn't, unless you know better.<br /><br />( See here: <!-- m --><a class="postlink" href="http://www.cc65.org/doc/ca65-11.html#ss11.84">http://www.cc65.org/doc/ca65-11.html#ss11.84</a><!-- m --> )</div><br />I've been trying to understand .res, but I still don't. Which segment does it go into? If I want to have a variable, as mentioned previously, can I do<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">cam_position_x: .res 1 $00</div><br />and then access cam_position_x as if it were an address? Putting it in .DATA doesn't seem to work, at least...<br />EDIT: Putting it in .ZEROPAGE does work, however. So how do I do this for other places in RAM but zp, without knowing the address beyond that I don't want it to be on zp? And, how I keep track of how many variables I already put on zp without counting them manually? Does the assembler just put everything in .ZEROPAGE in the same order I reserved them in my source code, so I can, as the last label in .ZEROPAGE have one named e.g. zp_top that points to the first free space in zp?<br /><br />Also,<br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">Usually segment &quot;DATA&quot; is used for data that the init code is supposed to copy from ROM to RAM at program startup. Use segment &quot;RODATA&quot; for read-only data that is read directly from ROM.</div><br />How is this data generally transferred into RAM, then? If I make a bunch of .bytes in the DATA segment, I don't know what their addresses are, and I also don't know how the compiler joins the data segments together, or where they end up in the final ROM. What would the init code that copies DATA into RAM typically look like?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Wed Feb 27, 2013 1:13 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Accessing data or &quot;strings&quot; in data segment</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Dafydd wrote:</div><div class="quotecontent">I've been trying to understand .res, but I still don't. Which segment does it go into?</div><br />Usually ZEROPAGE or BSS.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Does the assembler just put everything in .ZEROPAGE in the same order I reserved them in my source code, so I can, as the last label in .ZEROPAGE have one named e.g. zp_top that points to the first free space in zp?</div><br />The linker can be set to define a label for the end of a segment.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><div class="quotetitle">tepples wrote:</div><div class="quotecontent">Usually segment &quot;DATA&quot; is used for data that the init code is supposed to copy from ROM to RAM at program startup. Use segment &quot;RODATA&quot; for read-only data that is read directly from ROM.</div><br />How is this data generally transferred into RAM, then? If I make a bunch of .bytes in the DATA segment, I don't know what their addresses are, and I also don't know how the compiler joins the data segments together, or where they end up in the final ROM. What would the init code that copies DATA into RAM typically look like?</div><br />Look up &quot;LOAD and RUN addresses&quot; in the ld65 Users Guide to see how this works. Do you know the (dd),Y addressing mode?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dafydd</b> [ Wed Feb 27, 2013 1:17 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Accessing data or &quot;strings&quot; in data segment</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">The linker can be set to define a label for the end of a segment.</div><br />Great. I'll look that up then.<br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">Look up &quot;LOAD and RUN addresses&quot; in the ld65 Users Guide to see how this works. Do you know the (dd),Y addressing mode?</div><br />I knew about the addressing mode, but hadn't thought of looking at the manual for ld65. I knew I was missing something... <img src="./images/smilies/icon_rolleyes.gif" alt=":roll:" title="Rolling Eyes" />  thanks!<br />EDIT: Argh, all this stuff I've tried to find in the ca65 docs was right there in ld65 all along.<br />EDIT2: And nes.inc contained all the magic variables I was wondering about. Except this part:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">SCREEN_PTR&nbsp; &nbsp;= $62&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;2<br />CRAM_PTR&nbsp; &nbsp; &nbsp; &nbsp; = $64&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;2<br />CHARCOLOR&nbsp; &nbsp;= $66<br />BGCOLOR&nbsp; &nbsp;&nbsp; &nbsp;= $67<br />RVS&nbsp; &nbsp;&nbsp; &nbsp;= $68<br />CURS_X&nbsp; &nbsp;&nbsp; &nbsp;= $69<br />CURS_Y&nbsp; &nbsp;&nbsp; &nbsp;= $6a<br /><br />tickcount&nbsp; &nbsp; &nbsp; &nbsp;= $6b&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;2<br /><br />VBLANK_FLAG&nbsp; &nbsp;= $70<br /><br />ringbuff&nbsp; &nbsp; &nbsp; &nbsp; = $0200<br />ringwrite&nbsp; &nbsp; &nbsp; &nbsp;= $71<br />ringread&nbsp; &nbsp; &nbsp; &nbsp; = $72<br />ringcount&nbsp; &nbsp; &nbsp; &nbsp;= $73<br /><br />ppuhi&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;= $74<br />ppulo&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;= $75<br />ppuval&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; = $76</div><br />which is generally not... familiar.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Movax12</b> [ Wed Feb 27, 2013 5:04 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Accessing data or &quot;strings&quot; in data segment</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You shouldn't use those, use something like: <!-- m --><a class="postlink" href="http://wiki.nesdev.com/w/index.php/User:Banshaku/CA65_Constants">http://wiki.nesdev.com/w/index.php/User ... _Constants</a><!-- m --><br /><br />I would set target to none as well. It is supposed to default to none, but unless you want to use the CC65 predefined nes target setup do not use <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">-t nes</tt>. I assume you got the <a href="http://forums.nesdev.com/viewtopic.php?t=8586" class="postlink">linker config file</a> stuff worked out?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dafydd</b> [ Wed Feb 27, 2013 5:19 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Accessing data or &quot;strings&quot; in data segment</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Movax12 wrote:</div><div class="quotecontent">You shouldn't use those, use something like: <!-- m --><a class="postlink" href="http://wiki.nesdev.com/w/index.php/User:Banshaku/CA65_Constants">http://wiki.nesdev.com/w/index.php/User ... _Constants</a><!-- m --></div><br />Dat file, wow. Nice!<br /><div class="quotetitle">Movax12 wrote:</div><div class="quotecontent">I would set target to none as well. It is supposed to default to none, but unless you want to use the CC65 predefined nes target setup do not use <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">-t nes</tt>. I assume you got the <a href="http://forums.nesdev.com/viewtopic.php?t=8586" class="postlink">linker config file</a> stuff worked out?</div><br />I thought so until 5 seconds ago, yes, haha. If don't use a target the linker says &quot;Memory configuration missing&quot;. What am I supposed to use instead of the built-in target? I'm a little worried I'll just break something by using a different config (not that I couldn't go back) now that's I've finally gotten started, but maybe I'll have to eventually if I ever get serious about this.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Wed Feb 27, 2013 6:37 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Accessing data or &quot;strings&quot; in data segment</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Movax12 wrote:</div><div class="quotecontent">You shouldn't use those, use something like: <!-- m --><a class="postlink" href="http://wiki.nesdev.com/w/index.php/User:Banshaku/CA65_Constants">http://wiki.nesdev.com/w/index.php/User ... _Constants</a><!-- m --></div><br />But the constants he was using were for local variables/game-related variables, not the console's memory-mapped registers.  Two separate/unrelated things.<br /><br />He should keep the constants for local variables, and add the CA65_Constants stuff so he do <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">sta PPU_DATA</tt> instead of <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">sta $2006</tt>.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Wed Feb 27, 2013 6:40 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Accessing data or &quot;strings&quot; in data segment</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Movax12 wrote:</div><div class="quotecontent">I would set target to none as well. It is supposed to default to none, but unless you want to use the CC65 predefined nes target setup do not use <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">-t nes</tt>.</div><br />It's probably worth noting that the cl65 utility (a front end for assembler/compiler/linker) defaults to C64 target.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>3</strong> of <strong>4</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>