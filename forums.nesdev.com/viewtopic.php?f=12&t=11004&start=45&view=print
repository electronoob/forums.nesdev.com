<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - MSU1 Specs</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">MSU1 Specs</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=12&amp;t=11004">http://forums.nesdev.com/viewtopic.php?f=12&amp;t=11004</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>4</strong> of <strong>5</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ikari_01</b> [ Fri Feb 21, 2014 1:43 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: MSU1 Specs</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Howdy, nocash pointed me to this thread. I'd like to assist but I'm having some trouble resolving what's been sorted out and what hasn't. Are there any open questions I (hopefully) can help with?<br />Regarding volume, well, I basically used the DAC's reference design. I've noticed that the MSU audio output on the sd2snes is a bit quiet but haven't performed further measurements to back this up with actual numbers.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>nocash</b> [ Fri Feb 21, 2014 2:13 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: MSU1 Specs</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">kogami wrote:</div><div class="quotecontent">Akira trailer, video capture was done from the console Super Nintendo directly in 60Hz.<br />I'm using the latest firmware for sd2snes.</div><br />Okay... then the &quot;<span style="color: #00FF00">volume_r = 8'h00;</span>&quot; line in sd2snes source code does apparently mean something else than setting volume to zero : - ) does anybody understand source code? I don't.<br />Except, maybe, it could have something to do with the (missing) &quot;<span style="color: #00FF00">volume_start_r</span>&quot; initialization.<br /><br />In snes/msu1 programs, it would be best to initialize the volume, and not to trust it to be initialized in any way.<br />But for emulators, it appears to be better to set volume=FFh for compatibility with programs that are lacking initialization, like the Akira trailer.<br /><br /><div class="quotetitle">kogami wrote:</div><div class="quotecontent">We must give the framerate of the video demo.sfc<br />headers 0x02 - 0x04<br />29.97fps -&gt; 02 02 01 (2:2 pulldown)<br />23.976fps -&gt; 02 03 01 (3:2 pulldown)<br />14.985fps -&gt; 04 04 01<br />11.988fps -&gt; 04 06 01</div><br />I can see those bytes in WRAM, at address 0001h..0003h. But I don't know how one would edit them in ROM. And I am not too sure if those bytes could fix the 50Hz PAL problem (to fix that, the video would need to play at same speed as on NTSC consoles).<br />If the demo would be properly programmed, then it should autodetect PAL/NTSC frame rates and adopt itself to that rate (or if it's unable to do that, then the poor thing should at least correctly specify the supported frame rate in the ROM header at FFxxh).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>nocash</b> [ Fri Feb 21, 2014 3:01 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: MSU1 Specs</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">ikari_01 wrote:</div><div class="quotecontent">Howdy, nocash pointed me to this thread. I'd like to assist but I'm having some trouble resolving what's been sorted out and what hasn't. Are there any open questions I (hopefully) can help with?<br />Regarding volume, well, I basically used the DAC's reference design. I've noticed that the MSU audio output on the sd2snes is a bit quiet but haven't performed further measurements to back this up with actual numbers.</div><br />Good to hear from you! I guess (hope) you understand the sd2snes source code best : - )<br /><br />Current biggest question is how do you initialize the volume register? Is it set to 00h, or FFh, or other value, or is it left uninitialized? And is it initialized both on coldboot (power-on) and warmboot (reset button)?<br /><br />A definition of the MSU1 volume relative to SNES volume would be also nice. Best would be if the 16bit SNES and 16bit MSU1 outputs would be producing identical volumes. But I don't know if that's possible with the current hardware - it might require additional amplifiers in the cartridge?<br /><br />And (where) are the samples inverted? I am quite sure that the post-amplifier (in the SNES) will invert them. So if +7FFFh is producing a HIGH level (?) on the cartridge connector, then it will be most likely having the opposite level on the final TV output.<br /><br />And do you leave the Data Seek Address unchanged when reading Data, or do you increment the Seek Address register value during read? For example:<br />Set Seek address to 55550000h by writing to 2000h..2003h.<br />Read 1234h bytes from 2001h (current address will become 55551234h).<br />Change MSBs of Seek address from 5555h to 7777h by writing to 2002h..2003h.<br />If you are using separate registers for Seek &amp; Corrent address, then Seek Address should be 77770000h.<br />If you are sharing the same register for Seek &amp; Current address, then the Seek Address should be 77771234h.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ikari_01</b> [ Fri Feb 21, 2014 4:21 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: MSU1 Specs</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />EDITed the part about volume initialization which wasn't correct.<br /><br /><div class="quotetitle">nocash wrote:</div><div class="quotecontent">Current biggest question is how do you initialize the volume register? Is it set to 00h, or FFh, or other value, or is it left uninitialized? And is it initialized both on coldboot (power-on) and warmboot (reset button)?</div>The MSU volume register is initialized to 0x00 (on coldboot only - some room for improvement there). However the DAC target volume is initialized to 0xFF and is ramped up from 0 on coldboot. The MSU volume isn't latched to the DAC target volume at all until the SNES writes to the MSU volume register. Thus the de-facto initial volume is 0xFF. (See dac.v <a href="https://github.com/mrehkopf/sd2snes/blob/develop/verilog/sd2snes/dac.v#L100" class="postlink">line 100</a>.)<br />Volume ramping takes place to avoid clicking on volume change. DAC output sample rate is 88MHz/512 = 171875Hz; the volume multiplier is changed by either +1 or -1 every 4 output samples, until the target value is reached. This is very implementation specific and I don't think you should care as long as your volume changing doesn't click. <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" /><br />The MSU playback sample rate equals one sample per 59378938/122500 SNES master clocks (rounded to nearest neighbor). Audio output is synced to the SNES master clock in order to achieve frame synchronization even with slightly differently clocked consoles, and especially on modified PAL consoles. 21477270/(59378938/122500) Hz is an empirical value based on frame cycle count measurements (NTSC) and the assumption that audio should be synchronous to a source video material @29.97fps and 44100Hz, played back on the SNES at 2 SNES frames per video frame. On a perfectly tuned NTSC SNES the actual playback rate equals 44308.06Hz, on a perfectly tuned PAL SNES it's 43903.91Hz.<br /><br /><div class="quotetitle">nocash wrote:</div><div class="quotecontent">A definition of the MSU1 volume relative to SNES volume would be also nice. Best would be if the 16bit SNES and 16bit MSU1 outputs would be producing identical volumes. But I don't know if that's possible with the current hardware - it might require additional amplifiers in the cartridge?</div>That, or tweaking the output circuit, or running the DAC at 5V instead of 3.3V. I don't have any precise measurements regarding actual audio output at hand, sorry  <img src="./images/smilies/icon_redface.gif" alt=":oops:" title="Embarassed" /> <br /><br /><div class="quotetitle">nocash wrote:</div><div class="quotecontent">And (where) are the samples inverted? I am quite sure that the post-amplifier (in the SNES) will invert them. So if +7FFFh is producing a HIGH level (?) on the cartridge connector, then it will be most likely having the opposite level on the final TV output.</div>The sd2snes does't do any inversion so yes, +32767 will result in the maximum analog output level from the DAC.<br /><br /><div class="quotetitle">nocash wrote:</div><div class="quotecontent">And do you leave the Data Seek Address unchanged when reading Data, or do you increment the Seek Address register value during read?</div>The former. Actually there is no way to read back the current address; it's considered internal state by the MSU1 design.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>nocash</b> [ Fri Feb 21, 2014 5:34 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: MSU1 Specs</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">ikari_01 wrote:</div><div class="quotecontent">The volume register is initialized to 0x00 (on coldboot only - some room for improvement there). Software must set it to the desired value.</div><br />But if it's initially 00h, why does the Akira trailer <!-- l --><a class="postlink-local" href="http://forums.nesdev.com/viewtopic.php?p=125755#p125755">viewtopic.php?p=125755#p125755</a><!-- l --> have sound on sd2snes hardware, despite of leaving the volume uninitialized?<br />For compatibility with that demo, it would be best to use volume=FFh on /RESET (and of course, set Play=0 alongsides, so that the output is initially silent regardless of volume).<br /><br /><div class="quotetitle">ikari_01 wrote:</div><div class="quotecontent">The output sample rate equals one sample per 59378938/122500 SNES master clocks (rounded to nearest neighbor).</div><br />Good that you mention it. I was already wondering what clock source you might have used, master clock, cic/apu clock, or the sd2snes oscillator.<br />Personally, I would have preferred a 32000Hz sample rate (in sync with SNES APU) derived from the CIC clock.<br />But yes, using the master clock is best for synchronization with the main cpu.<br />Although the NTSC/44308.06Hz and PAL/43903.91Hz are a bit far from the originally intended 44100Hz.<br /><br />byuu, what do you think? Should be we use &quot;59378938/122500 SNES master clocks&quot; in emulators, too?<br /><br />Does anybody know if d4s has matched Super Road Blasters to this or that sample rate?<br /><br /><div class="quotetitle">ikari_01 wrote:</div><div class="quotecontent">Oh, and there's volume ramping to avoid clicking on volume change. DAC output sample rate is 88MHz/512 = 171875Hz; the volume multiplier is changed by either +1 or -1 every 4 output samples, until the target value is reached. This is very implementation specific and I don't think you should care as long as your volume changing doesn't click. ;)</div><br />I've already read about that feature somewhere. Although I can't see what it is good for. Some people might <em>want</em> to produce clicks. And more commonly, instant volume changes from 00h to FFh would be used only while sound is paused, which should be inaudible anyways (assuming that the DAC outputs &quot;0000h*volume&quot; when Play=0) (oh, or do you output something like &quot;most_recent_sample*volume&quot; when Play=0 ?).<br /><br /><div class="quotetitle">ikari_01 wrote:</div><div class="quotecontent"><div class="quotetitle">nocash wrote:</div><div class="quotecontent">And do you leave the Data Seek Address unchanged when reading Data, or do you increment the Seek Address register value during read?</div>The former.</div><br />Fine. I've currently implemented it that way, too. Byuu, can change higan to make your Seek Address non-incrementing, too?<br />(ie. upon 2003h write: copy SeekAddr to a separate CurrentAddr variable, and then increment only the latter one during reading).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>byuu</b> [ Fri Feb 21, 2014 6:48 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: MSU1 Specs</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />In my opinion, the only important issue facing us is how to scale SNES volume against MSU1 volume.<br /><br />I liked the naive approach of directly mixing without scaling. But it's true that SNES audio is generally really low compared to your average CD track.<br /><br />The phase inversion thing is simple in this regard: match what the SNES does so that emulators and hardware have the same result.<br /><br />&gt; But for emulators, it appears to be better to set volume=FFh for compatibility with programs that are lacking initialization, like the Akira trailer.<br /><br />Well, I gave you the specification. You're free to violate it in any way you want (because I can't stop you), but the official default value is 00h upon both power and reset, forcing the user to initialize it.<br /><br />Please understand that when you choose to emulate software programs instead of hardware specifications, that it leads to games that don't work everywhere. We had years of problems with fan translations due to emulators choosing to be compatible with ZSNES' &quot;write to VRAM during active display&quot; bug.<br /><br />We had some rockiness with the initial specification being ironed out because it was developed in public before being finalized. But I had to do that to get feedback.<br /><br />I will not be using volume=255, and the Akira demo is going to remain silent on higan. Lots and lots of homebrew relies on all of SNES WRAM being initialized to 00 (eg Anthrox demos), are you going to default to that in no$sns for compatibility reasons, too?<br /><br />&gt; byuu, what do you think? Should be we use &quot;59378938/122500 SNES master clocks&quot; in emulators, too?<br /><br />I'm going to continue outputting at 44100hz. But consider that most CD-based audio systems don't expect exact timing on music playback (and there are varying track seek delays and such), so in practice this is likely to have very little impact. Different SNES units tend to have slightly different effective clock rates (oscillators have tolerances), and they shift as consoles heat up, so there's no sense targeting perfection here.<br /><br />I wouldn't mind at all if you chose to go with either 44100 or ~43800.<br /><br />&gt; Does anybody know if d4s has matched Super Road Blasters to this or that sample rate?<br /><br />I'd bet a large sum of money that the thought didn't even cross his mind.<br /><br />&gt; I've already read about that feature somewhere. Although I can't see what it is good for. Some people might want to produce clicks. And more commonly, instant volume changes from 00h to FFh would be used only while sound is paused, which should be inaudible anyways<br /><br />Yeah, I worried that this would prove too difficult to standardize on fade-in/fade-out logic. So I made it entirely driven by the software. If you want a clean fade-out without pops, you should write a loop that waits N cycles between volume decrement. Audio tracks should not start with the audio instantly jumping to full volume, so starting is no problem.<br /><br />Pausing volume is contentious, but what can you do? I leave it up to the implementation. If they want to smooth it out with a quick decay (pause) + gain (unpause), that's fine.<br /><br />&gt; Byuu, can change higan to make your Seek Address non-incrementing, too?<br /><br />Of course, I will fix that. Thanks for the bug report on that.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ikari_01</b> [ Sat Feb 22, 2014 2:10 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: MSU1 Specs</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">nocash wrote:</div><div class="quotecontent"><div class="quotetitle">ikari_01 wrote:</div><div class="quotecontent">The volume register is initialized to 0x00 (on coldboot only - some room for improvement there). Software must set it to the desired value.</div><br />But if it's initially 00h, why does the Akira trailer <!-- l --><a class="postlink-local" href="http://forums.nesdev.com/viewtopic.php?p=125755#p125755">viewtopic.php?p=125755#p125755</a><!-- l --> have sound on sd2snes hardware, despite of leaving the volume uninitialized?<br />For compatibility with that demo, it would be best to use volume=FFh on /RESET (and of course, set Play=0 alongsides, so that the output is initially silent regardless of volume).</div>I edited that part shortly after posting it, please re-read <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" /> In any case I'm fine with changing it to 00 even if it breaks existing software. It seems that the spec has changed (AGAIN) after I touched it the last time. I recall agreeing upon initializing it to FF although I was against it, so...<br /><br /><div class="quotetitle">nocash wrote:</div><div class="quotecontent">Personally, I would have preferred a 32000Hz sample rate (in sync with SNES APU) derived from the CIC clock.</div>I mainly coupled it to the master clock because I had A/V sync on FMVs in mind and changing audio playback rate is preferred over frame rate conversion IMO (especially because you don't want to keep video data for both NTSC and PAL60, etc.)<br /><br /><div class="quotetitle">nocash wrote:</div><div class="quotecontent">Although I can't see what it is good for. Some people might <em>want</em> to produce clicks. And more commonly, instant volume changes from 00h to FFh would be used only while sound is paused, which should be inaudible anyways (assuming that the DAC outputs &quot;0000h*volume&quot; when Play=0) (oh, or do you output something like &quot;most_recent_sample*volume&quot; when Play=0 ?).</div>It is necessary. Without any ramping, even volume fading will click each step resulting in a hum. The DAC continuously outputs the current sample when the play bit is cleared. The series capacitors outside the DAC filter out the DC.<br /><br />On a side note, the seek address register isn't SNES readable anyway - does it matter how it is used internally by the MSU implementation? <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>nocash</b> [ Sat Feb 22, 2014 8:07 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: MSU1 Specs</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">byuu wrote:</div><div class="quotecontent">The phase inversion thing is simple in this regard: match what the SNES does so that emulators and hardware have the same result.</div><br />I think that I might know you mean, but I am afraid that everybody will interprete that sentence differently : - )<br /><br /><div class="quotetitle">byuu wrote:</div><div class="quotecontent">Well, I gave you the specification. You're free to violate it in any way you want (because I can't stop you), but the official default value is 00h upon both power and reset, forcing the user to initialize it.</div><br />What specification? You have changed the official initial volume setting at least three or four times. That does have ended up with software (akira trailer) and hardware (sd2snes) using volume FFh. And at some time, both seem to have followed the forever changing specifications. To solve that mess, please forget about &quot;best&quot; or &quot;latest&quot; specs, and just fallback to the setting with least compatibility problems (volume FFh works for all existing software).<br />If you want to, I can add a warning in my MSU1 desciption, saying the the volume isn't always initialized the same way in different implementations &amp; revisions.<br /><br /><div class="quotetitle">byuu wrote:</div><div class="quotecontent">Different SNES units tend to have slightly different effective clock rates (oscillators have tolerances), and they shift as consoles heat up...</div><br />That is why sd2snes is using the SNES master clock for MSU1 audio timings: Main CPU and MSU1 will stay in sync even when the console warms up.<br /><br /><div class="quotetitle">byuu wrote:</div><div class="quotecontent">so there's no sense targeting perfection here. I wouldn't mind at all if you chose to go with either 44100 or ~43800.</div><br />No!!! Didn't you got the issue about movies? For normal background music it wouldn't matter too much. But for movies it's most important. 44100 vs 43800 differs by almost 1%. So if you play a 120 second movie, then audio could become offsync by around 1 second towards end of the movie.<br />The MSU1 audio feature is totally useless if we can't agree on an official sample rate (including an official clock source, such like saying whether or not to rely on SNES master clock). It doesn't matter to me <em>which</em> sample rate. But it should recurse two things:<br />1) must be possible to be implemented on real hardware (and preferable stay compatible with existing sd2snes hardware)<br />2) stay compatible with existing software

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>nocash</b> [ Sat Feb 22, 2014 8:32 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: MSU1 Specs</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">ikari_01 wrote:</div><div class="quotecontent">Without any ramping, even volume fading will click each step resulting in a hum.</div><br />You can hear 1/256 volume steps? But your ramping is just doing the same thing anyways!<br />Hmmm, ah, I guess your concern was that people would do the stepping within vblank handler, then it would be reasonable to expect them to use bigger steps, 1/16 or the like.<br /><br /><div class="quotetitle">ikari_01 wrote:</div><div class="quotecontent">The DAC continuously outputs the current sample when the play bit is cleared. The series capacitors outside the DAC filter out the DC.</div><br />Okay, that could produce clicks on volume changes even when sound is paused. And I think it's different as in byuu's source code (which seems to output nothing (aka a 0000h sample) when play=0) (and which would be also more emulation friendly: one could just omit MSU1 mixing for 0000h samples).<br /><br />Wouldn't it be better to use 0000h in sd2snes upon play=0, too?<br /><br />Having sd2snes stuck on the old current sample can also produce unwanted clicks. For example:<br />start track 1<br />wait till middle of track<br />fade-out volume<br />set play=0           ;&lt;-- sd2snes stays stuck on last sample here<br />set volume=255  ;&lt;-- without your volume rampling, the stuck sample would cause click here<br />start track 2        ;&lt;-- this will click (since the stuck sample gets now changed to first new sample)<br /><br /><div class="quotetitle">ikari_01 wrote:</div><div class="quotecontent">On a side note, the seek address register isn't SNES readable anyway - does it matter how it is used internally by the MSU implementation? ;)</div><br />It does matter only if somebody writes less than 4 bytes to 2000h..2003h. It's very unlikely that somebody would do that in practice. I just noticed that the MSU1 specs/source would allow unclear behaviour in that case.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sat Feb 22, 2014 10:12 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: MSU1 Specs</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />So I've gathered that some means to synchronize streaming audio with in-game animation is needed. Should we start a separate topic to discuss that in particular so that it doesn't get lost in the rest of the discussion?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>byuu</b> [ Sat Feb 22, 2014 11:38 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: MSU1 Specs</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />&gt; It seems that the spec has changed (AGAIN) after I touched it the last time. I recall agreeing upon initializing it to FF although I was against it, so...<br /><br />All of the changes went in at the same time, and they all came from d4s great suggestions from hands-on dev experience with the chip.<br /><br />* add 'track missing' flag to status.d3<br />* initialize all registers to 00 at startup (ensures busy flags don't have a dual meaning of 'not initialized')<br /><br />It may have been my fault for not being more clear on the intent.<br /><br />I'm sorry to cause you extra work, but I do want to stress how grateful I am that you've implemented MSU1 on real hardware.<br /><br />&gt; On a side note, the seek address register isn't SNES readable anyway - does it matter how it is used internally by the MSU implementation?<br /><br />It's a weird gotcha case in my specific implementation that only occurs if you modify the lower bits of the data seek address and capture a save state before the new address is applied. I expect the odds of triggering the bug to be one in a billion. But it is a bug, and I'll fix it. It only applies to save state implementations.<br /><br />&gt; You have changed the official initial volume setting at least three or four times.<br /><br />You can tell yourself whatever you like, but that doesn't make it true. It's changed one time in three years, and that change was made when there were no released full games yet. And even then, we made sure that change was okay with Super Mario Odyssey's tech demo first. Those were the only two images in existence then: Akira demo did not yet exist.<br /><br />I wasn't sure when you brought it up at first because nobody's asked me about it in several years.<br /><br />You seem to be pissed off that I didn't realize a fully perfected specification on my first attempt. I don't know what to tell you. I asked everyone to weigh in, we had discussions on this for years. You were at the time hiding the fact that you were working on an SNES emulator from the world, and didn't contribute to the discussion at all. I took all the feedback I could get, and I had no choice but to release betas to see how the spec worked in practice and to refine it. So yes, the spec changed from 21fx-&gt;MSU1 (to address streaming transfers from chip to VRAM) and then MSU1+d4s refinements (mainly to support optional track replacement and audio fallbacks.) If I had a team of software engineers I could have refined things internally first, but I didn't.<br /><br />21fx-&gt;MSU1 broke existing code: the Chrono Trigger FMV example. We had no choice.<br />MSU1-&gt;d4s enhancements broke nothing existing.<br />No future changes are going to break any SNES code. No future changes are planned, but if we have to, we'll consider BC.<br />The external file names and music formats may shift a bit, though. We desperately need a way to distribute these in smaller sizes.<br /><br />&gt; To solve that mess, please forget about &quot;best&quot; or &quot;latest&quot; specs, and just fallback to the setting with least compatibility problems (volume FFh works for all existing software)<br /><br />No. On one hand, you are complaining that I keep changing the default volume. On the other, you're asking me to change the default volume. It stays 00.<br /><br />&gt; That is why sd2snes is using the SNES master clock for MSU1 audio timings: Main CPU and MSU1 will stay in sync even when the console warms up.<br /><br />And my emulator has a consistent CPU frequency always: 21477272hz for NTSC, 21281370hz for PAL.<br /><br />I can make it relational to CPU clocks, but what good does that do us from emulation? It won't help simulate the real hardware oscillator variance.<br /><br />If you wanted to use the CPU master clock anyway, clock / 487 would seem to get you right at 44101hz on NTSC, and / 483 is the best you can do on PAL at 44060hz.<br /><br />&gt; No!!! Didn't you got the issue about movies?<br /><br />I don't care. CD-audio is 44100hz. Video game systems like the Sega CD have used CD-audio and somehow managed to sync movies just fine. Maybe they'd have issues with a 2-hour movie being played back eventually being off by a second or two.<br /><br />The MSU1 wasn't designed to play feature-length movies that eat up the entire 4GB of storage. Who wants to watch a 20fps movie at 240x160x256 colors? It was designed to play short 1-2 minute openings that were typical of the initial 2D RPG CD systems (PCE-CD, Mega CD, PC-FX, PS1 ports of SNES games, etc.) And it was even more designed to play background music, where being 1% off on pitch won't even be noticeable.<br /><br />&gt; The MSU1 audio feature is totally useless if we can't agree on an official sample rate<br /><br />Great, then I guess you have no reason to implement a useless feature. ikari and I were doing just fine with our implementations before you came in.<br /><br />Nobody ever noticed or cared about pitch issues on Super Road Blaster or Super Mario Odyssey. Nobody ever cared about a volume register changing in any released software. Nobody cares if the volume logic is inverted (for whatever the hell reason that was done), or if the relative volume is off by 10% between our two implementations.<br /><br />Now by all means, if you have <em>answers</em> instead of hypothetical concerns, I'm happy to consider them. But I could do without the baseless FUD like &quot;MSU1 is totally useless without perfect pitch&quot; and &quot;you've changed the default volume register three or four times&quot; or &quot;you're breaking existing software&quot; nonsense.<br /><br />&gt; 2) stay compatible with existing software<br /><br />That's your bogeyman goal. You're throwing a fit about a non-public test ROM that plays a movie but forgot to initialize a register, which two people own the files for. That can be fixed in three seconds.<br /><br />&gt; So I've gathered that some means to synchronize streaming audio with in-game animation is needed.<br /><br />Only in nocash's mind.<br /><br />It really feels like he's going out of his way to make a mountain out of every possible molehill he can find here. I don't know if he's just trying to annoy me or if he's actually serious.<br /><br />...<br /><br />You seem to want an absolutely rigid, everything set in stone perfect concept here. But we very deliberately chose not to do that.<br /><br />The goal was to give ultimate flexibility to allow variant hardware implementations. It's very much like C. We could design a rigid implementation that only works on x86-32, or we could allow for variations in type sizes and bit-lengths, and allow our software to run anywhere.<br /><br />The seek delays: I don't have them, a NOR flash ROM implementation wouldn't have them, SD cards have short seek delays, and a theoretical DVD-ROM drive version would have longer seek delays.<br /><br />The audio frequency: it's easy for an emulator to do 44100hz perfectly, but 43816hz is not as simple. What if we have an implementation that uses a CD-ROM drive to play the audio tracks, and uses an external Y-adapter to merge SNES+MSU1 audio? It won't have the SNES master clock to sync against. What if the hardware implementation chose its own oscillator for reliability, and didn't want to use the extra cart connector pins?<br /><br />The audio format: I don't even mandate .pcm files. The format is completely separate from the SNES code that drives the MSU1. Obviously I prefer .pcm files as the base distribution format, but how it's imported and used isn't as important.<br /><br />Initial register values: always initialize all of your registers after every reset and power cycle. That's common sense anywhere. It may not be practical for some hardware to re-initialize regs on soft reset.<br /><br />If a game doesn't adhere to best practices, it breaks. But with a tiny bit of planning, it all works just fine everywhere. Exactly like C code. The SNES hardware itself has variations (revisions that change DMA/HDMA sync behavior, work around hardware bugs, etc) and every last console has minor differences in CPU vs SMP oscillators. And no emulator is even close to a perfect copy of any specific revision. And yet we have ~2800 unique games that all run just fine. You can't apply perfect ideals to a system that is imperfect by design.<br /><br />All I can do is tell you guys how I want this chip I came up with and designed to work. The more you deviate, the more likely you're going to get software that works in one place but not another. But I can't stop you. I can't tell you that you're not allowed to deviate from my specifications. So if you want to undermine me and the format, keep changing things in my spec. If you want the spec to succeed, then the specification needs a leader that makes the final decisions on things. I came up with it, so that's me. Implement things how I ask, and everyone will have exactly one target to support.<br /><br />Yes, the spec changed a bit as it was refined. All specifications do, I'm sorry for that. It's been stable for three years. It's my sincerest hope that it never changes again.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ikari_01</b> [ Sat Feb 22, 2014 12:47 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: MSU1 Specs</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Byuu, your quoting style is unreadable. <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" /> At least do some other formatting on the quoted lines, like bold or such, and state who you are quoting. <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" /><br />I agree with changing the initial volume to 00, I think it was a relic on my part (changed the MSU1 value but forgot the DAC value). I'm going to publish a corrected version of my msu1vid example video player when I release an sd2snes firmware that incorporates the change.<br />However I still think A/V sync needs special attention. Without at least SOME standard MSU1 is useless for FMV as desynchronization becomes irritating very quickly, you don't need hours of video for that. I'd be all for straight 44100Hz for accuracy's sake if every SNES put out perfect 59.94Hz but alas, they don't. I chose my approach so no additional frame rate conversion or sample rate conversion would be necessary when transcoding a fairly standard NTSC 23.976/29.97/59.94fps 44100Hz video.<br /><br />Of course the alternative would be to ditch the audio extension completely for FMV features and use some sort of interleaved A/V data format with BRR streaming. But the APU is running off an independent clock as well, bummer. So one would have to observe the audio buffer and skip or repeat a frame when it's overrunning or underrunning.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>byuu</b> [ Sat Feb 22, 2014 12:51 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: MSU1 Specs</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><em>ikari_01: Byuu, your quoting style is unreadable.</em><br /><br />Sorry, holdover of mine from '90s &quot;Matt's WWWboard&quot; and e-mails. I'll do it in this thread, but I won't promise to do it everywhere. It takes too long to do the full quote tag all the time.<br /><br /><em>ikari_01: I'm going to publish a corrected version of my msu1vid example video player when I release an sd2snes firmware that incorporates the change.</em><br /><br />Thank you! :D<br /><br /><em>ikari_01: I chose my approach so no additional frame rate conversion or sample rate conversion would be necessary when transcoding a fairly standard NTSC 23.976/29.97/59.94fps 44100Hz video.</em><br /><br />Alright, if it's more than one person concerned here, then I'll consider it.<br /><br />The way it stands, the current MSU1 is meant to be flexible, and that's why SRB + SMO work fine. So a slight pitch shift on them to standardize on a pitch won't hurt backward-compatibility.<br /><br />So okay ... following tepples' advice, let's make another thread.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>nocash</b> [ Sat Feb 22, 2014 3:31 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: MSU1 Specs</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />byuu, I am hoping to receive an excuse for your offending message. I've respectfully tried to understand the msu design, and I've pointed out some differences between bsnes and sd2snes implementations. I have also tried to find a solution that is compatible with the three existing msu games/demos.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>byuu</b> [ Sat Feb 22, 2014 5:46 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: MSU1 Specs</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Here's my best attempt at an up-to-date specification:<br /><br /><!-- m --><a class="postlink" href="http://byuu.org/snes/msu1/specification/">http://byuu.org/snes/msu1/specification/</a><!-- m --><br /><br />Defining the file format / distribution specifications will be very challenging.<br /><br /><em>&gt; byuu, I am hoping to receive an excuse for your offending message.</em><br /><br />You're nitpicking and undermining my efforts by stating that you'll implement things in contradiction to my specification, which may result in software incompatibilities between implementations. I'm honored that you're considering implementing the idea, even though it's not official. This will be a big win to getting more people to use MSU1. I'm also happy that you wish to clarify certain details, rather than leave them undefined behavior.<br /><br />But I'm quite unhappy at statements calling the specification useless certain conditions of yours are met, falsely claiming I've changed the spec several more times than I have, and claiming problems without any help to address them.<br /><br />Please understand that I came up with this. You're welcome to develop your own extensions, such as your debugger console write register, but please be willing to accept my decisions on things even if they aren't the way you want things done. I'm not trying to be a control freak, but we absolutely need conformity and consistency, we need a leader on the spec. I am sure you are familiar with the mess caused when Microsoft took a liberal license to Java, IE6, etc.<br /><br />If MSU1 implementations violate the spec (even higan/bsnes), they are buggy and in error. If MSU1 software violates the spec, they are also buggy and in error. There is room for slight variation between implementations: this was a deliberate design goal. The spec was designed before the hardware, so I had to allow maximum flexibility for any possible hardware design to work. And I would say I was successful: I created a spec ikari was able to implement.<br /><br /><em>&gt; I have also tried to find a solution that is compatible with the three existing msu games/demos.</em><br /><br />If we want productive dialogue, then we need to agree now that the specification supersedes everything else.<br /><br />It would not be acceptable to modify an emulator to work around a bug in commercial software, and it is similarly not acceptable to modify MSU1 to support software that doesn't follow the specification.<br /><br />Driving on the point that the spec was changed is not productive: it happened, it's done, it hopefully won't happen again. We have a spec that hasn't changed in several years. It's stable. We should not change it now unless we absolutely have to.<br /><br />I have extensive experience with changing specs. xkas, BPS, game folders, game manifests, etc. It's always extremely painful.<br /><br />Regardless of your thoughts on the spec, right now it works just fine for what it was intended for. Super Road Blaster is the only full game for MSU1, and it works great on both the sd2snes and in higan/bsnes. Everyone had a chance during the several years it was under development to weigh in on the design. It's not my fault you haven't looked at it until this past week; as such I wasn't able to take your considerations into account when I was completely open to changing it.<br /><br />I'm willing to hear out your ideas, but please don't push them so strongly if I don't agree.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>4</strong> of <strong>5</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>