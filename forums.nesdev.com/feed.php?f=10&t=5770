<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=10&amp;t=5770" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2009-12-17T07:09:37-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=10&amp;t=5770</id>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2009-12-17T07:09:37-07:00</updated>
<published>2009-12-17T07:09:37-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5770&amp;p=54125#p54125</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5770&amp;p=54125#p54125"/>
<title type="html"><![CDATA[Questions about scrolling and sprites on (S)NES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5770&amp;p=54125#p54125"><![CDATA[
<div class="quotetitle">Celius wrote:</div><div class="quotecontent"><br />But judging from what I see in the video, I'll have to side with tokumaru on this. A text adventure like Oregon Trail would be pretty easy to make in BASIC, and even if the thing runs at 20 FPS, you don't notice because there's nothing really going on visually.<br /></div><br />Which is my point. There are plenty of genres and game designs for which "there's nothing really going on visually". RPGs might be another one. My current project might be one were it not for the fact that I'm writing it in asm so that I don't have to write an interpreter or a compiler.<br /><br /><div class="quotetitle">Celius wrote:</div><div class="quotecontent"><br />Also, I'm sure linking together routines written in ASM with a language like BASIC is a lot less inefficient than coding the whole thing in BASIC.<br /></div><br />Apart from copy deterrence, the only reason I can see that the game uses asm at all is because Apple forgot to put a proper blitter in Applesoft BASIC's "HGR" library.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Thu Dec 17, 2009 7:09 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2009-12-17T03:09:50-07:00</updated>
<published>2009-12-17T03:09:50-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5770&amp;p=54123#p54123</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5770&amp;p=54123#p54123"/>
<title type="html"><![CDATA[Questions about scrolling and sprites on (S)NES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5770&amp;p=54123#p54123"><![CDATA[
The Koei games were also unlikely to be developed in assembly, seeing on how different platform they are.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Thu Dec 17, 2009 3:09 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Dwedit]]></name></author>
<updated>2009-12-17T00:57:28-07:00</updated>
<published>2009-12-17T00:57:28-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5770&amp;p=54119#p54119</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5770&amp;p=54119#p54119"/>
<title type="html"><![CDATA[Questions about scrolling and sprites on (S)NES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5770&amp;p=54119#p54119"><![CDATA[
I can tell you with a quick look at the disassembly of Birthday Blowout shows that the programmers had never heard of using jump tables instead of long sequences of CMP \ BEQ instructions.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=53">Dwedit</a> — Thu Dec 17, 2009 12:57 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Celius]]></name></author>
<updated>2009-12-17T00:06:49-07:00</updated>
<published>2009-12-17T00:06:49-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5770&amp;p=54117#p54117</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5770&amp;p=54117#p54117"/>
<title type="html"><![CDATA[Questions about scrolling and sprites on (S)NES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5770&amp;p=54117#p54117"><![CDATA[
Hmm... Perhaps then Bugs Bunny's Birthday Blowout was coded in C or BASIC then, haha (seriously, WTF is the frame rate in that game all about?).<br /><br />Oh, good old Oregon Trail. I don't think I played the first one ever; when I was in elementary school we actually had Oregon Trail 2. But judging from what I see in the video, I'll have to side with tokumaru on this. A text adventure like Oregon Trail would be pretty easy to make in BASIC, and even if the thing runs at 20 FPS, you don't notice because there's nothing really going on visually.<br /><br />Also, I'm sure linking together routines written in ASM with a language like BASIC is a lot less inefficient than coding the whole thing in BASIC. So it doesn't seem like Oregon Trail proves much about coding games for old consoles in BASIC/C. I'm not saying it's impossible, I'm just saying that I have yet to see proof (I'm sure there is proof, somewhere) that coding in C for the NES (or older consoles) is a good idea.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=138">Celius</a> — Thu Dec 17, 2009 12:06 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2009-12-15T12:34:07-07:00</updated>
<published>2009-12-15T12:34:07-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5770&amp;p=54086#p54086</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5770&amp;p=54086#p54086"/>
<title type="html"><![CDATA[Questions about scrolling and sprites on (S)NES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5770&amp;p=54086#p54086"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />The Oregon Trail for Apple II, which has an even weaker CPU and PPU than the NES, was written in BASIC with asm subroutines.<br /></div><br /><a href="http://www.youtube.com/watch?v=11tkwlg828Q" class="postlink">And what an awesome action-packed fast-paced game it is!</a><br /><br />Seriously, from what I've seen it's mostly a text game with a few pictures and animations here and there, doesn't seem hard to make with BASIC.<br /><br />What I'd like to see is a scrolling platformer coded in BASIC for a 6502 machine that isn't painfully slow...<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Tue Dec 15, 2009 12:34 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2009-12-15T12:03:52-07:00</updated>
<published>2009-12-15T12:03:52-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5770&amp;p=54084#p54084</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5770&amp;p=54084#p54084"/>
<title type="html"><![CDATA[Questions about scrolling and sprites on (S)NES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5770&amp;p=54084#p54084"><![CDATA[
The Oregon Trail for Apple II, which has an even weaker CPU and PPU than the NES, was written in BASIC with asm subroutines.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Tue Dec 15, 2009 12:03 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Celius]]></name></author>
<updated>2009-12-15T10:29:23-07:00</updated>
<published>2009-12-15T10:29:23-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5770&amp;p=54081#p54081</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5770&amp;p=54081#p54081"/>
<title type="html"><![CDATA[Questions about scrolling and sprites on (S)NES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5770&amp;p=54081#p54081"><![CDATA[
I personally can't believe that people code in C for the NES. I barely get by penny-pinching with every available cycle when coding in ASM. And I agree with the whole absolute control thing. When coding in C, you just tell it to multiply two non-integer numbers willy-nilly and you don't realize that you're probably doing something that takes a dozen or more scanlines. And without ASM, things like doynax's polygon engine, or tokumaru's raycaster would not be possible.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=138">Celius</a> — Tue Dec 15, 2009 10:29 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2009-12-15T08:13:24-07:00</updated>
<published>2009-12-15T08:13:24-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5770&amp;p=54079#p54079</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5770&amp;p=54079#p54079"/>
<title type="html"><![CDATA[Questions about scrolling and sprites on (S)NES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5770&amp;p=54079#p54079"><![CDATA[
Sure, I can't imagine programming business application in ASM, I'd go crazy. But for games it's a lot of fun.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Tue Dec 15, 2009 8:13 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2009-12-15T07:55:22-07:00</updated>
<published>2009-12-15T07:55:22-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5770&amp;p=54078#p54078</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5770&amp;p=54078#p54078"/>
<title type="html"><![CDATA[Questions about scrolling and sprites on (S)NES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5770&amp;p=54078#p54078"><![CDATA[
True, but there's a reason that languages like Fortran were invented. (No, it wasn't to write <a href="http://en.wikipedia.org/wiki/Dian_Shi_Mali" class="postlink">PUSH START TO RICH</a>.) For tasks where being able to express complicated logic is more important than user response time, a compiler doesn't have to be 100 percent efficient. That's why so many business rely on Python and/or VB, and why web applications are JavaScript instead of downloadable native clients.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Tue Dec 15, 2009 7:55 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2009-12-15T07:48:38-07:00</updated>
<published>2009-12-15T07:48:38-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5770&amp;p=54077#p54077</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5770&amp;p=54077#p54077"/>
<title type="html"><![CDATA[Questions about scrolling and sprites on (S)NES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5770&amp;p=54077#p54077"><![CDATA[
<div class="quotetitle">Gradualore wrote:</div><div class="quotecontent"><br />It's fun.<br /></div><br />It's true. We get the chance to try things that wouldn't be possible in any high level language, it's total freedom. Also, nothing beats being able to tell the computer *exactly* what to do.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Tue Dec 15, 2009 7:48 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[GradualGames]]></name></author>
<updated>2009-12-15T07:41:04-07:00</updated>
<published>2009-12-15T07:41:04-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5770&amp;p=54076#p54076</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5770&amp;p=54076#p54076"/>
<title type="html"><![CDATA[Questions about scrolling and sprites on (S)NES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5770&amp;p=54076#p54076"><![CDATA[
I forgot to mention the most important reason to learn assembly language. It's fun. Very fun, in fact.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3735">GradualGames</a> — Tue Dec 15, 2009 7:41 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[AndiNo]]></name></author>
<updated>2009-12-14T14:47:49-07:00</updated>
<published>2009-12-14T14:47:49-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5770&amp;p=54063#p54063</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5770&amp;p=54063#p54063"/>
<title type="html"><![CDATA[Questions about scrolling and sprites on (S)NES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5770&amp;p=54063#p54063"><![CDATA[
<div class="quotetitle">Gradualore wrote:</div><div class="quotecontent"><br />2's complement math on top of hex, binary and bitwise operations<br /></div>In fact I know a bit of all of them as I am a computer science student (if that's the right word for it). But anyway, ASM seems so awkward to me <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /> I guess I won't touch it if I don't have to. Your points seem to be right though...<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4121">AndiNo</a> — Mon Dec 14, 2009 2:47 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[LocalH]]></name></author>
<updated>2009-12-14T14:23:50-07:00</updated>
<published>2009-12-14T14:23:50-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5770&amp;p=54062#p54062</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5770&amp;p=54062#p54062"/>
<title type="html"><![CDATA[Questions about scrolling and sprites on (S)NES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5770&amp;p=54062#p54062"><![CDATA[
<div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br />And BTW the C64 has a way to actually disable sprites, and you usually have to play tricks with it to do OAM cycling to be able to show more than 8 sprites on the screen.<br /></div><br />Not really, all you have to do is rewrite the Y-pos of the sprite. New Y-pos takes effect after sprite display, other sprite parameters take effect when written.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=325">LocalH</a> — Mon Dec 14, 2009 2:23 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[GradualGames]]></name></author>
<updated>2009-12-13T16:53:40-07:00</updated>
<published>2009-12-13T16:53:40-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5770&amp;p=54008#p54008</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5770&amp;p=54008#p54008"/>
<title type="html"><![CDATA[Questions about scrolling and sprites on (S)NES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5770&amp;p=54008#p54008"><![CDATA[
<div class="quotetitle">AndiNo wrote:</div><div class="quotecontent"><br /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">Well I think it is possible to merge C and assembly ?<br /></div>Yes, I think it is, but as I have absolutely no knowledge about assembler (and honestly I have no intention to learn it) that is not an option for me. Although I might find a person who could do that for me, I currently want to try to code this game myself.</div><br /><br />If you already know C, it isn't a very big step to learn assembly I don't think. Especially if you're already familiar with bitwise operations such as &amp;, |,  &lt;&lt;, &gt;&gt; etc.  If you know bitwise logic stuff, and you're familiar with hex and binary..assembly would be a cinch to learn.  Plus it'll give you added power as a programmer. At work I use C++, and every so often it is very instructive to check out the disassembly of my code to see what is actually going on in the compiled code. Without that knowledge, that sort of thing is all guesswork.<br /><br />*edit* I really should add that learning 2's complement math on top of hex, binary and bitwise operations is another skill that would help for assembly. Those are the only things you really need to *LEARN,* beyond that it is almost as though assembly is programming without parentheses, as it were. So instead of:<br /><br />x = ( a + b ) your code would look like (in pseudo code)<br /><br />result = a  <br />result += b <br />x = result   <br /><br />but in assembly language it looks only slightly more cryptic:<br />lda a<br />adc b<br />sta x<br /><br />(this is ignoring the importance of the carry bit but you'd learn that too if you went down this road)<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3735">GradualGames</a> — Sun Dec 13, 2009 4:53 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[MottZilla]]></name></author>
<updated>2009-12-03T16:33:21-07:00</updated>
<published>2009-12-03T16:33:21-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5770&amp;p=53422#p53422</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5770&amp;p=53422#p53422"/>
<title type="html"><![CDATA[Questions about scrolling and sprites on (S)NES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5770&amp;p=53422#p53422"><![CDATA[
You can choose two sprite sizes but not exactly. You actually choose a set of sprite sizes, one smaller, one bigger. Each sprite you put on the screen can be Small or Big. The default setting or mode 0 is 8x8 Small, 16x16 Big.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">2101  wb++?- OBSEL - Object Size and Chr Address<br />        sssnnbbb<br /><br />        sss  = Object size:<br />            000 =  8x8  and 16x16 sprites<br />            001 =  8x8  and 32x32 sprites<br />            010 =  8x8  and 64x64 sprites<br />            011 = 16x16 and 32x32 sprites<br />            100 = 16x16 and 64x64 sprites<br />            101 = 32x32 and 64x64 sprites<br />            110 = 16x32 and 32x64 sprites &#40;'undocumented'&#41;<br />            111 = 16x32 and 32x32 sprites &#40;'undocumented'&#41;<br /><br />        nn   = Name Select<br />        bbb  = Name Base Select &#40;Addr&gt;&gt;14&#41;<br />            See the section &quot;SPRITES&quot; below for details.<br /></div><br /><br />The disadvantage using larger sprites like 64x64 is that you only have 512 8x8 tiles for Objects. Also DMA is limited in the amount of tiles you can manage to update from frame to frame. So yes it supports really big sprites but they aren't practical for most uses. <br /><br />The SNES could actually fill the entire screen with sprites if you wanted to do that. The real limit is the amount of different tiles you have for sprites. It's up to the developer to decide what is best for their game at any particular scene. <br /><br />Personally I see 8x8 and 16x16 more useful but I can see where you might decide to go a bit bigger and have the 32x32 but 64x64 seems pretty wasteful for most types of games. If you want non-player objects in games with multiple enemies on screen and to have decent animation it would be hard to achieve that on large characters.<br /><br />I can't stress that enough that you have a limit to how many Sprite tiles you have available. Unlike NES you can't just bankswitch a small portion of CHR-ROM and have new animation tiles at the ready. 512 8x8 tiles at 4bpp works out to 16Kbytes where as with Backgrounds you can have up to 1024 8x8 tiles giving you 32kbytes. So you are quite a big better off with lots of background tiles but rather limited with Sprites.<br /><br />The good thing is your Player which is what the User of the game will be looking at most of the time is deterministic in terms of what tiles need to be available at any one time. This means if you DMA sprite tiles for your player every frame you can have tons of animation for the player with little cost to Sprite Tiles in VRAM. This also helps save more VRAM for enemy tiles which are non-deterministic since enemys will generally appear on the screen many times and in different states of animation so all of their Tiles must be loaded at once. <br /><br />I hope this all helps. I've been working on something for the SNES lately and been investigating things like this.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=1726">MottZilla</a> — Thu Dec 03, 2009 4:33 pm</p><hr />
]]></content>
</entry>
</feed>