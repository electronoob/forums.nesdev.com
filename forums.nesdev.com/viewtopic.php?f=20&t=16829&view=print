<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - State of GB repro boards</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">State of GB repro boards</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=20&amp;t=16829">http://forums.nesdev.com/viewtopic.php?f=20&amp;t=16829</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>calima</b> [ Thu Dec 14, 2017 6:18 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>State of GB repro boards</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Gathering up all GB(C) repro board info in one place.<br /><br />- BitBuilt:<br />---- 2mb + RTC + 32kb SRAM, MBC3, 45$<br />---- other versions too, but their store is down, and google cache only has that<br />- J. Rodrigo:<br />---- 2mb + 32kb FRAM, MBC5, 37.70$<br />---- 4mb + 32kb FRAM, MBC5, 47.20$<br />- BennVenn:<br />---- 2mb + SRAM, MBC1/2/3/5, 20$<br />---- 2mb + FRAM, MBC1/2/3/5, 24$<br />---- 4mb + SRAM, MBC1/2/3/5, 24$<br />---- 4mb + FRAM, MBC1/2/3/5, 28$<br />---- 4mb + SRAM, unknown mapper, 13$<br />- CatSkull (Sheep It Up):<br />---- 32kb, 10$<br /><br />Then there are Chinese Pokemon clones at about 4$, but they come with the usual quality issues, saving issues, wrong voltage parts, etc. Doesn't seem too good right now, even with volume discounts publishing homebrew wouldn't be too tenable. BennVenn's cheaper cart might be ok if it comes with a decent mapper, but his products are out of stock 95% of the time. If I missed an option, please post.<br /><br />Sheep It Up had custom boards made, at least one release used the Pokemon clones, no idea what Tobu Tobu Girl uses. I recall INL saying it'd be nice to get into the Gameboys, competition would be welcome <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Thu Dec 14, 2017 12:08 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: State of GB repro boards</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />One of the major problems is that Micron just discontinued their 2 MiB 5V flash, leaving only Macronix with 1 MiB 5V parts (and other vendors of even smaller parts). The carts are small enough that fitting in any voltage translation is tricky.<br /><br />On the other hand, if people were actually going to start making <em>new</em> games rather than moonshine, simple discrete logic mappers with self-flashing and without RAM support are simple, fit easily, and don't provide meaningfully fewer features than the OEM options.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tmk</b> [ Thu Dec 14, 2017 12:14 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: State of GB repro boards</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">calima wrote:</div><div class="quotecontent">Sheep It Up had custom boards made, at least one release used the Pokemon clones, no idea what Tobu Tobu Girl uses.</div><br /><br /><a href="https://catskullelectronics.com/32kcart" class="postlink">Sheep It Up</a>, and <a href="https://imgur.com/gallery/3voRn" class="postlink">Tobu Tobu Girl</a> - this looks like those Pokemon clones.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Dec 14, 2017 12:28 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: State of GB repro boards</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">lidnariq wrote:</div><div class="quotecontent">if people were actually going to start making <em>new</em> games rather than moonshine</div><br />I'd be glad to pitch in if there were a good resource for making the transition from 6502 or full Z80 to LR35902, in particular how object state data should be organized for a player or enemy movement routine in a platformer, shmup, etc.<br /><br /><div class="quotetitle">lidnariq wrote:</div><div class="quotecontent">simple discrete logic mappers with self-flashing and without RAM support are simple, fit easily</div><br />The trouble with discrete logic is how it'd be made compatible with existing emulators that expect the MBC family.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Thu Dec 14, 2017 12:44 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: State of GB repro boards</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Adding emulator support for self-flashing is the hard part, not making a discrete logic mapper that's compatible with an MBC5 subset.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>calima</b> [ Thu Dec 14, 2017 12:46 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: State of GB repro boards</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thanks, I wasn't aware the Sheep folks were selling theirs, added. Tobu is indeed a Pokemon clone, 5V SRAM but 3V flash.<br /><br />@lidnariq<br />Krikzz managed it I believe, with the Everdrive GB X series?<br /><br />Self-flashing for saves does come with issues: how to prevent bricking if the user turns off during writes/loses battery power, if a code bug causes writes to the main area, and how to handle wear leveling (with the worst flash cells only tolerating tens of writes before dying). I think that to be safe, such a board would need a separate chip for the saves, and it would have to be higher quality flash, or include wear leveling inside it/with a controller.<br /><br />@tepples<br />Emulators aren't an issue for development, well as long as you don't want to use proprietary ones like BGB. Adding support for mappers is quite easy.<br /><br />If you mean for users, like with the fceux revision, that does pose an issue if you want your game easily playable as a ROM. Perhaps include the emulator next to your ROM download then.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Thu Dec 14, 2017 1:27 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: State of GB repro boards</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">calima wrote:</div><div class="quotecontent">Everdrive GB X series<br /></div><a href="https://cdnssl.hackinformer.com/wp-content/uploads/2017/06/06141351/everdrive_gb_card.jpg" class="postlink">picture of one</a> Yeah, I said tricky, not impossible. I was expecting it to have to be a 4-layer board, but looking at this picture I think he managed to get away with a 2-layer one...<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Self-flashing for saves does come with issues: how to prevent bricking if the user turns off during writes/loses battery power, if a code bug causes writes to the main area, and how to handle wear leveling (with the worst flash cells only tolerating tens of writes before dying). I think that to be safe, such a board would need a separate chip for the saves, and it would have to be higher quality flash, or include wear leveling inside it/with a controller.<br /></div>Wear leveling is a bigger concern in NAND flash, and especially <em>multilevel</em> NAND flash, than NOR flash.<br /><br /><a href="https://www.micron.com/~/media/documents/products/product-flyer/nor_nand_flash_guide.pdf" class="postlink">Micron</a> calls out wear levelling as an additional concern for NAND flash relative to NOR flash.<br /><br /><a href="http://www.cypress.com/file/202541/download" class="postlink">Cypress (i.e. Spansion)</a> discusses wear levelling on NOR flash, but also points out that typical program-erase count limits for NOR flash are orders of magnitude greater than for NAND flash.<br /><br />Also, I'm specifically referring to making new carts using the same SST39 parts as are currently used by mappers 29, 30, and 111, which already use the same NOR flash for saves. While &quot;we're already doing that&quot; isn't a good enough argument by itself, I don't think I've heard of people having problems with bricking their games that use those boards.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Dec 14, 2017 1:29 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: State of GB repro boards</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Saving can be done by reserving the last* 4 or more erase sectors of flash for a log-structured file system. It might consist of a circular buffer containing (file ID, version, length, data, checksum), where the total area is at least twice as big as the intended save capacity. A file is &quot;superseded&quot; when a file with the same ID and a greater version exists. When free space comes close to 1 sector, the un-superseded files from the oldest sector are copied to the free sector, and the source sector is erased to become the new free sector.<br /><br /><br /><span style="font-size: 85%; line-height: normal">* On Game Boy or Game Gear, you'd reserve the last sectors. On NES, you'd reserve the first sectors because the last contain the reset vector.</span>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>calima</b> [ Thu Dec 14, 2017 2:13 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: State of GB repro boards</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />With the batteries being an additional weak point vs NES, I'd really like some extra assurances that the game code can't be bricked, no matter what.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FrankenGraphics</b> [ Thu Dec 14, 2017 2:39 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: State of GB repro boards</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">lidnariq wrote:</div><div class="quotecontent">if people were actually going to start making new games rather than moonshine</div><br /><br />Since i saw sheep it up it has been on my 2018 agenda to get into making graphics and music for gb once another project is crossed off my list as done. <br /><br />I might be fooled but it seems to me gbdev would allow for smaller projects, at least assets-wise. I could use a bit of that between the long-running NES projects.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>nitro2k01</b> [ Fri Dec 15, 2017 5:07 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: State of GB repro boards</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If you only need ROM mapping, a &quot;MBC5&quot; is 4 74 series logic chips (maximum ROM size 1 MiB) or 3 chips (maximum ROM size 256 KiB).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Fri Dec 15, 2017 11:02 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: State of GB repro boards</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Just to spell that out explicitly: for something compatible with an MBC5 subset, you &quot;just&quot; need to latch on writes to the memory region $2000-$2FFF, or [A15 downto A12] = '0010'. This can easily be done with a 74'138. <br /><br />In contrast, for a self-flashable option, you need two disjoint memory regions; one for flash write and one for bankswitch write. Fortunately, the gameboy cart slot already decodes $A000-$BFFF for you.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>nitro2k01</b> [ Fri Dec 15, 2017 12:06 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: State of GB repro boards</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">lidnariq wrote:</div><div class="quotecontent">In contrast, for a self-flashable option, you need two disjoint memory regions; one for flash write and one for bankswitch write. Fortunately, the gameboy cart slot already decodes $A000-$BFFF for you.</div>Why? If the address is decoded correctly so the bank switch mechanism only reacts to writes in $2000-$2FFF or $2000-$3FFF region, you can use $4000-$7FFF for writing to flash. That is, assuming the cart is only using a single flash chip for everything, which is the simplest, and probably the cheapest solution. <br /><br />And no, the /CS signal does not decode external SRAM completely. /CS is also asserted on accesses to the GB's internal work RAM, at least on DMG and maybe even on GBC. So you would need some additional decoding, FLASH_CS=CS or A14.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Fri Dec 15, 2017 12:13 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: State of GB repro boards</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">nitro2k01 wrote:</div><div class="quotecontent">Why? If the address is decoded correctly so the bank switch mechanism only reacts to writes in $2000-$2FFF or $2000-$3FFF region, you can use $4000-$7FFF for writing to flash. That is, assuming the cart is only using a single flash chip for everything, which is the simplest, and probably the cheapest solution.<br /></div>See also, having two disjoint regions.<br /><br />I mean, yes, the flash can overlap the bankswitching register as long as there is some region that the bankswitching register doesn't respond to and the flash does, but this only works because flash is protected with the multi-write sequence to program and/or erase.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">And no, the /CS signal does not decode external SRAM completely. /CS is also asserted on accesses to the GB's internal work RAM, at least on DMG and maybe even on GBC. So you would need some additional decoding, FLASH_CS=CS or A14.<br /></div>... seriously? augh.<br /><br />I guess that explains why I've never seen any carts that were just 32K ROM with battery-backed RAM then.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>nitro2k01</b> [ Fri Dec 15, 2017 12:51 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: State of GB repro boards</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">lidnariq wrote:</div><div class="quotecontent">See also, having two disjoint regions.</div>Yes, but this would not need any additional logic over the pseudo-MBC5 circuit. <br /><br /><div class="quotetitle">lidnariq wrote:</div><div class="quotecontent">I mean, yes, the flash can overlap the bankswitching register as long as there is some region that the bankswitching register doesn't respond to and the flash does, but this only works because flash is protected with the multi-write sequence to program and/or erase.</div>Yes, but we can now rely on that. If that was ever a problem, there's still something you can do. Only use 4000-7FFF for flash writes. Ie FLASH_WR=WR or ~A14. Not too comfortable for a low chip count circuit though, since you'd need an inversion as well. In practice, this should never be a problem for any chip that's JEDEC compliant. Intel chips need not bother though. <br /><br />Actually, it WOULD be a problem for one chip I've seen in the wild: AM29F016 (as opposed to AM29F016b or some other variant of the chip.) Not because it was lacking the multi-write sequence, but because the addresses used for it needed all of A0-A14 to be a checkerboard pattern. Literally $2AAA and $5555. In this case, filtering writes <em>would</em> make sense. With that fix, the unlock sequence would become: <br />[$2000]&lt;-$01<br />[$5555]&lt;-$AA<br />[$2000]&lt;-$00<br />[$6AAA]&lt;-$55<br />Not the prettiest thing in the world, but it would work in the end.<br /><br />But other than AM29F016 and any Intel chip, I believe every other chip I've come across would &quot;just work&quot;.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>