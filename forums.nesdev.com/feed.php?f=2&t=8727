<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=2&amp;t=8727" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2012-04-11T10:55:05-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=2&amp;t=8727</id>
<entry>
<author><name><![CDATA[3gengames]]></name></author>
<updated>2012-04-11T10:55:05-07:00</updated>
<published>2012-04-11T10:55:05-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8727&amp;p=92367#p92367</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8727&amp;p=92367#p92367"/>
<title type="html"><![CDATA[Controller Input Codes]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8727&amp;p=92367#p92367"><![CDATA[
Here's what I did for my game:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">In RAM:<br />EasterEgggSteps: .rs 1 ;1Byte RAM for Easter Egg current button check.<br />Data:<br />EasterEggButtonCombo: &#40;Button values array here, one button at a time&#41;<br /><br />Program:<br />  LDA #$10<br />  BIT Settings ;Check to see if Easter Egg is already set<br />  BNE .AfterEasterEggCheck ;It was, skip everything.<br />  LDA ControllerData0NewlyPressed ;Get buttons newly pressed.<br />  BEQ .AfterEasterEggCheck ;No new button pressed, skip rest.<br />  LDX EasterEggSteps ;Current buttton check.<br />  CMP EasterEggButtonCombo,X Check array.<br />  BNE .ClearEasterEggSoFar ;Clear button check value, wrong key.<br />  INC EasterEggSteps ;Next button check next time.<br />  CPX #$&#40;NumberOfButtonPressesNeeded&#41; ;Check to see if last press done.<br />  BNE .AfterEasterEggCheck ;Nope, not yet.<br />  LDA Settings ;Settings byte for my game engine, this just sets a flag for my main program to do stuff with.<br />  ORA #$10<br />  STA Settings ;Store easter egg hit flag for my engine.<br />.ClearEasterEggSoFar:<br />  LDA #$00<br />  STA EasterEggSteps ;Clear steps, wrong code or easter egg activated.<br />.AfterEasterEggCheck:<br />  Code after check is done.<br /></div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4311">3gengames</a> — Wed Apr 11, 2012 10:55 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Kasumi]]></name></author>
<updated>2012-03-17T16:56:15-07:00</updated>
<published>2012-03-17T16:56:15-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8727&amp;p=91463#p91463</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8727&amp;p=91463#p91463"/>
<title type="html"><![CDATA[Controller Input Codes]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8727&amp;p=91463#p91463"><![CDATA[
Mortal Kombat also has a STUPIDLY short window for entering those fatalities.<br /><br />Re: My CRAZY input code. It sorta works now (Version one did not), but it still has bugs. It's also not great for rapid fire entry. I'mma keep fixing it up, though. It's a fun exercise.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3504">Kasumi</a> — Sat Mar 17, 2012 4:56 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[cpow]]></name></author>
<updated>2012-03-17T16:46:36-07:00</updated>
<published>2012-03-17T16:46:36-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8727&amp;p=91462#p91462</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8727&amp;p=91462#p91462"/>
<title type="html"><![CDATA[Controller Input Codes]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8727&amp;p=91462#p91462"><![CDATA[
<div class="quotetitle">MottZilla wrote:</div><div class="quotecontent"><br />Personally I find long button sequence codes to be rather annoying. There are better ways to hide cheats or debug functions.<br /></div><br /><br />Amen to this.  I still get a chuckle remembering my friend with the notebook full of moves for the MK series.  "Hold on, I've got that fatality somewhere...&lt;flip,flip,flip&gt;YOU LOSE."<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3705">cpow</a> — Sat Mar 17, 2012 4:46 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Roth]]></name></author>
<updated>2012-03-17T16:29:35-07:00</updated>
<published>2012-03-17T16:29:35-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8727&amp;p=91461#p91461</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8727&amp;p=91461#p91461"/>
<title type="html"><![CDATA[Controller Input Codes]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8727&amp;p=91461#p91461"><![CDATA[
<div class="quotetitle">Kasumi wrote:</div><div class="quotecontent"><br />I just TAS'd the rom you posted, and pressing all the buttons every other frame DOES make the code work. So does pressing random buttons in the middle of the code. The only sequence I tried was up, down, up, b, down, down, start, left, right, left, A, right, B, A, but any buttons can probably be pressed in between while the timer is counting down.<br /></div><br /><br />Testing a basic code like this against TASing isn't really a concern of mine. The counter is fast enough that with normal player input on an NES it pans out just right, I think.<br /><br />I don't have time right now to look over the code you posted, but I will be sure to check it out later. Thanks for the critique and the response!<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=174">Roth</a> — Sat Mar 17, 2012 4:29 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[MottZilla]]></name></author>
<updated>2012-03-17T16:10:17-07:00</updated>
<published>2012-03-17T16:10:17-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8727&amp;p=91460#p91460</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8727&amp;p=91460#p91460"/>
<title type="html"><![CDATA[Controller Input Codes]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8727&amp;p=91460#p91460"><![CDATA[
Similar to codes like this, games like Street Fighter and Mortal Kombat will keep a queue of player input for performing special moves. So it has other uses than adding secret codes. Personally I find long button sequence codes to be rather annoying. There are better ways to hide cheats or debug functions.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=1726">MottZilla</a> — Sat Mar 17, 2012 4:10 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Kasumi]]></name></author>
<updated>2012-03-17T17:20:57-07:00</updated>
<published>2012-03-17T16:02:31-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8727&amp;p=91459#p91459</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8727&amp;p=91459#p91459"/>
<title type="html"><![CDATA[Controller Input Codes]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8727&amp;p=91459#p91459"><![CDATA[
I just TAS'd the rom you posted, and pressing all the buttons every other frame DOES make the code work. So does pressing random buttons in the middle of the code. The only sequence I tried was up, down, up, b, down, down, start, left, right, left, A, right, B, A, but any buttons can probably be pressed in between while the timer is counting down.<br /><br />Here's my admittedly <em>crazy</em> (and untested) solution. It allows for multiple button inputs (even all eight at once), and fails if anything that's not part of an input is pressed at any time. It will also wait as long as possible for you to press the rest of the buttons in a multibutton input which I think is nicer than a timer. <br /><br />Apologies in advance if it's hard to read. My coding style is basically garbage. It's also not super optimized, but it may work even though it's untested. Yell at me if it doesn't work, I would like to fix it if it doesn't.<br /><br />I may be able to do something less hardcore if multiple button inputs aren't needed. I realized after the post you didn't care about multiple buttons at all. I just sorta read (right_punch) as something like right+A, when you really just had the Konami code verbatim.<br /><br />Edit: Doesn't work! <img src="http://forums.nesdev.com/images/smilies/icon_lol.gif" alt=":lol:" title="Laughing" /> Figuring it out now.<br />Edit 2: It plays at least somewhat nice now. Further stress testing now.<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">;NoButtons = Contains whether we are currently waiting for no buttons to be checked<br />;Non Zero means we are.<br />;IntNoButtons = Contains whether the first check is waiting for no buttons to be checked<br />;Non Zero means it is<br />;code_offset = code_offset<br />;InputStarted = Used to check for no buttons being pressed after starting a complex input.<br />;Nonzero means complex input was started<br /><br />up_punch = %00001000<br />down_punch = %00000100<br />left_punch = %00000010<br />right_punch = %00000001<br />a_punch = %10000000<br />b_punch = %01000000<br /><br />code_check:<br />   .byte up_punch, up_punch, down_punch, down_punch<br />   .byte left_punch, right_punch, left_punch, right_punch<br />   .byte b_punch, a_punch<br />;code_check:<br />   .byte up_punch | a_punch, down_punch | b_punch, left_punch, right_punch<br />   .byte down_punch | left_punch, down_punch | right_punch, b_punch, a_punch<br />   .byte up_punch, right_punch<br />test_code:<br />   ldx code_offset;Because when code_offset is 0, old inputs may still be pressed from when the code was reset<br />   beq nobuttonstartcheck;We go to an additional check<br />truestart:<br />   lda NoButtons;If we're waiting for no buttons to be pressed<br />   bne ComplexCheck;Branch<br />   lda buttonsheld<br />   beq complexinputstartcheck<br />complexinputreentry:<br />   cmp code_check,x;If the current input matches<br />   beq SetNoButtons;The input we want perfectly, we are now waiting for no buttons to be pressed to advance the offset<br />   ;If not...<br />   lda code_check,x;We now reverse the buttons the current input requires<br />   eor #$FF;We do this, so we can check if any of THOSE buttons we don't want are pressed<br />   and buttonsheld;And reset code_offset if so<br />   <br />   bne resetcode;If any are pressed, we reset the code<br />   ;Else, we go through the loop on the next frame waiting for a perfect match to our input<br />   ;And set InputStarted so if the player releases all of the current &quot;good&quot; buttons<br />   ;the code will be reset<br />   lda buttonsheld<br />   beq code_rts<br />   lda #$FF<br />   sta &lt;InputStarted<br />   <br />   rts<br />complexinputstartcheck:<br />   ldy InputStarted<br />   beq complexinputreentry<br />   bne resetcode<br />   <br />nobuttonstartcheck:<br />   lda IntNoButtons;If this variable is 0, <br />   beq truestart;we're safe to start the code as normal<br />   lda #$00<br />   sta NoButtons<br />   sta InputStarted<br />   lda buttonsheld;Otherwise we RTS if the current input is non zero<br />   bne code_rts<br />   sta IntNoButtons;or store zero in this variable so the code can safely continue on the next frame<br />code_rts:<br />   rts<br />   <br />SetNoButtons:<br />   lda #$FF<br />   sta NoButtons<br />   <br />   lda #$00<br />   sta InputStarted<br />   <br />   rts<br />   <br />ComplexCheck:<br />   lda code_check,x<br />   eor #$FF<br />   sta temp<br />   <br />   lda buttonsheld<br />   beq AdvanceCode;If there are no buttons held, we can move the next input<br />   and temp;If a button that was NOT part of our input is pressed<br />   bne resetcode;While other buttons related to the current input are, we reset the code.<br />   <br />   rts;If neither of those things are true, we're still waiting for the buttons to be released<br />   <br />AdvanceCode:<br />   inx<br />   cpx #$0A<br />   beq codesucceeded<br />   stx code_offset<br />   lda #$00<br />   sta NoButtons<br />   sta InputStarted<br />   <br />   rts<br />   <br />resetcode:<br />   lda #$00<br />   sta NoButtons<br />   sta code_offset<br />   sta InputStarted<br />   <br />   lda #$FF<br />   sta IntNoButtons<br />   <br />   rts<br />   <br />codesucceeded:<br />;Do code succeeded things<br />   <br />   jmp resetcode<br />   rts<br /></div><br /><br />Konami Test Rom: <!-- m --><a class="postlink" href="http://www.mediafire.com/?4y232b65qmr3071">http://www.mediafire.com/?4y232b65qmr3071</a><!-- m --><br />Multi Button Test Rom: <!-- m --><a class="postlink" href="http://www.mediafire.com/download.php?v891d08t1va5da7">http://www.mediafire.com/download.php?v891d08t1va5da7</a><!-- m --> <br /><br />Multibutton's code is: up+A, down+B, left, right, down+left, (remember you gotta release all buttons before next input) down+right, B, A, Up, Right<br /><br />The background turns blue on success.<br /><br />I definitely should have chosen a code that didn't have something like the down+left, down+right sequence. Still pretty proud of how it works with wrong button inputs even when the current input requires multiple buttons. Roth's is better for rapid fire entry, though. Mine is too strict to enter the code quickly.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3504">Kasumi</a> — Sat Mar 17, 2012 4:02 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Roth]]></name></author>
<updated>2012-03-17T14:44:16-07:00</updated>
<published>2012-03-17T14:44:16-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8727&amp;p=91457#p91457</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8727&amp;p=91457#p91457"/>
<title type="html"><![CDATA[Controller Input Codes]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8727&amp;p=91457#p91457"><![CDATA[
The first post has a ROM included now if anyone would like to check it out.<br /><br />EDIT: Oops! Forgot to reply to the inx thing you pointed out. Yeah, I think I had been doing something else when writing the code at first, and never thought to mess with that after it had started working.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=174">Roth</a> — Sat Mar 17, 2012 2:44 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Kasumi]]></name></author>
<updated>2012-03-17T14:19:46-07:00</updated>
<published>2012-03-17T14:19:46-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8727&amp;p=91452#p91452</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8727&amp;p=91452#p91452"/>
<title type="html"><![CDATA[Controller Input Codes]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8727&amp;p=91452#p91452"><![CDATA[
Not that it really matters too terribly much, but this:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">      lda code_offset<br />      clc                  ;<br />      adc #$01             ;<br />      sta code_offset      ;<br />      cmp #$0a             ; Compare accumulator to max<br />      bne :+    <br /></div><br /><br />Can be this:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">      inx<br />      stx code_offset      ;<br />      cpx #$0a             ; Compare accumulator to max<br />      bne :+    <br /></div><br /><br />I haven't tried the actual code, but from the look of it if you pressed every button at once it would always advance the counter.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">test_code:<br />   ldx code_offset         ; Get the offset ready<br />   lda control_pad         ; All buttons pressed #%11111111<br />   eor control_old         ; No buttons were pressed last frames #%00000000<br />   and control_pad         ;#%11111111<br />   and code_check, x       ; Check the button press against <br />   beq :+<br /></div><br /><br />That last and should probably be a cmp. <br /><br />Even then the code input sort of fails. I just have to hammer buttons while the code input counter is above zero, and as long I press the right one at some point, it works, order be damned.<br /><br />Could be wrong here since I haven't tested it, though. That's just how I understand it's working.<br /><br />Instead of using a timer, I'd wait for no buttons to be pressed before advancing to the next input. It seems you're trying to support multiple inputs (like up+A as a single part of the code) which is noble. In that case, I'd keep the timer for the case where the input partially matches, but count down for a much shorter time period (like 4 frames.) If the full input doesn't match by then, the code resets. <br /><br />Edit: Though... I guess that has a similar problem. As long as one of the possible buttons is held down, you can hammer others and the code doesn't reset. I may edit this later with a 6502 try of my own.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3504">Kasumi</a> — Sat Mar 17, 2012 2:19 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Roth]]></name></author>
<updated>2012-03-17T14:41:54-07:00</updated>
<published>2012-03-17T13:35:00-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8727&amp;p=91448#p91448</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8727&amp;p=91448#p91448"/>
<title type="html"><![CDATA[Controller Input Codes]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8727&amp;p=91448#p91448"><![CDATA[
Hey all! I sat down to try and figure out a basic way to do some controller codes that people could use to do things like the Konami code. I thought I'd share what I ended up using, and ask how some of you might've or have handled it. <a href="https://slydogstudios.org/index.php/2012/03/controller-input-codes/" class="postlink">This is what I came up with</a>:<br /><br />EDIT: Here's a <a href="https://slydogstudios.org/wp-content/uploads/3in1_2p_Pak03172012.nes" class="postlink">ROM with it working on the title screen</a>.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">code_count:    .res 1      ; Number of frames between each button press   <br />code_offset:   .res 1      ; Which byte to check in the code_check table<br /><br />code_check:<br />   .byte up_punch, up_punch, down_punch, down_punch<br />   .byte left_punch, right_punch, left_punch, right_punch<br />   .byte b_punch, a_punch<br /><br />test_code:<br />   ldx code_offset         ; Get the offset ready<br />   lda control_pad         ; Check buttons for only one<br />   eor control_old         ;  button press at a time<br />   and control_pad         ;<br />   and code_check, x       ; Check the button press against<br />   beq :+                  ;  the code_check table<br />      lda #$10             ; When buttons match, reset the<br />      sta code_count       ;  code count and increase the<br />      lda code_offset      ;  offset by one.<br />      clc                  ;<br />      adc #$01             ;<br />      sta code_offset      ;<br />      cmp #$0a             ; Compare accumulator to max<br />      bne :+               ;  offset in code_check table<br />         jsr PPU_off       ; Do successful code input stuff<br />                           ;  here. Be sure to jump over<br />                           ;  everything else to the end<br />                           ;  of the routine when you<br />                           ;  actually implement this.<br />:   lda code_count         ; If code_count is NOT zero...<br />    beq :+                 ;<br />      sec                  ;  ... then subtract it by one<br />      sbc #$01             ;  and return.<br />      sta code_count       ;<br />      rts                  ;<br />:   lda #$00               ; If code_count was zero then<br />    sta code_offset        ;  set code_offset back to zero,<br />    rts                    ;  which means the code input<br />                           ;  failed, and must start from<br />                           ;  the beginning.<br /></div>[/url]<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=174">Roth</a> — Sat Mar 17, 2012 1:35 pm</p><hr />
]]></content>
</entry>
</feed>