<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=10&amp;t=6565" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2010-11-26T09:39:11-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=10&amp;t=6565</id>
<entry>
<author><name><![CDATA[James]]></name></author>
<updated>2010-11-26T09:39:11-07:00</updated>
<published>2010-11-26T09:39:11-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6565&amp;p=70545#p70545</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6565&amp;p=70545#p70545"/>
<title type="html"><![CDATA[Cartridge / Memory Questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6565&amp;p=70545#p70545"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />By the way I've never heard of any games doing sprite DMA from SRAM or PRG-ROM<br /></div><br /><br />Noah's Ark reads from SRAM ($7F00) for sprite DMA.<br /><br />(Sorry for resurrecting the old thread, but I just fixed this bug in my emulator. This post might be useful for other emu authors trying to find out why sprites aren't working in this game.)<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=88">James</a> — Fri Nov 26, 2010 9:39 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tineras]]></name></author>
<updated>2010-07-05T13:20:16-07:00</updated>
<published>2010-07-05T13:20:16-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6565&amp;p=63771#p63771</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6565&amp;p=63771#p63771"/>
<title type="html"><![CDATA[Cartridge / Memory Questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6565&amp;p=63771#p63771"><![CDATA[
<div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br />Yes, exactly. However - I'm not exactly sure about $2003. $2003 and $2004 are somewhat obscure registers. Most games write just $00 to it before writing to $4014, and some (Final Fantasy) don't ever write anything there. Yet all sprites always show up correctly, so I guess $2003 is "zeroed" automatically at reset or something. So I'm not too sure about it in fact.<br /></div><br /><br />Hmm, that is very odd.  I did just read in Marat Fayzullin's document about the Sprite RAM being separated from the CPU and PPU memory.  Anyway, thank you both for your help.  I'll leave you guys alone for a while.  I don't mean to be a bother.  I'm annoying even myself at this point.  <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4449">tineras</a> — Mon Jul 05, 2010 1:20 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2010-07-05T13:14:09-07:00</updated>
<published>2010-07-05T13:14:09-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6565&amp;p=63769#p63769</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6565&amp;p=63769#p63769"/>
<title type="html"><![CDATA[Cartridge / Memory Questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6565&amp;p=63769#p63769"><![CDATA[
Yes, exactly. However - I'm not exactly sure about $2003. $2003 and $2004 are somewhat obscure registers. Most games write just $00 to it before writing to $4014, and some (Final Fantasy) don't ever write anything there. Yet all sprites always show up correctly, so I guess $2003 is "zeroed" automatically at reset or something. So I'm not too sure about it in fact.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Come on Bregalad, we have always used the terms "CPU memory" to talk about the memory that the CPU sees and "PPU memory" to talk about the memory that the PPU sees.<br /></div><br />No - not really. Memory that is on the CPU bus isn't CPU memory to me.<br /><br />If the whole CPU and PPU adress ranges pointed to a single area of shared memory (like it's the case for the C64) then I'd be okay for it - but the NES is different. For example, if $4136 is open bus, it's not a part of CPU memory, because there is no memory. So it's important to specify which memory you're talking about, not just which chip's bus it's wired to.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Mon Jul 05, 2010 1:14 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tineras]]></name></author>
<updated>2010-07-05T13:05:58-07:00</updated>
<published>2010-07-05T13:05:58-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6565&amp;p=63768#p63768</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6565&amp;p=63768#p63768"/>
<title type="html"><![CDATA[Cartridge / Memory Questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6565&amp;p=63768#p63768"><![CDATA[
<div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br />Maybe this wouldn't be nearly as confusing if you guys would stop talking about "CPU memory". This doesn't make any sense - the CPU is a chip that fetches instructions from other memory chips (internal RAM, SRAM, PRG-ROM). There is no memory in the CPU, there is just several registers.<br />I'll make a table to make things hopefully clearer :<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">Memory            Location<br />RAM               Chip in the NES<br />SRAM &#40;PRG-RAM&#41;    Cartridge<br />PRG-ROM           Cartridge<br />CHR-ROM/RAM       Cartridge<br />VRAM &#40;nametables&#41; Chip in the NES<br />Palette           PPU<br />OAM               PPU</div><br /><br /><br />By the way I've never heard of any games doing sprite DMA from SRAM or PRG-ROM - all of them does from internal ROM. I tried to do it with SRAM one with my powerpak and it worked, but maybe with slower SRAMs of the '80s it didn't work ?<br /><br />Sprite DMA just reads 256 bytes from a given adress, and write them to $4014.<br />If you write #$02 to $4014, it's equivalent to :<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda $200<br />sta $2004<br />lda $201<br />sta $2004<br />....<br />lda $2ff<br />sta $2004</div><br />but it will execute MUCH faster, as the CPU will "skip" all fetches, so it will just read, write and repeat 256 times (and somehow an extra cycle is added, that's where the 513 cycle number is from).<br /></div><br /><br />So, given your example, the address found in $2003 (not shown, but assumed) would be that of the OAM which is located in the PPU?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4449">tineras</a> — Mon Jul 05, 2010 1:05 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2010-07-05T13:00:59-07:00</updated>
<published>2010-07-05T13:00:59-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6565&amp;p=63767#p63767</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6565&amp;p=63767#p63767"/>
<title type="html"><![CDATA[Cartridge / Memory Questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6565&amp;p=63767#p63767"><![CDATA[
<div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br />Maybe this wouldn't be nearly as confusing if you guys would stop talking about "CPU memory". This doesn't make any sense - the CPU is a chip that fetches instructions from other memory chips (internal RAM, SRAM, PRG-ROM).<br /></div><br />Come on Bregalad, we have always used the terms "CPU memory" to talk about the memory that the CPU sees and "PPU memory" to talk about the memory that the PPU sees. We also talk about "palette memory" and such, because they are separate memories. We could also use WRAM and VRAM, but we must be able to identify them as separate memories.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Mon Jul 05, 2010 1:00 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2010-07-05T13:01:24-07:00</updated>
<published>2010-07-05T12:55:55-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6565&amp;p=63766#p63766</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6565&amp;p=63766#p63766"/>
<title type="html"><![CDATA[Cartridge / Memory Questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6565&amp;p=63766#p63766"><![CDATA[
Maybe this wouldn't be nearly as confusing if you guys would stop talking about "CPU memory". This doesn't make any sense - the CPU is a chip that fetches instructions from other memory chips (internal RAM, SRAM, PRG-ROM). There is no memory in the CPU, there is just several registers.<br />I'll make a table to make things hopefully clearer :<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">Memory            Location<br />RAM               Chip in the NES<br />SRAM &#40;PRG-RAM&#41;    Cartridge<br />PRG-ROM           Cartridge<br />CHR-ROM/RAM       Cartridge<br />VRAM &#40;nametables&#41; Chip in the NES<br />Palette           PPU<br />OAM               PPU</div><br /><br /><br />By the way I've never heard of any games doing sprite DMA from SRAM or PRG-ROM - all of them does from internal ROM. I tried to do it with SRAM one with my powerpak and it worked, but maybe with slower SRAMs of the '80s it didn't work ?<br /><br />Sprite DMA just reads 256 bytes from a given adress, and write them to $4014.<br />If you write #$02 to $4014, it's equivalent to :<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda $200<br />sta $2004<br />lda $201<br />sta $2004<br />....<br />lda $2ff<br />sta $2004</div><br />but it will execute MUCH faster, as the CPU will "skip" all fetches, so it will just read, write and repeat 256 times (and somehow an extra cycle is added, that's where the 513 cycle number is from).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Mon Jul 05, 2010 12:55 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tineras]]></name></author>
<updated>2010-07-05T12:38:51-07:00</updated>
<published>2010-07-05T12:38:51-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6565&amp;p=63763#p63763</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6565&amp;p=63763#p63763"/>
<title type="html"><![CDATA[Cartridge / Memory Questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6565&amp;p=63763#p63763"><![CDATA[
<div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><br /><div class="quotetitle">tineras wrote:</div><div class="quotecontent">1. A9 00      // Load Accum with 00<br />2. 8D 03 20 // Load $2003 with 00<br />3. A9 02      // Load 'N' value to Accum (2 in this case)<br />4. 8D 14 40 // Load $4014 with 'N'<br />5. Multiply 'N' * 100 = $0200<br />6. Contents get copied from ($0000-$00FF) to ($0200-$02FF)<br /></div><br />No, they get copied from CPU $0200-$02FF to SPR-RAM/OAM $00-$FF. Sprite RAM is separate from CPU RAM, and is only 256 bytes large.</div><br /><br />Oh, so OAM memory is not physically located in the CPU Memory?  And I need to create a separate memory variable like memOAM[256]?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4449">tineras</a> — Mon Jul 05, 2010 12:38 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2010-07-05T12:32:16-07:00</updated>
<published>2010-07-05T12:32:16-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6565&amp;p=63762#p63762</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6565&amp;p=63762#p63762"/>
<title type="html"><![CDATA[Cartridge / Memory Questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6565&amp;p=63762#p63762"><![CDATA[
<div class="quotetitle">tineras wrote:</div><div class="quotecontent"><br />1. A9 00      // Load Accum with 00<br />2. 8D 03 20 // Load $2003 with 00<br />3. A9 02      // Load 'N' value to Accum (2 in this case)<br />4. 8D 14 40 // Load $4014 with 'N'<br />5. Multiply 'N' * 100 = $0200<br />6. Contents get copied from ($0000-$00FF) to ($0200-$02FF)<br /></div><br />No, they get copied from CPU $0200-$02FF to SPR-RAM/OAM $00-$FF. Sprite RAM is separate from CPU RAM, and is only 256 bytes large.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Is (C000-FFFF) merely a pointer to the cartridge itself?<br /></div><br />It's kinda like that. In order to run programs, some old computers (and all new ones BTW) first copied ("loaded") the code to RAM and then executed it from there. But the NES was a simpler machine, with only 2KB RAM, so it ran code straight from ROM.<br /><br />Any CPU needs to be connected to some memory, from where it will run programs from. This memory can be RAM, ROM or both. The NES CPU is connected to a RAM chip (visible at $0000-$07FF and mirrored a few times after that) and a ROM chip on the cartridge (visible at $8000-$FFFF).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Mon Jul 05, 2010 12:32 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tineras]]></name></author>
<updated>2010-07-05T12:09:30-07:00</updated>
<published>2010-07-05T12:09:30-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6565&amp;p=63757#p63757</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6565&amp;p=63757#p63757"/>
<title type="html"><![CDATA[Cartridge / Memory Questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6565&amp;p=63757#p63757"><![CDATA[
<div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><br />The <strong>source</strong> address is what is written to $4014 times 256.<br />The <strong>destination</strong> address in OAM is the value written to $2003. Since OAM is only 256 bytes, one byte is enough to specify any part of it. If the end of OAM is reached and there are still bytes to copy, the address wraps around and goes back to 0.<br /></div><br /><br />Thank you for being patient.  This is just one of those issues that will click with me and then I'll have that "DUH!" moment.<br /><br />I'm trying to interpret code that I see in one of the NES files.  Lines 1 - 4 have been taken directly from there.  I added the notes and line 5 and 6.  Am I close to being correct?<br /><br />1. A9 80      // Load Accum with 80<br />2. 8D 03 20 // Load $2003 with 80<br />3. A9 02      // Load 'N' value to Accum (2 in this case)<br />4. 8D 14 40 // Load $4014 with 'N'<br />5. Multiply 'N' * 100 = $0200<br />6. Contents get copied from ($0080-$017F) to ($0200-$02FF)<br /><br />EDIT: Out of ignorance, I may have left some important snipet of code out.<br /><br />EDIT 2: I may also be a bit confused about memory still too.  You said the cartridge ROM is not copied to CPU memory. Is (C000-FFFF) merely a pointer to the cartridge itself?<br /><br />EDIT 3: I see two places where this operation is taking place.  I originally listed the first LDA as LDA 00, when it should have been LDA 80. I have changed my values to reflect 80.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4449">tineras</a> — Mon Jul 05, 2010 12:09 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2010-07-05T11:51:40-07:00</updated>
<published>2010-07-05T11:51:40-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6565&amp;p=63753#p63753</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6565&amp;p=63753#p63753"/>
<title type="html"><![CDATA[Cartridge / Memory Questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6565&amp;p=63753#p63753"><![CDATA[
The <strong>source</strong> address is what is written to $4014 times 256.<br />The <strong>destination</strong> address in OAM is the value written to $2003. Since OAM is only 256 bytes, one byte is enough to specify any part of it. If the end of OAM is reached and there are still bytes to copy, the address wraps around and goes back to 0.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Mon Jul 05, 2010 11:51 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tineras]]></name></author>
<updated>2010-07-05T11:45:56-07:00</updated>
<published>2010-07-05T11:45:56-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6565&amp;p=63751#p63751</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6565&amp;p=63751#p63751"/>
<title type="html"><![CDATA[Cartridge / Memory Questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6565&amp;p=63751#p63751"><![CDATA[
<div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><br /><div class="quotetitle">tineras wrote:</div><div class="quotecontent">My question is, where do the 256 bytes come from?<br /></div><br />From (N * $100) to (N * $100 + $FF). The number written to $4014 specifies which page (256-byte chunk) from CPU memory gets copied to OAM. If you write 2, $0200-$02FF will be copied.</div><br /><br />I get that part, but what memory am I copying to and from?<br /><br />1. Source Memory  (N * 100 Contents)<br />2. Source Memory Location (N * 100)<br />3. Destination Memory (OAM Contents)<br />4. Destination Memory Location (OAM Location)<br /><br />Is this right and if so, how do I know the address of the OAM?  I see that the wiki says something about an OAMADDR, but I don't recall seeing this in any other documentation (maybe because I wasn't looking for it  <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /> ).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4449">tineras</a> — Mon Jul 05, 2010 11:45 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2010-07-05T11:45:40-07:00</updated>
<published>2010-07-05T11:45:40-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6565&amp;p=63750#p63750</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6565&amp;p=63750#p63750"/>
<title type="html"><![CDATA[Cartridge / Memory Questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6565&amp;p=63750#p63750"><![CDATA[
That is the only thing I could think of, but that didn't seem likely, unless the game needed the NMI handler to use a constant number of cycles, but even then it would be much simpler to code a loop that wasted 513 cycles than to code the logic that switches between 2 sprite pages.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Mon Jul 05, 2010 11:45 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2010-07-05T11:41:07-07:00</updated>
<published>2010-07-05T11:41:07-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6565&amp;p=63749#p63749</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6565&amp;p=63749#p63749"/>
<title type="html"><![CDATA[Cartridge / Memory Questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6565&amp;p=63749#p63749"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Does anyone know why this game needs to preserve the previous frame's sprite data?<br /></div><br />My speculation is to handle lagging frames - when the game slows downs instead of doing no sprite DMA, it repeats DMA with the previous frame data which is unchanged. This is speculation tough - does anyone known if KA switch buffers systematically every frame or only on complete frames ?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Mon Jul 05, 2010 11:41 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2010-07-05T11:39:12-07:00</updated>
<published>2010-07-05T11:39:12-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6565&amp;p=63748#p63748</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6565&amp;p=63748#p63748"/>
<title type="html"><![CDATA[Cartridge / Memory Questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6565&amp;p=63748#p63748"><![CDATA[
<div class="quotetitle">tineras wrote:</div><div class="quotecontent"><br />My question is, where do the 256 bytes come from?<br /></div><br />From (N * $100) to (N * $100 + $FF). The number written to $4014 specifies which page (256-byte chunk) from CPU memory gets copied to OAM. If you write 2, $0200-$02FF will be copied.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Mon Jul 05, 2010 11:39 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tineras]]></name></author>
<updated>2010-07-05T11:34:27-07:00</updated>
<published>2010-07-05T11:34:27-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6565&amp;p=63746#p63746</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6565&amp;p=63746#p63746"/>
<title type="html"><![CDATA[Cartridge / Memory Questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6565&amp;p=63746#p63746"><![CDATA[
Do I understand this correctly?<br /><br />To use $4014:<br /><br />1. Clear $2003<br />2. Load Accum with 'N' to be multiplied later<br />3. Write Accum to $4014<br />4. An internal operation (written by me of course) will multiply N*100 and give OAM address<br />5. Internal operation writes 256 bytes to newly given OAM address<br /><br />My question is, where do the 256 bytes come from?  EDIT: Or where are they going to if I have the operation backward?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4449">tineras</a> — Mon Jul 05, 2010 11:34 am</p><hr />
]]></content>
</entry>
</feed>