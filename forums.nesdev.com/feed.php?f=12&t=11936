<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=12&amp;t=11936" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2014-10-21T10:29:43-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=12&amp;t=11936</id>
<entry>
<author><name><![CDATA[psycopathicteen]]></name></author>
<updated>2014-10-21T10:29:43-07:00</updated>
<published>2014-10-21T10:29:43-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11936&amp;p=135306#p135306</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11936&amp;p=135306#p135306"/>
<title type="html"><![CDATA[Re: Idea for speedy compression algorithm]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11936&amp;p=135306#p135306"><![CDATA[
I would probably use metasprite optimization if I have too much flickering, or animation problems.  With sizes, she has 6 48x64 of stance, 8 64x64 frames of running, 4 48x72 frames of jumping, and 4 64x64 frames of dash attack.  My engine relocates animation slots whenever actors change sizes, which can be problematic when VRAM is crowded.  If there is no space in VRAM, it doesn't draw the actor to the screen.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4383">psycopathicteen</a> — Tue Oct 21, 2014 10:29 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Sik]]></name></author>
<updated>2014-10-20T22:57:29-07:00</updated>
<published>2014-10-20T22:57:29-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11936&amp;p=135303#p135303</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11936&amp;p=135303#p135303"/>
<title type="html"><![CDATA[Re: Idea for speedy compression algorithm]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11936&amp;p=135303#p135303"><![CDATA[
I'm not sure you'd want to compress these graphics anyway =P<br /><br />That said, I bet a lot of space could be saved by spliting them into smaller sprites. There seems to be quite a good chunk of empty space around. Also it's likely you'll need sprites that don't fit in a 48×64 box in the future (when she does some other animation).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4526">Sik</a> — Mon Oct 20, 2014 10:57 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[psycopathicteen]]></name></author>
<updated>2014-10-20T20:39:56-07:00</updated>
<published>2014-10-20T20:39:56-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11936&amp;p=135301#p135301</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11936&amp;p=135301#p135301"/>
<title type="html"><![CDATA[Re: Idea for speedy compression algorithm]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11936&amp;p=135301#p135301"><![CDATA[
That is good for such a simple algorithm.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4383">psycopathicteen</a> — Mon Oct 20, 2014 8:39 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2014-10-20T17:06:20-07:00</updated>
<published>2014-10-20T17:06:20-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11936&amp;p=135293#p135293</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11936&amp;p=135293#p135293"/>
<title type="html"><![CDATA[Re: Idea for speedy compression algorithm]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11936&amp;p=135293#p135293"><![CDATA[
I wrote a ratio estimator (which does not actually output a compressed byte stream). Here's what it says:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">2304 slivers, 668 distinct, 252 repeated<br />dictionary of length 252 slivers has 1888 hits and 416 misses<br />Assuming 4 bpp, 9216 bytes would compress to 1008 bytes dictionary,<br />288 bytes control, 1888 bytes references, and 1664 bytes literal<br />Total: 4848 bytes (52.6% of original)</div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Mon Oct 20, 2014 5:06 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[psycopathicteen]]></name></author>
<updated>2014-10-20T16:25:36-07:00</updated>
<published>2014-10-20T16:25:36-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11936&amp;p=135292#p135292</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11936&amp;p=135292#p135292"/>
<title type="html"><![CDATA[Re: Idea for speedy compression algorithm]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11936&amp;p=135292#p135292"><![CDATA[
This is yet another version of my pony-tailed cheerleader character.  I made her more cartoony looking because the more realistic style was too difficult to animate fluidly.  This would take up exactly 9kB uncompressed in an SNES cart.<br /><br /><img src="http://i235.photobucket.com/albums/ee289/clownhorse/Aliciastanding.png~original" alt="Image" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4383">psycopathicteen</a> — Mon Oct 20, 2014 4:25 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2014-10-20T09:43:08-07:00</updated>
<published>2014-10-20T09:43:08-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11936&amp;p=135278#p135278</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11936&amp;p=135278#p135278"/>
<title type="html"><![CDATA[Re: Idea for speedy compression algorithm]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11936&amp;p=135278#p135278"><![CDATA[
Interesting.<br /><br />To be effective, that would require that the most common rows be common enough to outweigh the 1-byte-per-tile overhead of telling which rows use the dictionary. This will be harder at 2bpp (Game Boy format) than at 4bpp. Anyone have some Super NES tile sheets with which I could test this algorithm?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Mon Oct 20, 2014 9:43 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[psycopathicteen]]></name></author>
<updated>2014-10-20T09:28:54-07:00</updated>
<published>2014-10-20T09:28:54-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11936&amp;p=135275#p135275</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11936&amp;p=135275#p135275"/>
<title type="html"><![CDATA[Idea for speedy compression algorithm]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11936&amp;p=135275#p135275"><![CDATA[
Use a library of the 256 most commonly used 8x1 pixel rows.  Each 8x1 row in the sprite or tile has bit selecting either a literal 8x1 row, or a byte referencing an 8x1 from the library.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4383">psycopathicteen</a> — Mon Oct 20, 2014 9:28 am</p><hr />
]]></content>
</entry>
</feed>