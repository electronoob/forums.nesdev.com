<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - 64K not-onboard?</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">64K not-onboard?</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=990">http://forums.nesdev.com/viewtopic.php?f=3&amp;t=990</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Fri Jan 27, 2006 5:07 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />baisoku, thanks for your reality-inspired rant. I think superstitions run wild in programming.
<br />
<br /><div class="quotetitle">baisoku wrote:</div><div class="quotecontent">Spending time writing clever algorithms usually lands you in a world of thankless debugging in the future, when you could have replaced a bad algorithm with one tuned for the problem at hand.</div>
<br />
<br />"Debugging is twice as hard as writing code in the first place. Therefore, if you write the code as cleverly as possible, you are, by definition, not smart enough to debug it." - <a href="http://en.wikipedia.org/wiki/Brian_Kernighan" class="postlink">Brian Kernighan</a>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Nessie</b> [ Fri Jan 27, 2006 5:29 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Well, the value of function pointers in this case is not increased performance, but that it greatly simplifies your mapper code.
<br />Perhaps it's merely a matter of preference.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch_</b> [ Fri Jan 27, 2006 5:48 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Nessie wrote:</div><div class="quotecontent">Well, the value of function pointers in this case is not increased performance, but that it greatly simplifies your mapper code.<br />Perhaps it's merely a matter of preference.</div>
<br />
<br />I find all the mapper reg write code in 1 function to be simpler.  Since you can recycle tidbits that are common to several registers.
<br />
<br />MMC1 is a good example of this.  Every register is the same until the 5th write, yet if you split all 4 regs up to their own function, you either have to have them all call another common function, or copy/paste the same code 4 times.
<br />
<br />I find multiple functions to be far more complicated than a simple switch().  But yeah -- I guess it's a matter of preference.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Nessie</b> [ Fri Jan 27, 2006 6:59 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You can still map all writes in the prg area to the same function and use the regular switch there if you come across cases where you feel that is more appropriate. I remember I did this for some multicart mappers that used certain bits from the address line to select bank numbers - otherwise I would've had to write one function for each address! <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /> I did the same with MMC1, for the reason you just gave.
<br />But if you find yourself mapping everything to one function most of the time, youre probably better off without function pointers.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Sat Jan 28, 2006 1:30 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">But if you find yourself mapping everything to one function most of the time, youre probably better off without function pointers.</div>
<br />
<br />You'd rarely map the <em>entire</em> address space to a single function. You might map the entire upper half of the CPU address space writes to a single mapper function, but this doesn't make a table of function pointers worse since you still have at least four distinct lower areas: RAM, PPU, APU, and WRAM. For me, the point of using a table of function pointers is CPU emulation efficiency. No matter how many different distinct areas of memory you have, the cost of determining how to handle an access is the same. It also lends itself well to modularity by allowing run-time registration of read/write handlers for arbitrary portions of memory. Since it's easy to adjust the granularity, the table size can be kept small if you don't need byte-level accuracy; in fact, you can even treat the non-function-pointer approach as simply having a single-entry table.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Nessie</b> [ Sat Jan 28, 2006 5:37 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">blargg wrote:</div><div class="quotecontent">It also lends itself well to modularity by allowing run-time registration of read/write handlers for arbitrary portions of memory.</div>
<br />Yep, that's what's so great. Take Game Genie codes for example - to add a "compare" Game Genie code, just add an intercepting function to the function table that first calls the old function pointer, and then decides whether to return that value or the Game Genie everride value.
<br />
<br />I thought about dynamically changing the table during emulation, eg if some mapper has a "WRAM writable" flag, you could just change the function pointers for WRAM to nonWritable() or writable() when that flag is toggled. Same thing could be done with some mapper regs if IRQs are enabled/disabled. But I gave up on that cause it felt like one of those "clever algorithms" that would just make things worse. <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Tue Jan 31, 2006 5:11 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />This discussion got me thinking about whether a function pointer table was really faster, so I gathered some hard data. First off, I restricted this to things that actually need generalized read/write emulation (<a href="http://nesdev.com/bbs/viewtopic.php?t=516" class="postlink">discussed previously</a> and <a href="http://www.slack.net/~ant/nes-emu/6502.html" class="postlink">covered on the web</a>). Many things don't: zero-page, stack, and opcode/operand reads. These aren't included.
<br />
<br />I found that most data memory accesses based on an absolute address (i.e. absolute, absolute,y, indirect,y, etc.) accessed the PPU or unmirrored low-memory. This means that it's probably more efficient to use a couple of conditionals to check for these cases, then fall back on a function pointer table. For older games which poll $2002, from 20% to 75% of all data memory accesses are to $2002. I further broke accesses down by opcode and found that BIT abs ($2C) was the most common for polling $2002. If one's CPU emulator is implemented as a switch statement, optimization can be applied to particular instructions.
<br />
<br />I'm still trying CPU emulation ideas based on this data. As best as I can tell, optimizing data memory accesses doesn't have a large impact because they don't occur that often. I profiled a few games and found that there was one data memory access for every three instructions (again, only covering accesses that require generalized emulation).

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>