<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=3&amp;t=3659" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2010-01-24T19:42:24-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=3&amp;t=3659</id>
<entry>
<author><name><![CDATA[dvdmth]]></name></author>
<updated>2007-11-03T08:40:14-07:00</updated>
<published>2007-11-03T08:40:14-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3659&amp;p=27895#p27895</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3659&amp;p=27895#p27895"/>
<title type="html"><![CDATA[PPU address bus (Safari in Letterland)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3659&amp;p=27895#p27895"><![CDATA[
This one has me interested.  I'd like to know the results on real hardware.<br /><br />As I understand, turning rendering on/off can cause an A12 clock, since the source of A12 is different depending on whether the PPU is acive or not.  For instance, if the vertical scroll counter is odd and you turn rendering off during background rendering (when A12 is low), the action of turning off the PPU will cause the LSB of the scroll counter to become A12, thus causing a low-to-high transition.  If enough time elapsed since the last sprite render, this will in turn cause an IRQ clock.  Likewise, if display is off, bit 12 of the VRAM address is low, and you turn rendering on in the middle of H-Blank, this can also cause an A12 clock.<br /><br />Yes, setting the PPU address to $3F00-3FFF will still cause A12 to go high, even though writes are redirected to internal memory (the external /WR line is the only one that's blocked IIRC).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=360">dvdmth</a> — Sat Nov 03, 2007 8:40 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Zepper]]></name></author>
<updated>2010-01-24T19:42:24-07:00</updated>
<published>2007-11-03T05:12:36-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3659&amp;p=27894#p27894</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3659&amp;p=27894#p27894"/>
<title type="html"><![CDATA[PPU address bus (Safari in Letterland)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3659&amp;p=27894#p27894"><![CDATA[
...<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=39">Zepper</a> — Sat Nov 03, 2007 5:12 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2007-11-03T02:57:34-07:00</updated>
<published>2007-11-03T02:57:34-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3659&amp;p=27892#p27892</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3659&amp;p=27892#p27892"/>
<title type="html"><![CDATA[PPU address bus (Safari in Letterland)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3659&amp;p=27892#p27892"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />- since the address in this case is pointing to a palette range ($3Fxx) it somehow isn't updating the PPU address bus (though I don't see how this would be possible), or the MMC3 just can't see the address bus in this case???<br /></div><br />I'm pretty sure $3f00 reads and writes don't show on the (external) PPU bus, else the read/write would conflict with the attribute tables (unless the cartridge has circuitery to prevent this, and none has). So the MMC3 do not see when the PPU bus goes to $3f00. (unless you turn rendering on with $2006 on this adress or something).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Sat Nov 03, 2007 2:57 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2007-11-02T21:41:08-07:00</updated>
<published>2007-11-02T21:41:08-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3659&amp;p=27891#p27891</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3659&amp;p=27891#p27891"/>
<title type="html"><![CDATA[PPU address bus (Safari in Letterland)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3659&amp;p=27891#p27891"><![CDATA[
So I started looking into the weirdness in the status bar in Mickey Mouse Safari in Letterland and I discovered my problem.<br /><br />The game is causing an A12 rising edge via a $2006 write which is borking the status bar:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent"> ; ROM offset 0x1CBE9<br />  LDY #$3F<br />  LDA #$10<br />  STX $2001   ; X=0 at this point -- turns PPU off<br />  LDX #$0F<br />  STY $2006<br />  STA $2006   ; set Address to $3F10 &#40;potential for rising edge&#41;<br />  STX $2007   ; change palette<br /></div><br /><br />In my past dealings I have employed two methods of handling CPU triggered A12 rises on $2006 writes.  The first (and simplest) was to compare the new PPU addr to the old one and see if bit 12 changed.  In this scenario... this method, in effect, compares the new A12 with the least significant bit of vertical scroll (since that is what occupies bit 12 of the PPU address during rendering).  This is why the bottom half of the status bar appears to shake depending where the screen is scrolled to vertically.<br /><br />My <em>newer</em> method is a bit more on point.  On the second $2006 write (as well as on $2007 reads and writes) I update a 'ppubus' variable and use this to compare to compare on future writes.  I also update this ppubus var when I run my PPU so that it reflects the last fetch the PPU makes.<br /><br />When employing my new method -- the status bar does not shake!  However, the IRQ is occuring 1 scanline too soon.  This is apparently because the last fetch made before the PPU was shut off set A12 to be low (either a NT fetch, or a lefthand pattern fetch)... and thus the following $2006 writes will cause a rising edge every time.<br /><br /><br />Some thoughts of potential solutions that have jumped in my mind are:<br /><br />- turning off the PPU has some unforseen effect on the address bus (unlikely -- since the only way this would prevent $2006 from causing a rise would be if turning the PPU off caused a rise -- and that would just push the rise forward, not really solving the problem).<br /><br />- since the address in this case is pointing to a palette range ($3Fxx) it somehow isn't updating the PPU address bus (though I don't see how this would be possible), or the MMC3 just can't see the address bus in this case???<br /><br />- the status bar is simply fugly in this game -- though I *really* doubt this is the case because the letters you collect are illegible (ICE looks like TCF due to the bottom line being clipped) -- and for a "learn how to read" game, you think they would have spotted that.<br /><br /><br />I know all these situations are unlikely, but I figured I'd post this anyway in case anyone has any insight.  For a long time I figured this was an IRQ timing issue -- but apparently it isn't.<br /><br /><br />Thoughts / ideas / suggestions / anything welcome and appreciated ^^<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Fri Nov 02, 2007 9:41 pm</p><hr />
]]></content>
</entry>
</feed>