<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=5&amp;t=6168" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2010-03-14T14:05:08-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=5&amp;t=6168</id>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2010-03-14T14:05:08-07:00</updated>
<published>2010-03-14T14:05:08-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6168&amp;p=58245#p58245</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6168&amp;p=58245#p58245"/>
<title type="html"><![CDATA[C++ is worth than C ?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6168&amp;p=58245#p58245"><![CDATA[
You can use C++ almost immediately, as it supports most C code. Then you can slowly start using C++ features that you find are worth their cost. I use C++ this way, sticking to a subset of its features while still getting lots of benefit over C. Some C++ purists will say you're using it wrong, but they're idiots. C++ is a tool that can be used in many ways.<br /><br />Perhaps the most useful feature I find in C++ is being able to define classes. Instead of this in C:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">// foo.h<br />typedef struct foo_t &#123;<br />    int x, y; // don't use these directly<br />&#125; foo_t;<br /><br />void foo_init&#40; foo_t*, int &#41;;<br />int foo_next&#40; foo_t* &#41;;<br /><br />// foo.c<br />#include &quot;foo.h&quot;<br /><br />void foo_init&#40; foo_t* f, int i &#41;<br />&#123;<br />    f-&gt;x = i;<br />    f-&gt;y = 0;<br />&#125;<br /><br />int foo_next&#40; foo_t* f &#41;<br />&#123;<br />    return f-&gt;x * f-&gt;y++;<br />&#125;<br /><br />// user.c<br />#include &quot;foo.h&quot;<br /><br />void user&#40; void &#41;<br />&#123;<br />    foo_t foo;<br />    foo_init&#40; &amp;foo, 3 &#41;;<br />    <br />    printf&#40; &quot;%d\n&quot;, foo_next&#40; &amp;foo &#41; &#41;;<br />    printf&#40; &quot;%d\n&quot;, foo_next&#40; &amp;foo &#41; &#41;;<br />&#125;</div><br />You can do this in C++:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">// Foo.hpp<br />class Foo &#123;<br />public:<br />    void init&#40; int &#41;;<br />    int next&#40;&#41;;<br /><br />private:<br />    int x, y;<br />&#125;;<br /><br />// Foo.cpp<br />#include &quot;Foo.hpp&quot;<br /><br />void Foo::init&#40; int i &#41;<br />&#123;<br />    x = i;<br />    y = 0;<br />&#125;<br /><br />int Foo::next&#40;&#41;<br />&#123;<br />    return x * y++;<br />&#125;<br /><br />// user.cpp<br />#include &quot;Foo.hpp&quot;<br /><br />void user&#40;&#41;<br />&#123;<br />    foo_t foo;<br />    foo.init&#40; 3 &#41;;<br />    <br />    printf&#40; &quot;%d\n&quot;, foo.next&#40;&#41; &#41;;<br />    printf&#40; &quot;%d\n&quot;, foo.next&#40;&#41; &#41;;<br />&#125;</div><br />Additionally, you are gauranteed that the user isn't directly modifying x and y of Foo, since they are private. This helps a lot for ensuring that changes to the implementation don't affect any user code. The C++ code is also less-verbose, as you don't have the redunant "foo" when calling functions, and in functions, you don't have the constant f-&gt; before member accesses (at first you might prefer it explicit, which you can do in C++ by putting this-&gt; before member accesses, but later you'll see that it generally clutters code). Performance-wise, the above should behave the same, since the C++ version does the same thing behind-the-scenes as the C version.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Sun Mar 14, 2010 2:05 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2010-03-14T13:33:53-07:00</updated>
<published>2010-03-14T13:33:53-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6168&amp;p=58244#p58244</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6168&amp;p=58244#p58244"/>
<title type="html"><![CDATA[C++ is worth than C ?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6168&amp;p=58244#p58244"><![CDATA[
<a href="http://en.wikipedia.org/wiki/Micropolis_%28video_game%29" class="postlink">Micropolis</a>, the simulation engine behind SimCity, was originally written in C. It was converted to C++ mainly as an easy way to turn global variables into instance variables.<br /><br />Just because you "use C++" doesn't mean you have to use all of C++'s features. Depending on your target platform (is it PC, mobile phone, or something smaller like a DS?), you might have to tell the compiler and linker to toss out exceptions, RTTI, and/or iostream to reduce the overhead of the standard C++ library.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Sun Mar 14, 2010 1:33 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[mic_]]></name></author>
<updated>2010-03-14T12:12:44-07:00</updated>
<published>2010-03-14T12:12:44-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6168&amp;p=58238#p58238</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6168&amp;p=58238#p58238"/>
<title type="html"><![CDATA[C++ is worth than C ?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6168&amp;p=58238#p58238"><![CDATA[
It's not worth rewriting the code just for the sake of rewriting it. If you'd like to redesign your code in some way that'll improve it and you think C++ suits your new design best, then go ahead and do it in C++. Otherwise I don't see the point.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=1181">mic_</a> — Sun Mar 14, 2010 12:12 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[koitsu]]></name></author>
<updated>2010-03-14T11:32:40-07:00</updated>
<published>2010-03-14T11:32:40-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6168&amp;p=58230#p58230</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6168&amp;p=58230#p58230"/>
<title type="html"><![CDATA[C++ is worth than C ?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6168&amp;p=58230#p58230"><![CDATA[
No.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3">koitsu</a> — Sun Mar 14, 2010 11:32 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Zepper]]></name></author>
<updated>2010-03-14T10:27:55-07:00</updated>
<published>2010-03-14T10:27:55-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6168&amp;p=58220#p58220</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6168&amp;p=58220#p58220"/>
<title type="html"><![CDATA[C++ is worth than C ?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6168&amp;p=58220#p58220"><![CDATA[
- From what I know, Nintendulator was the first one to convert C to C++; and now, MAME.<br /><br />- Is worth the effort?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=39">Zepper</a> — Sun Mar 14, 2010 10:27 am</p><hr />
]]></content>
</entry>
</feed>