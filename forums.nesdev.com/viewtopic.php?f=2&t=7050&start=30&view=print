<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - MMC1 A12 demo</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">MMC1 A12 demo</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=7050">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=7050</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>3</strong> of <strong>3</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Thu Oct 21, 2010 9:01 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />kevtris, your "monostable" approach would make at least some sense.
<br />It's not good to talk about a "monostable" here, because this would refer to a circuit that uses R and C componants for a delay (which is subjects to a big error or margin), but A12 clocks being blocked by another circuits who counts M2 clocks after the fitst A12 rise would be a plosible solution.
<br />
<br />Even if the internal PPU's out impedance is 100 ohm (which it normally shouldn't be that much) this correspond to a 22ns time constant filter. The short impules of a few ns should be due to asynchronous issues inside the PPU itself or something in the like. Chances are that the long lines on the NES connector already filters them a bit.
<br />
<br />I belive people made tests and clocked A12 manually with $2006 writes, and figured that each rise (at slow speed) would result in an IRQ, RIGHT ? If nobody has ever done this, then it would be about time somebody really tests this.
<br />Has it been tested how many cycles exacly between A12 rises are needed to clock the counter twice ?
<br />
<br />This brings me another question. If Nintendo did have to use something this complicated (two counters, including one who isn't in sync) for a counter on A12, why didn't they use a counter on A13 instead which would just require a divide-by 42 pre-scaler before the actual scanline counter and would work wonders in theory ? (yes there is unused pins on the chip). Maybe Nintendo just didn't know their hardware this well.
<br />Or maybe the actual circuit is different from what we imagine. As tepples says, no way to know it without decaping the chip <img src="./images/smilies/icon_sad.gif" alt=":(" title="Sad" />
<br />
<br />I'll try to simulate the "monostable" approach in software for my MMC1 demo. Hopefully I'll get something working.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Thu Oct 21, 2010 9:27 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I don't know if it's much help, but on my old Squeedo board back in 2005, scanline counting was one of the first things I tried.  I hooked PPU-A12 to a timer input on the PIC16/18 (no capacitor or anything else), set it to prescale by 8, and it worked perfectly.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>kevtris</b> [ Thu Oct 21, 2010 9:37 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">kevtris, your "monostable" approach would make at least some sense.<br />It's not good to talk about a "monostable" here, because this would refer to a circuit that uses R and C componants for a delay (which is subjects to a big error or margin), but A12 clocks being blocked by another circuits who counts M2 clocks after the fitst A12 rise would be a plosible solution.<br /><br /><br /><br />I belive people made tests and clocked A12 manually with $2006 writes, and figured that each rise (at slow speed) would result in an IRQ, RIGHT ? If nobody has ever done this, then it would be about time somebody really tests this.<br />Has it been tested how many cycles exacly between A12 rises are needed to clock the counter twice ?<br /><br />This brings me another question. If Nintendo did have to use something this complicated (two counters, including one who isn't in sync) for a counter on A12, why didn't they use a counter on A13 instead which would just require a divide-by 42 pre-scaler before the actual scanline counter and would work wonders in theory ? (yes there is unused pins on the chip). Maybe Nintendo just didn't know their hardware this well.<br />Or maybe the actual circuit is different from what we imagine. As tepples says, no way to know it without decaping the chip <img src="./images/smilies/icon_sad.gif" alt=":(" title="Sad" /><br /><br />I'll try to simulate the "monostable" approach in software for my MMC1 demo. Hopefully I'll get something working.</div>
<br />
<br />"Monostable" is the proper term for this.  A monostable is any circuit that is only stable in one state, and can switch to the second "unstable" state for a predetermined amount of time.  It doesn't matter if an RC controls the time, or a counter.
<br />
<br />And yes, the Blargg test does the "manual A12" clocking test for his MMC3 tester program.  As for the length of the delay I don't know what it is.
<br />
<br />The monostable via counter on A12 is a pretty simple and elegant solution, IMO.  It uses fewer gates/flipflops than a divide by 42 on A13 would use.  
<br />
<br />My FPGA NES uses the method I outlined in a previous post (the delay counter, etc) for its MMC3 IRQ scanline counter and it works with every single game.  I tested every MMC3 game in the goodNES set along with some not in the set and it works properly with every one.   Even the most tricky games like klax (japanese one specifically) which fires ALOT of IRQs in a frame.  16 or so from what I recall.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Thu Oct 21, 2010 9:38 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I uploaded my test ROM and sources <a href="http://jonathan.microclub.ch/MMC1_a12/MMC1_a12.7z" class="postlink">at the same place</a> simulating the delay.
<br />It works fine for most delay values but is unstable randomly for some values, which is weird.
<br />Again, I can only test it on PAL because it's too thick for my topload, if someone in a NTSC country could test it (NOT on a powerpak) that'd be great.
<br />PS : The ugly dash pattern is intentional, to be able to count pixels on a TV, a dash occuring every 8 pixels.
<br />
<br />@Memblers : That's great. Wonder why Nintendo didn't do it that way (with the 8-prescaler). This wouldn't work with BG using the right PT and sprites the left one, like Armadillo does. But is this really an issue ? Honestly Nintendo had the choice between using /RD with a 85 prescaler, A13 with a 42 prescaler or A12 with a 8 prescaler, and the took the worst option, that is A12 with a weird digital monostable inside. WTF ??

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Thu Oct 21, 2010 10:32 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Dividing by 8 is so amazingly trivial in circuits... that's clearly why they did it. To divide by 85 or 42 would have required a 6-or-7 bit counter (instead of 3) and a 3-or-4 input AND gate.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Thu Oct 21, 2010 10:35 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I found the posting from way back when <a href="http://nesdev.com/bbs/viewtopic.php?p=5822#5822" class="postlink">I tried toggling A12 quickly</a>. I realize that I could have toggled it for just 4 cycles by setting the address to say $1FFF, then reading from $2007 immediately.... nope, still gets clocked for a four-cycle high and also for a four-cycle low:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda #0<br />sta $2006<br />sta $2006<br />lda #$1F<br />sta $2006<br />lda #$FF<br />sta $2006&nbsp; &nbsp; &nbsp; &nbsp;; A12 = high; clocked<br />lda $2007&nbsp; &nbsp; &nbsp; &nbsp;; A12 = low<br /><br />lda #$1F<br />sta $2006<br />lda #$FF<br />sta $2006<br />lda #$0F<br />sta $2006<br />lda #$FF<br />sta $2006&nbsp; &nbsp; &nbsp; &nbsp;; A12 = low<br />lda $2007&nbsp; &nbsp; &nbsp; &nbsp;; A12 = high; clocked</div>
<br />
<br /><a href="http://nesdev.com/bbs/viewtopic.php?t=3452" class="postlink">Another thread about this</a>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Thu Oct 21, 2010 1:47 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />OK so two A12 rises 4 CPU cycles apart are valid, on NTSC this is 12 PPU cycles, that's 6 read cycles. For real the line toggles every 2 read cycles, so after a clock the MMC3 apparently counts the equivalent of somewhere between 3 and 6 read cycles before enabling clocks again... complicated, but possible.
<br />
<br />As lidnariq says, dividing by 8 is trivial (just requires 3 flip flops) so I don't know why they didn't do it that way. Dividing by 85 or 42 would be more comlplex, but this monostable things sounds even more complex to me but oh well...
<br />
<br />It's fun how even fundamental aspects of very common mappers are badly covered... first this MMC1 WRAM enbale and now MMC3's counter... all in one thread. I think the nesdev communauty should make the best effort to fit those rabit holes in order to get accurate mapper emulations for homebrew games...
<br />
<br />With current mapper emulation, it is now possible to make a game that would pass on all emus and powerpak and fail on real HW or vice versa.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Oct 21, 2010 2:50 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">why didn't they use a counter on A13 instead which would just require a divide-by 42 pre-scaler before the actual scanline counter and would work wonders in theory ? (yes there is unused pins on the chip). Maybe Nintendo just didn't know their hardware this well.</div>
<br />Or maybe it was designed while Nintendo was still planning to make changes to PPU sprite evaluation, such as killing the dummy nametable reads in hblank to allow for 16 sprites instead of 8. I've been told Famicom back-compat in the Super Famicom PPU was dropped fairly early on, but the plans might still have been in the works during the MMC3 era. Or they were trying to save a few gates/latches in their design; a divide-by-42 counter is six extra latches whether implemented as a binary counter or as a polynomial counter.
<br />
<br />A 4-cycle high is 12 dots wide. The PPU A12 pulses are only 4 dots wide, or one CPU cycle and change.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Thu Oct 21, 2010 11:26 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">OK so two A12 rises 4 CPU cycles apart are valid, on NTSC this is 12 PPU cycles, that's 6 read cycles.</div><br />Oh, my code didn't test <em>two</em> clocks (the code is up there to examine). For some reason I was thinking it was the pulse width. Here's some new code that verifies what you just stated:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda #$0F<br />sta $2006<br />lda #$FF<br />sta $2006&nbsp; &nbsp; &nbsp; &nbsp;; A12 = low<br />lda #$0F<br />sta $2006<br />lda #$FF<br />bit $2007&nbsp; &nbsp; &nbsp; &nbsp;; A12 = high; clocked<br />sta $2006&nbsp; &nbsp; &nbsp; &nbsp;; A12 = low<br />bit $2007&nbsp; &nbsp; &nbsp; &nbsp;; A12 = high; clocked</div><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Dividing by 85 or 42 would be more comlplex, but this monostable things sounds even more complex to me but oh well...</div><br />It's just a counter that prevents further clocking until it counts down.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">It's fun how even fundamental aspects of very common mappers are badly covered... first this MMC1 WRAM enbale</div>
<br />The MMC1 disable has been covered well all along. Most of the pinouts show how its /CE is connected to CHR A16.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Fri Oct 22, 2010 6:08 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">The MMC1 disable has been covered well all along. Most of the pinouts show how its /CE is connected to CHR A16.</div><br />Yeah, but it was never covered in ANY MMC1 doc I've ever looked at, and no emulators ever emulated it so far, even the so called accurate ones.<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Oh, my code didn't test two clocks (the code is up there to examine). For some reason I was thinking it was the pulse width. Here's some new code that verifies what you just stated:</div><br />I think it's impossible to test less than 4 cycles apart (which is 6 read cycles on NTSC, a read cycles is 2 PPU clocks, so 2/3 CPU clocks). Because sprite fetches takes 2 read cycles, and dummy fetches 2 read cycles, this is 3 times faster than your test code.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Or maybe it was designed while Nintendo was still planning to make changes to PPU sprite evaluation, such as killing the dummy nametable reads in hblank to allow for 16 sprites instead of 8. </div>
<br />Could make sense. This would break Ninja Gaiden, Castlevania II and Legend of Zelda, though.
<br />
<br />To make suire the MMC3 counter actually works as we suppose it does, someone would need to disconect M2 to the MMC3 chip (effectively breaking the ciruit for enabling SRAM but it doesn't matter here), and see if the counter is affected. If it triggers only a single IRQ and then stop working then we know we are on the right track. If the counter is unaffected, we are wrong, and are missing something about the counter.
<br />Then, with a manual switch on the M2 line, it should be possible to know how many CPU cycles the MMC3 waits before enabling the MMC3 again (between 2 and 4, from what we know).

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>3</strong> of <strong>3</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>