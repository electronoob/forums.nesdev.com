<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - spca65</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">spca65</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=12&amp;t=10730">http://forums.nesdev.com/viewtopic.php?f=12&amp;t=10730</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>3</strong> of <strong>4</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Fri Nov 29, 2013 7:10 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: spca65</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />OK, now a doc on making an SPC-700 ca65 linker config file (read <a href="http://blargg.8bitalley.com/tools/ca65-linker-doc.md" class="postlink">previous ca65 linker doc</a> first):<br /><br /><a href="http://blargg.8bitalley.com/snes/spc700-config.md" class="postlink">spc700-config.md</a><br /><br />And an update to spc-chord, now builds an SPC music file as well, and without an added embedded .zip file (thanks Ubuntu!):<br /><br /><a href="http://blargg.8bitalley.com/snes/spc-chord-2.zip" class="postlink">spc-chord-2.zip</a>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Sat Nov 30, 2013 12:38 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: spca65</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">blargg wrote:</div><div class="quotecontent">Doc on ca65 linker files:<br /><br /><a href="http://blargg.8bitalley.com/tools/ca65-linker-doc.md" class="postlink">ca65-linker-doc.md</a></div><br />About the BSS tricks section, you may be able to get the same effect with the SYMBOLS section in the linker configuration. The SYMBOLS section allows importing symbols from code modules as well as exporting new symbols. This allows you to control the placement of code without touching the linker configuration, such as:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">; test.cfg<br />SYMBOLS {<br />&nbsp; &nbsp; romAddr: type = import;<br />}<br />MEMORY {<br />&nbsp; &nbsp; ROM: start = romAddr, size = $A000 - romAddr;<br />}<br />SEGMENTS {<br />&nbsp; &nbsp; CODE: load = ROM, type = ro;<br />}<br /><br />; test.s<br />.export romAddr = $6000<br />; See where we're at.<br />.word *<br /></div><br />See <!-- m --><a class="postlink" href="http://www.cc65.org/snapshot-doc/ld65-5.html#ss5.10">http://www.cc65.org/snapshot-doc/ld65-5.html#ss5.10</a><!-- m --> for more information.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Sat Nov 30, 2013 1:41 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: spca65</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Oh nice, much cleaner than my hack.<br /><br />I've been working towards a sp65c02 test and I'm surprised at how compatible this will be. The four main status flags are even in the same bit positions on the saved status on the stack: NV-- --ZC.<br /><br />I think RTS is the only notable problem that will have to be accepted. It doesn't increment the return address by one, so code using it for indirect jumping will fail. RTI however works the same, so that (IMO superior) approach to indirect jump can be shared without change.<br /><br />I've made PLA, PLX, and PLY set the status flags properly, by adding an INC+DEC after. Minor cost for compatibility. I might add an option to disable these.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>byuu</b> [ Sat Nov 30, 2013 6:02 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: spca65</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It's probably being really pedantic, but and a,#$ff should shave off two cycles for the PLA case while not consuming more space.<br /><br />EDIT: and I would say to leave this behavior on. Instead, offer a new pl[axy] nf instruction on both the 6502 and SPC700 targets to imply that flags are not necessary. Obviously on the 6502 the flags would be calculated anyway, but on the SPC700 the flag calculation step could be skipped, resulting in more optimal code.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sat Nov 30, 2013 6:48 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: spca65</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">blargg wrote:</div><div class="quotecontent">I think RTS is the only notable problem that will have to be accepted. It doesn't increment the return address by one, so code using it for indirect jumping will fail. RTI however works the same, so that (IMO superior) approach to indirect jump can be shared without change.</div><br />That or a new macro <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">rtsaddr</tt> that acts like <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.addr</tt> but subtracts one on platforms where needed.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Sat Nov 30, 2013 12:39 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: spca65</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Or as noted, enable leading dots in identifiers and make .rtsaddr. But then you'd need handling of a split table, so you'd want a constant, rts_offset, and then a directive to make a table/split table with all addresses at some offset.<br /><br />If you're going to modify the code to work with sp65c02, then you might as well just have it use RTI and work without any special constants or macros.<br /><br /><div class="quotetitle">byuu wrote:</div><div class="quotecontent">It's probably being really pedantic, but and a,#$ff should shave off two cycles for the PLA case while not consuming more space.</div><br />I was aiming for consistency between PLA, PLX, and PLY. But I've already implicitly decided that instruction timing is not something to depend on, and PLA is literally infinitely more common in Rockwell 6502 code.<br /><br />And ahhh, that's how you do AND A,A, as you do on the 80xx/Z80-series to set flags except carry.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">EDIT: and I would say to leave this behavior on. Instead, offer a new pl[axy] nf instruction on both the 6502 and SPC700 targets to imply that flags are not necessary. Obviously on the 6502 the flags would be calculated anyway, but on the SPC700 the flag calculation step could be skipped, resulting in more optimal code.</div><br />If it is, one can just use SPC pop instructions and write a macro for 65xx. POP A, POP X, POP Y. I don't think optimality is critical, as the SPC-700 has so many more optimal instructions, like MOV dp,#imm. That would be the better direction for optimality, allow writing a subset of SPC-700 code on the 65C02. So clearly developer convenience/familiarity takes front seat.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Tue Dec 03, 2013 9:00 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: spca65</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Small update of sp65c02 macros:<br /><br /><a href="http://blargg.8bitalley.com/snes/spc65-0.1.1.zip" class="postlink">spc65-0.1.1.zip</a><br /><br />Just fixes PLA, PLX, and PLY to set Z and N, and adds BRK #n as on 65C02.<br /><br />I've confirmed that as far as A, X, Y, S, memory, and bits 8, 7, 1, and 0 of the status flags go, all these instructions behave identically on the 65C02 emulation mode of the 65816 and the sp65c02 macros:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">CMP abs<br />ADC abs<br />SBC abs<br />AND abs<br />EOR abs<br />ORA abs<br />DEC abs<br />INC abs<br />ASL abs<br />LSR abs<br />ROL abs<br />ROR abs<br /><br />INC<br /><br />PHA<br />PHP<br />PLA<br />PLP<br /><br />TAX<br />TXA<br />TXS<br />TSX<br /><br />RTI<br /></div><br />Also, all the data addressing modes behave the same.<br /><br />I've rewritten my testing framework to be all 6502 code at the core (with platform-specific customization at the edges), and now it assembles and works on the NES, SNES, and SPC-700. Things like CRC calculation, hex printing, and framework logic all use the same code. Great idea, tepples!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ARM9</b> [ Wed Dec 04, 2013 7:27 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: spca65</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">blargg wrote:</div><div class="quotecontent">Great idea, tepples!</div><br />Indeed, and very nice execution. This project inspired me to write my own &quot;assembler&quot; with ca65 directives, but for the SuperFX. I might post something if it turns out well.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Thu Dec 05, 2013 5:18 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: spca65</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I got the itch for GB-Z80 three hours ago and now I've got the initial instruction test passing for everything just now. Easier the second time I guess.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Wed Dec 11, 2013 1:26 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: spca65</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">[6502-in-drag] might not work so well for far-less-6502-like coprocessors such as GBZ80 and Super FX. That's where macro packages come in.</div><br />Here's my ongoing sketch of 6502 on GB-Z80, not sure whether I can take it seriously enough to try:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">a&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;a<br />x&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;c (b=0)<br />y&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;e (d=0)<br /><br />tsx&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;ld hl, sp+0<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ld c, l<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <br />tax&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;ld c, a<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; or a<br /><br />txa&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;ld a, c<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; or a<br /><br />lda #imm&nbsp; &nbsp; ld a, imm<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; or a<br /><br />lda abs&nbsp; &nbsp; &nbsp;ld a, (abs)<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; or a<br /><br />ldx #imm&nbsp; &nbsp; ld c, imm-1<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; inc c<br /><br />sta abs&nbsp; &nbsp; &nbsp;ld (abs), a<br /><br />stx abs&nbsp; &nbsp; &nbsp;ld hl, abs<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ld (hl), c<br /><br />cmp #imm&nbsp; &nbsp; cp imm<br /><br />cpx #imm&nbsp; &nbsp; ldh (temp), a<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ld a, c<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cp imm<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ldh a, (temp)<br /><br />jsr abs&nbsp; &nbsp; &nbsp;call abs<br /><br />pha&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;push psw<br /><br />pla&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;pop psw<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; or a<br /><br />plp&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;ldh (temp), a<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;pop psw<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;ldh a, (temp)<br /><br />jmp abs&nbsp; &nbsp; &nbsp;jp abs<br /><br />bne rel&nbsp; &nbsp; &nbsp;jr nz, rel<br /><br />adc #imm&nbsp; &nbsp; adc imm<br /><br />adc abs&nbsp; &nbsp; &nbsp;ld hl, abs<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; adc (hl)<br /><br />dec abs&nbsp; &nbsp; &nbsp;ld hl, abs<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; dec (hl)<br /><br />asl abs&nbsp; &nbsp; &nbsp;ld hl, abs<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; sla (hl)<br /><br />lda $nnnn,x ld hl, $nnnn<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; add hl, bc<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ld a, (hl)<br /></div><br /><br />It's such a comically poor match.<br /><br />If anyone else (tepples?) would actually benefit, I could find motivation to try it. It would be useful for sharing my test framework code, which has pretty lax performance/size requirements.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Wed Dec 11, 2013 4:06 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: spca65</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Is it as comically poor as the match between either 6502 family and C or 8080 family and C? Perhaps if someone has an idea for something that's intermediate between 6502 and Z80, he could open a topic in GBDev and explain.<br /><br />In any case, I wasn't thinking of actually running unmodified 6502 code on a Z80. I just wanted to get 6502 code going on SPC700 for my music engine (thank you for your work so far), as well as explore 6502-<em>like</em> syntaxes for other architectures such as Z80 and 68000 as a bridge to help an NES programmer learn them. For example, the data registers of 68000 could be called A-H and the address registers Z-S (where S is conveniently A7, the stack pointer).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Fri Jan 03, 2014 12:41 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: spca65</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />ca65 has some real head-scratchers sometimes:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">foo = 0<br /><br />.if foo ; works<br />.endif<br /><br />.scope<br />&nbsp; &nbsp;.if foo ; Error: Constant expression expected<br />&nbsp; &nbsp;.endif<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;.if ::foo ; works<br />&nbsp; &nbsp;.endif<br />.endscope<br /></div><br /><br />So add :: to every use of a global symbol in your macros. I'll need to fix the spc-700 macros, as they run into this issue.<br /><br />Also, instant swap-space filler (have a <em>killall ca65</em> ready in another terminal):<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.macro foo<br />.scope<br />foo: ; oops, same name as macro<br />.endmacro<br />foo<br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Fri Jan 03, 2014 1:11 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: spca65</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">blargg wrote:</div><div class="quotecontent">ca65 has some real head-scratchers sometimes:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">foo = 0<br /><br />.if foo ; works<br />.endif<br /><br />.scope<br />&nbsp; &nbsp;.if foo ; Error: Constant expression expected<br />&nbsp; &nbsp;.endif<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;.if ::foo ; works<br />&nbsp; &nbsp;.endif<br />.endscope<br /></div><br /><br />So add :: to every use of a global symbol in your macros. I'll need to fix the spc-700 macros, as they run into this issue.</div><br />Yeah, this is a really unfortunate feature. When ca65 sees the &quot;foo&quot; in the scope, it plays it safe and assumes that another &quot;foo&quot; could be declared later in the same scope, and thus the symbol is non-constant, even if there's no actual &quot;foo&quot; inside the scope. It's unfortunate given how rare the use case of redefining an existing symbol inside the current scope is.<br /><br />Equally annoying is that if there are nested anonymous scopes, sometimes there's simply no way to reference symbols in some of the scopes.<br /><br />This is the reason why I prefer .local instead of .scope to make symbols defined inside the macro local to the macro. But even .local is stupid, because the use case of needing to define global symbols inside the macro is much more rare, so the default should be that all symbols are local to the macro. But it is what it is...<br /><br />This issue/feature has been discussed a couple of times over at the cc65 mailing list.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Jan 03, 2014 2:03 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: spca65</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">blargg wrote:</div><div class="quotecontent">ca65 has some real head-scratchers sometimes</div><br />Take a look at <a href="http://stackoverflow.com/questions/16615553/ca65-range-error-from-16-bit-computed-address" class="postlink">this Stack Overflow question</a>.<br /><br /><div class="quotetitle">thefox wrote:</div><div class="quotecontent">the use case of needing to define global symbols inside the macro is much more rare</div><br />Not in one of my projects. There's a macro that sets up a big data table and generates a local symbol for each entry because the table's entries form several circularly linked lists of entries that are variants of the same item.<br /><br /><br />...Now take a look at when that SO question got answered.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Fri Jan 03, 2014 2:10 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: spca65</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />And next, how to define a global symbol within a scope? (and split this topic-drift into an &quot;Advanced ca65 techniques&quot; thread?) All I've found is this total hack:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.scope<br />&nbsp; &nbsp; nop<br />:&nbsp; ; anonymous label isn't scoped<br />&nbsp; &nbsp; nop<br />.endscope<br />global = :- ; reference anonymous label<br /></div><br />The context is using scopes in a nice loop macro, so having to name each scope ruins most of the convenience.<br /><br />EDIT: Yay, more breakage with scopes. .referenced/.ifref doesn't see usages of symbols in a scope:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp; jsr foo<br />.scope<br />&nbsp; &nbsp; jsr bar<br />.endscope<br /><br />.ifref foo<br />&nbsp; &nbsp; .out &quot;1&quot; ; printed<br />.endif<br /><br />.ifref bar<br />&nbsp; &nbsp; .out &quot;2&quot; ; not printed<br />.endif<br /><br />foo:<br />bar:<br /></div>

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>3</strong> of <strong>4</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>