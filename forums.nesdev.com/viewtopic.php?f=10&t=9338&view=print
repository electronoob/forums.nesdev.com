<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Sprite Movement Delay and Critique Requested</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Sprite Movement Delay and Critique Requested</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=9338">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=9338</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>3</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Hallie</b> [ Sun Sep 23, 2012 4:45 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Sprite Movement Delay and Critique Requested</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hello,<br /><br />I have been playing around with NES programming for the last few weekends and put together a small program to see if I could move a meta sprite with animation. What is troubling me is that sprite 0 is always a few pixels ahead during the run animation. If I jump directly to the MoveSprites routine after left or right is pressed, it looks fine, but when executed in the NMI, sprite 0 is always ahead a little bit. Any suggestions on what might be causing this? I have attached my source below.<br /><br />Also, feel free to critique my code. I am very new at NES programming and am looking to improve. Any feedback would be greatly appreciated.<br /><br />Thank you in advance,<br /><br />Hallie

		
			<br clear="all" /><br />

			<table class="tablebg" width="100%" cellspacing="1">
			<tr>
				<td><b class="genmed">Attachments: </b></td>
			</tr>
			
				<tr>
					<td>
			<span class="genmed">
				<img src="./styles/subsilver2/imageset/icon_topic_attach.gif" width="14" height="18" alt="" title="" /> 
				<a href="./download/file.php?id=60">project092312.zip</a> [41.5 KiB]
			</span><br />
			<span class="gensmall">Downloaded 51 times</span>
		

		<br />
	</td>
				</tr>
			
			</table>
		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Sun Sep 23, 2012 6:05 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Sprite Movement Delay and Critique Requested</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Not sure where your problem is, specifically, but this is how I recommend structuring your game loop and NMI:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">int frame<br />int last_frame<br />bool update_PPU<br /><br />nmi:<br />&nbsp; push registers<br />&nbsp; if (update_PPU)<br />&nbsp; {<br />&nbsp; &nbsp; disable rendering // $2001<br />&nbsp; &nbsp; sprite DMA&nbsp; &nbsp; &nbsp; &nbsp; // $2003/4014<br />&nbsp; &nbsp; update palette&nbsp; &nbsp; // $2006/2007<br />&nbsp; &nbsp; update nametables // $2006/2007<br />&nbsp; &nbsp; set scroll&nbsp; &nbsp; &nbsp; &nbsp; // $2005<br />&nbsp; &nbsp; enable rendering&nbsp; // $2001<br />&nbsp; &nbsp; update_PPU = false<br />&nbsp; }<br />&nbsp; play sound/music<br />&nbsp; frame = frame + 1<br />&nbsp; pop registers<br />&nbsp; RTI<br /><br />game_loop:<br />&nbsp; while (frame == last_frame) {} // wait for NMI to finish<br />&nbsp; last_frame = frame<br />&nbsp; read input<br />&nbsp; update game state<br />&nbsp; build sprite buffer for sprite DMA<br />&nbsp; build nametable change buffer<br />&nbsp; update_PPU = true<br />&nbsp; JMP game_loop</div><br /><br />Your NMI begins in vblank and needs to update the PPU as quickly as possible, finishing before vblank is over. Rendering should be turned off explicitly because if your update runs long, trying to update PPU memory will cause corruption when vblank ends.<br /><br />This allows your game loop to go overtime (resulting in slowdown) without causing a graphics corruption. Music is run in the NMI so that it won't slow down even if the game does.<br /><br />Edit: renamed and commented to make things a little clearer.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Sun Sep 23, 2012 6:08 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Sprite Movement Delay and Critique Requested</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Did you check all your ADC/SBC's to make sure the C flag is always cleared before adds and set on subtracts?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Sun Sep 23, 2012 6:12 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Sprite Movement Delay and Critique Requested</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Also the reason your sprite moves ahead of the rest is that you're calling your two routines &quot;MoveSprites&quot; and &quot;UpdateGraphics&quot; in the wrong order. They do this:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">MoveSprites:<br />&nbsp; reads player X stored at PLAYER1+3 (sprite 0)<br />&nbsp; propagates player X to all other sprites<br /><br />UpdateGraphics:<br />&nbsp; updates player X stored at PLAYER1+3</div><br /><br />So, in your NMI:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; JSR MoveSprites ; updates sprites based on previous frame's PLAYER1+3<br />&nbsp; JSR UpdateGraphics ; updates PLAYER1+3 to next frame's position</div><br /><br />Obviously you want to call <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">UpdateGraphics</tt> first. I'll also recommend moving these two calls outside of your NMI, for the reason I suggested in my previous post.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Hallie</b> [ Sun Sep 23, 2012 7:54 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Sprite Movement Delay and Critique Requested</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thank you for the prompt responses. I *think* I implemented the suggestions that rainwarrior made. I separated the UpdateGraphics to two routines and placed only the portion that actually updates the graphics into the NMI. This fixed my leading sprite issue. I also made a few tweaks to the input handling and placed some BEQs to skip calling routines that aren't needed if no updates need to be made. Code is attached in case anyone wants to review.

		
			<br clear="all" /><br />

			<table class="tablebg" width="100%" cellspacing="1">
			<tr>
				<td><b class="genmed">Attachments: </b></td>
			</tr>
			
				<tr>
					<td>
			<span class="genmed">
				<img src="./styles/subsilver2/imageset/icon_topic_attach.gif" width="14" height="18" alt="" title="" /> 
				<a href="./download/file.php?id=61">project092312_a.zip</a> [41.78 KiB]
			</span><br />
			<span class="gensmall">Downloaded 35 times</span>
		

		<br />
	</td>
				</tr>
			
			</table>
		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Sun Sep 23, 2012 8:27 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Sprite Movement Delay and Critique Requested</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Well, the suggestion I was making was to restrict the NMI to <em>only</em> update the PPU. (I've edited my above post to make it a little clearer.) Get that out of the way as efficiently as possible so you don't miss the end of vblank. After this, update your sound, then RTI. This is to protect against graphical problems or music slowdown caused by your game loop running too long.<br /><br />Of course, if you want to do something more complicated, like wait for a sprite 0 hit for a status bar scroll split at the top, then that should go in the NMI as well, before music playback. If you want to get any more advanced than that, I'll leave that as its own topic.<br /><br /><br />I'm a little confused as to why you have divided the remaining code into &quot;SetUpdateGraphics&quot;, &quot;UpdateGraphics&quot; and &quot;MoveSprites&quot;. It seems complicated to me to put just one of these in your NMI. (UpdateGraphics might be running a frame behind the rest?) All of this I think should just be in your game update loop. Your game update loop should do things like:<br /><br />- check controller input<br />- run game logic, update the player position, update enemies, etc.<br />- set up your graphics buffers to be sent to the PPU next NMI (e.g. sprites at $0200-02FF)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Sun Sep 23, 2012 8:30 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Sprite Movement Delay and Critique Requested</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />On an unrelated note, seems like there's a small bug in ASM6's parser. This...<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">STA #PLAYER1, x<br /></div><br />...is accepted as valid code (works when extra #'s are added too). You don't need the # and probably shouldn't be using it neither if you want others to read/use your code. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sun Sep 23, 2012 9:52 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Sprite Movement Delay and Critique Requested</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I think that dividing the game logic between the NMI and the main loop might be a bit confusing... You should either do everything in the main loop (and use the NMI just for PPU &amp; APU updates, and maybe raster effects) or everything in the NMI (and have an empty main loop). Everything in the NMI is easier, but it's not possible to have controlled slowdowns (music will slow down and raster effects will glitch if the frame calculations take too long).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Movax12</b> [ Sun Sep 23, 2012 11:36 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Sprite Movement Delay and Critique Requested</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Not everyone is going to agree exactly on what should be in your NMI, but mine is setup something like this. I think it is pretty much ideal, though I like to tag on more and more functions to the end of NMI...<br />Treat the IF-ENDIF and other macros as pseudo code.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">nmi:<br /><br />&nbsp; &nbsp;if flagset MAIN_Done ; we are ready!<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;&nbsp; &nbsp;; Main is ready, it doesn't expect CPU flags to be saved<br />&nbsp; &nbsp;&nbsp; &nbsp;<br />&nbsp; &nbsp;&nbsp; &nbsp;if flagset NMIdoPPU<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;update_PPU_CTRL<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;update_PPU_MASK<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;clrflag NMIdoPPU<br />&nbsp; &nbsp;&nbsp; &nbsp;endif<br />&nbsp; &nbsp;&nbsp; &nbsp;<br />&nbsp; &nbsp;&nbsp; &nbsp;if flagset NMIdoVRAM<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;jsr PPU_Transfer&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;; update VRAM data<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;clrflag NMIdoVRAM<br />&nbsp; &nbsp;&nbsp; &nbsp;endif<br />&nbsp; &nbsp;&nbsp; &nbsp;<br />&nbsp; &nbsp;&nbsp; &nbsp;if flagset NMIdoOAM<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;lda #0&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;; Do OAM refresh<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;sta OAM_ADDRESS<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;lda #$02<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;sta OAM_DMA<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;clrflag NMIdoOAM<br />&nbsp; &nbsp;&nbsp; &nbsp;endif<br />&nbsp; &nbsp;&nbsp; &nbsp;<br />&nbsp; &nbsp;&nbsp; &nbsp;jsr Do_Always<br />&nbsp; &nbsp;&nbsp; &nbsp;<br />&nbsp; &nbsp;&nbsp; &nbsp;; NO PPU WRITES after here, scroll will be set<br />&nbsp; &nbsp;&nbsp; &nbsp;<br />&nbsp; &nbsp;&nbsp; &nbsp;if flagset NMIdoPADS&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;; Do not clear this flag, keep reading pads until main logic turns off<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;call Read_Pads<br />&nbsp; &nbsp;&nbsp; &nbsp;endif<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;<br />&nbsp; &nbsp;&nbsp; &nbsp;clrflag MAIN_Done&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;; This also signals NMI is complete<br />&nbsp; &nbsp;&nbsp; &nbsp;<br />&nbsp; &nbsp;&nbsp; &nbsp;rti<br /><br />&nbsp; &nbsp;else<br />&nbsp; &nbsp;&nbsp; &nbsp;; Not ready for NMI!<br />&nbsp; &nbsp;&nbsp; &nbsp;.ifdef DEBUG_MODE&nbsp; &nbsp;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;debugOut &quot;NMI hit, Game Logic not ready!&quot;<br />&nbsp; &nbsp;&nbsp; &nbsp;.endif<br />&nbsp; &nbsp;&nbsp; &nbsp;<br />&nbsp; &nbsp;&nbsp; &nbsp;pha ; back up registers (important) <br />&nbsp; &nbsp;&nbsp; &nbsp;txa&nbsp; <br />&nbsp; &nbsp;&nbsp; &nbsp;pha <br />&nbsp; &nbsp;&nbsp; &nbsp;tya <br />&nbsp; &nbsp;&nbsp; &nbsp;pha <br />&nbsp; &nbsp;&nbsp; &nbsp;<br />&nbsp; &nbsp;&nbsp; &nbsp;jsr Do_Always<br /><br />&nbsp; &nbsp;&nbsp; &nbsp;pla &nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;; restore regs and exit <br />&nbsp; &nbsp;&nbsp; &nbsp;tay <br />&nbsp; &nbsp;&nbsp; &nbsp;pla <br />&nbsp; &nbsp;&nbsp; &nbsp;tax <br />&nbsp; &nbsp;&nbsp; &nbsp;pla <br /><br />&nbsp; &nbsp;&nbsp; &nbsp;rti<br />&nbsp; &nbsp;&nbsp; &nbsp;<br />&nbsp; &nbsp;endif<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;Do_Always:<br /><br />&nbsp; &nbsp;&nbsp; &nbsp; ; call do_sound_engine<br /><br />&nbsp; &nbsp;<br />&nbsp; &nbsp;&nbsp; &nbsp;lda _ppu_mask<br />&nbsp; &nbsp;&nbsp; &nbsp;and #MA_BACKVISIBLE ; rendering is on so we need to set scroll, otherwise leave ppu alone<br />&nbsp; &nbsp;&nbsp; &nbsp;if true<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;; SET SCROLL<br />&nbsp; &nbsp;&nbsp; &nbsp;endif&nbsp; &nbsp;<br />&nbsp; &nbsp;&nbsp; &nbsp;<br />&nbsp; &nbsp;&nbsp; &nbsp;; no PPU writes after here!&nbsp; NO&nbsp; &nbsp; &nbsp;PPU&nbsp; &nbsp; WRITES&nbsp; AFTER&nbsp; &nbsp;HERE<br />&nbsp; &nbsp;&nbsp; &nbsp;; do every-time 'system' functions here:<br />&nbsp; &nbsp;&nbsp; &nbsp;<br />&nbsp; &nbsp;&nbsp; &nbsp;inc frame_counter<br />&nbsp; &nbsp;&nbsp; &nbsp;call do_clock<br />&nbsp; &nbsp;&nbsp; &nbsp;call do_countdown_timer<br />&nbsp; &nbsp;&nbsp; &nbsp;; other custom frame stuff<br />&nbsp; &nbsp; &nbsp; rts<br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Hallie</b> [ Mon Sep 24, 2012 6:57 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Sprite Movement Delay and Critique Requested</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thanks for the feedback. I've learned a lot and am feeling that I am beginning to wrap my mind around NES code structure logic. It was also great to hear everyone's different views on the topic. My small &quot;game&quot; runs on my Powerpak as intended, so I'm happy. I re-arranged the code a bit and attached below if anyone wanted to view it.

		
			<br clear="all" /><br />

			<table class="tablebg" width="100%" cellspacing="1">
			<tr>
				<td><b class="genmed">Attachments: </b></td>
			</tr>
			
				<tr>
					<td>
			<span class="genmed">
				<img src="./styles/subsilver2/imageset/icon_topic_attach.gif" width="14" height="18" alt="" title="" /> 
				<a href="./download/file.php?id=64">project092412.zip</a> [42.4 KiB]
			</span><br />
			<span class="gensmall">Downloaded 39 times</span>
		

		<br />
	</td>
				</tr>
			
			</table>
		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Mon Sep 24, 2012 7:06 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Sprite Movement Delay and Critique Requested</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I dunno if ASM6 does this, I'd be surprised if it didn't..but take all those .db statements that are not small and put them in to files, and then just do .incbin's to include the files so the source isn't filled with 1 byte values that you can accidentally change one and screw up everything. <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" /> But otherwise, looks okay to me, although I only scrolled through it. <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" /> <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Mon Sep 24, 2012 7:12 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Sprite Movement Delay and Critique Requested</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Movax12 mentioned something important that I forgot to put in my suggestion originally.<br /><br />Your NMI should push the registers A/X/Y to the stack if you're going to modify them in the NMI. The NMI interrupt process and RTI automatically preserve the flags, but they do not preserve the A/X/Y registers. (See Movax12's code for how to do this.)<br /><br />Since your main loop runs so quickly, it only ever gets interrupted in your wait loop for vblank (which doesn't depend on the state of A/X/Y) but as your game gets more complex it may be harder to guarantee this, and you'll get some really hard to track errors if you aren't preserving those registers.<br /><br /><br />There is another alternative, which is just to discard the whole game loop (turn it into a single JMP instruction jumping to itself) and put all your &quot;game loop&quot; code at the end of the NMI after turning on rendering (and playing your sound/music). This simplifies things a little (e.g. no need to preserve registers, since A/X/Y aren't being used outside of the NMI interrupt), though  it is subject to music slowdown problems and makes IRQ use difficult, since most of the frame is spent inside NMI. (Many games do not use IRQ though, so this can be fine.)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Mon Sep 24, 2012 10:34 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Sprite Movement Delay and Critique Requested</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent">There is another alternative, which is just to discard the whole game loop (turn it into a single JMP instruction jumping to itself) and put all your &quot;game loop&quot; code at the end of the NMI after turning on rendering (and playing your sound/music). This simplifies things a little (e.g. no need to preserve registers, since A/X/Y aren't being used outside of the NMI interrupt), though  it is subject to music slowdown problems and makes IRQ use difficult, since most of the frame is spent inside NMI. (Many games do not use IRQ though, so this can be fine.)</div><br />If one goes down this route, I'd actually do it the other way around: have just &quot;inc counter&quot; in your NMI handler, and have a waitVBlank routine that polls that counter, then put all the logic in the main loop. This way you don't have to worry about another NMI firing in the middle of another NMI.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Mon Sep 24, 2012 10:36 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Sprite Movement Delay and Critique Requested</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I do that in all my projects. It's also good because you're not limited to one NMI trying to do a bunch of different game engine state checks to see what to do, you just make as many mini NMI's to do all the tasks needed as needed.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Mon Sep 24, 2012 10:50 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Sprite Movement Delay and Critique Requested</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I thought it was impossible for a second NMI to fire before your RTI from your NMI routine...? (As well as impossible for IRQs to fire during NMI.)<br /><br />Edit: Apparently not. Thanks for the correction, thefox.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>3</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>