<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=2&amp;t=3430" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2007-06-17T12:34:44-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=2&amp;t=3430</id>
<entry>
<author><name><![CDATA[Dwedit]]></name></author>
<updated>2007-06-17T12:34:44-07:00</updated>
<published>2007-06-17T12:34:44-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3430&amp;p=25159#p25159</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3430&amp;p=25159#p25159"/>
<title type="html"><![CDATA[Very simple 6502 asm question]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3430&amp;p=25159#p25159"><![CDATA[
It's called "Memory Mapped IO".  Those aren't RAM addresses, they are IO ports.  Look at a NES memory map or something to see what address controls what.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=53">Dwedit</a> — Sun Jun 17, 2007 12:34 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2007-06-17T00:16:36-07:00</updated>
<published>2007-06-17T00:16:36-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3430&amp;p=25150#p25150</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3430&amp;p=25150#p25150"/>
<title type="html"><![CDATA[Very simple 6502 asm question]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3430&amp;p=25150#p25150"><![CDATA[
Yeah, the NES does everything like that, so you better get used to it. This is how the CPU, where the program is running, "talks" to everything else (controllers, sound hardware, video hardware).<br /><br />The CPU (6502) is just a part of the NES. The program (game) running there must tell all the other parts what to do, and receive information from those other parts too, and this is all done by reading/writing from/to special memory locations.<br /><br />As tepples said, you'll freak out when you hit the PPU and the mapper stuff, but specially the mappers, because those "special addresses" do different things in different games!<br /><br />Anyway, there are many many documents indicating what each address does on reads and writes, just look at the main NESDEV page.<br /><br />EDIT:<br /><br />BTW, this:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">$2006 &#40;stored from A&#41; <br />$2006 &#40;stored from X&#41; <br />$2007 </div><br />Is how you write data (such as background graphics or color palettes) to the PPU. The PPU memory is on a different address bus than the CPU memory, so the process for sending stuff from the CPU memory to the PPU memory involves writing the address where you want to send the data to (the address is 16 bits long, hence the 2 writes to $2006) followed by the data itself (writes to $2007). The address is auto incremented after every write to $2007, as this was meant for sequential data. Every time you want to write something that's not sequential, you have to set the address (by writing it to $2006) again.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Sun Jun 17, 2007 12:16 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2007-06-16T23:41:05-07:00</updated>
<published>2007-06-16T23:41:05-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3430&amp;p=25147#p25147</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3430&amp;p=25147#p25147"/>
<title type="html"><![CDATA[Very simple 6502 asm question]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3430&amp;p=25147#p25147"><![CDATA[
<div class="quotetitle">Bainemo wrote:</div><div class="quotecontent"><br />I see. Well, that does make sense then. I was unaware the NES had special "watch out for these writes and then start doing things" instructions beyond the usually init stuff.<br /></div><br />Boy, you're going to freak when you start hitting PPU and mapper stuff.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />The code I got from above came from some asm code this guy wrote, and while much of it makes sense, it uses "double-writes" for a LOT of addresses. These include: <br /><br />$2006 (stored from A) <br />$2006 (stored from X) <br />$2007<br /></div><br />Addresses in $20xx are the <a href="http://nesdevwiki.org/wiki/index.php/NES_PPU" class="postlink">PPU</a>.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Sat Jun 16, 2007 11:41 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bainemo]]></name></author>
<updated>2007-06-16T23:21:39-07:00</updated>
<published>2007-06-16T23:21:39-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3430&amp;p=25144#p25144</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3430&amp;p=25144#p25144"/>
<title type="html"><![CDATA[Very simple 6502 asm question]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3430&amp;p=25144#p25144"><![CDATA[
I see. Well, that does make sense then. I was unaware the NES had special "watch out for these writes and then start doing things" instructions beyond the usually init stuff. <br /><br />The code I got from above came from some asm code this guy wrote, and while much of it makes sense, it uses "double-writes" for a LOT of addresses. These include: <br /><br />$2006 (stored from A) <br />$2006 (stored from X) <br />$2007 <br /><br />If you're interested, the code is <!-- m --><a class="postlink" href="http://www.21cmagazine.com/issue2/cory_clouds.html">http://www.21cmagazine.com/issue2/cory_clouds.html</a><!-- m --> &lt;-- There. I understand that this code is pretty simple, but a lot of it uses code that, on the surface, seems totally superfluous. Can you reccomend an article the introduces the basics of 6502 ASM for the NES? <br /><br />Note: I can read the asm code for SMB 1 just fine (save for all the branches and jumps they do every other line); it's only this I'm having much trouble with.<br /><br />EDIT: Phew - major edit issues<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3361">Bainemo</a> — Sat Jun 16, 2007 11:21 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2007-06-16T23:08:28-07:00</updated>
<published>2007-06-16T23:08:28-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3430&amp;p=25142#p25142</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3430&amp;p=25142#p25142"/>
<title type="html"><![CDATA[Re: Very simple 6502 asm question]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3430&amp;p=25142#p25142"><![CDATA[
<div class="quotetitle">Bainemo wrote:</div><div class="quotecontent"><br />lda #$01<br />sta $4016<br />lda #$00<br />sta $4016<br /><br />Would the above code simply write $0001 to address $4016, and then instantly replace it with $0000? What purpose could that serve?<br /></div><br />The game controllers are connected to a serial port with 3 lines: start, next bit, and data. Bit 0 of $4016 sets the state of the start line; writing a 1 then a 0 prompts the controllers to start sending the first bit on the data line. Then each read of $4016 or $4017 returns the state of one button and asserts a signal on the next bit line, which prompts the controller to put the next bit on the data line.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Sat Jun 16, 2007 11:08 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bainemo]]></name></author>
<updated>2007-06-16T22:42:46-07:00</updated>
<published>2007-06-16T22:42:46-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3430&amp;p=25140#p25140</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3430&amp;p=25140#p25140"/>
<title type="html"><![CDATA[Very simple 6502 asm question]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3430&amp;p=25140#p25140"><![CDATA[
lda #$01<br />sta $4016<br />lda #$00<br />sta $4016<br /><br />Would the above code simply write $0001 to address $4016, and then instantly replace it with $0000? What purpose could that serve?<br /><br />Or am I missing something?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3361">Bainemo</a> — Sat Jun 16, 2007 10:42 pm</p><hr />
]]></content>
</entry>
</feed>