<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=2&amp;t=4658" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2008-12-21T13:02:30-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=2&amp;t=4658</id>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2008-12-21T13:02:30-07:00</updated>
<published>2008-12-21T13:02:30-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4658&amp;p=40918#p40918</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4658&amp;p=40918#p40918"/>
<title type="html"><![CDATA[Opinions on floor collision]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4658&amp;p=40918#p40918"><![CDATA[
I had an idea you might find interesting. It does involve block types and it has its limitations, but if the blocks are small enough (good old 16x16 pixels should be fine), this should not be a big deal. OK, say I want my floor to look like this:<br /><br /><img src="http://img339.imageshack.us/img339/1160/floor1wt0.png" alt="Image" /><br /><br />If I use 2 major block types (solid = dark, detailed = light), I could draw it like this:<br /><br /><img src="http://img247.imageshack.us/img247/5747/floor2el8.png" alt="Image" /><br /><br />Solid blocks make the basic shape and the detailed ones "decorate" it, making it look closer to what we actually want. All I have to do then is collide with each type of block in a different way: solid blocks use the whole area between the 2 hitbox corners, while detailed blocks only care about the central point.<br /><br /><img src="http://img183.imageshack.us/img183/1527/floor3ir5.png" alt="Image" /><br /><br />Whenever the entity walks towards the ledge, once it's off the detailed block it will start colliding with the solid block below, behaving like <em>Mega Man X</em> (SNES) and <em>Pugsley's Scavenger Hunt</em> (NES).<br /><br /><img src="http://img378.imageshack.us/img378/9627/floor4jz7.png" alt="Image" /><br /><br />The main limitation is that slopes must end perfectly aligned to the grid. This should not be obvious to the player/user, who usually does not know about any grids. I'm leaning towards coding it like this because it seems really simple, and the limitations are not that bad.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Sun Dec 21, 2008 1:02 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[CrashTest]]></name></author>
<updated>2008-12-21T12:43:48-07:00</updated>
<published>2008-12-21T12:43:48-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4658&amp;p=40917#p40917</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4658&amp;p=40917#p40917"/>
<title type="html"><![CDATA[Bkg slope/char interaction]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4658&amp;p=40917#p40917"><![CDATA[
I've got the same exact issue with sloped tiles in my project as well.   I've also got a lookup table per character type for the y height per x value.  I'm going for a slope tile system something like the arcade version of strider.<br /><br />So far what I'm doing is having a single floor detection point (F) on the center base of the character, and then two wall detection points (W) 12 pixels over, and 16 pixels up on either side.  The character can slide down walls and wall jump like Megaman X.<br /><br />I have a single ceiling detect point on the head about 48 pixels above the base as well (C).  My character is 56 pixels tall, and between 16-24 chars wide.   The ceiling detect point is used to zero out Y velocity when a solid tile is hit when jumping up.  Eventually I want to have ceiling hang/grapple.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">    <br />   C<br /><br /><br />W      W<br />  <br />   F<br /></div><br /><br />I just accepting that the character can overlap the wall in the wall for a small amount of time and I think I'll add a push away amount for cases where the character is too far inside the wall.  <br /><br />To make sure the character doesn't get trapped inside a wall what I do is that if the floor detection point is inside a totally solid wall, I move the character up to the ground plane of the tile above it.  (My scroll speed in limited to 8 pixels at a time in H or V).<br /><br />Wall detect points only prevent horizontal motion with totally solid tiles, not sloped tiles.  So far, I haven't been able to get my character stuck inside a wall section unless I design my level/metatiles in a certain nefarious way.<br /><br />Also, I've got a "floor magnet" type effect so that my character sticks to the ground when going down an up to 45 degree slope.<br /><br />Steep slopes (2 tiles over, 1 tile up) I'm still working out a way to handle them.<br /><br />I think a lot of the decisions made for terrain detection points and code comes down to personal preference and speed vs accuracy tradeoffs.  I'm erring more on the speed side.  There isn't really a "right" way to do it.. only a "right for the given project" way.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3653">CrashTest</a> — Sun Dec 21, 2008 12:43 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2008-12-21T10:10:09-07:00</updated>
<published>2008-12-21T10:10:09-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4658&amp;p=40915#p40915</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4658&amp;p=40915#p40915"/>
<title type="html"><![CDATA[Opinions on floor collision]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4658&amp;p=40915#p40915"><![CDATA[
<div class="quotetitle">Drag wrote:</div><div class="quotecontent"><br />Try using a collision system which uses the bottom corner points, and a movable point in between the corner points.<br /></div><br />I believe your idea is the most interesting so far, because it looks like it could work without the need for special blocks and other "hacks".<br /><br />I'm still thinking of as many aspects of it as I can, as there is another complicated case I haven't talked about before: landing on a ledge. When a character is falling and hits a ledge, it might be difficult to place it the same as if it walked up to that point. I believe that with your technique this is possible though, I just have to give it some more thought. Thanks for the idea!<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Sun Dec 21, 2008 10:10 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2008-12-20T04:00:37-07:00</updated>
<published>2008-12-20T04:00:37-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4658&amp;p=40885#p40885</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4658&amp;p=40885#p40885"/>
<title type="html"><![CDATA[Opinions on floor collision]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4658&amp;p=40885#p40885"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Did you catch the part where I said this will only work for a specific sprite width? This is indeed the simplest solution, and might work well for the player, but once I have a huge enemy, like, 3 times wider than the player, walk on the same slope, things will look weird. Also, consider tiny items that might end up completely below the floor line.<br /></div><br />Oh you are right. But after all, even if a signle corner would touch the slope, that wouldn't happear so weird. I looked at Gimmick and it seems to be like that. The collision window is typically slightly smaller than the area the sprite takes, so anyway some part of the sprite will be inside the slope and this won't look that weird.<br /><br />Also, if the middle of the player is out of the cliff and that it falls, it won't look werid either. That's how actual physics woks in fact ! But yeah if half of your players goes into a wall it will look weird, unless you use minor pseudo-3D with oblique projection like Double Dragon or some Battletoads levels to hide that.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Sat Dec 20, 2008 4:00 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Drag]]></name></author>
<updated>2008-12-19T15:08:41-07:00</updated>
<published>2008-12-19T15:08:41-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4658&amp;p=40876#p40876</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4658&amp;p=40876#p40876"/>
<title type="html"><![CDATA[Opinions on floor collision]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4658&amp;p=40876#p40876"><![CDATA[
Try using a collision system which uses the bottom corner points, and a movable point in between the corner points.<br /><br />The idea is that the movable point defaults to the center between the two corner points, and you'll mostly be using the movable point to determine if the entity is on the ground or not.<br /><br />If the movable point is on the ground, then the entity is on the ground, regardless of the corner points.<br /><br />If the movable point is off the ground, but both of the corner points are on the ground, then you're on the ground, just too wide to fall through whatever gap is there.<br /><br />If the movable point is off the ground, but just one of the corner points is on, then you're either floating over a slope, or you're stepping off of a ledge. The way you tell is by checking up to x amount of pixels underneath the movable point. If there's something solid under the point, within that tolerance, then you can simply reposition the entity on the ground, relative to the movable point.<br /><br />If there's nothing under the movable point within the tolerance, then you slide the movable point towards the corner that still registers a collision, until the point is over the ledge, and you basically just glue the point to that edge, until you move in a way that the corner point moves off the ledge too, because that's when you fall.<br /><br />If you walk back towards the ledge, rather than away from it, then once the movable point is back in the center of the entity, you unglue it from the ledge and you go back to repositioning the entity on top of the slope.<br /><br />Hope this makes sense, I kinda had to think back to my TGF and MMF days to come up with it. <img src="http://forums.nesdev.com/images/smilies/icon_razz.gif" alt=":P" title="Razz" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=21">Drag</a> — Fri Dec 19, 2008 3:08 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2008-12-19T14:09:30-07:00</updated>
<published>2008-12-19T14:09:30-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4658&amp;p=40874#p40874</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4658&amp;p=40874#p40874"/>
<title type="html"><![CDATA[Opinions on floor collision]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4658&amp;p=40874#p40874"><![CDATA[
<div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br />instead of shifting collision data to the left, you should just design metatiles so that their collision slope doesn't match the graphic slope<br /></div><br />Did you catch the part where I said this will only work for a specific sprite width? This is indeed the simplest solution, and might work well for the player, but once I have a huge enemy, like, 3 times wider than the player, walk on the same slope, things will look weird. Also, consider tiny items that might end up completely below the floor line.<br /><br />Dynamically shifting the collision data (this isn't hard, really, just look a few pixels back instead of where the sprite actually is) on a per sprite basis will result in all of them having their middle points appear to be colliding with the floor. Or simply using the middle point at all times, just considering ledges special cases where the other 2 points (left and right) are considered too.<br /><br />Both options should work, and the only real problem I see is the last case I presented. Celius' suggestion of extending the slope past the wall might work, but that's still specific to a certain sprite width. Different sprites will need different slope extensions to fall at the correct time.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Fri Dec 19, 2008 2:09 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2008-12-19T13:31:26-07:00</updated>
<published>2008-12-19T13:31:26-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4658&amp;p=40872#p40872</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4658&amp;p=40872#p40872"/>
<title type="html"><![CDATA[Opinions on floor collision]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4658&amp;p=40872#p40872"><![CDATA[
Oh doing slopes really sounds complicated, and while many games didn't do it quite a few did it. When it comes to the NES, Gimmick and SMB3 instantly comes in mind, but it's true not that many NES games have slopes.<br /><br />You'd want collision to fit into 2 bits or so. '00' means solid, '01' means transparent, '10' for left slope and '01' for right slope or something like that.<br /><br />And what you said in the very fist post seems like a good solution, but instead of shifting collision data to the left, you should just design metatiles so that their collision slope doesn't match the graphic slope but is 8 pixels ahead. For example a slope will look like that graphically :<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">_<br /> \<br />  \<br />   \<br />    \<br />     \<br />      \<br />       \<br />        \<br />         |<br />         |<br />         |<br />         |<br />         |</div><br />But inside the computer for collision it would look like that :<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">\<br /> \<br />  \<br />   \<br />    \<br />     \<br />      \<br />       \_<br />         |<br />         |<br />         |<br />         |<br />         |</div><br /><br />Using special metatile for slope start and slope end seems ackward and to be a bad idea overall. It's very user unfriendly too.<br /><br />Oh and all of this makes me feel like I should add slopes to my game engine, but the simple 1-bit collision map barely fitted my metatile definition sheme.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Fri Dec 19, 2008 1:31 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Celius]]></name></author>
<updated>2008-12-19T09:02:28-07:00</updated>
<published>2008-12-19T09:02:28-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4658&amp;p=40870#p40870</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4658&amp;p=40870#p40870"/>
<title type="html"><![CDATA[Opinions on floor collision]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4658&amp;p=40870#p40870"><![CDATA[
Generally I think you should check for collision in the exact same way every time: if a collision point on the bounding box is within a certain tile, it has "collided" with that tile, meaning it is inside the tile. For different tile types, you handle collision detection (when the player doesn't just enter a tile, but physically collides with the ground) differently. For example, the player may stop being effected by gravity on a 1/1 slope when the player's midpoint on the bounding box RelativeY &gt;= RelativeX. So in the case of 1/1 slopes, collision detection only applies to the midpoint of the object (so if the midpoint hasn't entered the 2x2 tile, there is no collision detection), but that's all up to the code that determines how something collides for that particular tile type. If you handle tile types separately with different collision conditions, I think you should be fine.<br /><br />I would really stick with ledge tile types which don't appear on the screen, but like I explained they stick off of the ledge so the player can walk to the very end without falling off beforehand. You can also create 1/1 slope ledge tile type that extends off the ledge like so:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">\<br /> \<br />  \<br />   \<br />   |\<br />   |<br />   |<br />   |<br /></div><br /><br />The code for this tile type would still tell the midpoint to collide with a 1/-1 slant, but only under the condition that the left edge of the bounding box hasn't past the left edge of the ledge tile. That's how you might handle that type of scenario.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=138">Celius</a> — Fri Dec 19, 2008 9:02 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Dwedit]]></name></author>
<updated>2008-12-19T04:18:23-07:00</updated>
<published>2008-12-19T04:18:23-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4658&amp;p=40867#p40867</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4658&amp;p=40867#p40867"/>
<title type="html"><![CDATA[Opinions on floor collision]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4658&amp;p=40867#p40867"><![CDATA[
There is yet one more way to possibly handle slopes: Inset them by 8 pixels, and use box collision as normal.  Then you don't need to concern yourself with the bottom-center of the sprite, just the whole box.  Probably not such a hot idea though.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=53">Dwedit</a> — Fri Dec 19, 2008 4:18 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Celius]]></name></author>
<updated>2008-12-19T00:31:07-07:00</updated>
<published>2008-12-19T00:31:07-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4658&amp;p=40866#p40866</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4658&amp;p=40866#p40866"/>
<title type="html"><![CDATA[Opinions on floor collision]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4658&amp;p=40866#p40866"><![CDATA[
Collision detection on this level is a bit ridiculous, especially if you're dealing with entities wider than the metatile. Though it's very important for some things. I'm probably going to need this kind of table in my game for a completely circular solid platform (like the gears in the clock tower levels in Castlevania 3). This won't be so hard to deal with especially since the platforms are about 3-4 metatiles wide, so the player won't have to deal with mutliple collisions inside a tile, like the one I demonstrated above.<br /><br />I've actually decided to stick with only a few types of solid metatiles: block, 1/1 (slope) slants, 1/2 slants. Though there are slants in all 4 directions, and I believe Castlevania Symphony of the Night on PS uses about that many tile types. However, I think it has 2/1 slants also, and I may incorporate this sort of thing in my game though I don't think it's that necessary.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=138">Celius</a> — Fri Dec 19, 2008 12:31 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Sivak]]></name></author>
<updated>2008-12-18T23:20:14-07:00</updated>
<published>2008-12-18T23:20:14-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4658&amp;p=40865#p40865</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4658&amp;p=40865#p40865"/>
<title type="html"><![CDATA[Opinions on floor collision]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4658&amp;p=40865#p40865"><![CDATA[
Oy.  Sorry I'm not contributing, but seeing all this makes me cringe.  Hehe.<br /><br />It was hard enough for me to get 90 and 0 degree platforms to work correctly.  Luckily those will be all the platform types I'll use.  I wouldn't want to begin thinking about slants.  Especially that parabola Celius showed.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3374">Sivak</a> — Thu Dec 18, 2008 11:20 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2008-12-18T23:16:54-07:00</updated>
<published>2008-12-18T23:16:54-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4658&amp;p=40864#p40864</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4658&amp;p=40864#p40864"/>
<title type="html"><![CDATA[Opinions on floor collision]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4658&amp;p=40864#p40864"><![CDATA[
I already use that kind of height table, yes. At first I thought I'd just have the central point of the sprite stick to the top of whatever pixel column it was on. However, when standing at the edge of a cliff, one of the corners should prevent you from falling. The problem is that if the central point defined the vertical position of the sprite, once it's out of the floor you can't simply have the corner point take over that role or there would be a "jump" when the position is adjusted to it.<br /><br />It's really hard coming up with a decent collision system for irregular floors with slopes...! It's no surprise there were so many platformers that used only blocks or at most simple slopes.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Thu Dec 18, 2008 11:16 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Celius]]></name></author>
<updated>2008-12-18T22:56:07-07:00</updated>
<published>2008-12-18T22:56:07-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4658&amp;p=40863#p40863</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4658&amp;p=40863#p40863"/>
<title type="html"><![CDATA[Opinions on floor collision]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4658&amp;p=40863#p40863"><![CDATA[
It's possible to create collision detection that's shape specific, especially if you're working with 16 pixel wide metatiles (though I don't know if this is what you are working with). For example, take this tile:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">1              1<br />1              1<br />11            11<br />11            11<br />11            11<br />111          111<br />111          111<br />1111        1111<br />1111        1111<br />11111      11111<br />111111    111111<br />1111111111111111<br />1111111111111111<br />1111111111111111<br />1111111111111111<br />1111111111111111<br /></div><br /><br />This is 16x16 pixels, where each 1 is a solid pixel. All you need to do is define the heights of each column of pixels. In this case, you'd define a 16 byte array somewhere in ROM that goes:<br /><br />.db 0, 2, 5, 7, 9, 10, 11, 11, 11, 11, 10, 9, 7, 5, 2, 0<br /><br />Those define the relative Y coordinates in the tile of the tops of the columns of pixels. For these types of tiles though, you'd have to check for collision for every pixel along the bounding box edge. This is a major disadvantage because it's really slow.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=138">Celius</a> — Thu Dec 18, 2008 10:56 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2008-12-18T22:01:11-07:00</updated>
<published>2008-12-18T22:01:11-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4658&amp;p=40862#p40862</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4658&amp;p=40862#p40862"/>
<title type="html"><![CDATA[Opinions on floor collision]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4658&amp;p=40862#p40862"><![CDATA[
<div class="quotetitle">Dwedit wrote:</div><div class="quotecontent"><br />So is this the right time to link to Gregmann's blog post about programming MC kids?<br /></div><br />That game isn't such a good example... the collision system is pretty hacky, and the author himself said there are still some problems with terrain collision (go up a hill and watch the player fall one pixel down to the ground at the top).<br /><br />Anyway, this game seems to heavily rely on block types to make floor collision work properly. This is similar to what Celius suggested and it just might be the answer. Of course I'd like to come up with a system where the shape of the terrain would be enough for decent collision detection, but I guess I may be just dreaming here.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Thu Dec 18, 2008 10:01 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Dwedit]]></name></author>
<updated>2008-12-18T21:17:21-07:00</updated>
<published>2008-12-18T21:17:21-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4658&amp;p=40860#p40860</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4658&amp;p=40860#p40860"/>
<title type="html"><![CDATA[Opinions on floor collision]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4658&amp;p=40860#p40860"><![CDATA[
So is this the right time to link to Gregmann's blog post about programming MC kids?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=53">Dwedit</a> — Thu Dec 18, 2008 9:17 pm</p><hr />
]]></content>
</entry>
</feed>