<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=10&amp;t=11388" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2014-08-03T11:24:48-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=10&amp;t=11388</id>
<entry>
<author><name><![CDATA[insomniakc]]></name></author>
<updated>2014-08-03T11:24:48-07:00</updated>
<published>2014-08-03T11:24:48-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11388&amp;p=131962#p131962</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11388&amp;p=131962#p131962"/>
<title type="html"><![CDATA[Re: MMC1 graphical glitches]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11388&amp;p=131962#p131962"><![CDATA[
For any fellow beginners who are following this thread, I updated the earlier Heartbeat animation as well as my other .asm files with all kasumi and thefox's advice (source and .nes attached for the heartbeat). Actually, I also got a powerpak and just now got these working properly on original hardware. I hope to do some more programming soon, hopefully something more significant (waiting on a copy of Leventhal's book). Cheers, everyone.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6591">insomniakc</a> — Sun Aug 03, 2014 11:24 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[insomniakc]]></name></author>
<updated>2014-07-11T13:12:50-07:00</updated>
<published>2014-07-11T13:12:50-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11388&amp;p=130995#p130995</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11388&amp;p=130995#p130995"/>
<title type="html"><![CDATA[Re: MMC1 graphical glitches]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11388&amp;p=130995#p130995"><![CDATA[
Thank you thefox for the suggestions. I'll put some more work into it soon. I might actually put some trees in the background.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6591">insomniakc</a> — Fri Jul 11, 2014 1:12 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[thefox]]></name></author>
<updated>2014-07-11T13:18:23-07:00</updated>
<published>2014-07-11T02:18:14-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11388&amp;p=130984#p130984</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11388&amp;p=130984#p130984"/>
<title type="html"><![CDATA[Re: MMC1 graphical glitches]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11388&amp;p=130984#p130984"><![CDATA[
Some suggestions:<br /><br />You should initialize the nametable in your program (or turn off background rendering). Also you should generally avoid using non-power-of-two PRG/CHR sizes (in your case you should up the 96 KB CHR to 128 KB).<br /><br />EDIT: of -&gt; off<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=80">thefox</a> — Fri Jul 11, 2014 2:18 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[insomniakc]]></name></author>
<updated>2014-07-10T22:16:53-07:00</updated>
<published>2014-07-10T22:16:53-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11388&amp;p=130980#p130980</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11388&amp;p=130980#p130980"/>
<title type="html"><![CDATA[Re: MMC1 graphical glitches]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11388&amp;p=130980#p130980"><![CDATA[
And it's done. Source code and .nes file included for the completed Lunar Eclipse.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6591">insomniakc</a> — Thu Jul 10, 2014 10:16 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[insomniakc]]></name></author>
<updated>2014-07-10T22:17:10-07:00</updated>
<published>2014-07-10T13:58:25-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11388&amp;p=130969#p130969</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11388&amp;p=130969#p130969"/>
<title type="html"><![CDATA[Re: MMC1 graphical glitches]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11388&amp;p=130969#p130969"><![CDATA[
So, a bit of an update to this. I've expanded the animation to about 90-100 frames, and I have bank switching set up to swap out 23 different Sprite tables. It's working mostly fine, as in the banks are swapping correctly and all frames of the animation are being displayed. However, I'm getting momentary graphical garbage for a split second every time it bank swaps. Any idea how to fix this? I had it working but I somehow messed it up... I should probably take a break and walk away for a bit.<br /><br />How I'm telling it to swap sprite banks is by using indirect indexed addressing (once again) to load a list of values from a bin file that have the bank number for each successive frame. <br /><br />I know I've taken up quite a bit of your time already, but the animation is almost done. I just need to figure out how to change the colour of the moon frame by frame and loop the animation, and I'm done. I should be able to figure those two things out though.<br /><br /><br />edit: I figured it out... it was a stupid mistype on my part in the bin file. oh well<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6591">insomniakc</a> — Thu Jul 10, 2014 1:58 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[insomniakc]]></name></author>
<updated>2014-07-06T18:49:05-07:00</updated>
<published>2014-07-06T18:49:05-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11388&amp;p=130744#p130744</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11388&amp;p=130744#p130744"/>
<title type="html"><![CDATA[Re: MMC1 graphical glitches]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11388&amp;p=130744#p130744"><![CDATA[
That worked flawlessly, aside from what I haven't done yet (so the program breaks when it runs out of animation data). The code works now, so I can move on to adding CHR banks, bank swaps, repeating frames, and slowing the animation down again. More importantly, you've corrected my erroneous knowledge. <br /><br />Thank you so much! Rewriting from scratch really got my mind out of a loop of making the same mistakes over again. That and your excellent advice. You really made my weekend. <br /><br />I'll post my finished animation at some point.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6591">insomniakc</a> — Sun Jul 06, 2014 6:49 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Kasumi]]></name></author>
<updated>2014-07-06T08:49:01-07:00</updated>
<published>2014-07-06T08:49:01-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11388&amp;p=130719#p130719</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11388&amp;p=130719#p130719"/>
<title type="html"><![CDATA[Re: MMC1 graphical glitches]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11388&amp;p=130719#p130719"><![CDATA[
You do want the preceding # yes, but you don't want to use an immediate hex value instead of a label.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda #$00<br />sta framelow<br /></div><br />vs. <br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda #low(frames)<br />sta framelow<br /></div><br />as I did in my last post.<br /><br />This also prevents human error. The &quot;frames&quot; labels starts at $E100, not $E0FF. Sprites is at $E000. It is 256 bytes. Therefore it fills the range of $E000-$E0FF. Which means the byte after it (the first byte of frames) is assembled at $E100, not $E0FF.<br /><br />But you need to know exactly none of that. Just use the label.<br /><br />Edit: And your NMI needs to restore the registers. The NMI might interrupt your main loop at any time. Say A was #$FF when the NMI happens. Your NMI ends by loading 2 in A. Then it returns, and A will have the wrong value for the main loop. To fix this, just push all the registers to the stack, and pull them at the end. (My changes in captals)<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NMI:<br />   PHA<br />   TXA<br />   PHA<br />   TYA<br />   PHA<br />  lda #$00<br />  sta $2003<br />  lda #2<br />  sta $4014<br /><br />  PLA<br />  TAY<br />  PLA<br />  TAX<br />  PLA<br />  <br />  rti<br /></div><br /><br />You still have two sets of vectors (though they at least share the same addresses now):<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent"> .org $FFFA<br />  .dw NMI<br />  .dw Start<br />  .dw 0<br /><br />  .bank 2<br />  .org $0000<br /><br />  .incbin &quot;eclipse7.chr&quot;<br />  .incbin &quot;eclipse7b.chr&quot;<br /><br />  .org $FFFA     ;first of the three vectors starts here<br />  .dw NMI          ;when an NMI happens (once per frame if enabled) the <br />                          ;processor will jump to the label NMI:<br />  .dw Start    ;when the processor first turns on or is reset, it will jump<br />                           ;to the label RESET:<br />  .dw 0               ;external interrupt IRQ is not used in this tutorial<br /></div><br />Remove the one after the incbins for the graphics. The Vectors only need to be in CPU banks that will be mapped to the end of the addressing space.<br /><br />Edit2: After doing all that, your program still crashes because there's nothing to break it out of the vblank loop.<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />To fix that, delete VBlank routine and the extra set of vectors (the .org $FFFA and three .dws after) and move inc VBlankOrNo to NMI. Then move that loop to below infin.<br /></div><br />Forgot to move the inc VBlankOrNo to the NMI.<br /><br />Edit5(swapped out the first recommended vblank routine with a better one)<br /><br />Better yet do this:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NMI:<br />;stack stuff<br />dec vblanktimer;This changes this value. To what doesn't even matter.<br /></div><br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda vblanktimer<br />WaitForVBlank:<br />cmp vblanktimer<br />beq WaitForVBlank<br /></div><br /><br />Basically the above loads vblanktimer and keeps it in A. When the NMI hits, vblanktimer will be changed but A won't be when it returns. So the compare of the old value to the new value will break the loop, and your main loop will only begin at the start of a frame.<br /><br />The problem with using inc/dec with a compare to a single value like 1 is that if your NMI fires twice before the main loop is completed (which could happen in the main loop takes longer than a frame to complete), VBlankOrNo would have a value of $02. Then the loop would have the wait for the NMI routine to hit over 200 times to get it back to one which is the only value that breaks the loop.<br /><br />framelo and framehigh are in the wrong order. I said earlier framelo has the be the earlier address.<br />Change this:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">framehigh .db 0<br />framelow .db 0<br /></div><br />to this<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">framelow .db 0<br />framehigh .db 0<br /></div><br /><br />Edit3: Actually, rereading, they're swapped, but then you store the lowbyte to framehigh and the high byte to framelow to set them up. Which... would work, except you then do the add of #64 to them as if framelow actually contained the low byte which it doesn't.<br /><br />Remove every single write to $4014 that's not in your NMI. <br /><br />Your loop breaker for UpdateFrame is wrong.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">UpdateFrame:<br />  iny<br />  lda &#91;framelow&#93;, y<br />  sty multi<br />  asl multi<br />  asl multi<br />  ldx multi<br />  sta $0201, x<br />  lda #$02<br />  sta $4014<br />  cpx #$40<br />  bne UpdateFrame<br /></div><br /><br />You check if X has a value of #$40. But you should be checking Y for a value of #$3F. X become quadruple the value of Y, so this loop ends too early. PS, there's no need to RAM for the multiply.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">UpdateFrame:<br />  iny<br />  tya<br />  asl a<br />  asl a<br />  tax<br />  lda &#91;framelow&#93;, y<br />  sta $0201, x<br /></div><br /><br />And after doing all that, it still doesn't work as expected so I dunno what's up. Might keep looking, but I'd honestly recommend starting over the.asm with the new things you've learned. The hard part for this program is actually getting the frames and stuff converted. The code is simple to rewrite.<br /><br />edit4: Oh wait. Apparently it's changeSpritePalette that's breaking it. And honestly, I'm not going to figure out why, but from the looks of things it is definitely not doing what you want. I just commented the jsr to it out. Anyway with the changes in this post it should work (unless I missed some changes I made on my local copy), but I still definitely advocate a total rewrite.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3504">Kasumi</a> — Sun Jul 06, 2014 8:49 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[thefox]]></name></author>
<updated>2014-07-06T08:36:32-07:00</updated>
<published>2014-07-06T08:36:32-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11388&amp;p=130717#p130717</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11388&amp;p=130717#p130717"/>
<title type="html"><![CDATA[Re: MMC1 graphical glitches]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11388&amp;p=130717#p130717"><![CDATA[
<div class="quotetitle">insomniakc wrote:</div><div class="quotecontent"><br />To do this I need two contiguous bytes in RAM that hold address $E0FF. framelow holds $E0 and framehigh holds $FF. My code for this is <br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   lda $FF<br />  sta framehigh</div><br /></div><br />This code will load a byte from memory address $FF and store that in framehigh. You'll want to use <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">lda #$FF</tt> instead.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=80">thefox</a> — Sun Jul 06, 2014 8:36 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[insomniakc]]></name></author>
<updated>2014-07-06T07:53:57-07:00</updated>
<published>2014-07-06T07:53:57-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11388&amp;p=130715#p130715</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11388&amp;p=130715#p130715"/>
<title type="html"><![CDATA[Re: MMC1 graphical glitches]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11388&amp;p=130715#p130715"><![CDATA[
<div class="quotetitle">Kasumi wrote:</div><div class="quotecontent"><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Next I'd like to figure out how to load my frames via a loop. How would I go about writing such a loop, rather than having 10 near-identical labels?<br /></div><br />With <a href="http://www.obelisk.demon.co.uk/6502/addressing.html#IDY" class="postlink">indirect indexed addressing</a> and <a href="http://codebase64.org/doku.php?id=base:16bit_addition_and_subtraction" class="postlink">16bit math.</a><br /><br />Since you're using nesasm, you have to use [] instead of () for indirect indexed. First, you need two contiguous bytes in RAM that hold the address of the first frame. Note that the low byte must be &quot;first&quot; in RAM. That is have the lower address. (If your two bytes are $00 and $01, $00 needs to have the low byte. If your two bytes are $5D and $5E, $5D needs to have the low byte.) To initialize them, store the address of whatever the first frame is in those two bytes.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda #low(frame1)<br />sta framelow<br />lda #high(frame1)<br />sta framehigh<br /></div><br /><br />To load the next frame, just add the framesize to the address. (Looks like 64 in this case.) This works because the address for the next frame is obviously (framesize) bytes greater than the previous frame if all frames are the same size, and if all frames are contiguous.<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda framelow<br />clc<br />adc #64<br />sta framelow<br /><br />lda framehigh<br />adc #0<br />sta framehigh<br /></div><br /><br />To access the data, you used to do this:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda frame1, x</div><br />This adds x to the address frame1 represents, then loads the value from the resulting address.<br />instead, you want to do this:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda &#91;framelow&#93;,y</div><br />This adds y to the address stored at framelow and framelow+1, then loads the value from the resulting address. So if framelow and framelow+1 (which should be framehigh if you've been following) contain the address for frame1, it's equivalent to lda frame1,y. If framelow and framelow+1 contain the address for frame2, it's equivalent to lda frame2,y.<br /><br />If framelow and framehigh contain the address for frame1, adding 64 will make them contain the address for frame2. That is what to do, and why it works.<br /><br />Note that you must use y for indirect indexed, so you'll have to change your code around since you are currently using X to access the frame data.</div><br /><br />I've been working on the suggestions I just quoted from you and I have created a bit of a mess with my graphics. The first frame loads, I can tell because I see it flash on the screen, but the successive frames are just nonsense. I am probably doing things in the wrong order, or have misunderstood something. I'll paraphrase your post first so you can correct my understanding of what you said.<br /><br /><em>So I need to use indirect indexed addressing in order to access $E0FF to read the first frame from my new binary file of frame data. To do this I need two contiguous bytes in RAM that hold address $E0FF. framelow holds $E0 and framehigh holds $FF. My code for this is <br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   lda $FF<br />  sta framehigh<br />  lda $E0<br />  sta framelow</div> <br /><br />Then I add 64 to the low byte and add (0+carry) to the high byte in order to increment the address that is being accessed by 64, and repeat the loop to transfer frame data to the PPU, and the DMA register.</em><br /><br />So I thought this is what I did when editing my program, but I'm getting just the first frame, then a mess of tiles. I feel like this has something to do with things being done in the wrong order. Also, I'm aware that I have it set to cycle indefinitely through memory, though this code is incomplete (just wanted to see the first couple of frames load before adding bank switch, etc).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6591">insomniakc</a> — Sun Jul 06, 2014 7:53 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[insomniakc]]></name></author>
<updated>2014-07-05T22:24:06-07:00</updated>
<published>2014-07-05T22:24:06-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11388&amp;p=130706#p130706</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11388&amp;p=130706#p130706"/>
<title type="html"><![CDATA[Re: MMC1 graphical glitches]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11388&amp;p=130706#p130706"><![CDATA[
Hey, not a problem, no need to apologize. I like long posts. <br /><br />I think before I do all of that I'm going to identify which frames are too similar and cut them out. I should end up with 60ish frames that are actually different enough, that'll make my life easier, and all the things you have suggested. I've already set to work. You've given me enough to fill up my spare time for a while <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" />. Perhaps once my programming abilities are better I'll make a tile sorting program, but for now I'll stick with what's available. You've increased my repertoire of programs for my purposes, so thanks for everything so far.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6591">insomniakc</a> — Sat Jul 05, 2014 10:24 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Kasumi]]></name></author>
<updated>2014-07-05T19:11:12-07:00</updated>
<published>2014-07-05T19:11:12-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11388&amp;p=130694#p130694</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11388&amp;p=130694#p130694"/>
<title type="html"><![CDATA[Re: MMC1 graphical glitches]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11388&amp;p=130694#p130694"><![CDATA[
So if I'm understanding correctly I can think of thing that can help you do that, but it won't save you all that much time anyway. <a href="http://pyxeledit.com/get.php" class="postlink">PyxelEdit (note the free version at the bottom)</a> can identify duplicate tiles and will tell you which tiles make up your image by mousing over them. (It can even dump an actual map of tile numbers for the image. i.e. the data you have underneath each frame label. In fact this program is the reason I made the comma separated decimal number to bin converter I mentioned earlier ) However, it doesn't work with CHR. <br /><br />So your process is like...<br />1. Convert moon images to 4 color BMPs.<br /><br />Then...<br />1. Import frame image to PyxelEdit.<br />2. Get rid of duplicate tiles.<br />3. Dump tile map for that frame.<br />4. Import next frame image to PyxelEdit.<br />5. Get rid of duplicate tiles. <br />6. Dump tile map for that frame.<br />Do this for as many frames as you can until you have a tileset of 256 (or enough that the next frame will push you over 256)<br />7. Export the tilemap. <br />8. Convert that to CHR.<br /><br />Which is...pretty yikes, honestly.<br /><br />It would be absolutely be faster to make a thing specifically suited for the task rather than doing this 300 times. But faster != fast i.e. At least I am not willing to make it for you.<br /><br />Maybe I have an idea. You could create a &quot;sprite sheet&quot; of all 300 images. (So basically one 64x19200 image) <br /><br />Import that to PyxelEdit. Find out which is the first frame that uses a tile greater than 256. (you'd have to check manually, but that's not that bad, since the program can display which tiles are being used if you press tab.) <br /><br />Truncate the image to the frame before the first that uses one greater than 256. Export the tileset (and convert to CHR), dump the tilemap numbers. You now have all the info needed to recreate those frames in the rom, and also know how many frames before you need to swap tilesets.<br /><br />Remove those frames from your sprite sheet. (So... if 8 frames fit in one tileset, you now have a 64x18688 image that starts at the frame that pushed you over the tile limit.)<br /><br />Import into pyxeledit. find out... (repeat the steps above basically)<br /><br />That sounds... better, but better doesn't mean good. <img src="http://forums.nesdev.com/images/smilies/icon_lol.gif" alt=":lol:" title="Laughing" /> Anyway, you can create/import/truncate spritesheets pretty easily with <a href="http://www.aseprite.org/older-versions/" class="postlink">ASEPRITE</a>. (Once again, note the free version. Both of these programs are paid software that are nice enough to let you get an old version) Does this sound any better than what you planned to do? If so, I'll write you steps on how to do the spritesheet stuff in ASEPRITE as well, assuming no one is nice enough to just write a program to do all this in one step.<br /><br />PS: I totally checked and ASEPRITE does indeed support cutting up a 64x19200 indexed spritesheet. PyxelEdit probably wouldn't be able to import it, but no biggie. You could just export the first 20 frames or so, since that'd be guaranteed to fill the limit anyway.<br /><br />Either way, good luck. Sorry my posts are always so long.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3504">Kasumi</a> — Sat Jul 05, 2014 7:11 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[insomniakc]]></name></author>
<updated>2014-07-05T18:38:29-07:00</updated>
<published>2014-07-05T18:38:29-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11388&amp;p=130693#p130693</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11388&amp;p=130693#p130693"/>
<title type="html"><![CDATA[Re: MMC1 graphical glitches]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11388&amp;p=130693#p130693"><![CDATA[
Well just say you have 16 columns of tiles in TLP and you import an 8 tile by 8 tile image into the program, it will preserve the image rather than sequencing the tiles so this diagram represents what I get (00 is just an empty black tile, or whatever was there when I imported)<br /><br />01 02 03 04 05 06 07 08 00 00 00 00 00 00 00 00<br />09 0A 0B 0C 0D 0E 0F 10 00 00 00 00 00 00 00 00<br />10 11 12 .. .. ..<br /><br />So then I need to drag tile 09 next to tile 08, and so forth to fill up the black spaces and not waste CHR table space, and to prevent making my life figuring out what tile is next while programming a real headache. I spent about 3 hours for this eclipse on menial tasks that you folks have shown me better methods for, aside from this whole drag and drop circus. It's like doing a puzzle backwards...<br /><br />And by the way, I'm stunned by the amount of support I'm getting. Thank you! *bow's head*<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6591">insomniakc</a> — Sat Jul 05, 2014 6:38 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Kasumi]]></name></author>
<updated>2014-07-05T10:58:10-07:00</updated>
<published>2014-07-05T10:58:10-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11388&amp;p=130679#p130679</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11388&amp;p=130679#p130679"/>
<title type="html"><![CDATA[Re: MMC1 graphical glitches]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11388&amp;p=130679#p130679"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />My question, since you have intrigued me by mentioning this, is how would I convert a batch of 300 8 bit bmp images into 4 colors using some sort of automated process?<br /></div><br />Can do it with <a href="http://www.irfanview.com/" class="postlink">irfanview.</a> File, batch conversion, choose your output format, check advanced options, change color depth, 4 colors, browse to the folder where the 300 images are stored and hit add all. Then choose the output folder, and click start batch.<br /><br />I'm sure here's a way with <a href="http://www.imagemagick.org" class="postlink">ImageMagick</a> as well. It can do <strong><em>whatever</em></strong> to images. (But I don't know a method offhand.)<br /><br />edit2: Then I suppose use Tepples' thing linked here: <!-- l --><a class="postlink-local" href="http://forums.nesdev.com/viewtopic.php?f=22&amp;t=7991">viewtopic.php?f=22&amp;t=7991</a><!-- l --><br />I should say what I meant when I said it could be automated was that it is a task that requires no thinking a computer couldn't do, not that tools necessarily already exist to do specifically this in one step fashion. The more specific the needs, the harder it is to find a random program that'll do it. But task that would take me longer to do than write a program for, I'd write a program for. I am not sure what other languages you might be familiar with, though.<br /><br />edit: <div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Also, I'd love a way to automate sequencing the tiles in order that they are accessed in memory rather than the way TLP does it. I have to manually move each tile, the way I'm doing it now.<br /></div><br /><br />In any case, could you be more specific about how TLP does things (I've never used it, and downloading it won't help me see what happens for this specific task anyway), and what you actually want? Maybe there exists a thing, or maybe it's easy to write.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3504">Kasumi</a> — Sat Jul 05, 2014 10:58 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2014-07-05T10:26:02-07:00</updated>
<published>2014-07-05T10:26:02-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11388&amp;p=130675#p130675</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11388&amp;p=130675#p130675"/>
<title type="html"><![CDATA[Re: MMC1 graphical glitches]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11388&amp;p=130675#p130675"><![CDATA[
<div class="quotetitle">insomniakc wrote:</div><div class="quotecontent"><br />I've already created a macro to convert my higher res cartoony moon images into 8 bit appropriately sized images and used tile layer pro to import them and TLP/YYCHR at different times to touch them up a bit after converting them to 4 colors. My question, since you have intrigued me by mentioning this, is how would I convert a batch of 300 8 bit bmp images into 4 colors using some sort of automated process?<br /></div><br />I'd do the conversion in a paint program, which produces BMP or PNG sprite sheets that you can feed into any BMP-to-CHR program such as the one that comes with my ca65 project template.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Sat Jul 05, 2014 10:26 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[insomniakc]]></name></author>
<updated>2014-07-05T09:01:32-07:00</updated>
<published>2014-07-05T09:01:32-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11388&amp;p=130673#p130673</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11388&amp;p=130673#p130673"/>
<title type="html"><![CDATA[Re: MMC1 graphical glitches]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11388&amp;p=130673#p130673"><![CDATA[
<div class="quotetitle">Kasumi wrote:</div><div class="quotecontent"><br />First off: Check the &quot;edit2&quot; I just made to the previous post. Your program has quite a few fundamental issues I didn't notice because it basically runs fine. But when I looked into it to give you other advice, I started to see a lot of stuff.<br /></div><br /><br />Edit 2 certainly does clarify some things for me that I was unsure of regarding the VBlank. I'm starting to move away from the copy-pasting I did on the heartbeat animation, which also runs fine and has a ton of issues. The information from the nerdy nights tutorials I did last summer is sinking in slowly as I find more information which relates. So right now I'm at about 75% comprehension of what I am actually doing, but I'm enjoying it.<br /><br />I'm actually not testing on a real NES right now, though I would like to someday. I'm finding all kinds of books and stuff on 6502 assembler which is distracting me from this little project but also helping me figure things out. And speaking of automation, I've already created a macro to convert my higher res cartoony moon images into 8 bit appropriately sized images and used tile layer pro to import them and TLP/YYCHR at different times to touch them up a bit after converting them to 4 colors. My question, since you have intrigued me by mentioning this, is how would I convert a batch of 300 8 bit bmp images into 4 colors using some sort of automated process? I could do it with a macro and TLP, but I kind of don't like the way the images come out. A lot of space is converted black that I manually have to touch up. It would make my life easier. Also, I'd love a way to automate sequencing the tiles in order that they are accessed in memory rather than the way TLP does it. I have to manually move each tile, the way I'm doing it now.<br /><br />As for all the programming advice, it'll take me a few days to really implement all of this, since my attention is a bit divided at the moment. Also, thanks Kasumi and thefox for the useful tools, I will check both of them out.<br /><br />edit:<br />I included the source and .nes for my heartbeat, which I used as a starting point for this eclipse. Just bear in mind I created these about a year ago, so I am not really working on them at the moment, and all your advice from the Eclipse applies to them, just thought I'd share for anyone who wants to see a poorly coded 8 bit animated heartbeat that actually works smoothly <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" />.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6591">insomniakc</a> — Sat Jul 05, 2014 9:01 am</p><hr />
]]></content>
</entry>
</feed>