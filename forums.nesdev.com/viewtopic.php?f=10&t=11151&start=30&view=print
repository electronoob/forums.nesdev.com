<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Minimal NES example using ca65</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Minimal NES example using ca65</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=11151">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=11151</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>3</strong> of <strong>3</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>DRW</b> [ Tue Aug 11, 2015 1:33 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Minimal NES example using ca65</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I have a suggestion concerning your config file:<br /><br />The segment that you call &quot;RAM&quot; should actually be called &quot;BSS&quot;.<br /><br />The reason is: When you use the C compiler, it includes segments into its code by itself. And for variables that are not in the zeropage, it uses &quot;BSS&quot;.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Wed Aug 12, 2015 12:57 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Minimal NES example using ca65</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yeah, sure. It doesn't make a functional difference, but it is the default name for the &quot;main&quot; RAM segment in cc65, sort of. I've changed it.<br /><br />I wasn't concerned about compatibility with C configs for this example, since it's not a C example at all, but if you want an example cc65+C project to look at, here's one I made a while back that plays an old jazz tune: <a href="http://rainwarrior.ca/music/coltrane.nes" class="postlink">coltrane.nes</a>, <a href="http://rainwarrior.ca/music/coltrane_src.zip" class="postlink">coltrane_src.zip</a>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>samophlange</b> [ Sat May 19, 2018 11:11 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Minimal NES example using ca65</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I am wrapping up my first &quot;Pong&quot; project and I'm looking at this example so I can start my next project using ca65. One thing I liked about compiling with NESASM3 is that it would list out the &quot;USED/FREE&quot; bytes of each bank. Is there a way of getting something equivalent with ca65? <br /><br />Having the python script to generate symbols for FCEUX is a huge bonus, thanks for including that!<br /><br />edit: Just realized that compiling this project with ca65 generates a .DBG file which the Mesen emulator appears to be able to use to get symbols and whatnot, so that's another option.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>DRW</b> [ Sat May 19, 2018 11:22 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Minimal NES example using ca65</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">samophlange wrote:</div><div class="quotecontent">One thing I liked about compiling with NESASM3 is that it would list out the &quot;USED/FREE&quot; bytes of each bank. Is there a way of getting something equivalent with ca65?</div><br />I don't know how to do this with ca65, but Shiru's NES Space Checker shows you a nice graphical representation of empty bytes (actually: bytes that have the value 0 or 255, depending on which one you choose) in any NES ROM:<br /><br /><!-- m --><a class="postlink" href="https://shiru.untergrund.net/files/nessp.zip">https://shiru.untergrund.net/files/nessp.zip</a><!-- m -->

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sat May 19, 2018 11:52 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Minimal NES example using ca65</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">samophlange wrote:</div><div class="quotecontent">One thing I liked about compiling with NESASM3 is that it would list out the &quot;USED/FREE&quot; bytes of each bank. Is there a way of getting something equivalent with ca65?</div><br />In the .CFG file you can put <a href="https://cc65.github.io/doc/ld65.html#toc5.2" class="postlink">&quot;define = yes&quot; in the segment definitions</a> to generate symbols containing their size, which you can subtract from the total size to see how much space you have left.<br /><br />Since this number is not a constant during assembly time, you can't easily print it using <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.out</tt>. You can either write it to a file in binary form using <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.word</tt> or <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.dword</tt> and read it using an hex editor, or use a macro to convert it into a string.<br /><br />For example, here's what the segment definitions for my first PRG-ROM bank look like (the second one is aligned to the end of the bank, so I can reliably put the CPU vectors, reset stub and other stuff that needs to be in the same location in multiple banks):<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">PROGRAM_ROM_LOWER_00: load = PROGRAM_ROM_LOWER_00, type = ro, define = yes;<br />PROGRAM_ROM_UPPER_00: load = PROGRAM_ROM_UPPER_LOAD_00, run = PROGRAM_ROM_UPPER_RUN_00, type = ro, define = yes;</div><br /><br />Then, I have a macro that uses the SIZE symbols to calculate how much space I have left:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">;writes the amount of space left in a program ROM bank of the specified size to the debug file<br />.macro Assembler_DEBUG_BANK _Bank, _Size<br />&nbsp; &nbsp;&nbsp; &nbsp;.import .ident(.sprintf(&quot;__PROGRAM_ROM_LOWER_%02d_SIZE__&quot;, _Bank))<br />&nbsp; &nbsp;&nbsp; &nbsp;.import .ident(.sprintf(&quot;__PROGRAM_ROM_UPPER_%02d_SIZE__&quot;, _Bank))<br />&nbsp; &nbsp;&nbsp; &nbsp;Assembler_START_DEBUG<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;.byte .sprintf(&quot;Bytes left in bank %02d: &quot;, _Bank)<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;Assembler_WRITE_NUMBER (_Size) - .ident(.sprintf(&quot;__PROGRAM_ROM_LOWER_%02d_SIZE__&quot;, _Bank)) - .ident(.sprintf(&quot;__PROGRAM_ROM_UPPER_%02d_SIZE__&quot;, _Bank)), 10, 5<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;.byte $0d, $0a<br />&nbsp; &nbsp;&nbsp; &nbsp;Assembler_END_DEBUG<br />.endmacro</div><br /><br />It makes use of 2 other macros to output the information to a debug file (anything in the DEBUG segment goes to a file named debug.txt):<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">;starts a block of debug information<br />.macro Assembler_START_DEBUG<br />&nbsp; &nbsp;.pushseg<br />&nbsp; &nbsp;.segment &quot;DEBUG&quot;<br />.endmacro<br /><br />;ends a block of debug information<br />.macro Assembler_END_DEBUG<br />&nbsp; &nbsp;.popseg<br />.endmacro</div><br /><br />And this is the macro that converts the number into an ASCII string:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">;writes the specified number of places of a non-constant number in the specified base to the active segment<br />.macro Assembler_WRITE_NUMBER _Number, _Base, _Places, _Divisor<br />&nbsp; &nbsp;.ifblank _Divisor<br />&nbsp; &nbsp;&nbsp; &nbsp;Assembler_WRITE_NUMBER _Number, _Base, _Places, 1<br />&nbsp; &nbsp;.else<br />&nbsp; &nbsp;&nbsp; &nbsp;.if _Places &gt; 0<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;.local __Digit<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;__Digit = (_Number) / (_Divisor) .mod (_Base)<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;Assembler_WRITE_NUMBER _Number, _Base, (_Places) - 1, (_Divisor) * (_Base)<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;.lobytes __Digit + '0' * (__Digit &lt; 10) + ('A' - 10) * (__Digit &gt; 9)<br />&nbsp; &nbsp;&nbsp; &nbsp;.endif<br />&nbsp; &nbsp;.endif<br />.endmacro</div><br /><br />Then, at the end of the .BAT file I use for assembling, I use <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">type debug.txt</tt> to display whatever debug.txt contains, so I can see the amount of free space every time I assemble.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Sat May 19, 2018 1:11 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Minimal NES example using ca65</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />At the bottom of Mesen's debug window it says <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">PRG analysis:  4.15% &#40;Code: 1.10%, Data: 3.04%, Unknown: 95.85%&#41;</tt>.  Not sure how accurate that is...  maybe it only represents the current banks being used... but, still, it sounds really unfair, to me. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br />edit:  Maybe it counts bytes until the first <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.pad</tt> (00 byte) and then assumes the rest of the bank is &quot;Unknown&quot;?  <img src="./images/smilies/icon_confused.gif" alt=":?" title="Confused" /><br /><br /><br />final edit: rainwarrior, sorry to state my confusion in your thread about an unrelated topic.  <img src="./images/smilies/icon_redface.gif" alt=":oops:" title="Embarassed" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Sat May 19, 2018 4:50 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Minimal NES example using ca65</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">unregistered wrote:</div><div class="quotecontent">At the bottom of Mesen's debug window it says <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">PRG analysis:  4.15% &#40;Code: 1.10%, Data: 3.04%, Unknown: 95.85%&#41;</tt>.  Not sure how accurate that is...  maybe it only represents the current banks being used... but, still, it sounds really unfair, to me. :)</div><br />FCEUX and Mesen both have this capability.  They're only going to know what's code vs. data as you play the game (meaning the percentages for code and data will grow as you play the game more).  If there are areas of the ROM that can't be accessed because, say, the code never reads from them or they're never used in CHR bank swapping, then they (obviously) will stay &quot;unknown&quot;.  I cover this in this post: <!-- l --><a class="postlink-local" href="http://forums.nesdev.com/viewtopic.php?p=216343#p216343">viewtopic.php?p=216343#p216343</a><!-- l -->

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Sat May 19, 2018 11:08 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Minimal NES example using ca65</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />ca65, or rather ld65 can generate a &quot;map&quot; file which is very helpful for gauging how much space you have left. This example does so, you just have to look at the generated file.  (-m)<br /><br />It doesn't specifically say how many bytes are left, but will give you the &quot;end&quot; address of a segment, which is one step removed from bytes left, but if you just need a coarse estimate it's good enough to know that your PRG segment ended (and empty space began) at e.g. $E123.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>calima</b> [ Sun May 20, 2018 1:07 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Minimal NES example using ca65</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I use od65. &quot;od65 -S *.o | grep mysegment&quot; and then you can add the sizes with your favorite way.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Mon May 21, 2018 8:14 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Minimal NES example using ca65</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">koitsu wrote:</div><div class="quotecontent"><div class="quotetitle">unregistered wrote:</div><div class="quotecontent">At the bottom of Mesen's debug window it says <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">PRG analysis:  4.15% &#40;Code: 1.10%, Data: 3.04%, Unknown: 95.85%&#41;</tt>.  Not sure how accurate that is...  maybe it only represents the current banks being used... but, still, it sounds really unfair, to me. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /></div><br />FCEUX and Mesen both have this capability.  They're only going to know what's code vs. data as you play the game (meaning the percentages for code and data will grow as you play the game more).  If there are areas of the ROM that can't be accessed because, say, the code never reads from them or they're never used in CHR bank swapping, then they (obviously) will stay &quot;unknown&quot;.  I cover this in this post: <!-- m --><a class="postlink" href="http://forums.nesdev.com/viewtopic.php?p=216343#p216343">http://forums.nesdev.com/viewtopic.php?p=216343#p216343</a><!-- m --></div>Thank you koitsu! <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>3</strong> of <strong>3</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>