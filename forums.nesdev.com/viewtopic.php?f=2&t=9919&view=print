<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - help decide how to program things: Sprite Metatiles|Updated</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">help decide how to program things: Sprite Metatiles|Updated</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=9919">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=9919</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Wed Mar 13, 2013 10:19 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>help decide how to program things: Sprite Metatiles|Updated</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Okay, first off this isn't some wimpy code example or something. This is more aimed at specific, but more complex, part for NES code. This one I'm working on now is metasprites. This is a over view of very fine details of the engine:<br /><br />The game will have an object system with X objects, assigned at compile time. Basically, a program goes through each object, pulls it's metasprite (When this gets done and written, then I'll add animation frames), and then basically says &quot;Process this&quot; to another program, the decoder+OAM rotation program.<br /><br />The decoder program first looks at the number of tiles, the first byte in a header that contains the tiles used. The second and third bytes in the header are the x pixels used, Y pixels used for flipping. But the OAM routine has two sets of pointers. One that points to $00 and $40 at the beginning. What it does is takes the object number EOR'd with the frame number and the first bit is then used to select the $00 or $40 index. If the object gets the $00, the first (least index) is copied to the index variable to use. The X is then put to another variable to know the origin later. If the object gets the first index, which decreases to put the OAM in the screen, it checks to see if we have enough tiles. If so, we take the 2nd index, subtract the &quot;requested tiles&quot; and then put that OAM index to the variable to use later. If there's not enough tiles requested, then we use the first index value but then use and tell the program the 2nd one is still the origin. We can do this because there's also a count that counts down each time a tile is put on the screen, so we KNOW we will never over run another tile.<br /><br />Okay, now that that is said, we have a problem. I disable sprites who's coords overflow and are not on the right side of the screen. In the engine, if the Object YX flip bits are set, I add the X/Y offsets in the header. If they go to the wrong side of the screen, I set a bit in a variable called TestShowing. Those bits go &quot;00YX.0000&quot; so far, which are the disable bits for the bases of the sprite. But after each tile movement, I am going to set the two high bits to test if it's BACK on a good side of the screen. So we have &quot;YXYX.0000&quot;. Basically I am going to load the value, ASL twice, EOR with the original, and then and #%11000000. If it's not zero, the tile does not get written. We have a problem with this if the backwards buffer is going because it starts in the middle of OAM data, it can't subtract down like would be easy because we have to keep sprite priority in order.<br /><br />Would your solution just be keep the empty spaces in OAM regardless? My solution is looking like I will take how many tiles are not used, and move the OAM objects down, and then when setting the new location, just make sure the tiles used get subtract, which isn't too bad, but might not be worth the CPU. Just wondering what you guys think on this one, as it's trick, complex, and might have places for optimization just from my way of attacking it.<br /><br />Disclaimer: don't expect working code today, hopefully in the next few days. I have about...175 lines of code so far, not even close to done with this program, and have not tested any part once. So it'll probably take a little bit to debug after I get the way I want it to work down. But, every line of code is very well commented so it shouldn't be hard at all to debug.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Wed Mar 13, 2013 11:47 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Help me decide how to program things. (Sprite Metatiles)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Having &quot;empty&quot; space in your OAM is not a problem at all. As long as they are at an offscreen location they won't interfere with your other sprite rendering. It will not help efficiency to compact this space (probably the opposite, since it may take you more time to compact it). I wouldn't bother trying to do this until/unless you run out of space and want to have more sprites.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Wed Mar 13, 2013 11:58 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Help me decide how to program things. (Sprite Metatiles)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Well, the thing is I might not run out of space if I did adjust the OAM position for backwards writes if I check after and move if there were. But that's one vote for just screw it, basically? <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br />Also, side note, is when I run out of tiles, the one that ran out of tiles will be the first object processed. Weather it will be the first in OAM is a 50% chance, so if there's more than 8 sprites on a scanline and it's not the first object, it won't be shown again. But as long as there's more tiles on the frame than could be handled, it'll show the 3rd because it'll then be in the front end.<br /><br />Right now I'm thinking the same thing, any unrendered tiles will just have a Y position of FF. That should be good enough, I don't need to use every tile every frame, I'll have to flicker sometime, if I ever used that many.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Wed Mar 13, 2013 4:14 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Help me decide how to program things. (Sprite Metatiles)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I have to admit that I didn't quite understand the reason for holes in the OAM. In my own engine, I do all the range checking while outputting the sprites, so if X or Y happen to be out of range I simply don't increment the sprite index, so that the next sprite will use the slot that was left unused (it doesn't matter that some of the data for the other sprite was written already, as it will be overwritten).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Wed Mar 13, 2013 4:43 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Help me decide how to program things. (Sprite Metatiles)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It wouldn't have any holes in OAM if it would put all the tiles there, but if it only puts 4 tiles of a sprite of 8, the data would be 4 bytes of OAM data, and then 4 blanks to where nothing was put down. And since it's moving backwards, it has to start from the deepest part to not overlap it. Would a few images help? It is kinda hard to understand...the holes also woul only ever happen in the decreasing array, never in the forward moving one. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Thu Mar 14, 2013 11:07 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Help me decide how to program things. (Sprite Metatiles)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I too was having some difficulty understanding the full process. But from what I gather, with the way metasprites are rendered in your engine, under certain circumstances you may end up with gaps in your sprite page (for sprites sticking off screen). If I'm understanding correctly, I don't think it'll matter too much. If you are saying &quot;render this object&quot;, you should assume the risk of the whole object being on screen, and taking up each sprite slot. If it really saves you time, and you otherwise have a very efficient engine, then I'd vote for &quot;screw it&quot;.<br /><br />If I were going to offer a suggestion for fixing it, I'd probably vote for rewriting the whole rendering method. I haven't dealt with a need for priorities in mine (only flickering sprites when there are more than 8 per scanline), but I'm sure there's a way you could rework some of your code so that you wouldn't have that problem in the first place. I know that's not really helpful, and it sounds like a pain in the ass. But sometimes it's better to start over than patch up what you have.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Thu Mar 14, 2013 11:26 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Help me decide how to program things. (Sprite Metatiles)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Celius wrote:</div><div class="quotecontent">...sometimes it's better to start over than patch up what you have.</div><br />Sometimes it's better to get your project done than to worry about how elegant the underlying code is.<br /><br />The way 3gengames is assigning sprite memory does not sound like how I would approach the task, but if it's not causing him a problem I don't actually think it's worth expending effort to &quot;fix&quot;. I don't know what his game looks like, or what its needs are. If the needs are already met, the only reason to rework this code is for the learning experience maybe.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Thu Mar 14, 2013 1:46 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Help me decide how to program things. (Sprite Metatiles)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Gonna shower and then post a semi-animation about that I mean to clear it up. And this engine will used in all my games and projects from now on once I finish it, with modification as needed/optimized. I'm not that deep in to it, it's only 170 lines of code. About 50 would need changes to change how it works completely so it's not out of hand yet. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /> But yeah, sorry, I'm pretty bad at explaining stuff how other people would need it explained, because in my head it is a lot smoother with the things I want to accomplish with it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Fri Mar 15, 2013 9:27 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Help me decide how to program things. (Sprite Metatiles)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Okay, here it is. Leaving out the other ideas of the engine.<br /><br />There's two indexes. One that points at the beginning of OAM, one at the last entry of OAM. They converge towards each other, or to the middle of the OAM data. Sprites with lower OAM entries are displayed first. Sprites can be layered. In order to keep priority, everything bust be written from the beginning of a buffer, to the end, weather it be the first index or second. If index 1 is used, it uses the pointer directly, because it is already moving deeper in to OAM. If the second index is being used, it must &quot;reserve&quot; OAM space by subtracting the current positioning with the tiles needed.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&#91;Entry 00&#93; &lt;-Index one points here.<br />&#91;Entry 01&#93;<br />&#91;Entry 02&#93;<br />&#91;Entry 03&#93;<br />...<br />&#91;Entry 3C&#93;<br />&#91;Entry 3D&#93;<br />&#91;Entry 3E&#93;<br />&#91;Entry 3F&#93;<br />&#91;Entry 40&#93; &lt;Index two points here. Is actually same as first index, because there's only 3F OAM entries. <br /></div><br /><br />if index 1 has 4 tiles to put down, it puts them in entry 00 to 03. If index 2, the decreasing index, it has to reserve 4 sprites. It takes the current position, subtracts 4, and then says &quot;Well that's index $3C, so we start there.&quot; but lets say only 3 tiles get put on the screen of four because one object moves, to the other side, our OAM will now be:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&#91;Used Entry 00&#93; ;Tile 1 of 4<br />&#91;Used Entry 01&#93; ;Tile 2 of 4<br />&#91;Used Entry 02&#93; ;Tile 3 of 4.<br />&#91;Entry 03&#93; &lt;Index 1 points here.<br />...<br />&#91;Used Entry 3C&#93; &lt;Index 2 points here. 1 of 4<br />&#91;Used Entry 3D&#93; 2 of 4<br />&#91;Used Entry 3E&#93; 3 of 4<br />&#91;Entry 3F&#93; 4 of 4, with Y coord of FF.<br /></div><br /><br />If the increasing OAM has only 3 of 4 tiles put down, we can just ignore everything and not put the tile, and upload the new pointer position at the end of OAM updates. But with the decreasing one, we have to point it at the first used position, because otherwise we don't have free OAM spaces. This leaves one unused OAM space.<br /><br />But if only one tile of an object with 1 tile displayed and 8 tiles total or so gets put in the decreasing OAM, we lose 7 tiles! I just think that that's a ton to lose, and would like to avoid it. So I was just throwing idea out of transferring the entries all down X spaces if this happens, and if it would be worth the CPU time, as I'm predicting this way in general would be pretty high CPU usage, although it would get a &quot;perfect&quot; OAM rotation, too, as long as you use under 65 tiles per frame.<br /><br />So, is it easier/better engine design to just use a different way of processing objects (Like starting with Object 0, then 8, then 4, then 12, then 1, then 9, then 5, then 13, etc.) instead of doing it like this, where we want to put the tiles in a different index that moves in different directions each frame?<br /><br />ETA:Maybe it's easier to decompress to a buffer first, and then handle the OAM spot after the decompression instead of at the same time? That way you can keep priority easy and then also shuffle it easily. Only problem is it adds 2x the data movement from RAM, but it could be worth it if it saves tile space every frame.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Fri Mar 15, 2013 10:14 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Help me decide how to program things. (Sprite Metatiles)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent"><div class="quotetitle">Celius wrote:</div><div class="quotecontent">...sometimes it's better to start over than patch up what you have.</div><br />Sometimes it's better to get your project done than to worry about how elegant the underlying code is.<br /><br />The way 3gengames is assigning sprite memory does not sound like how I would approach the task, but if it's not causing him a problem I don't actually think it's worth expending effort to &quot;fix&quot;. I don't know what his game looks like, or what its needs are. If the needs are already met, the only reason to rework this code is for the learning experience maybe.</div><br /><br />True; I've suffered from both sides of the spectrum. When I started out, my code was such sloppy garbage that I had to start over with everything because it got out of hand. But then after that, I went the polar opposite direction and spent so much time planning that I got barely anything done. I kept asking myself how I could make it perfect and presenting myself with &quot;what if&quot; scenarios so much that I could barely make sense of anything.<br /><br />Much like writing a book, you should have drafts and revisions. And there comes a point where the benefits of perfect code don't make the experience any better for the user. Depends on the situation.<br /><br /><div class="quotetitle">3gengames wrote:</div><div class="quotecontent">But if only one tile of an object with 1 tile displayed and 8 tiles total or so gets put in the decreasing OAM, we lose 7 tiles!<br /></div><br /><br />That is quite a bit. I would focus on finding a way to calculate the amount of tiles needed before getting to the code that writes them. You already have code that handles each tile to not write it if its off screen, right? And the empty tiles will all exist at the end of the reserved segment? If you simply knew how many tiles would be used prior, it would make life a lot easier. The code for getting the count could be a simple loop that calculates tile coordinates and does an INC TileCount if they are on screen. That would be my suggestion.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Fri Mar 15, 2013 5:14 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Help me decide how to program things. (Sprite Metatiles)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Well, the metasprite is compressed, so it's not really doable to decide before hand, so I was thinking of having two different engines. Have the engines be used if it's increasing, or decreasing. If decreasing, it'll write to a buffer. If not, it'll write to OAM directly. I think that's the best day to go around it, really...hmm...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Mon Mar 18, 2013 10:00 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Help me decide how to program things. (Sprite Metatiles)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I guess that would work. It would likely reduce complexity to just be able to copy it all over in the end, and ultimately save time. I figure a simple loop to copy the data over from the buffer to the sprite page one sprite at a time would take about 40 cycles per iteration. Any other work around would need to perform better than that. Plus, that loop could be pretty small, so it might be worth it to go this route.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Mon Mar 18, 2013 10:20 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Help me decide how to program things. (Sprite Metatiles)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yep, basically I chose to reserve an array of (MaxTilesUsed) for an array. Every time I store a tile, the STA is either STA Buffer,X or STA SpritePage,X. Then store the X index used back until we store the next tile after decode. Then when it's all done, if it's the first index, it's perfect. Nothing needs to be done. But if it's index one, I'm just going to use an X index into buffer loop to write the buffer to Y. With that, writing the sprite data backwards, it'll be written forwards to the sprite page, keeping the sprite tiles index! So I'll program it, and when it's all debugged and 100%, I'll post the source. Odds are this will be less than 256 lines. Probably more if you add more complex &quot;commands&quot; you add to the system, I'm only using 4 of 8 right now. But I'll post back when I get it done, it'll be a while, but it'll be done well.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Movax12</b> [ Mon Mar 18, 2013 11:26 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Help me decide how to program things. (Sprite Metatiles)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I was going to create a new thread, but seems best to keep the discussion in a current active thread.<br /><br />Right now I am working on the same kind of thing, but I would like the meta-sprite engine/code to handle clipping at screen edges so a meta sprite can scroll off screen without wrapping. How do you (plan to) handle that? The best I've come up with is to have a 8th bit for the meta-sprite screen coords. This means for example that I you could imagine the screen is 512 pixels wide which results in 128 'pixels' of off-screen on either side of the actual and then clip (skip copy to OAM) if the tile to be drawn falls in that range.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Mon Mar 18, 2013 11:32 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Help me decide how to program things. (Sprite Metatiles)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />My idea is to take the coords of the sprite. A sprite without flipping will ALWAYS be on the good side of the screen (0 to FF, no wrapping) but when a sprite is moved in any way, I calculate if it's on or off the screen. First one is the flipping X/Y coord changes, or the base value on/off screen flags. I put those in to a flag that looks like YX00.0000. A 1 in any spot means the result was off the screen. Then I shift right twice so it's 00YX.0000. Every time the X or Y coord switches sides of the screen, the flag gets set. The first two are if it switches sides of the screen in any way at all, not just going off the screen. So the flags then look like YX<strong>YX</strong>.0000 with the highest being the movement off the base screen and the bold being the &quot;base&quot; on/off the screen values. I will then LDA with that flag byte, shift it left twice so the YX values line up, and then EOR with the sprite flag, and then AND #%11000000. If it's not zero, the sprite isn't displayed because either the X or Y coord are off the screen. If it started off the screen, then came on, it would be 1,1 which then goes to 0 so that's how it works.<br /><br />At least this is the plan, haven't gotten that far yet, but that's how I fully plan on doing it. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /> If it doesn't make sense, I'll explain it again. I explain much better 2nd time around.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>