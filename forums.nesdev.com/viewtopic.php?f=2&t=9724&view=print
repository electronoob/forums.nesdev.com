<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - New efficient metasprite format</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">New efficient metasprite format</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=9724">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=9724</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Mon Jan 21, 2013 6:01 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>New efficient metasprite format</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'm about to implement a new metasprite format that increases the efficicency of coding sprites dramatically, as suggested by Drag.<br /><br />It is backwards compatible with the old format, so that when I implement it I can slowly change my sprites and test them ones after eachother without having all the &quot;not yet converted to new format&quot; ones display as garbage.<br /><br />I don't know but I feel like it should be possible to improve it even further. Like by using the rarely used priority bit for compression.<br />Anyhow, here is the format :<br /><br />1) 1st sprite is NEVER compressed<br />2) Extra bits in the attribute byte specify how the *next* sprite is compressed, as follows :<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">** THIS IS DEPREDATED -- SEE MY LATER POST FOR A BETTER VARIANT **<br /><br />yyyyyyyy --- Sprite Y coordinate (ommited if compression 1, 2, 3, 5, 6, 7)<br /><br />vhbcccpp --- Attribute byte (always)<br />||||||||<br />||||||++---- Sprite Colour<br />|||+++------ Compression bits : 000 - next sprite is not compressed (next has : Y, AT, Tile, X)<br />|||&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;001 - next sprite has X coordinate = current X + 8, and Y = current Y (next has : AT, Tile)<br />|||&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;010 - next sprite has Y coordinate = current Y + 8 (next has : AT, Tile, X)<br />|||&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;011 - next sprite has Y coordinate = current Y + 8, and X = first sprite's X (next has : AT, Tile)<br />|||&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;100 - this is the last sprite of the metasprite (no next sprite)<br />|||&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;101 - same as 001, with tile # = current tile # + 1 (next has : AT)<br />|||&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;110 - same as 010, with tile # = current tile # + 16 (next has : AT, X)<br />|||&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;111 - same as 011, with tile # = current tile # + 1 (next has : AT)<br />||+--------- Behind BG : If set, the sprite is behind background<br />|+---------- Horizontal flipping<br />+----------- Vertical flipping<br /><br />tttttttt --- Tile number (ommited if compression 5, 6, 7)<br /><br />xxxxxxxx --- Sprite X coordinate (ommited if compression 1, 3, 5, 7)<br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Mon Jan 21, 2013 6:36 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: New efficient metasprite format</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Interesting idea, metasprites will probably compress very well with this. There's a trade-off though, interpreting the metasprite definitions will take significantly longer.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Mon Jan 21, 2013 6:48 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: New efficient metasprite format</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Sure, especially since I'll have to first decompress from this format to the &quot;regular&quot; 4-byte format, and then process the metasprite in OAM. Because of sprite cycling, currently I have a routine that mazes sprites &quot;forwards&quot; or &quot;backwards&quot;.<br /><br />Now since we don't know the total # of sprites before decoding it, and since each sprite has a variable # of bytes, it's impossible to draw it &quot;backwards&quot; without decompressing it first, so either I decompress all my sprites each time, or I have to give up sprite cycling (which is a bad idea).<br /><br />Now if I use the normally unused priority bit, I could come up with 14 different predictions for the next sprite (instead of only 6), but I don't know how I could come up with so many predictions, haha. I guess I'll have to take a closer look at my sprites' pattern and see what comes regularly.<br /><br />EDIT : Oh I know, instead of having 14 predictions, I should allow to make runs or combos of the same prediction. For example, if the next 2 sprites are aligned horizontally and are increasing tile numbers, I could store them by prediction. This way I could have 3 or 4 sprites in only 4 bytes ! (and without refraining to have the freedom to arrange my sprites as I like, unlike SMB which forces a simple rectangular pattern for enemy sprites)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Mon Jan 21, 2013 7:30 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: New efficient metasprite format</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">Sure, especially since I'll have to first decompress from this format to the &quot;regular&quot; 4-byte format, and then process the metasprite in OAM. Because of sprite cycling, currently I have a routine that mazes sprites &quot;forwards&quot; or &quot;backwards&quot;.</div><br />Personally, I prefer to handle sprite cycling as they are output to the OAM mirror, but interpreting all the different compression combinations should still take a while.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Now since we don't know the total # of sprites before decoding it, and since each sprite has a variable # of bytes, it's impossible to draw it &quot;backwards&quot; without decompressing it first, so either I decompress all my sprites each time, or I have to give up sprite cycling (which is a bad idea).</div><br />Yeah, not knowing the number of sprites could be a problem. If the priorities between the sprites of the same metasprite don't matter, you could just render the sprites in the &quot;top layer&quot; from slot 0 up and the sprites in the &quot;bottom layer&quot; from slot 63 down, without the need to know how many sprites each metasprite has. Later you could maze each half or just randomize the order in which objects are drawn.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Now if I use the normally unused priority bit</div><br />&quot;Normally unused&quot; is very relative... You may not use it frequently, but I sure take it into consideration every time I start designing a game.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Mon Jan 21, 2013 7:50 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: New efficient metasprite format</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Personally, I prefer to handle sprite cycling as they are output to the OAM mirror, but interpreting all the different compression combinations should still take a while.</div><br />Yes, but my game has a top-down view, and sprite priorities are important, as they are part of the view, unless the completely bidimentional platformers.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Yeah, not knowing the number of sprites could be a problem. If the priorities between the sprites of the same metasprite don't matter, you could just render the sprites in the &quot;top layer&quot; from slot 0 up and the sprites in the &quot;bottom layer&quot; from slot 63 down, without the need to know how many sprites each metasprite has</div><br />I don't use sprite multi-layering (because I'd end up with flickering sprites and I don't want that), and the idea to go backwards in memory is good, but it will also reverse the priorities... so I'd have to sort my priorities backwards, and then maze the sprites forwards, but by going backwards in memory... could be an interesting alternative.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">&quot;Normally unused&quot; is very relative... You may not use it frequently, but I sure take it into consideration every time I start designing a game.</div><br />Currently I only use it for sprite zero hits, and they are mazed separately from other sprites of the game. But if I ever wanted to use this bit I could still do it while using it for compression - I have a global variable that is XOR-ed with the attribute bytes when mazing a metasprite. It was normally meant for palette swapping enemies (without re-defining their metasprites of course !). But if I set this global variable to $20 I could still force objects to be behind BG. I don't think I'll want to do this, but I could, so it's not like this bit is lost. It's just that it will remove the feature to have sprites above and blow BG in the same metasprite, and I don't think this could ever be put to good use, at least not in a simple game like mine.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Drag</b> [ Tue Jan 22, 2013 12:50 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: New efficient metasprite format</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />With the priority bit, I don't think it's common to have a metasprite where the individual tiles have seperate priorities, so you could probably throw out the priority bit, and apply the priority to the metasprite as a whole.<br /><br />Edit: So yeah, exactly what you said. <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Tue Jan 22, 2013 5:23 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: New efficient metasprite format</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You guys have a valid point about the priority bit. It can be used for compression because the same priority can be applied to the whole metasprite.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Tue Jan 22, 2013 1:01 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: New efficient metasprite format</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I thought the point was to just copy the attributes byte into the OAM unchanged, so that's why you have the bits exactly matching up.<br />Anyway, when I was making metasprites, I had the option available to OR/XOR the attributes byte with something else, so you could easily make palette-swapped sprites.  Maybe you could handle flipped versions of sprites and stuff that way, treat the flip flag in the attributes byte as a request for a flipped version of the metasprite, and change the X/Y advance depending on flip flags.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Tue Jan 22, 2013 1:20 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: New efficient metasprite format</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />IMO, you could use a $08 or $FA value in RAM and add it to the sprite when the X location is changed and just add that, so if it's reverse, the engine will change 1 value and continue like normal. Same with vertical flips. When it puts the attribute for the sprite to the screen, it then just could OR with the RAM for the object and have everything set up correctly.<br /><br />You could also have a &quot;header&quot; byte in the data to tell other stuff, like pallet used (4 bits, only use one bit of the pallet info in the sprite data to select which it is assigned). Then, you could have a RAM byte in the object to set global entity attributes like the flips and priority. For 1 byte of RAM and 1 of ROM, you get lots of more options for each sprite so it seems viable to me:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">RAM for object: VHP0.0000 ;VPH are in the object data for that character. All 0's can be used by other stuff.<br />Header byte: ****.ppPP ;Extra 4 bits are unused. PP means the most used pallet, pp is the secondary pallet.<br /><br />yyyyyyyy --- Sprite Y coordinate (ommited if compression 1, 2, 3, 5, 6, 7) ;Same<br /><br />ccccccpp --- Attribute byte (always)<br />||||||||<br />||||||++---- Sprite Colour<br />++++++------- Compression bits : ***000 - next sprite is not compressed (next has : Y, AT, Tile, X)<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 001 - next sprite has X coordinate = current X + 8, and Y = current Y (next has : AT, Tile)<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 010 - next sprite has Y coordinate = current Y + 8 (next has : AT, Tile, X)<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 011 - next sprite has Y coordinate = current Y + 8, and X = first sprite's X (next has : AT, Tile)<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 100 - this is the last sprite of the metasprite (no next sprite)<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 101 - same as 001, with tile # = current tile # + 1 (next has : AT)<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 110 - same as 010, with tile # = current tile # + 16 (next has : AT, X)<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 111 - same as 011, with tile # = current tile # + 1 (next has : AT)<br /><br /><br /><br />tttttttt --- Tile number (ommited if compression 5, 6, 7)<br /><br />xxxxxxxx --- Sprite X coordinate (ommited if compression 1, 3, 5, 7)<br /></div><br /><br />Don't wanna rewrite it, but I'll give you that idea to mess with and see if you would like to extend on that idea. Honestly, I'm writing an animation engine with metasprites (well, I have the loader done, the actual engine needs written) But I'll probably use something like I posted in this message.<br /><br />ETA: If you flip a sprite any unused bits on the inner side will cause a (unusepixel*2) movement when flipped the other way. You could use the unused header bits as two 2-bit values for XUnused*(1,2,4 however many pixels best fits your sprites) and same for the Y. YUnused*(1 or 2 or 4) and then just add to the number when flipping.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Tue Jan 22, 2013 3:25 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: New efficient metasprite format</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Dwedit wrote:</div><div class="quotecontent">I thought the point was to just copy the attributes byte into the OAM unchanged, so that's why you have the bits exactly matching up.</div><br />That is better, but even if you do some manipulation, having most bits in the correct places still helps.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I had the option available to OR/XOR the attributes byte with something else, so you could easily make palette-swapped sprites.</div><br />I do that too. The function that draws metasprites takes a byte that it XORs with the attributes of every sprite.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Maybe you could handle flipped versions of sprites and stuff that way, treat the flip flag in the attributes byte as a request for a flipped version of the metasprite</div><br />I do exactly that. The individual sprites of the metasprite can have different flipping configurations (think standing big Mario from SMB1, who has a mirrored body), but the flipping bits in the modifier byte (the one that's XORed) are treated as requests to flip the metasprite, and they conveniently toggle the default flipping bits of each sprite.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">and change the X/Y advance depending on flip flags.</div><br />Yes, you could easily use those bits to define the increment values in RAM.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bisqwit</b> [ Mon Feb 25, 2013 5:15 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: New efficient metasprite format</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />How would you suggest as for inter-metasprite compression?<br />For example, when an actor has two animation frames, and the lower portion in both frames is identical.<br />Or when you have an actor that is identical to another actor, except for a palette swap.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Sik</b> [ Mon Feb 25, 2013 6:57 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: New efficient metasprite format</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bisqwit wrote:</div><div class="quotecontent">Or when you have an actor that is identical to another actor, except for a palette swap.</div><br />You would most likely just pass it as a parameter to the subroutine and let it modify the palette on the fly. Then you reuse the same metasprite. You can even use it for stuff like e.g. the starman effect in Mario without much effort (Battle City also uses this for coloring enemies with more than 1HP left, those alternate between two palettes every frame).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Mon Feb 25, 2013 8:20 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: New efficient metasprite format</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Palette swap is easy: use a modifier byte that's EORed against the attribute byte of each sprite. This allows not only palette swaps, but also X/Y flipping and priority control.<br /><br />Reusing parts of other metasprites is trickier... Maybe you could have a special code that acts like a JSR of sorts for metasprites, so you can &quot;call&quot; parts that are shared between metasprites. Or maybe you can allow animation frames to have more than 1 metasprite, so you can combine smaller metasprites as necessary. I don't think this is worth it though.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Sik</b> [ Tue Feb 26, 2013 12:16 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: New efficient metasprite format</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">Palette swap is easy: use a modifier byte that's EORed against the attribute byte of each sprite. This allows not only palette swaps, but also X/Y flipping and priority control.</div><br />Flipping is not as trivial since you also need to modify the coordinates of the sprites. It's a good starting point for that goal, though.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Tue Feb 26, 2013 12:26 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: New efficient metasprite format</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />For the multiple sprites, you can put the palette data with the CPU RAM attributes base byte for said sprite. Make the pallet 3 bites. If the 3rd new bit is modified, modify the attributes used to upload that one metasprite, and have everything else function as normal, and treat attributes with only 2 bits used as additions to the base 2 bits used for the global version. That wouldn't work too well using the same metasprite if you have palette 3 shared overlays and palette 1+2 the main colors for said characters as it would try to add and add to slot 4 not 3 like the base metasprite, but it's a beginning to an idea.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>