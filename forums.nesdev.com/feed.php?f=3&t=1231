<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=3&amp;t=1231" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2006-03-16T16:44:01-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=3&amp;t=1231</id>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2006-03-16T16:44:01-07:00</updated>
<published>2006-03-16T16:44:01-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1231&amp;p=10895#p10895</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1231&amp;p=10895#p10895"/>
<title type="html"><![CDATA[Misc questions (mainly PPU related)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1231&amp;p=10895#p10895"><![CDATA[
So $2007 reads/writes during rendering will pretty much have unpredictable results (due to $2007 conflicting with the PPU's accesses).  Excellent.<br /><br />Very informative guys -- thanks ^^<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Thu Mar 16, 2006 4:44 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Quietust]]></name></author>
<updated>2006-03-16T16:19:03-07:00</updated>
<published>2006-03-16T16:19:03-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1231&amp;p=10894#p10894</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1231&amp;p=10894#p10894"/>
<title type="html"><![CDATA[Misc questions (mainly PPU related)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1231&amp;p=10894#p10894"><![CDATA[
Ah, I forgot to elaborate on the $2007-during-rendering results.<br /><br />Basically, both the "$2007 I/O" <strong>and</strong> the renderer attempt to control the A/D, /RD, /WR, and /ALE signals simultaneously. As a result, accessing $2007 during rendering can result in attempting to simultaneously latch the address AND read data (in which case the read data falls into the address latch and causes different data to appear, pretty much randomizing it), latch the address and WRITE DATA (in which case it'll likely write to 2 locations at once - the original location, and a new location which has the lower address 8 bits replaced with the data), or even attempt to read and write simultaneously (which most RAM chips will just treat as a write to whatever address managed to be emitted).<br /><br />In any case, it's very messed up.<br /><br /><br />10. I don't know - I've never tried it before.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7">Quietust</a> — Thu Mar 16, 2006 4:19 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2006-03-16T15:33:09-07:00</updated>
<published>2006-03-16T15:33:09-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1231&amp;p=10892#p10892</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1231&amp;p=10892#p10892"/>
<title type="html"><![CDATA[Misc questions (mainly PPU related)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1231&amp;p=10892#p10892"><![CDATA[
@ Fx3:<br /><br />yeah, I actually start emulation (from reset) ~10 scanlines from the end of VBlank with $2002.7 high immediately.  This seems to iron out all those games which use DMC IRQs but never disable APU Frame IRQs (Cobra Triangle, Time Lord, others).<br /><br />I remember having a pickle of a time getting both Cobra Triangle and Time Lord working.  For a while I would fix one, only to have the other one break and vice versa.  The above starting time seems to work with both of them though.<br /><br /><br />@ blargg:<br /><br />I think I see what you're saying.  So it basically just takes a cycle for the interrupt to "register" with the CPU... or something like that (I know that's not worded right...)?  That kinda makes sense.<br /><br /><br /><br />One more question I can't believe I didn't ask before:<br /><br />10)  Is $2003 writable during rendering?  Would it be possible to have two (or more) sprites be rendered as Sprite 0 in the same frame by changing $2003 midframe and relying on that weird sprite quirk?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Thu Mar 16, 2006 3:33 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2006-03-16T14:51:27-07:00</updated>
<published>2006-03-16T14:51:27-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1231&amp;p=10890#p10890</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1231&amp;p=10890#p10890"/>
<title type="html"><![CDATA[Misc questions (mainly PPU related)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1231&amp;p=10890#p10890"><![CDATA[
As far as I understand it, the NMI and IRQ lines are latched during the last clock of an instruction, meaning that the value present just before the last block begins is what is used. This means that an instruction which causes them to be asserted during its last cycle won't result in an interrupt until after the next instruction executes. No delays, just the detail of when the value is sampled. I'm not an expert in digital electronics, but I think this is all due to designing things using clocked logic, which results in general structures resembling a pipeline. When things get clocked they use the value that was present just before the clock, so each stage adds one clock of latency from input to output.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Thu Mar 16, 2006 2:51 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Zepper]]></name></author>
<updated>2006-03-16T14:49:41-07:00</updated>
<published>2006-03-16T14:49:41-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1231&amp;p=10889#p10889</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1231&amp;p=10889#p10889"/>
<title type="html"><![CDATA[Misc questions (mainly PPU related)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1231&amp;p=10889#p10889"><![CDATA[
Not to go offtopic, but I fixed Cobra Triangle by making 2002:80h high on emulation startup. I already had traced the code, and PPU/CPU <strong>were</strong> in sync- all the events in the test ROMs were occuring at exact pre-defined time, so something was wrong, other than merely CPU/PPU sync. I guess you relie here...<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=39">Zepper</a> — Thu Mar 16, 2006 2:49 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2006-03-16T14:25:53-07:00</updated>
<published>2006-03-16T14:25:53-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1231&amp;p=10886#p10886</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1231&amp;p=10886#p10886"/>
<title type="html"><![CDATA[Misc questions (mainly PPU related)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1231&amp;p=10886#p10886"><![CDATA[
Awesome.  Thanks a bunch Q ^^<br /><br />1, 2)  "See below" where?  Did you leave out part of your post?<br /><br />3)  I wish I could remember the names one of those games... I think one was a Donkey Kong Country pirate cart.  It did the following which gave me difficulty when emulating $4014 as you describe:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">LDA #$00<br />STA $2003  ; set spr address to 00<br />...<br />STA $2004  ; spr address now 01<br />...<br />STA $4014  ; sprite data to be DMA'd 1 byte off<br /></div><br /><br />After the initial $2003 and $2004 writes, the game never touched either register again... leaving the sprite address at $01.. completely botching all the DMA'd sprite data.  It worked once I had DMA start right at OAM[0] rather than OAM[reg_2003].. but that seems like the wrong thing to do.<br /><br />Is there another, more preferable solution to this problem?<br /><br /><br />5)  So if the $2004 write occurs during rendering it's completely ignored?  Maybe that would solve my above problem... perhaps its doing it's weird $2004 write during rendering....  I'll have to look at that more once I find that game again.<br /><br /><br />7)  This was sort of two questions that revolved around the same idea.<br /><br />Firstly, the Lolo series does something weird like:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">LDA #$80<br />STA $2000<br />STA $34<br /></div><br />which triggers an NMI ($2000.7 was previously low, and $2002.7 is high at the time of the write).  However if you trip the NMI after the $2000 write the game will dead-lock.  The NMI needs to be tripped after the $34 write.<br /><br />Now I've heard around the grapevine (can't remember where exactly -- maybe from Hyde?) that this is because there's some slight delay between when an NMI is triggered and when it actually trips.  Just something really small like 1 PPU cycle.  That 1 cycle would give the CPU enough time to run 1 more instruction before being interrupted with an NMI (solving the Lolo problem).<br /><br />And I've ALSO heard that this delay applies to normally triggered NMIs as well.  That an NMI doesn't trip until at least 1 PPU cycle <em>after</em> $2002.7 goes high (not at the same time).<br /><br />Is this true?<br /><br /><br />Thanks for the speedy and helpful response Q ^^.  Much appreciated.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Thu Mar 16, 2006 2:25 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Quietust]]></name></author>
<updated>2006-03-16T13:38:03-07:00</updated>
<published>2006-03-16T13:38:03-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1231&amp;p=10880#p10880</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1231&amp;p=10880#p10880"/>
<title type="html"><![CDATA[Misc questions (mainly PPU related)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1231&amp;p=10880#p10880"><![CDATA[
1. The read buffer will be filled with <strong>semi-random</strong> data, and it will mess up the VRAM address. See below.<br /><br />2. Semi-random data will be written. The actual address is tricky, though. See below.<br /><br />3. $2003 does two things - it specifies where the next $2004 (and $4014) write will go, and it has some sort of effect on the first two sprites.<br /><br />4. This is correct, though the exact details are not fully understood. Now that I have a CopyNES, though, I should be able to do some more testing on it.<br /><br />5. No, since the SPR-RAM address ($2003) is not connected while rendering. You <strong>can</strong> read $2004 during rendering, though, and it will reveal the PPU's internal SPR-RAM accesses (incidentally, this is how I figured out the messed-up sprite overflow flag behavior).<br /><br />6. Correct. If you write during VBLANK or when rendering is off, the value $00 will be written instead. An easy way around this is to switch to mode 2 and then do your writing.<br /><br />7. Not sure what you're asking.<br /><br />8. Yes.<br /><br />9. I don't know exactly how PPU cycle offsets figure into synchronization issues.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7">Quietust</a> — Thu Mar 16, 2006 1:38 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2006-03-16T12:15:14-07:00</updated>
<published>2006-03-16T12:15:14-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1231&amp;p=10875#p10875</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1231&amp;p=10875#p10875"/>
<title type="html"><![CDATA[Misc questions (mainly PPU related)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1231&amp;p=10875#p10875"><![CDATA[
Hi Hi -- recently went back to putzing around on my emu after a long break.  There are quite a few questions whose answers still escape me.  Any help with any of them would be appreciated.  ^^<br /><br /><br />1)  Regarding reading $2007 during rendering -- I'm assuming you'll get the read buffer returned... but will the read buffer be re-filled with appropriate data?  I'd assume not since the PPU is busy spending all of its time fetching bytes for rendering (or at least if it is eventually re-filled.. it won't be until rendering is complete).  Also, I'd assume that reading $2007 at this time <em>would</em> muck up the PPU address and affect rendering, yes?<br /><br />2)  Similar question for $2007 writes during rendering.  Do they go anywhere?  Or are they lost?  PPU address still changes, I'd assume.<br /><br />3)  Does $2003 have any significance other than interacting with $2004 and that weird sprite 0,1 quirk (see question #4)?  Does $2003 have any impact on $4014?  I've seen games write $01 to $2003, then DMA (or write $00 to $2003, write to $2004 incrementing $2003, then DMA) -- but the DMA still seems to start at OAM[0] instead of OAM[1].  Does $2003 affect rendering in any way (aside from the sprite 0,1 quirk)?  Most importantly, can $2003 be changed during rendering?<br /><br />4)  More of a confirmation than a question -- but I've read that sprite data for sprites 0 and 1 are taken from %xxxxx000 (sprite 0) and %xxxxx100 (sprite 1), where xxxxx is the high 5 bits of $2003.  A post on the boards says that information is in the wiki, but I didn't see it anywhere.  Is my understanding correct?<br /><br />5)  Can $2004 be written to during rendering?  I'd assume not since it can't even be properly read.  Ditto for $4014 -- I'd assume that if you DMA during rendering, you'd still lose the 513 cycles, but OAM would not be changed (the writes would be lost).  Is there any time where writing to $2004 <em>won't</em> increment $2003?<br /><br />6)  More of a confirmation:  Regarding MMC5 ExRAM when $5104=00 or 01.    ExRAM can only be written to via $5C00-5FFF <em>during</em> rendering?  Writes during VBlank (or when PPU is off) are lost?<br /><br />7)  NMI seems to take a full PPU cycle to trip (or longer?), right?  NMI occurs the cycle AFTER (or 2 cycles after?) $2002.7 goes high (assuming they're enabled).  And when $2000.7 rises when $2002.7 is high, an NMI is fired at least a full PPU cycle later (leaving the CPU enough time to run one more instruction before being interrupted).  Is that right?<br /><br />8)  Special MMC1 variants, specifically SUROM, need to be set to 8k CHR swap mode or have both CHR reg bits set properly or "bad things" will happen (PRG will be swapping on its own during rendering).  I'd assume that this is caused by different CHR regs being used to select the PRG page at different times -- presumably by A12?<br /><br />For example, say MMC1 reg1 is $00 and reg2 is $11 -- and assuming "normal" pattern table setup (BG uses left, all sprites use right pattern table).  Would this mean that the first 256k would be swapped in during all of rendering except for when sprite tiles are being fetched (when it would quickly toggle between the first and second 256k 8 times)?<br /><br /><br />9)  Last but certainly not least (in fact this is the most important question of all)  -- I was having lots of 1-off errors in some test ROMs with my previous emu.  I think my problem was due to a lack of clear understanding of WHEN (within the cycle) the writes actually take place.<br /><br />For instance..  if the PPU is shut off via a $2001 write on PPU cycle 5 in a scanline... would the PPU be shut off before or after the 6th pixel is rendered?<br /><br />Is it different for reads than it is for writes?  If I read $2002 on the EXACT PPU cycle in which sprite 0 hits -- will I read that bit set?  or will it not be read back as set until the next cycle?<br /><br /><br /><br /><br />That's all of them I think.  Like I said any help at all would be greatly appreciated.  Thanks in advance ^^<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Thu Mar 16, 2006 12:15 pm</p><hr />
]]></content>
</entry>
</feed>