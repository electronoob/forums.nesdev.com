<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Nintendulator Debug Extensions (NintendulatorDX)</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Nintendulator Debug Extensions (NintendulatorDX)</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=6773">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=6773</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>7</strong> of <strong>7</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>qbradq</b> [ Wed Oct 17, 2012 6:23 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Nintendulator Debug Extensions</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'm trying to update my assembler to output version 2.0 debug info files. Can you point me to the documentation on this file format? I've looked at the dbginfo.c file but I can't make heads or tails of what it's doing.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Wed Oct 17, 2012 7:01 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Nintendulator Debug Extensions</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">qbradq wrote:</div><div class="quotecontent">I'm trying to update my assembler to output version 2.0 debug info files. Can you point me to the documentation on this file format? I've looked at the dbginfo.c file but I can't make heads or tails of what it's doing.</div><br />There's no documentation as far as I know. Easiest way to figure it out is probably just to play around with CA65 and see what kind of output it produces for different source inputs.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Sun Oct 28, 2012 11:01 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Nintendulator Debug Extensions</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">thefox wrote:</div><div class="quotecontent">I've started working on bolting Lua support to NintendulatorDX. My vision about it is a little bit different than the way FCEUX handles it. I want to embed Lua code in to the ROM, so that it can be used for 1) runtime asserts 2) prototype code 3) debug output, among other things.</div><br />I've made good progress and I'm pretty happy with how it works now. Couple of examples:<br /><br />Debug output:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.zeropage<br />&nbsp; some_var: .byte 0<br /><br />.proc something<br />&nbsp; lda #$69<br />&nbsp; ; RAM table (for reading/writing bytes) is automatically defined.<br />&nbsp; luaExecStr &quot;print( 'value from memory is ' .. RAM&#91; 0x234 &#93; )&quot;<br />&nbsp; ; RAM table can also be indexed with symbols. Only works for global symbols right now (no scopes, but of course it's always possible to define aliases for scoped variables in CA65).<br />&nbsp; luaExecStr &quot;print( 'value from memory is ' .. RAM.some_var )&quot;<br />&nbsp; luaExecStr &quot;print( string.format( 'A = %X, X = %X, Y = %X', REG.A, REG.X, REG.Y ) )&quot;<br />&nbsp; rts<br />.endproc<br /></div><br />luaExecStr doesn't embed any code/data in the ROM (but it will embed one NOP if requested, as is required in some cases), it works by defining debug symbols for the information it needs and outputting the data in a separate segment, which is then output to a separate file. All of Lua code is executed in 0 cycles, so it's nice for prototyping.<br /><br />Runtime asserts:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; luaExecStr &quot;if RAM.some_var &gt; 50 and REG.A = 0x49 then iup.Message( 'Assert failed', 'Something went wrong' ); NDX.stop() end&quot;<br /></div><br />It's of course possible to define a simpler macro for runtime asserts, which will hide the iup.Message call etc.<br /><br />Prototyping:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">; foo.s (6502 code)<br />.bss<br />ARRAY_SIZE = 100<br />array: .res ARRAY_SIZE<br /><br />.code<br />.proc gahh<br />&nbsp; luaExecFile &quot;gahh-proto.lua&quot;<br />&nbsp; rts<br />.endproc<br /><br />-- gahh-proto.lua (Lua code)<br />-- Fill &quot;array&quot; with something.<br />array_addr = SYM.array&#91; 1 &#93;<br />for i = 0, SYM.ARRAY_SIZE&#91; 1 &#93; - 1 do<br />&nbsp; RAM&#91; array_addr + i &#93; = i + 123<br />end<br /></div><br />IUP GUI toolkit is also included by default. It can be used to implement custom debug dialogs:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">-- Lua code<br />ctl = iup.label { title=&quot;something&quot;, expand=&quot;YES&quot; }<br />dlg = iup.dialog { ctl, title=&quot;Debug Helper&quot;, size=&quot;200x200&quot; }<br />dlg:show()<br /><br />; 6502 code<br />luaExecStr &quot;ctl.title = string.format( 'some_var is %X', RAM.some_var )&quot;<br /></div><br />Functions currently exported from the emulator:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NDX.getPPUCycles<br />NDX.setRegister<br />NDX.print -- For printing to the Nintendulator Debug Information window, normal print() prints to the Lua console<br />NDX.getRegister<br />NDX.writeRAM<br />NDX.getCPUCycles<br />NDX.stop<br />NDX.readRAM<br />NDX.getSymbols<br /></div><br />Eventually I hope to add support for &quot;stand alone&quot; Lua scripts (like in FCEUX), which don't need to be executed from within the code.<br /><br />Now I just need a new project which I can use all of these features on. <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" /> BTW, release will come some time later, my repo got corrupted so I need to set up the source control again to make it easy to merge stuff from the official Nintendulator SVN repo.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Thu Nov 01, 2012 8:22 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Nintendulator Debug Extensions</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">thefox wrote:</div><div class="quotecontent">Eventually I hope to add support for &quot;stand alone&quot; Lua scripts (like in FCEUX), which don't need to be executed from within the code.</div><br />Did that too. Also added support for CD (Canvas Draw) graphics library, as well as an ability to overlay graphics generated with it on top of the emulated view. Then I wrote a little FCEUX compatiblity module (incomplete) and ported over some of the Lua scripts from FCEUX, like SMB Snow and miau's Megaman 2 Laser Eyes. Cool, cool, should be done soon.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>qbradq</b> [ Fri Nov 02, 2012 4:09 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Nintendulator Debug Extensions</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You never cease to astound <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /><br /><br />What's inspiring all of the Lua work fox? Is there a project you're working on that's using it?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Movax12</b> [ Fri Nov 02, 2012 7:56 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Nintendulator Debug Extensions</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />This is awesome and I'm excited to use these new debugging features.<br /><br />I assume you could define a breakpoint with something like:   luaExecStr &quot;print( 'Breakpoint encountered.'); NDX.stop() end&quot;<br /><br />With no code being output to your nes code/rom?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Fri Nov 02, 2012 9:54 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Nintendulator Debug Extensions</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">qbradq wrote:</div><div class="quotecontent">You never cease to astound <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /><br /><br />What's inspiring all of the Lua work fox? Is there a project you're working on that's using it?</div><br />Thanks! As to why, I was bored and decided it was a good time to learn some Lua. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /> But all of this will certainly come in handy in future projects. I wish I had had something like this when working on STREEMERZ.<br /><br /><div class="quotetitle">Movax12 wrote:</div><div class="quotecontent">I assume you could define a breakpoint with something like:   luaExecStr &quot;print( 'Breakpoint encountered.'); NDX.stop() end&quot;<br /><br />With no code being output to your nes code/rom?</div><br />Yes. The macro outputs the string to a special segment, which is redirected to another file (I use extension .ndx for these). There's one case when it's necessary to output one NOP though:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">; Display a message when some condition happens:<br />lda foo<br />beq not_foo<br />&nbsp; ; The emulator uses addresses (and banking information) to identify these, so<br />&nbsp; ; if luaExecStr/luaExecFile is the very last thing before the condition label, it<br />&nbsp; ; needs to output one NOP, so that its address is not the same as &quot;not_foo&quot;.<br />&nbsp; luaExecStr &quot;print( 'foo happened' )&quot;, 1<br />not_foo:<br /></div><br /><br />Of course, at least in some cases it's possible to implement the above check like this too, avoiding the NOP:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">; NOTE: In Lua, all numbers evaluate as true, so have to explicitly check for non-zero.<br />luaExecStr &quot;if RAM.foo &gt; 0 then print( 'foo happened' ) end&quot;<br /></div><br /><br />All of this stuff only works in CA65 of course, and only with debug file enabled. (I could make it work universally by using a special register write, like the debug output feature currently does, but that's low priority.)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>qbradq</b> [ Tue Nov 06, 2012 6:18 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Nintendulator Debug Extensions</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I've made a test ROM for TNROM boards configured with 32KB of VRAM (<a href="https://sites.google.com/site/qbradq/projects-1/tnrom32test" class="postlink">link</a>). I've found that I needed to build the mappers from SVN to get it to work. Have you considered updating your mappers to the latest SVN?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Tue Nov 06, 2012 7:33 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Nintendulator Debug Extensions</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">qbradq wrote:</div><div class="quotecontent">I've made a test ROM for TNROM boards configured with 32KB of VRAM (<a href="https://sites.google.com/site/qbradq/projects-1/tnrom32test" class="postlink">link</a>). I've found that I needed to build the mappers from SVN to get it to work. Have you considered updating your mappers to the latest SVN?</div><br />Ah I didn't know about, in fact I remember requesting &gt;8KB CHR-RAM support for MMC3 from Quietust <s>but didn&#39;t get a reply &#40;but looks like he implemented it after all&#41;</s> (<em>correction: I misremembered, he did reply, and implemented the support not long after the reply, unknown to me</em>). But yeah, I'll add the updated mappers to the upcoming release.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>qbradq</b> [ Tue Nov 06, 2012 7:51 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Nintendulator Debug Extensions</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The MMC3 code appears to support 256 1K RAM banks now, although I only tested 32KB. Glad to hear it'll be in the next release <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Thu Nov 08, 2012 7:09 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Nintendulator Debug Extensions</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Well, I decided to release v34. It's not perfect, but I'm done with tinkering. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br />Download from <span style="font-size: 150%; line-height: normal"><a href="http://kkfos.aspekt.fi/downloads/nintendulatordx-v34.zip" class="postlink">HERE</a></span>.<br /><br />New stuff:<br />- Lua scripting<br />- Banking support for profiling<br />- Debug breakpoints (write to a magic register or call ndxDebugBreak macro to stop the emulator)<br />- Better documentation<br />- Feature demo for CA65<br />- Mappers updated to the latest version from SVN<br />- Source moved to gitorious (<!-- m --><a class="postlink" href="https://gitorious.org/nintendulatordx">https://gitorious.org/nintendulatordx</a><!-- m -->)<br /><br />As usual, if you find anything wrong in the docs (wrote them in a hurry) or anywhere else, let me know. The Lua-emulator thread synchronization is still a bit iffy (should work, but the user has to know what he/she is doing).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Thu Feb 26, 2015 9:11 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Nintendulator Debug Extensions (NintendulatorDX)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Decided to put together v35. It has a bunch of old changes that I couldn't bother to merge to the public repository. From now on I'll probably be updating only the public repository.<br /><br />The changes:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; * &quot;Expand macros&quot; option.<br />&nbsp; * CA65 debug header no longer tramples over custom character mappings.<br />&nbsp; * Absolute file paths can be used in debug files.<br />&nbsp; * Bug fixed from dbginfo.c that caused some (rare) debug files not to<br />&nbsp; be loaded.<br />&nbsp; * readMemory() function added to the Lua interface.<br />&nbsp; * Latest updates from the main Nintendulator repo integrated.<br />&nbsp; * Warnings are given for uninitialized PRG-RAM accesses.<br />&nbsp; * Memory can be randomized on power-on.<br />&nbsp; * Lua, CD and IUP updated to the latest versions.<br />&nbsp; * Updated project to Visual Studio 2013.<br />&nbsp; * Added limited PowerPak hardware emulation (requires recompilation).<br />&nbsp; * Diagnostic message is shown if PPU_DATA is written to during rendering.<br />&nbsp; * NTSC NES borders are displayed.<br /></div><br />Download from the usual place: <!-- m --><a class="postlink" href="http://kkfos.aspekt.fi/projects/nes/tools/nintendulatordx/">http://kkfos.aspekt.fi/projects/nes/too ... dulatordx/</a><!-- m --><br />The git repository was moved to GitHub: <!-- m --><a class="postlink" href="https://github.com/fo-fo/nintendulatordx">https://github.com/fo-fo/nintendulatordx</a><!-- m -->

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>GradualGames</b> [ Sat Feb 28, 2015 9:52 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Nintendulator Debug Extensions (NintendulatorDX)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />By expand macros, does this mean in the code view in the debugger you will see the macro expanded in place, so you can see the context of the surrounding code? I recall in previous versions it would &quot;jump&quot; to the macro in the code. If this is what you've improved, then awesome, thanks!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Sat Feb 28, 2015 11:14 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Nintendulator Debug Extensions (NintendulatorDX)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">GradualGames wrote:</div><div class="quotecontent">By expand macros, does this mean in the code view in the debugger you will see the macro expanded in place, so you can see the context of the surrounding code? I recall in previous versions it would &quot;jump&quot; to the macro in the code. If this is what you've improved, then awesome, thanks!</div><br />Not quite like that, but maybe sort of similar if I understood you right. When the option is turned on, the behavior is same as in previous versions. When the option is off, NDX will stay at the highest possible level and not display macro contents (previously it'd go as deep into macros as possible).<br /><br />It probably should have an option to set the desired depth. At the moment it will reset the depth on every step. (Fortunately I think most people would be usually interested only in the highest <em>or</em> the lowest depth).

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>7</strong> of <strong>7</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>