<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=10&amp;t=10303" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2013-07-21T17:49:48-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=10&amp;t=10303</id>
<entry>
<author><name><![CDATA[koitsu]]></name></author>
<updated>2013-07-21T17:49:48-07:00</updated>
<published>2013-07-21T17:49:48-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10303&amp;p=115466#p115466</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10303&amp;p=115466#p115466"/>
<title type="html"><![CDATA[Re: Now what?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10303&amp;p=115466#p115466"><![CDATA[
I took about 15 minutes today to write this for you.  It should get you started using mapper #0.  No graphics or anything else are added here (you're going to need some); this is just purely to get you set up/going, and is commented decently for starters (I put Wiki references within the comments).<br /><br />Assembling this is simple -- <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">asm6 code.asm code.nes</tt> -- which will result in a file called <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">code.nes</tt> being made.<br /><br />Do not expect to &quot;see&quot; anything on-screen if loaded into an emulator -- there are no graphics added (no CHR data), there is no code to set up the nametables or attribute tables, nor turning on the screen, setting up mirroring, etc..  If you want something that does all that... well, just see the comments in the file.  I can give you something simple if you want to see that.<br /><br />I would recommend using an emulator with a debugger for learning things, by the way.  Good choices are a recent version of FCEUX or Nintendulator.  If you want to see this code run each instruction, run FCEUX, enter the debugger, and add a breakpoint for read/write/execute at address 8000, then load <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">code.nes</tt>.  You'll see the CPU stop immediately at $8000 (which is where your code starts -- it's where the reset vector points to) and you can then step through each instruction's execution using Step Into and see the CPU do its thing.  It's not exciting visually because, as I said, no &quot;graphically-related&quot; stuff is being done here so all you'll see in FCEUX is a grey screen, but you'll see in the debugger the code that correlates with <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">code.asm</tt>.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3">koitsu</a> — Sun Jul 21, 2013 5:49 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[koitsu]]></name></author>
<updated>2013-07-21T16:38:03-07:00</updated>
<published>2013-07-21T16:38:03-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10303&amp;p=115459#p115459</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10303&amp;p=115459#p115459"/>
<title type="html"><![CDATA[Re: Now what?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10303&amp;p=115459#p115459"><![CDATA[
Okay, so then can you show the batch file?  I get the impression you're maybe a little reluctant to show what you have in fear of backlash or scrutiny from the community -- don't be!<br /><br />To make this simple, you're either going to need to:<br /><br />1. Make a separate file (example: header.bin) that contains the 16-byte NES header, and then prepend that onto the results of your assembled source code, with the resulting file being named with a .nes extension (i.e. <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">asm6 filename.asm filename.bin</tt>, then <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">copy /b header.bin+filename.bin filename.nes</tt> -- all of this can be done within the batch file itself) -- or...<br /><br />2. Define the 16-byte NES header within your assembly file yourself (at the very top), i.e. what Dwedit posted earlier.  You can then use asm6 to assemble your code directly into a .nes file (e.g. <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">asm6 filename.asm filename.nes</tt>).  Just understand that all the pseudo-op directives are doing are defining raw bytes (that make up the NES header) at the start of the resulting file, followed by your code (which is what gets run by the emulator/console).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3">koitsu</a> — Sun Jul 21, 2013 4:38 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Six]]></name></author>
<updated>2013-07-21T16:25:41-07:00</updated>
<published>2013-07-21T16:25:41-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10303&amp;p=115458#p115458</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10303&amp;p=115458#p115458"/>
<title type="html"><![CDATA[Re: Now what?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10303&amp;p=115458#p115458"><![CDATA[
<div class="quotetitle">koitsu wrote:</div><div class="quotecontent"><br />@Dwedit and tokumaru --<br /><br />You're both making assumptions.  We do not know anything about what his code looks like, what build mechanism is being used, etc..  You can talk about primitive tools and whatever else, but the reality is without seeing his source code, we do not know what the situation is.  I'm having to cover multiple bases at once.<br /></div><br />There's really nothing to show.<br /><br />I literally started learning assembly a week ago. All I really know how to do is load numbers into registers, and then store them into memory.<br /><br />That, and a few other things.<br /><br />I don't have any real project in mind yet, so I don't have any source code for it.<br /><br />Anyway, Tokumaru told me to write a batch file that assembles an .asm file into an .nes file. That's what I've been doing, and that may be why I'm having trouble trying to run anything in an emulator.<br /><br />I'll try out the headers Tokumaru and Dwedit provided when I get the chance. Then I'll take your advice on combining the two .bins into an .nes file. (I'm assuming you do this with a batch file. If not, please let me know.)<br /><br />Thank you all for your help.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6065">Six</a> — Sun Jul 21, 2013 4:25 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[koitsu]]></name></author>
<updated>2013-07-21T15:02:50-07:00</updated>
<published>2013-07-21T15:02:50-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10303&amp;p=115457#p115457</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10303&amp;p=115457#p115457"/>
<title type="html"><![CDATA[Re: Now what?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10303&amp;p=115457#p115457"><![CDATA[
@Dwedit and tokumaru --<br /><br />You're both making assumptions.  We do not know anything about what his code looks like, what build mechanism is being used, etc..  You can talk about primitive tools and whatever else, but the reality is without seeing his source code, we do not know what the situation is.  I'm having to cover multiple bases at once.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3">koitsu</a> — Sun Jul 21, 2013 3:02 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[koitsu]]></name></author>
<updated>2013-07-21T15:01:40-07:00</updated>
<published>2013-07-21T15:01:40-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10303&amp;p=115456#p115456</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10303&amp;p=115456#p115456"/>
<title type="html"><![CDATA[Re: Now what?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10303&amp;p=115456#p115456"><![CDATA[
<span style="font-size: 150%; line-height: normal">PLEASE READ EVERYTHING I HAVE WRITTEN BEFORE RESPONDING.</span><br /><br /><div class="quotetitle">Six wrote:</div><div class="quotecontent"><br /><div class="quotetitle">koitsu wrote:</div><div class="quotecontent">asm6 has no support for the NES file format; it's a generic 6502 assembler.<br /><br />You get to make the <a href="http://wiki.nesdev.com/w/index.php/INES" class="postlink">16-byte header</a> yourself in a hex editor.  It's not hard.<br /></div><br />It's been assembling into a .nes file. Should it not be?<br /></div><br />The correct answer is: it depends.<br /><br />The source code you're using might actually try to build the .nes header itself at the top using .db statements or otherwise.  Since you haven't provided any code, I cannot tell you.<br /><br />Otherwise some kind of batch file or script that is causing the asm6 output file to be named something.nes, which is incorrect.  asm6 does not generate .nes files (meaning it generates code/binaries, but no NES header).  **OR** the script may be doing the method I described above; you will need to provide the full contents of that script.  asm6 will generate raw code, which is colloquially referred to as a .bin file.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />I'm a little confused. Should the actual source code (Before being combined with the header) be saved as an .nes file,  or .bin?<br /></div><br />The source code has no relevancy; source code is source code.  What you care about is the assembled source code, which should be going to a .bin file (unless the NES header portion is being stuck into the source itself -- again, I do not know, because you haven't provided any source code).<br /><br />Normally you take the .bin file and prepend a 16-byte NES header on the front of it, and the resulting file should have a .nes extension.<br /><br />So let's recap:<br /><br />filename.asm = the source code to your program/game<br />filename.bin = the assembled results (binary/code) of filename.asm, after assembled with asm6<br />header.bin = the 16-byte NES header that you get to make yourself with a hex editor or by other means<br />filename.nes = the result of <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">copy /b header.bin+filename.bin filename.nes</tt>, which you load with an emulator<br /><br />Now as I said, if some source code you're using has the actual 16-byte NES header written into the source code itself (it would usually be at the top), then there will be no header.bin involved, and you can just use asm6 to output into a .nes file directly.  But again: without seeing the source, I cannot tell you if this is the case or not.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />I only asked that because I thought the errors I was getting were because of how my code was being assembled.<br /></div><br />Errors you get during assembly <strong>have nothing to do with emulators</strong>.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3">koitsu</a> — Sun Jul 21, 2013 3:01 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2013-07-21T14:59:33-07:00</updated>
<published>2013-07-21T14:59:33-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10303&amp;p=115455#p115455</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10303&amp;p=115455#p115455"/>
<title type="html"><![CDATA[Re: Now what?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10303&amp;p=115455#p115455"><![CDATA[
<div class="quotetitle">koitsu wrote:</div><div class="quotecontent"><br />You get to make the <a href="http://wiki.nesdev.com/w/index.php/INES" class="postlink">16-byte header</a> yourself in a hex editor.  It's not hard.<br /><br />Assuming you're using Windows: you then combine the two files -- the header and the assembled code (usually resulting in a .bin or .o file) by using <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">copy /b header.bin+code.bin game.nes</tt>.  You then load <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">game.nes</tt> in an emulator.  It's that easy.<br /></div><br />It's easy, but pretty Jurassic if you ask me, something you'd do in the old days of DOS when we only had primitive tools. I'd much rather keep the header inside the source file, like in the <a href="http://forums.nesdev.com/viewtopic.php?p=58138#p58138" class="postlink">ASM6 templates</a> I posted a while ago or how Dwedit just posted. I'm actually doing something a bit more sophisticated than that nowadays: a macro does all the bit masking and shifting to generate the header based on more readable parameters.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Sun Jul 21, 2013 2:59 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Dwedit]]></name></author>
<updated>2013-07-21T14:57:02-07:00</updated>
<published>2013-07-21T14:57:02-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10303&amp;p=115454#p115454</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10303&amp;p=115454#p115454"/>
<title type="html"><![CDATA[Re: Now what?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10303&amp;p=115454#p115454"><![CDATA[
ASM6 lets you output the NES header manually as bytes.<br /><br />.db &quot;NES&quot;,$1A<br />.db 2,1,0,0,0,0,0,0,0,0,0,0<br />.org $8000<br />;code goes here<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=53">Dwedit</a> — Sun Jul 21, 2013 2:57 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2013-07-21T14:49:31-07:00</updated>
<published>2013-07-21T14:49:31-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10303&amp;p=115452#p115452</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10303&amp;p=115452#p115452"/>
<title type="html"><![CDATA[Re: Now what?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10303&amp;p=115452#p115452"><![CDATA[
<div class="quotetitle">Six wrote:</div><div class="quotecontent"><br />How do I go from something simple like this, to actually making some form of a game?<br /></div><br />It seems you have 2 separate things to learn: 6502 assembly and game programming. 6502 assembly is just a language, a way for you to communicate with the system and tell it what to do. Knowing *what* to tell the system is what game programming is all about.<br /><br />If you think about it, the ultimate goal of a game program is to put objects in the correct positions, select the correct animation frames, control the number of lives a character has... it's all numbers. In order to calculate all those numbers, you have to simulate the game world as best as possible: you have to model everything that exists in the game world, storing their attributes in RAM. An enemy for example, needs a position (X and Y coordinates), health points, direction of movement, among other things. So, when you have every active game entity mapped in RAM, you need to make them &quot;live&quot;. This is accomplished by processing a step for every object each frame. Every frame you have to loop through all of the objects and calculate what they'll do next - very small actions, like moving one pixel forward or initiating a a jump. At 60 frames per section, these small actions create the animations you see while playing.<br /><br />The actions of the player are usually dictated by the data you read from the controller, along with whatever external forces you have acting upon him. For example, if gravity is pushing the player down, there are certain things he can't do even if the commands are given through the controller. You have to manually check for all of these exceptions, so you need to have a lot of attention to detail in order to foresee all these possible situations. Other objects are controlled by the external forces, and their own AI routines. AI routines are groups of rules that dictate how objects behave... whether they walk from side to side or follow the player, when to jump, and so on.<br /><br />This is the most basic breakdown I can make of how a game works. Once you success in displaying simple objects on the screen, hopefully you'll realize that in order to control them and give them life you'll have to simulate them at a deeper level, in addition to worrying about their visual appearance.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Whenever I write a short piece of code, compile it, and then try and emulate it, it either says &quot;Invalid File&quot; or &quot;Corrupt File&quot;.<br /></div><br />There might be some inconsistency between the information contained in the header and the rest of the ROM file. For example, if the header says that there are 2 PRG-ROM banks, you need to have 32KB of PRG-ROM... anything different than that and the emulator gets confused, and can't do anything other than declare the ROM corrupt.<br /><br />Since you're beginning, I assume you're trying to make the simplest ROM possible: 16KB of PRG-ROM + 8KB or CHR-ROM, so the ROM file should be 16 bytes (header) + 16384 bytes (CHR-ROM) + 8192 bytes (PRG-ROM) = 24592 bytes. In windows, to see the exact sizes of the files in bytes, right-click them and select &quot;Properties&quot; (ignore &quot;Size on disk&quot;, you want &quot;Size&quot;). 32KB of PRG-ROM is also common for beginners, in which case the file should be 40976 bytes.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />What's the correct header for Asm6? (Is there even one?)<br /></div><br />My <a href="http://forums.nesdev.com/viewtopic.php?p=58138#p58138" class="postlink">ASM6 templates</a> generate the header in a very straightforward way, with .db statements before the start of the program.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />What emulator is compatible with Asm6? (Right now, I'm using Nestopia.)<br /></div><br />There's no such thing. No matter the assembler you use, the result SHOULD be an 100% valid NES program, capable of running on an actual NES console or any emulator that faithfully recreates that console.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Sun Jul 21, 2013 2:49 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Six]]></name></author>
<updated>2013-07-21T14:30:28-07:00</updated>
<published>2013-07-21T14:30:28-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10303&amp;p=115450#p115450</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10303&amp;p=115450#p115450"/>
<title type="html"><![CDATA[Re: Now what?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10303&amp;p=115450#p115450"><![CDATA[
<div class="quotetitle">koitsu wrote:</div><div class="quotecontent"><br />asm6 has no support for the NES file format; it's a generic 6502 assembler.<br /><br />You get to make the <a href="http://wiki.nesdev.com/w/index.php/INES" class="postlink">16-byte header</a> yourself in a hex editor.  It's not hard.<br /></div><br />It's been assembling into a .nes file. Should it not be?<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Assuming you're using Windows: you then combine the two files -- the header and the assembled code (usually resulting in a .bin or .o file) by using <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">copy /b header.bin+code.bin game.nes</tt>.  You then load <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">game.nes</tt> in an emulator.  It's that easy.<br /></div><br />I'm a little confused. Should the actual source code (Before being combined with the header) be saved as an .nes file,  or .bin?<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />P.S. -- In your first post you asked &quot;What emulator is compatible with Asm6?&quot; -- this question means nothing.  asm6 is a 6502 assembler; it has no relation to emulators.<br /></div><br />I only asked that because I thought the errors I was getting were because of how my code was being assembled.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6065">Six</a> — Sun Jul 21, 2013 2:30 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[koitsu]]></name></author>
<updated>2013-07-21T14:12:52-07:00</updated>
<published>2013-07-21T14:12:52-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10303&amp;p=115449#p115449</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10303&amp;p=115449#p115449"/>
<title type="html"><![CDATA[Re: Now what?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10303&amp;p=115449#p115449"><![CDATA[
asm6 has no support for the NES file format; it's a generic 6502 assembler.<br /><br />You get to make the <a href="http://wiki.nesdev.com/w/index.php/INES" class="postlink">16-byte header</a> yourself in a hex editor.  It's not hard.<br /><br />Assuming you're using Windows: you then combine the two files -- the header and the assembled code (usually resulting in a .bin or .o file) by using <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">copy /b header.bin+code.bin game.nes</tt>.  You then load <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">game.nes</tt> in an emulator.  It's that easy.<br /><br />P.S. -- In your first post you asked &quot;What emulator is compatible with Asm6?&quot; -- this question means nothing.  asm6 is a 6502 assembler; it has no relation to emulators.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3">koitsu</a> — Sun Jul 21, 2013 2:12 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Six]]></name></author>
<updated>2013-07-21T13:57:03-07:00</updated>
<published>2013-07-21T13:57:03-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10303&amp;p=115448#p115448</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10303&amp;p=115448#p115448"/>
<title type="html"><![CDATA[Re: Now what?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10303&amp;p=115448#p115448"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />A header tells the emulator how big the PRG ROM and CHR ROM are and what other components are on the Game Pak's circuit board. How you create a header depends on the assembler.<br /></div><br />Would you know what it is with Asm6?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6065">Six</a> — Sun Jul 21, 2013 1:57 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2013-07-21T13:55:16-07:00</updated>
<published>2013-07-21T13:55:16-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10303&amp;p=115447#p115447</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10303&amp;p=115447#p115447"/>
<title type="html"><![CDATA[Re: Now what?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10303&amp;p=115447#p115447"><![CDATA[
A header tells the emulator how big the PRG ROM and CHR ROM are and what other components are on the Game Pak's circuit board. How you create a header depends on the assembler.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Sun Jul 21, 2013 1:55 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[zzo38]]></name></author>
<updated>2013-07-21T13:56:02-07:00</updated>
<published>2013-07-21T13:53:53-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10303&amp;p=115446#p115446</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10303&amp;p=115446#p115446"/>
<title type="html"><![CDATA[Re: Now what?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10303&amp;p=115446#p115446"><![CDATA[
<div class="quotetitle">Six wrote:</div><div class="quotecontent"><br />So I guess my real question is what do headers do? Do you need one in order to be able to emulate it?<br /><br />How exactly would I go about making one?<br /></div>The iNES header specifies the mapper in use (if you don't need any fancy features you can use NROM, which is mapper number 0), the amount of ROM and RAM, the nametable mirroring (you can probably ignore it if you aren't using scrolling), and sometimes a few other things (such as whether or not it uses battery RAM). It is documented in NESdev wiki.<br /><br />You do need a header, since most emulators require it so it can know what mapper it is and so on (otherwise it wouldn't have any way to know). If you just want to put the file into a ROM cartridge, then a header won't be necessary if you are building the cartridge yourself, although usually you would want to make it run in an emulator too, so you do need a header.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4734">zzo38</a> — Sun Jul 21, 2013 1:53 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Six]]></name></author>
<updated>2013-07-21T13:38:28-07:00</updated>
<published>2013-07-21T13:38:28-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10303&amp;p=115445#p115445</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10303&amp;p=115445#p115445"/>
<title type="html"><![CDATA[Re: Now what?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10303&amp;p=115445#p115445"><![CDATA[
So I guess my real question is what do headers do? Do you need one in order to be able to emulate it?<br /><br />How exactly would I go about making one?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6065">Six</a> — Sun Jul 21, 2013 1:38 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[zzo38]]></name></author>
<updated>2013-07-21T13:35:07-07:00</updated>
<published>2013-07-21T13:35:07-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10303&amp;p=115444#p115444</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10303&amp;p=115444#p115444"/>
<title type="html"><![CDATA[Re: Now what?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10303&amp;p=115444#p115444"><![CDATA[
<div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent"><br />I don't think NESASM is horrible at all, it's just limited compared to something like the cc65 toolchain. It's fine for learning on.<br /></div>I agree that NESASM isn't horrible at all (unless you prefer standard syntax; I happen to prefer the nonstandard syntax though). Actually, Unofficial MagicKit (the variant of NESASM) can do a large number of things (NES 2.0 headers, postprocessors, more powerful macros, etc) although cc65 would probably be much better if you want linking and those kind of things.<br /><br /><div class="quotetitle">Movax12 wrote:</div><div class="quotecontent"><br />It might be a good idea to take the time to learn what is different (between Asm6 and NESASM), and translate the code to Asm6 syntax as you go over some of the tutorials. This would help you learn more about what is at the assembler level when writing code. If you understand the Asm6 directives and syntax, it shouldn't prove to be overly difficult.<br /></div>This is good idea. If you learn ASM6 then you can write the similar codes using it.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4734">zzo38</a> — Sun Jul 21, 2013 1:35 pm</p><hr />
]]></content>
</entry>
</feed>