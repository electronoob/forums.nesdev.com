<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Preview of my modded VegaPlay</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Preview of my modded VegaPlay</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=6&amp;t=11322">http://forums.nesdev.com/viewtopic.php?f=6&amp;t=11322</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>4</strong> of <strong>5</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>l_oliveira</b> [ Tue Jul 22, 2014 9:43 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Preview of my modded VegaPlay</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">yogi wrote:</div><div class="quotecontent">Thanks man, I'll look it over but my code is working with the new controller Read code I posted. <br />Yogi</div><br /><br />Yep, but I meant, put this on place of your code and test if it has any differences on performance...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>yogi</b> [ Tue Jul 22, 2014 10:04 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Preview of my modded VegaPlay</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />From your 4th test rom<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">ControllerTest:&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;EDIT:<br />&nbsp; &nbsp;JSR ReadController&nbsp; &nbsp;; ReadController: returns in A AND NewButtons<br />&nbsp; &nbsp;STA NewButtons3&nbsp; &nbsp; ; First Read Val<br />&nbsp; &nbsp;JSR ReadController<br />&nbsp; &nbsp;PHA&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; Stack has Second Read Val<br />&nbsp; &nbsp;JSR ReadController<br />&nbsp; &nbsp;STA NewButtons2&nbsp; &nbsp; &nbsp;; Third Read Val<br />&nbsp; &nbsp;JSR ReadController&nbsp; &nbsp;; Fourth Read in NewButtons<br /><br />&nbsp; &nbsp;PLA&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; POP Second Read <br />&nbsp; &nbsp;CMP NewButtons3&nbsp; &nbsp; &nbsp; ; Is Second = First?<br />&nbsp; &nbsp;BEQ JoyEnd<br />&nbsp; &nbsp;CMP NewButtons&nbsp; &nbsp; &nbsp; &nbsp;; Is Second = Fourth?<br />&nbsp; &nbsp;BEQ JoyEnd<br />&nbsp; &nbsp;LDA NewButtons2&nbsp; &nbsp; &nbsp; ; No, so use Third Reading must be good (?)<br />&nbsp; &nbsp;CMP #0&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; CMP Third to 0 (?) set/clr Z (?)<br />JoyEnd:<br />&nbsp; &nbsp;STA NewButtons&nbsp; &nbsp; &nbsp; &nbsp; ; Store current Read&nbsp; <br />&nbsp; &nbsp;RTS&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; Return <br /></div><br />My code works for me, so not sure I should comment on your's if it works for you. <br />Yogi<br />EDIT: just noticed that your NES doesn't actually change the song, just moves the sprite. Was this your intent?<br />EDIT2: Changed the comments to better reflect the VAR usage.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>l_oliveira</b> [ Tue Jul 22, 2014 10:22 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Preview of my modded VegaPlay</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">yogi wrote:</div><div class="quotecontent">EDIT: just noticed that your NES doesn't actually change the song, just moves the sprite. Was this your intent?</div><br /><br />Yes, I was using a 1 song NSF and issuing a music change command would crash the playback driver. <br /><br />That patch on the code was intended to stop the change music command from crashing the sound playback thread so the behavior of DPCM controller glitch could be fully appreciated.<br /><br /><br />Edit: <br />That controller code is from blargg:<br /><!-- l --><a class="postlink-local" href="http://forums.nesdev.com/viewtopic.php?t=4124">viewtopic.php?t=4124</a><!-- l --><br /><br />The point is doing multiple reads to reduce the chances of glitch on the controller input.  As a bonus it also checks the expansion port for external controllers (this is a Famicom and some people use controllers connected to the 15 pin expansion port it has on the front...).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Tue Jul 22, 2014 10:47 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Preview of my modded VegaPlay</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Here's the DPCM-safe code I use in my own projects, extracted from <a href="http://forums.nesdev.com/viewtopic.php?p=81806#p81806" class="postlink">my project template</a>. It handles both player 1 and player 2 as well as Famicom expansion controllers. And because it reads only twice, it takes nearly constant time unlike some routines that read repeatedly and wait for it to settle.<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.segment &quot;ZEROPAGE&quot;<br />cur_keys: .res 2<br />new_keys: .res 2<br /><br />.segment &quot;CODE&quot;<br />.proc read_pads<br />thisRead = $0000&nbsp; ; local temporary variables<br />firstRead = $0002<br />lastFrameKeys = $0004<br /><br />&nbsp; ; store the current keypress state to detect key-down later<br />&nbsp; lda cur_keys<br />&nbsp; sta lastFrameKeys<br />&nbsp; lda cur_keys+1<br />&nbsp; sta lastFrameKeys+1<br /><br />&nbsp; ; Read the joypads twice in case DMC DMA caused a clock glitch.<br />&nbsp; jsr read_pads_once<br />&nbsp; lda thisRead<br />&nbsp; sta firstRead<br />&nbsp; lda thisRead+1<br />&nbsp; sta firstRead+1<br />&nbsp; jsr read_pads_once<br /><br />&nbsp; ; For each player, make sure the reads agree, then find newly<br />&nbsp; ; pressed keys.<br />&nbsp; ldx #1<br />@fixupKeys:<br /><br />&nbsp; ; If the player's keys read out the same way both times, update.<br />&nbsp; ; Otherwise, keep the last frame's keypresses.<br />&nbsp; lda thisRead,x<br />&nbsp; cmp firstRead,x<br />&nbsp; bne @dontUpdateGlitch<br />&nbsp; sta cur_keys,x<br />@dontUpdateGlitch:<br />&nbsp; <br />&nbsp; lda lastFrameKeys,x&nbsp; &nbsp;; A = keys that were down last frame<br />&nbsp; eor #$FF&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; A = keys that were up last frame<br />&nbsp; and cur_keys,x&nbsp; &nbsp; &nbsp; &nbsp; ; A = keys down now and up last frame<br />&nbsp; sta new_keys,x<br />&nbsp; dex<br />&nbsp; bpl @fixupKeys<br />&nbsp; rts<br /><br />read_pads_once:<br /><br />&nbsp; ; Bits from the controllers are shifted into thisRead and<br />&nbsp; ; thisRead+1.&nbsp; In addition, thisRead+1 serves as the loop counter:<br />&nbsp; ; once the $01 gets shifted left eight times, the 1 bit will<br />&nbsp; ; end up in carry, terminating the loop.<br />&nbsp; lda #$01<br />&nbsp; sta thisRead+1<br />&nbsp; ; Write 1 then 0 to JOY1 to send a latch signal, telling the<br />&nbsp; ; controllers to copy button states into a shift register<br />&nbsp; sta JOY1<br />&nbsp; lsr a<br />&nbsp; sta JOY1<br />&nbsp; loop:<br />&nbsp; &nbsp; ; On NES and AV Famicom, button presses always show up in D0.<br />&nbsp; &nbsp; ; On the original Famicom, presses on the hardwired controllers<br />&nbsp; &nbsp; ; show up in D0 and presses on plug-in controllers show up in D1.<br />&nbsp; &nbsp; ; D2-D7 consist of data from the Zapper, Power Pad, Vs. System<br />&nbsp; &nbsp; ; DIP switches, and bus capacitance; ignore them.<br />&nbsp; &nbsp; lda JOY1&nbsp; &nbsp; &nbsp; &nbsp;; read player 1's controller<br />&nbsp; &nbsp; and #%00000011 ; ignore D2-D7<br />&nbsp; &nbsp; cmp #1&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; CLC if A=0, SEC if A&gt;=1<br />&nbsp; &nbsp; rol thisRead&nbsp; &nbsp;; put one bit in the register<br />&nbsp; &nbsp; lda JOY2&nbsp; &nbsp; &nbsp; &nbsp;; read player 2's controller the same way<br />&nbsp; &nbsp; and #$03<br />&nbsp; &nbsp; cmp #1<br />&nbsp; &nbsp; rol thisRead+1<br />&nbsp; &nbsp; bcc loop&nbsp; &nbsp; &nbsp; &nbsp;; once $01 has been shifted 8 times, we're done<br />&nbsp; rts<br />.endproc<br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>yogi</b> [ Tue Jul 22, 2014 12:46 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Preview of my modded VegaPlay</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">l_oliveira wrote:</div><div class="quotecontent"><div class="quotetitle">yogi wrote:</div><div class="quotecontent">EDIT: just noticed that your NES doesn't actually change the song, just moves the sprite. Was this your intent?</div><br /><br />Yes, I was using a 1 song NSF and issuing a music change command would crash the playback driver. <br /><br />That patch on the code was intended to stop the change music command from crashing the sound playback thread so the behavior of DPCM controller glitch could be fully appreciated. </div><br />OK thought so but just thought I should point it out if you didn't realise. In my routine I can start/stop playback and test song selection, of course if I try to play song 2-10 of a single song NSF it will crash. <br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Edit: <br />That controller code is from blargg:<br /><!-- l --><a class="postlink-local" href="http://forums.nesdev.com/viewtopic.php?t=4124">viewtopic.php?t=4124</a><!-- l --><br /><br />The point is doing multiple reads to reduce the chances of glitch on the controller input.  As a bonus it also checks the expansion port for external controllers (this is a Famicom and some people use controllers connected to the 15 pin expansion port it has on the front...).</div><br /> I understand the need to do multi reads; but the fourth read is not used for anything. Is it just a wait loop? <br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Yep, but I meant, put this on place of your code and test if it has any differences on performance... </div><br />Well this code would need some fixes to work in my code infrastructure that aren't trivial. I'll try it at some point, after I get a bit more testing done.<br /> So far with my testing: Went through the NSFs I used in this test rom<br /><div class="attachtitle">Attachment:</div><div class="attachcontent">
			<span class="genmed">
				<img src="./styles/subsilver2/imageset/icon_topic_attach.gif" width="14" height="18" alt="" title="" /> 
				<a href="./download/file.php?id=1766">vegaplayMMC1test16.nes</a> [256.02 KiB]
			</span><br />
			<span class="gensmall">Downloaded 68 times</span>
		

		<br />
	</div><br />Some of the source NSFs have a 'random dropped frame' issue in Nestopia that also shows up in the NES (GIGO ?). <br />The worst is (NSF #5):<br /><div class="attachtitle">Attachment:</div><div class="attachcontent">
			<span class="genmed">
				<img src="./images/upload_icons/mid.gif" alt="" /> 
				<a href="./download/file.php?id=1767">Entry087.nsf</a> [23.25 KiB]
			</span><br />
			<span class="gensmall">Downloaded 68 times</span>
		

		<br />
	</div><br />It's a good. fast song but really hammers the DPCM channel. This is the only one that causes an occasional bankswitch now (so even doing multi reads can return a false read?). With Nestopia the NSF drops the tempo from time to time (unintentionally, I think) as do a few other NSF also.<br />   The fact that the source NSFs have problems playing in Nestopia leads me to believe there is:<br />a. a bug/problem with the NSF in question<br />b. a bug with Nestopia<br />c. a bug caused by Windows<br />d. The Moon is in the wrong phase for chiptune playback<br /> <br />  Will be burning to a cart to see how real HW handles it.<br />Yogi

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>yogi</b> [ Tue Jul 22, 2014 12:55 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Preview of my modded VegaPlay</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">Here's the DPCM-safe code I use in my own projects, extracted from <a href="http://forums.nesdev.com/viewtopic.php?p=81806#p81806" class="postlink">my project template</a>. It handles both player 1 and player 2 as well as Famicom expansion controllers. And because it reads only twice, it takes nearly constant time unlike some routines that read repeatedly and wait for it to settle.<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.segment &quot;ZEROPAGE&quot;<br />cur_keys: .res 2<br />new_keys: .res 2<br /><br />.segment &quot;CODE&quot;<br />.proc read_pads<br />thisRead = $0000&nbsp; ; local temporary variables<br />firstRead = $0002<br />lastFrameKeys = $0004<br /><br />&nbsp; ; store the current keypress state to detect key-down later<br />&nbsp; lda cur_keys<br />&nbsp; sta lastFrameKeys<br />&nbsp; lda cur_keys+1<br />&nbsp; sta lastFrameKeys+1<br /><br />&nbsp; ; Read the joypads twice in case DMC DMA caused a clock glitch.<br />&nbsp; jsr read_pads_once<br />&nbsp; lda thisRead<br />&nbsp; sta firstRead<br />&nbsp; lda thisRead+1<br />&nbsp; sta firstRead+1<br />&nbsp; jsr read_pads_once<br /><br />&nbsp; ; For each player, make sure the reads agree, then find newly<br />&nbsp; ; pressed keys.<br />&nbsp; ldx #1<br />@fixupKeys:<br /><br />&nbsp; ; If the player's keys read out the same way both times, update.<br />&nbsp; ; Otherwise, keep the last frame's keypresses.<br />&nbsp; lda thisRead,x<br />&nbsp; cmp firstRead,x<br />&nbsp; bne @dontUpdateGlitch<br />&nbsp; sta cur_keys,x<br />@dontUpdateGlitch:<br />&nbsp; <br />&nbsp; lda lastFrameKeys,x&nbsp; &nbsp;; A = keys that were down last frame<br />&nbsp; eor #$FF&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; A = keys that were up last frame<br />&nbsp; and cur_keys,x&nbsp; &nbsp; &nbsp; &nbsp; ; A = keys down now and up last frame<br />&nbsp; sta new_keys,x<br />&nbsp; dex<br />&nbsp; bpl @fixupKeys<br />&nbsp; rts<br /><br />read_pads_once:<br /><br />&nbsp; ; Bits from the controllers are shifted into thisRead and<br />&nbsp; ; thisRead+1.&nbsp; In addition, thisRead+1 serves as the loop counter:<br />&nbsp; ; once the $01 gets shifted left eight times, the 1 bit will<br />&nbsp; ; end up in carry, terminating the loop.<br />&nbsp; lda #$01<br />&nbsp; sta thisRead+1<br />&nbsp; ; Write 1 then 0 to JOY1 to send a latch signal, telling the<br />&nbsp; ; controllers to copy button states into a shift register<br />&nbsp; sta JOY1<br />&nbsp; lsr a<br />&nbsp; sta JOY1<br />&nbsp; loop:<br />&nbsp; &nbsp; ; On NES and AV Famicom, button presses always show up in D0.<br />&nbsp; &nbsp; ; On the original Famicom, presses on the hardwired controllers<br />&nbsp; &nbsp; ; show up in D0 and presses on plug-in controllers show up in D1.<br />&nbsp; &nbsp; ; D2-D7 consist of data from the Zapper, Power Pad, Vs. System<br />&nbsp; &nbsp; ; DIP switches, and bus capacitance; ignore them.<br />&nbsp; &nbsp; lda JOY1&nbsp; &nbsp; &nbsp; &nbsp;; read player 1's controller<br />&nbsp; &nbsp; and #%00000011 ; ignore D2-D7<br />&nbsp; &nbsp; cmp #1&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; CLC if A=0, SEC if A&gt;=1<br />&nbsp; &nbsp; rol thisRead&nbsp; &nbsp;; put one bit in the register<br />&nbsp; &nbsp; lda JOY2&nbsp; &nbsp; &nbsp; &nbsp;; read player 2's controller the same way<br />&nbsp; &nbsp; and #$03<br />&nbsp; &nbsp; cmp #1<br />&nbsp; &nbsp; rol thisRead+1<br />&nbsp; &nbsp; bcc loop&nbsp; &nbsp; &nbsp; &nbsp;; once $01 has been shifted 8 times, we're done<br />&nbsp; rts<br />.endproc<br /></div></div><br />  Thanks, at one point I tried converting the core read routine from your template, but ran into issues with my cut down (busted) version and the surrounding code. I will revisit it with a fresh mind <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /> <br />yogi

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Tue Jul 22, 2014 1:32 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Preview of my modded VegaPlay</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">yogi wrote:</div><div class="quotecontent"> I understand the need to do multi reads; but the fourth read is not used for anything. Is it just a wait loop? </div><br />The fourth read places the controller byte into NewButtons (in this case). The value gets compared to later on with CMP NewButtons.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>yogi</b> [ Tue Jul 22, 2014 2:07 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Preview of my modded VegaPlay</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">thefox wrote:</div><div class="quotecontent"><div class="quotetitle">yogi wrote:</div><div class="quotecontent"> I understand the need to do multi reads; but the fourth read is not used for anything. Is it just a wait loop? </div><br />The fourth read places the controller byte into NewButtons (in this case). The value gets compared to later on with CMP NewButtons.</div><br /> Hey Thefox, sorry, I missed that in the ReadController Sub<br />Yogi

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>l_oliveira</b> [ Thu Jul 24, 2014 7:59 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Preview of my modded VegaPlay</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hey yogi, more stuff for you to play with !  <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br />The N163 was a tad tricky to get to work because hardware NSF players don't rely on the mapper native mechanism so they aren't affected by this issue:<br /><br />N163 has the sound hardware enable bit on one of the bank change registers so I had to &quot;patch&quot; the driver code to not write there as it was crashing due to unwanted memory bank changes.<br /><br />And this song is just plain awesome...<br /><br />Edit: There were some writes missing on the code. I did not init the registers which did CIRAM control so in FCEUX it works fine but on the real thing you get a nice gray screen with music playing.<br /><br />There's a fixed version, now.<br /><br />Edit2: The volume is wrong on my cart. N163 plays way too loud. This tune is 1 channel and my N163 dev cart is based on a 8 channel game.

		
			<br clear="all" /><br />

			<table class="tablebg" width="100%" cellspacing="1">
			<tr>
				<td><b class="genmed">Attachments: </b></td>
			</tr>
			
				<tr>
					<td>
			<span class="genmed">
				<img src="./styles/subsilver2/imageset/icon_topic_attach.gif" width="14" height="18" alt="" title="" /> 
				<a href="./download/file.php?id=1771">Making it run on a N163v2.zip</a> [29.48 KiB]
			</span><br />
			<span class="gensmall">Downloaded 77 times</span>
		

		<br />
	</td>
				</tr>
			
				<tr>
					<td>
			<span class="genmed">
				<img src="./styles/subsilver2/imageset/icon_topic_attach.gif" width="14" height="18" alt="" title="" /> 
				<a href="./download/file.php?id=1770">Making it run on a N163.zip</a> [29.44 KiB]
			</span><br />
			<span class="gensmall">Downloaded 73 times</span>
		

		<br />
	</td>
				</tr>
			
			</table>
		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>l_oliveira</b> [ Thu Jul 24, 2014 12:29 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Preview of my modded VegaPlay</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Now that the basic idea is laid out, the mapper init code can be useful to other people so I'd like to add this one, too.

		
			<br clear="all" /><br />

			<table class="tablebg" width="100%" cellspacing="1">
			<tr>
				<td><b class="genmed">Attachments: </b></td>
			</tr>
			
				<tr>
					<td>
			<span class="genmed">
				<img src="./styles/subsilver2/imageset/icon_topic_attach.gif" width="14" height="18" alt="" title="" /> 
				<a href="./download/file.php?id=1772">Making it run on a Sunsoft5B.zip</a> [15.26 KiB]
			</span><br />
			<span class="gensmall">Downloaded 74 times</span>
		

		<br />
	</td>
				</tr>
			
			</table>
		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Thu Jul 24, 2014 2:28 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Preview of my modded VegaPlay</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">l_oliveira wrote:</div><div class="quotecontent">I did not init the registers which did CIRAM control <br /></div>Huh, I bet you could use that to make a board that wouldn't need to have its CHR-ROM replaced.<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">This tune is 1 channel and my N163 dev cart is based on a 8 channel game.<br /></div>Sadly, nothing to be done for that other than adding a potentiometer...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Thu Jul 24, 2014 2:42 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Preview of my modded VegaPlay</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Could you re-export the tune with more channels enabled but silent? That would lower the volume. (Trivial if you have famitracker source, not so trivial if all you have is the NSF.)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>l_oliveira</b> [ Thu Jul 24, 2014 2:51 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Preview of my modded VegaPlay</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">lidnariq wrote:</div><div class="quotecontent">Huh, I bet you could use that to make a board that wouldn't need to have its CHR-ROM replaced.</div><br />Yep, but the point here was use that &quot;ugly&quot; board I made with the N163 I got from Namco Classic II, so it already has a socket for CHR-ROM...<br /><br />(this one)http://forums.nesdev.com/viewtopic.php?f=9&amp;t=8570<br /><br /><div class="quotetitle">lidnariq wrote:</div><div class="quotecontent">Sadly, nothing to be done for that other than adding a potentiometer...</div><br />Yeah ... I will look into implementing something like that.<br /><br /><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent">Could you re-export the tune with more channels enabled but silent? That would lower the volume. (Trivial if you have famitracker source, not so trivial if all you have is the NSF.)</div><br /><br />That's actually a very good idea, but considering the &quot;generic&quot; context this is going to have, adjustable volume could be something more desirable ...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>yogi</b> [ Thu Jul 24, 2014 3:40 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Preview of my modded VegaPlay</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hey Guys,<br />You've been busy l_oliveira. ++ on the Sunsoft 5B <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /> With INL's flash cart this would be killer!<br /> The N163 sounds so good, may have to go hunting on Ebay for a donor cart. Looked over the code but will need a closer look for an indepth understanding. Lik'en It<br /><br />Been working on another preview. This time moved the Sprite Ram into WRAM @ $6000, had a few NSF that trashed it @ $0500.<br /><br />  As to the DMA bug, I took the coward's way out; now the code only checks the 'Start' button during playback. You can select Song/NSF only when NO song is playing. This avoids the random false 'Right' trigger, but it's not a great solution. So there is extra button pressing, Start Button to stop the playing song and then select a new song/NSF.<br />   I tried your ControllerTest routine, l_oliveira, but ran into issues that broke the main code so I set it aside for the moment. <br />   As things are I had planned to use Right/Left buttons on Controller 2 for  Midi controlled Frame FF and Rewind. Wouldn't be the end of the world if I have to re-assign these functions to other buttons, just have to adjust my PIC code. Hummm<br /><br />   When I included this 'pre check' just after my Controller1Test<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;LDA NewButtons&nbsp; &nbsp;&nbsp; &nbsp;; Check for a New Active buttons<br />&nbsp; &nbsp;BEQ BreakOut&nbsp; &nbsp;&nbsp; &nbsp;; NewButtons=$FF, No buttons pressed<br />&nbsp; &nbsp;CMP OldButtons&nbsp; &nbsp;&nbsp; &nbsp;; Pressed buttons same as last MainLoop Pass?<br />&nbsp; &nbsp;BNE Update&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;; No , so test Controller 1 buttons<br />&nbsp; &nbsp;<br />BreakOut:<br />&nbsp; &nbsp;JMP MainLoop</div><br />This improved playback in the last Preview code, but didn't eliminate the DMA bug.<br /><br />   The odd effect was, the NSF that would trip a bankswitch would never do it at the same Frame, some NSFs did it after 3-6 loops. This leads me to think it's a side effect of my MainLoop's controller read frequency and the DPCM useage lining up at random (or very long cycle) points where I have two false reads in a row that are affected by the DMA. Bears more thought.<br /><br />   Anyway, here is the latest build preview. A new group of songs from the Famicomp Mini 10. NSF #3 is very experimental and 'beepy'; when I first listened to it in my build, I freaked out. The song REALLY does some weird tempo breaks and sounds like the NES is broken at some points <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br />  NSF #5 is the same song from last preview, Without random banking.<br /><div class="attachtitle">Attachment:</div><div class="attachcontent">
			<span class="genmed">
				<img src="./styles/subsilver2/imageset/icon_topic_attach.gif" width="14" height="18" alt="" title="" /> 
				<a href="./download/file.php?id=1773">Main_vpMMC16.nes</a> [256.02 KiB]
			</span><br />
			<span class="gensmall">Downloaded 71 times</span>
		

		<br />
	</div><br />Yogi

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Jul 24, 2014 4:06 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Preview of my modded VegaPlay</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If you put the display list at $6000, some playback engine will probably end up trashing it there too. You might need to make it configurable per NSF.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>4</strong> of <strong>5</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>