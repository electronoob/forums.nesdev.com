<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Emulating Bus Conflicts</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Emulating Bus Conflicts</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=9903">http://forums.nesdev.com/viewtopic.php?f=3&amp;t=9903</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>4</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Sun Mar 17, 2013 3:22 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Emulating Bus Conflicts</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Basically, a chip can only out put directly to a chip, right? So if a chip is getting two different values from both chips, any different values being asserted is unknown. It can be wrong on any bit, it can be right on any bit. We don't now. It's based on which chip is outputting more and can over ride the other. In NES's case, you WRITE to the mapper. But if the chip doesn't get the output disabled on WRITES, the CPU tries to put the data on the bus WITH the ROM, so both the chip on the board and the microprocessor are trying to &quot;write&quot; data, so this affects the 3rd chip, which is reading the output, which is messed up because two devices are trying to output on the same bus.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">1010<br />0110<br />----<br />UU10<br /><br />U means unknown, it can be either 0 or 1 to the device reading the bus.<br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sun Mar 17, 2013 3:42 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Emulating Bus Conflicts</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Let me rephrase: What value should an accurate emulator load into each bit of a 74LS161 or 74HC161 binary counter whose input is being driven with this 'U' signal?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Sun Mar 17, 2013 5:23 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Emulating Bus Conflicts</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />As a random sample (no idea as to how representative), the AT28C64 provides the following Vout-vs-Iout graph:<div class="attachtitle">Attachment:</div><div class="attachcontent">
			<img src="./download/file.php?id=475" alt="AT28C64-pg8-crop.png" /><br />
			<span class="gensmall">AT28C64-pg8-crop.png [ 7.11 KiB | Viewed 809 times ]</span>
		

		<br />
	</div> while the R6502 datasheet only mentions the somewhat lacking &quot;Iload = 1.6mA, Voutmax = 0.4V; Iload = -100ÂµA, Voutmin = 2.4V&quot;<br /><br />From this, we can conclude that if the ROM pulls low, it'll definitely win. The only question is whether the CPU or ROM wins when the ROM is pulling high and the CPU pulling low.<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;ROMout<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;0 1<br />CPUout 0 0 ?<br />&nbsp; &nbsp; &nbsp; &nbsp;1 0 1</div><br />Most sources I've seen assume AND, not =ROM. Mapper 144 implies that the ROM was not assumed to win in ordinary Color Dreams boards.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sun Mar 17, 2013 5:30 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Emulating Bus Conflicts</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">WedNESday wrote:</div><div class="quotecontent">I find this setence a little crytic <img src="./images/smilies/icon_redface.gif" alt=":oops:" title="Embarassed" />.</div><br />A &quot;bus&quot; is made of several lines where bits travel. The address bus has 16 lines and the data bus has 8 lines. These are the paths that addresses and data use to move around. Some carts don't make use of the R/W line (it indicates whether the CPU is reading or writing), meaning they don't know the difference between reading and writing, so they output the contents of the address being accessed regardless of the operation. If it's a write operation, both the CPU and the ROM chip will try to <strong>output data into the same bus at the same time</strong>! If the values they output are different, then you have a bus conflict.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Sun Mar 17, 2013 6:03 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Emulating Bus Conflicts</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Once someone writes some test ROMs for this, we'll have the definitive answer and test of accurate emulation.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Sun Mar 17, 2013 6:07 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Emulating Bus Conflicts</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Want me to write a UNROM test that uses WRAM and just writes conflicted values (A=0,writes to a location which contains FF, and then an FF to a location which contains 00) and upload 8192 test results for the bank switched to for the 2 writes by taking the bank number as the first byte in each ROM? We can even make it after the test, it goes back to the PRG-ROM and lets you go through the results, sort of like a hex editor, so we can see it on a console-by-console/chip-by-chip/setup-by-setup basis.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Sun Mar 17, 2013 6:23 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Emulating Bus Conflicts</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />That's the first step, to research what actually happens. Then when we have determined what reliably happens (i.e. what a crappy game might depend on), we can write a pass/fail test ROM.<br /><br />For the research phase, it'd be best to test on actual unmodified game boards, so we're using the original ROM chips, not EPROMS, flash, or whatever.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Sun Mar 17, 2013 6:27 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Emulating Bus Conflicts</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />That can be done by scouring the ROM are above C000 for a $00 and $FF value, save them, and then run the code in RAM. There'd need to be controller reading portion in RAM but that's no big deal either. Sound like a plan? I can maybe get on it now, although I'd rather not really. I have so much other NES stuff going on, I need to stop taking on projects like this so often...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Mon Mar 18, 2013 5:32 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Emulating Bus Conflicts</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The problem is that mask ROMs in game paks are very different and elvolved trough the years. EPROMs are just as different. A difference in the 74xx161 chip might come into account too.<br />There could be a definite answer for a given mask ROM and 161 chip, but this result could change if you change the chips.<br /><br />Also I don't think it's a probability thing like WednesDay seems to understand it in his original post, I assume that for a given cart, the &quot;winner&quot; of the bus conflict will always be the same, but for another cart, the &quot;winner&quot; could be a different chip. You will most likely not see a cartridge where the &quot;winner&quot; randomly alternates between the CPU and the ROM.<br /><br />In all cases, I think a &quot;AND&quot; behaviour is probably the cleanest - if the programmer assumes that the value he writes to $8000-$ffff is what will get bankswitched he'll be wrong, and if he assumes the value in rom is what will be bankswitched he's wrong too. It's probably the most accurate electronically (see my previous answer).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>MottZilla</b> [ Mon Mar 18, 2013 10:21 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Emulating Bus Conflicts</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">In all cases, I think a &quot;AND&quot; behaviour is probably the cleanest - if the programmer assumes that the value he writes to $8000-$ffff is what will get bankswitched he'll be wrong, and if he assumes the value in rom is what will be bankswitched he's wrong too. It's probably the most accurate electronically (see my previous answer).</div><br /><br />I'd agree with you because the end result should be that the actual behavior ends up different than what the mistaken programmer intended. There is too much dependent on electrical behavior between components that differ to have one accurate solution. So whatever happens on a mapper that is known to have bus conflicts, it should result in wrong behavior all the time, or wrong behavior none of the time. The reason I think it should just go with what the CPU writes is it will result in people writing programs that have bus conflicts but this is a minor issue for a new game and can easily be corrected either with one extra chip or implementing the table for register writes. Or just have an option, Bus conflicts -&gt; CPU WINS, AND LOGIC, and whatever other options you'd want.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Mon Mar 18, 2013 11:06 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Emulating Bus Conflicts</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Accuracy mode does as best what NES does. Development mode warns programmer of conflict and possibly allows selection of behavior.<br /><br />I just tested on unmodified GNROM, AOROM, and UNROM (Dragon Power, Battletoads, and Rygar). I had code running out of NES internal RAM writing bank selection values, then determining the bank that was set and printing it. GNROM and UNROM were AND (value in ROM AND value written by CPU), and AOROM had no conflict. This gives confidence that AND is accurate for these. See photos for details on the boards.

		
			<br clear="all" /><br />

			<table class="tablebg" width="100%" cellspacing="1">
			<tr>
				<td><b class="genmed">Attachments: </b></td>
			</tr>
			
				<tr>
					<td>
			<span class="gensmall"><b>File comment:</b> Rygar</span><br />
		
			<a href="./download/file.php?id=479&amp;mode=view"><img src="./download/file.php?id=479&amp;t=1" alt="IMG_0030b.JPG" /></a><br />
			<span class="gensmall">IMG_0030b.JPG [ 90.03 KiB | Viewed 749 times ]</span>
		

		<br />
	</td>
				</tr>
			
				<tr>
					<td>
			<span class="gensmall"><b>File comment:</b> Battletoads</span><br />
		
			<a href="./download/file.php?id=478&amp;mode=view"><img src="./download/file.php?id=478&amp;t=1" alt="IMG_0028.JPG" /></a><br />
			<span class="gensmall">IMG_0028.JPG [ 88.65 KiB | Viewed 749 times ]</span>
		

		<br />
	</td>
				</tr>
			
				<tr>
					<td>
			<span class="gensmall"><b>File comment:</b> Dragon Power</span><br />
		
			<a href="./download/file.php?id=477&amp;mode=view"><img src="./download/file.php?id=477&amp;t=1" alt="IMG_0026.JPG" /></a><br />
			<span class="gensmall">IMG_0026.JPG [ 86.2 KiB | Viewed 749 times ]</span>
		

		<br />
	</td>
				</tr>
			
			</table>
		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Mon Mar 18, 2013 1:08 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Emulating Bus Conflicts</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I just tested on unmodified GNROM, AOROM, and UNROM (Dragon Power, Battletoads, and Rygar). I had code running out of NES internal RAM writing bank selection values, then determining the bank that was set and printing it.</div><br />Man, you are a genius !! I'd never thought of that !

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Mar 18, 2013 2:38 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Emulating Bus Conflicts</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I added the test result to the <a href="http://wiki.nesdev.com/w/index.php/Bus_conflict#Emulating_bus_conflicts" class="postlink">wiki page about bus conflicts</a>.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>org</b> [ Thu May 30, 2013 10:59 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Emulating Bus Conflicts</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You can use simple rule : &quot;Ground wins&quot; <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /> <br /><br />For example, when two devices A and B are connected to bus D, you can resolve bus conflict in following way :<br /><br />if (Device A connected) D = A;<br />if (Device B connected) D = B;<br />if (Device A connected AND Device B connected) D = A &amp; B;

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>zzo38</b> [ Mon Jun 10, 2013 10:04 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Emulating Bus Conflicts</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If the cartridge is readable for the entire 64K, will the addresses that interfere with the CPU/APU/PPU also have their values ANDed in this way (so if set to 255, you can read/write them normally)?<br /><br />If this works, then you could not only increase the ROM size without bankswitching, but also have hardwired AND masks for some variables in RAM (four each, because it is mirrored) and many for the PPU registers, possibly making some algorithms more efficient.<br /><br />Will it damage anything to do this?

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>4</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>