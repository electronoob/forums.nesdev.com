<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Possible algorithm for converting photos to NES</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Possible algorithm for converting photos to NES</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=21&amp;t=13167">http://forums.nesdev.com/viewtopic.php?f=21&amp;t=13167</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>psycopathicteen</b> [ Sun Aug 23, 2015 4:35 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Possible algorithm for converting photos to NES</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Start with a random color palette.  Convert the picture to all 4 palettes.  Then chose the closest pallette for each attribute block.  Then for each color, calculate the average color and round it to the nearest NES color.  Then repeat the process again until it's as accurate as possible.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>dougeff</b> [ Sun Aug 23, 2015 4:48 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Possible algorithm for converting photos to NES</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Sounds good except for the &quot;start with a random palette&quot;. You would have 2.2 x 10^21 possible palettes to choose from. Unless I'm misunderstanding you.<br /><br />Edit, or maybe 4 x 10^21. I'm counting 52 unique colors and 13 possible palette colors.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Sun Aug 23, 2015 5:15 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Possible algorithm for converting photos to NES</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I haven't gotten around to writing this, but I've been contemplating something like<br />1- Quantize original image to 54 available colors<br />2- Quantize that image down to 13 colors<br />3- Requantize original directly to target 13 colors, to reduce loss<br />Then:<br />4- Histogram of entire color-reduced picture from step #3. Use most prevalent (&quot;plurality&quot;) color is shared background color<br />5- For each attribute zone (of whatever dimensions; 16x16 down to 8x1), build a histogram of the colors in that zone; ignoring the background color<br />6- Take the four most prevalent palettes per the histograms<br />7- If fewer than 13 colors are present, restart at step #3 with the newer shorter palette<br /><br />Using most frequent colors here will lose regional detail, a different selector could be chosen for that, too...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sun Aug 23, 2015 5:26 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Possible algorithm for converting photos to NES</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">psycopathicteen wrote:</div><div class="quotecontent">Start with a random color palette.  Convert the picture to all 4 palettes.  Then chose the closest pallette for each attribute block.  Then for each color, calculate the average color and round it to the nearest NES color.  Then repeat the process again until it's as accurate as possible.</div><br />This is similar to the <a href="https://en.wikipedia.org/wiki/Linde%E2%80%93Buzo%E2%80%93Gray_algorithm" class="postlink">Linde-Buzo-Gray algorithm</a> or <a href="https://en.wikipedia.org/wiki/K-means_clustering" class="postlink">k-means clustering</a>.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sun Aug 23, 2015 5:26 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Possible algorithm for converting photos to NES</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><a href="http://forums.nesdev.com/viewtopic.php?f=21&amp;t=13014" class="postlink">Didn't we just have this conversation?</a><br /><br />Anyway, it's hard to judge the effectiveness of an algorithm without images showing the result. Also, I don't think your description is detailed enough. Here are the things I don't understand:<br /><br />1- &quot;start with a random color palette&quot;: Why a random palette? How many colors does this palette have and where do they come from?<br /><br />2- &quot;convert the picture to all 4 palettes&quot;: Convert the same image to 4 different palettes? Which palettes are these?<br /><br />3- &quot;Then chose the closest pallette for each attribute block&quot;: from the 4 palettes you mentioned before? Do you mean picking the most accurate 16x16-pixel blocks from the 4 different images?<br /><br />4- &quot;Then for each color, calculate the average color&quot;: I don't understand what I'm supposed to average, because you seem to have mentioned 1 input and 1 output.<br /><br />5- &quot;Then repeat the process&quot;: Didn't the previous steps already result in a complete NES image? I don't see how applying this recursively could make things better.<br /><br />Please explain what you mean in greater detail, and provide a sample picture if possible.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>dougeff</b> [ Sun Aug 23, 2015 5:26 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Possible algorithm for converting photos to NES</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />How about this approach...<br /><br />1.Narrow the original to the 8 most common hues, ignoring their brightness.<br />2.construct a pallette, each has black, white, and 2 unique colors.<br />3.divide the picture into 16x16 chunks, decide which palette it fits best.<br />4.index each 16x16 chunk, dithering with black, white, and those 2 colors.<br />5.reconstruct the image, and attribute table.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>dougeff</b> [ Sun Aug 23, 2015 5:52 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Possible algorithm for converting photos to NES</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Didn't we just have this conversation?</div><br /><br />The old conversation was restricted to 1 pallette (4 color)... The new one seems to be about using all 4 palettes (13 colors).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sun Aug 23, 2015 6:02 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Possible algorithm for converting photos to NES</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If anyone decides to implement this, as an alternative to a random palette, I wonder whether the following might converge to something reasonable faster or more reliably.<br /><br /><tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">0f001020 0f112120 0f172720 0f1a2a20</tt><br />Gray ramp, teals (for sky), oranges (for skin), and greens (for plants)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sun Aug 23, 2015 6:55 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Possible algorithm for converting photos to NES</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">dougeff wrote:</div><div class="quotecontent">The old conversation was restricted to 1 pallette (4 color)</div><br />Oh, I hadn't realized that. My contributions to that thread certainly didn't take this into consideration. Sorry for that! <img src="./images/smilies/icon_mrgreen.gif" alt=":mrgreen:" title="Mr. Green" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>psycopathicteen</b> [ Sun Aug 23, 2015 7:09 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Possible algorithm for converting photos to NES</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><a href="http://forums.nesdev.com/viewtopic.php?f=21&amp;t=13014" class="postlink">Didn't we just have this conversation?</a><br /><br />Anyway, it's hard to judge the effectiveness of an algorithm without images showing the result. Also, I don't think your description is detailed enough. Here are the things I don't understand:<br /><br />1- &quot;start with a random color palette&quot;: Why a random palette? How many colors does this palette have and where do they come from?<br /><br />2- &quot;convert the picture to all 4 palettes&quot;: Convert the same image to 4 different palettes? Which palettes are these?<br /><br />3- &quot;Then chose the closest pallette for each attribute block&quot;: from the 4 palettes you mentioned before? Do you mean picking the most accurate 16x16-pixel blocks from the 4 different images?<br /><br />4- &quot;Then for each color, calculate the average color&quot;: I don't understand what I'm supposed to average, because you seem to have mentioned 1 input and 1 output.<br /><br />5- &quot;Then repeat the process&quot;: Didn't the previous steps already result in a complete NES image? I don't see how applying this recursively could make things better.<br /><br />Please explain what you mean in greater detail, and provide a sample picture if possible.</div><br /><br />In other words, it will keep adjusting both the image and palette until the image no longer changes with each iteration.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>bootmii</b> [ Wed Aug 26, 2015 7:00 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Possible algorithm for converting photos to NES</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />rgb121 is the way to go.<br />MODS: Please lock this thread.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Aug 27, 2015 7:02 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Possible algorithm for converting photos to NES</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The RGB121 technique works fine for stills but not so well if you need more than 256 unique tiles without a huge CHR ROM or you want to use CPU time for something other than the raster effect that powers it. If I weren't working on a paid project right now, I might try implementing this LBG method.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Thu Aug 27, 2015 7:45 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Possible algorithm for converting photos to NES</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The thing is, NES graphics are very primitive, and completely unsuitable for photographic images. No matter how much you try to optimize patterns and palettes, you're still stuck with a certain number of tiles (depending on the mapper), 16x16 or 8x8 (also depending on the mapper) attribute areas using 4 palettes of 3 colors + 1 shared color out of a very limited master palette.<br /><br />RGB121 looks good because it bends the rules. It tricks the system into displaying a picture that deviates from the normal specs, causing colors to blend in a different way. If you're not bending the rules, I don't see how an algorithm would do better than an artist doing the conversion manually using Photoshop/GIMP. Algorithms will certainly give results faster, but hardly better than a good artist, so I don't think we're gonna see any groundbreaking images coming out any algorithm that doesn't bend the rules of the display. Yes, raster effects often steal 100% of the CPU time, but you hardly need that time anyway when you're showing a full screen still image.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>dougeff</b> [ Thu Aug 27, 2015 9:51 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Possible algorithm for converting photos to NES</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I don't expect to see full color pictures, but anime style flat images and reduced color images could be a possibility. There's a printing concept called 'duotone' that might work and produce nice images.<br /><br /><!-- m --><a class="postlink" href="https://en.m.wikipedia.org/wiki/Duotone">https://en.m.wikipedia.org/wiki/Duotone</a><!-- m --><br /><br />Edit: and when people tell me something can't be done, it just encourages me to think of a way to do it. Maybe that's a character flaw in me, I don't know.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>dougeff</b> [ Thu Aug 27, 2015 10:03 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Possible algorithm for converting photos to NES</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Maybe I should explain how to do a duotone, since the Wikipedia page doesn't...<br /><br />First you turn the image into a black and white. Then instead of shades of gray in the palette, you use shades of pink (faces) or shades of blue (other things).

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>