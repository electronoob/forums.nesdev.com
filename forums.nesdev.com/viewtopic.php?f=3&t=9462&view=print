<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Emulator is inexplicably slow!</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Emulator is inexplicably slow!</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=9462">http://forums.nesdev.com/viewtopic.php?f=3&amp;t=9462</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Alegend45</b> [ Mon Nov 05, 2012 2:00 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Emulator is inexplicably slow!</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It's not the CPU emulation, but the PPU emulation. With the PPU enabled, it goes at 15 seconds per frame. It's nearly impossible to test an emulator this slow. But what else could I do? I have no idea why it is this slow anyways.<br /><br /><a href="http://pastebin.com/ceFVAJiv" class="postlink">http://pastebin.com/ceFVAJiv</a>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>mic_</b> [ Mon Nov 05, 2012 2:15 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Emulator is inexplicably slow!</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; switch(color &amp; 0x3F)<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case 0x00:<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; p&#91;0&#93; = 124;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; p&#91;1&#93; = 124;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; p&#91;2&#93; = 124;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;<br /></div><br />I'd suggest getting rid of the switch/cases. If you use a 32-bit pixel format you could replace all that with just:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp; *p = colorLUT&#91;color &amp; 0x3F&#93;;<br /></div><br />Where p would be an uint32_t* and colorLUT would be an array of uint32_t. E.g. colorLUT[0] would be 0xFF7C7C7C.<br /><br />You're missing a bunch of breaks in your cases by the way. Unless you've intended for them to fall through, in which case you really should document that with some comments.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Mon Nov 05, 2012 2:47 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Emulator is inexplicably slow!</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Read up on profiling tools for determining where time is being spent in your emulator. Looking at the code and guessing is a poor way to go about it when you can have the computer determine it for you. Then you know what to focus on.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>snarfblam</b> [ Mon Nov 05, 2012 3:37 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Emulator is inexplicably slow!</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I second the suggestion of using a profiler. I never realized just how useful they are until I actually tried one. I wrote an assembler a while back and it was very slow. I used a profiler to find out exactly where things were getting slowed down, and the bottle neck wasn't where I thought it would be. With a profiler I had the program running ten times as fast in a matter of minutes instead of poking around for hours getting nowhere.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Mon Nov 05, 2012 4:38 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Emulator is inexplicably slow!</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I normally don't post &quot;me too&quot; type stuff, but consider this a third vote for using a profiler.  Many of them take getting used to but the leaning curves usually aren't that big (maybe &quot;moderate&quot; difficulty).  They're worth using, trust us.  :-)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Mon Nov 05, 2012 6:49 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Emulator is inexplicably slow!</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Can you recommend a good profiler?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Mon Nov 05, 2012 7:03 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Emulator is inexplicably slow!</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I use Visual C++ 6.0 for my profiling needs, but does anyone else still use that ancient compiler?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Nov 05, 2012 7:05 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Emulator is inexplicably slow!</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The best profiler depends on what compiler you're currently using.<br /><br />One makeshift substitute for a proper profiler is to run anything with a loop in it in a unit test harness.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Mon Nov 05, 2012 7:24 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Emulator is inexplicably slow!</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Tepples, are you suggesting to break the NES emulator's core loops into lots of small functions that you time individually? I think it would be a nightmare feeding all these useful data (especially the CPU emulator) and meaningfully comparing the speeds.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Nov 05, 2012 7:28 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Emulator is inexplicably slow!</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />That or make it so that individual features of the hardware can be disabled at compile time. For example, turn off all of the PPU except frame timing, turn off sprite processing, turn off pattern fetch and everything after it, turn off compositing and everything after it, and turn off palette lookup and picture generation.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Mon Nov 05, 2012 8:29 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Emulator is inexplicably slow!</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Interesting. So you basically load a ROM and run it for a set period, measuring how much CPU time it uses. The unit test requires that it not be excessively fast or slow. This way if you break some code and make it a lot slower, this automated test will catch it so you know sooner what you changed that slowed it down.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>miker00lz</b> [ Tue Nov 06, 2012 1:26 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Emulator is inexplicably slow!</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />From a quick look at the code, I think you're going to find the vast, vast majority of CPU is spent in PPU:tick() and putpixel(). You really should not be calling a whole separate function just to draw each pixel, that is like the exact opposite of high performance design. When you enter putpixel, you're calculating this whole mess for getting each one's pointer onto the SDL pixel surface:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">uint8_t *p = (uint8_t*)screen-&gt;pixels + ((y * 256 + x) * 3);</div><br /><br />You should probably be using a 32-bit surface instead of 24-bit for one thing, almost all modern systems are using 32-bit color the whole time so it takes less effort for the CPU to actually draw it onto the screen. Plus, you then get benefit of being able to write pixels in a less ugly fashion by treating screen-&gt;pixels as a uint32_t array.<br /><br />More importantly, you should probably calculate the color values for every pixel on a per-scanline basis. After you calculate each pixel of the scanline, you can write them all at once so then not only do you not call an entire function for every single pixel and waste gobs of CPU, but you can just do a single pointer calculation for each scanline and then just increment your offset into the surface array with each, eliminating a TON of multiplication which is pretty CPU intensive.<br /><br />Something along these lines:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">void drawscanline(uint16_t scanline, uint8_t scanline_buffer&#91;256&#93;) {<br />&nbsp; &nbsp; int32_t offset = (int32_t)scanline * screen-&gt;w;<br /><br />&nbsp; &nbsp; for (int32_t x=0; x&lt;256; x++) {<br />&nbsp; &nbsp; &nbsp; &nbsp; ((uint32_t *)screen-&gt;pixels)&#91;offset++&#93; = palette_table&#91;scanline_buffer&#91;x&#93; &amp; 0x3F&#93;;<br />&nbsp; &nbsp; }<br />}<br /></div><br /><br />That code assumes palette_table is an array with each possible color already calculated into an RGB lookup table. This would be about a million times faster than what you're doing. There may be some other problems going on, but this jumped out at me immediately. You also should lock the SDL surface at the start of each frame with SDL_LockSurface(screen), and after the whole frame's been drawn use SDL_UnlockSurface(screen) followed by SDL_UpdateRect(screen, 0, 0, screen-&gt;w, screen-&gt;h). You don't need to use SDL_Flip at all.<br /><br />Btw, I've tried a few ROMs with your emu code so far and they all just show grey. Are there any that work yet? I'd like to try.<br /><br />EDIT: Fyi, if you do decide to go with a palette lookup table (you really should!) then you should be sure that you generate the RGB values using SDL_MapRGB(screen-&gt;format, redval, greenval, blueval) and not a fixed set of hardcoded 32-bit values. The reason for this is that you can be absolutely sure SDL will come up with the right data based on the surface format. If you hardcode, you will have portability issues because the colors will be all screwed up on big-endian systems like PowerPC and ARM if you hardcode x86 little-endian values and vice-versa.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ooPo</b> [ Tue Nov 06, 2012 6:18 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Emulator is inexplicably slow!</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />1) Avoid using these slow functions:<br /><br />memcpy()<br />- Using pointers instead of moving memory around is much nicer.<br /><br />printf()<br />- You're doing a printf() for every CPU-&gt;PPU access. This is very slow.<br /><br />2) Your if statements can be simplified:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp; &nbsp; &nbsp; uint8_t rb(uint16_t addr)<br />&nbsp; &nbsp; &nbsp; &nbsp; {<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; addr &amp;= 0xFFFF;<br /><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(addr &lt; 0x2000)<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return ram&#91;addr&#93;;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(addr &lt; 0x4020)<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return ioregs&#91;addr - 0x2000&#93;;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(addr &lt; 0x6000)<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return exprom&#91;addr - 0x4020&#93;;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(addr &lt; 0x8000)<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return sram&#91;addr - 0x6000&#93;;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return rom&#91;addr - 0x8000&#93;;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br />&nbsp; &nbsp; &nbsp; &nbsp; }<br /></div><br />3) Your putpixel could be a lot better, but that's been commented on already.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Tue Nov 06, 2012 9:11 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Emulator is inexplicably slow!</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Please don't side-step using a profiler first. It's the authority on where the real slowness is.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>miker00lz</b> [ Tue Nov 06, 2012 9:54 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Emulator is inexplicably slow!</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">blargg wrote:</div><div class="quotecontent">Please don't side-step using a profiler first. It's the authority on where the real slowness is.</div><br /><br />Yeah, definitely should profile it. gprof is pretty good and works in both Windows and Linux<br /><br />@Alegend45: If you want to use it, it's easy. Here's how to do it in Windows from the MinGW/MSys build environment, which you can download from this link: <!-- m --><a class="postlink" href="http://sourceforge.net/projects/mingw/files/latest/download?source=files">http://sourceforge.net/projects/mingw/f ... urce=files</a><!-- m --> (you'll still need to compile and install SDL in it first!)<br /><br />Now assuming your emu's source filename is emu.cpp:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">g++ -o emu.exe emu.cpp -pg -std=c++0x `sdl-config --cflags --libs`</div><br /><br />The &quot;-pg&quot; part is what tells it you want to have it generate profile data. Now just run the emu for 10 seconds or so. You'll find it created a file called gmon.out, which contains the profile data it collected. Now run this:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">gprof emu.exe</div><br /><br />Then it will display all the profile data it has. Lots of useful info.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>