<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=2&amp;t=1266" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2006-03-25T12:32:30-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=2&amp;t=1266</id>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2006-03-25T12:32:30-07:00</updated>
<published>2006-03-25T12:32:30-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1266&amp;p=11179#p11179</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1266&amp;p=11179#p11179"/>
<title type="html"><![CDATA[PHA and PHP issue]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1266&amp;p=11179#p11179"><![CDATA[
But you're right. But it wasn't meant to provide timing information. But it describes how things combine. But it gives insight. BUT BUT BUT (sorry, I've had too much of people's counterpoint-happy style).<br /><br />It was an interesting document. Good reading for insights into consistency behind the instructions.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Sat Mar 25, 2006 12:32 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Quietust]]></name></author>
<updated>2006-03-25T12:31:11-07:00</updated>
<published>2006-03-25T12:31:11-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1266&amp;p=11178#p11178</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1266&amp;p=11178#p11178"/>
<title type="html"><![CDATA[PHA and PHP issue]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1266&amp;p=11178#p11178"><![CDATA[
If you want timing information, check out <a href="http://nesdev.com/6502_cpu.txt" class="postlink">64doc</a>.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7">Quietust</a> — Sat Mar 25, 2006 12:31 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[WedNESday]]></name></author>
<updated>2006-03-25T01:58:18-07:00</updated>
<published>2006-03-25T01:58:18-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1266&amp;p=11168#p11168</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1266&amp;p=11168#p11168"/>
<title type="html"><![CDATA[PHA and PHP issue]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1266&amp;p=11168#p11168"><![CDATA[
<div class="quotetitle">teaguecl wrote:</div><div class="quotecontent"><br /><div class="quotetitle">Anes wrote:</div><div class="quotecontent">Is there any docs that explain this or someone that have decoded the opcode completly? Please if so where can i find it?<br /></div><br />I think this might be what you are looking for.  The 6502 instruction set isn't as "clean" as the RISC machines you design in Comp Arch class, but this seems to be a good explaination of it.<br /><a href="http://axis.llx.com/~nparker/a2/opcodes.html" class="postlink">http://axis.llx.com/~nparker/a2/opcodes.html</a></div><br /><br />But it doesn't give exact timing information.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=191">WedNESday</a> — Sat Mar 25, 2006 1:58 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[teaguecl]]></name></author>
<updated>2006-03-24T16:02:44-07:00</updated>
<published>2006-03-24T16:02:44-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1266&amp;p=11155#p11155</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1266&amp;p=11155#p11155"/>
<title type="html"><![CDATA[PHA and PHP issue]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1266&amp;p=11155#p11155"><![CDATA[
<div class="quotetitle">Anes wrote:</div><div class="quotecontent"><br />Is there any docs that explain this or someone that have decoded the opcode completly? Please if so where can i find it?<br /></div><br />I think this might be what you are looking for.  The 6502 instruction set isn't as "clean" as the RISC machines you design in Comp Arch class, but this seems to be a good explaination of it.<br /><a href="http://axis.llx.com/~nparker/a2/opcodes.html" class="postlink">http://axis.llx.com/~nparker/a2/opcodes.html</a><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=29">teaguecl</a> — Fri Mar 24, 2006 4:02 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Anes]]></name></author>
<updated>2006-03-23T19:40:29-07:00</updated>
<published>2006-03-23T19:40:29-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1266&amp;p=11119#p11119</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1266&amp;p=11119#p11119"/>
<title type="html"><![CDATA[PHA and PHP issue]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1266&amp;p=11119#p11119"><![CDATA[
ok thanks guys, all clear.<br /><br />I wanted to know if what im doing is a waste of time, its already done or can be applied another objection that could be done.<br /><br />Im actually writing a 6502 emulator at "functional level" (well thats how i call it) in c++ i mean oop. So i have classes for the ALU/EU/Registers, etc,all this took me to really decode the opcode (instead of having an array of values/structures that inform addrmode/cycles,etc). <br />I mean im trying to decode it to have a "6502 opcode format" wich each bit/group of bits says what the IC want to do.. (addr mode, load/store, etc) as i havent found docs about this.<br />Is there any docs that explain this or someone that have decoded the opcode completly? Please if so where can i find it?<br /><br />thanks again.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=72">Anes</a> — Thu Mar 23, 2006 7:40 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2006-03-23T19:24:53-07:00</updated>
<published>2006-03-23T19:24:53-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1266&amp;p=11118#p11118</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1266&amp;p=11118#p11118"/>
<title type="html"><![CDATA[PHA and PHP issue]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1266&amp;p=11118#p11118"><![CDATA[
All 6502 instructions fetch at least two instruction bytes; it's a limitation of the underlying microarchitecture. "Implied" means throw away the second byte. "Immediate" means use the second byte's value as the instruction's operand. If the instruction advances the program counter by 1 and not 2, then it's "implied" and not "immediate".<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Thu Mar 23, 2006 7:24 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Quietust]]></name></author>
<updated>2006-03-23T19:25:20-07:00</updated>
<published>2006-03-23T19:24:17-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1266&amp;p=11117#p11117</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1266&amp;p=11117#p11117"/>
<title type="html"><![CDATA[PHA and PHP issue]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1266&amp;p=11117#p11117"><![CDATA[
<strong>All</strong> implied addressing instructions (except for BRK) read the byte immediately after the opcode, though they do not increment the program counter.<br /><br />Also, the 6502 can easily perform multiple <em>tasks</em> per cycle - the program counter and stack pointer are special registers that can be post-incremented on any cycle, and various flags in the status register are frequently updated during other operations. However, of the multiple operations that can occur during a single cycle, only one of these can involve a memory access (for obvious reasons).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7">Quietust</a> — Thu Mar 23, 2006 7:24 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Anes]]></name></author>
<updated>2006-03-23T19:19:14-07:00</updated>
<published>2006-03-23T19:19:14-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1266&amp;p=11116#p11116</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1266&amp;p=11116#p11116"/>
<title type="html"><![CDATA[PHA and PHP issue]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1266&amp;p=11116#p11116"><![CDATA[
Reading what the "NMOS 65xx Instructions Set" doc says:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">PHA, PHP<br /><br />        #  address R/W description<br />       --- ------- --- -----------------------------------------------<br />        1    PC     R  fetch opcode, increment PC<br />        2    PC     R  read next instruction byte &#40;and throw it away&#41;<br />        3  $0100,S  W  push register on stack, decrement S<br /><br /></div><br /><br />First PHP/PHA is mostly known as an "implied" instruction while i think its not.It is an "inmediate" one, since as we can see on cycle 2: "read the next instruction byte" and i have made some test to with decoding the byte. Anyway, thats my point of view and doesnt affect nes devlprs or nesem devlprs (i think)<br /><br />What i dont know how the IC can perform 2 task in only one cycle i mean cycle 1 "fetch xxx, increment xxx" and then cycle 3 too: "Push xxx to stack, decrement xxx"<br /><br />thanks in advance.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=72">Anes</a> — Thu Mar 23, 2006 7:19 pm</p><hr />
]]></content>
</entry>
</feed>