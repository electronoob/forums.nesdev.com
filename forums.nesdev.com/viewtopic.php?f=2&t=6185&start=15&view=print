<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Ack - another tile data compressor</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Ack - another tile data compressor</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=6185">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=6185</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>4</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ReaperSMS</b> [ Sat Mar 20, 2010 12:24 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If you moved the y/ptr increment around a bit, you could avoid the need for the bit or the asl, as lda will set the N flag appropriately.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>cadahl</b> [ Sat Mar 20, 2010 3:38 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Ah. I think I'll leave that alone for now, I replaced the ASL with "CMP #$80 / BCC" because I do need A unaffected. It's not a hotspot and this, I think, is easier to read. Thanks though. Very thankful for any hints you guys can provide. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />
<br />
<br />One thing I'm wondering, and I think I haven't seen anything on this, are there costs other than the obvious cycle counts when setting up PPU addressing with the $2006 register? Penalties for switching between R/W:ing?
<br />As a PC programmer I'm used to graphics hardware being very far from the CPU with many deep pipelines in between, so almost anything other than streaming data to the "PPU" is expensive.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sat Mar 20, 2010 5:23 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">cadahl wrote:</div><div class="quotecontent">One thing I'm wondering, and I think I haven't seen anything on this, are there costs other than the obvious cycle counts when setting up PPU addressing with the $2006 register?</div><br />You have to either wait for vertical blanking or force a blank screen. The codec I've been working on decodes four tiles per frame to an unused part of the stack so that I can decompress with the screen turned on if necessary. That way, I can do the decompression during draw time and blast it out to the PPU with a partially unrolled loop during vertical blanking.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Penalties for switching between R/W:ing?</div>
<br />Reading from VRAM has numerous caveats: <ul><li>You usually have to seek (two writes to $2006) before you start to read or write. </li><li>You have to discard the first byte you read due to PPU pipeline delay. </li><li>You have to do it all during vertical or forced blanking. </li><li>If you're playing sampled sound, the reading will occasionally skip a byte. </li></ul>
<br />But these caveats were still not enough to stop plenty of CNROM games from using one-third of CHR ROM for arbitrary data storage.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>cadahl</b> [ Sun Mar 21, 2010 1:42 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thanks tepples.
<br />
<br />I implemented the Huffman decoding and.. man is it ever slow. I should have listened to Tokumarus warning. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /> It currently takes (guessing) about a second to decompress a bank full of tiles, that's almost useless IMHO.
<br />
<br />De-HuffmanEncode: <a href="http://code.google.com/p/artwork-compression-kit/source/browse/trunk/src/deackNES/deack_huffman.asm?spec=svn14&amp;r=14" class="postlink">http://code.google.com/p/artwork-compression-kit/source/browse/trunk/src/deackNES/deack_huffman.asm?spec=svn14&amp;r=14</a>
<br />(Huffman_Init and Huffman_ReadByte are the starting points in that file)
<br />
<br />De-NesEncode, optimized and fixed since last time: <a href="http://code.google.com/p/artwork-compression-kit/source/browse/trunk/src/deackNES/deack.asm?spec=svn14&amp;r=14" class="postlink">http://code.google.com/p/artwork-compression-kit/source/browse/trunk/src/deackNES/deack.asm?spec=svn14&amp;r=14</a>
<br />
<br />Starting to think it's better to drop Huffman for and see if Rice/Golomb/Elias is much faster for variable bitlength coding, or leave it byte-oriented. (The other part seems fast enough)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sun Mar 21, 2010 2:12 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />My decoder was very slow too, I favored code size rather than speed. I believe these complex schemes will always be significantly slower, and that's why I'm pursuing something "lighter".

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>cadahl</b> [ Sun Mar 21, 2010 2:29 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">My decoder was very slow too, I favored code size rather than speed. I believe these complex schemes will always be significantly slower, and that's why I'm pursuing something "lighter".</div>
<br />
<br />Other than RLE? What sort of characteristics are you after? (random access etc)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sun Mar 21, 2010 2:37 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">cadahl wrote:</div><div class="quotecontent">Other than RLE? What sort of characteristics are you after? (random access etc)</div>
<br />I'd like something aware that it's dealing with 2bpp bitmaps, and could take advantage of more kinds of spacial redundancy than RLE can.
<br />
<br />It would probably have to be something byte-aligned, because reading from a stream of bits seems to be a huge bottleneck.
<br />
<br />I'm open to ideas if you have any. =)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>cadahl</b> [ Sun Mar 21, 2010 2:40 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Well there's always the NesEncoder part of my scheme. Without the Huffman coding, SMB.chr is around 5800 bytes instead of 5200 but that's still fairly good starting from 8192 bytes.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sun Mar 21, 2010 3:18 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yes, it's very interesting.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sun Mar 21, 2010 6:23 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hey cadahl, I'm taking a look at your compression scheme and I have a question: Does the "group repeat" feature ever get used? I find it hard to believe that someone would repeat 4 whole tiles in the same tileset, specially considering they'd have to be aligned to a 4-tile boundary. So I was wondering if you have any statistics about how often it's used in the tilesets you tested. I wonder if it wouldn't be better to just give the first pattern in the group the option to use all 8 compression modes too.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>cadahl</b> [ Sun Mar 21, 2010 6:57 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Very good question. To be honest, those tend to be used mostly for large empty areas. But there's another case, when you have multiple pages of tiles in order to animate (please correct me here if I'm mistaken), you tend to have lots of duplicated tiles for the static stuff. This allows a group to refer back up to an offset of one bank.
<br />
<br />Now.. I got the idea from the corpus .chr's... but maybe when you use compression you'd never use bank/page flipping in that way. So that feature could be useless in practice. And I agree it'd be nicer without it.
<br />
<br />Edit: clarified wording. I'll read this over again tomorrow. Been chasing a deadline. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sun Mar 21, 2010 7:25 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">Does the "group repeat" feature ever get used?</div>
<br />To elaborate on what cadahl said: There are big blocks of X's representing unused tiles in a lot of NROM-128 games, even official ones. LJ65 has a few blocks of X's in one pattern table and a completely blank second pattern table. Concentration Room has over a kilobyte of X's on titlegfx.chr because I'm still figuring out how I'll do the cut scenes.
<br />
<br />To use CHR compression, you need to use CHR RAM. There are two ways to use bankswitching with CHR RAM: either switch between two 4 KiB pages (much like in Dr. Mario) or use more than 8 KiB of CHR RAM. In a case like Dr. Mario, a program would just load the basic tiles to both pages. And only a couple boards take more than 8 KiB of CHR RAM, one of them being CPROM used for Videomation. You'd probably just want to decompress the CHR once, blast it over all pages, and then overwrite those few tiles that need animated.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sun Mar 21, 2010 7:32 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">cadahl wrote:</div><div class="quotecontent">Very good question. To be honest, those tend to be used mostly for large empty areas in a bank.</div><br />It makes sense to have empty areas in a game that uses CHR-ROM, but in order to use your compression the game must use CHR-RAM, in which case it would be better to compress just the tiles which are actually used. It would make no sense to compress empty tiles.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">But there's another case, when you have multiple banks in order to animate, you tend to have lots of duplicated tiles for the static stuff. This allows a group to refer back up to an offset of one bank.</div>
<br />That makes sense for CHR-ROM, but not for CHR-RAM. Since you can update as many tiles as you want you'd hardly waste time redrawing tiles that look the same. Also, if I understood it correctly, you can only copy data from the same bank, that has already been decompressed, so even if the tiles were repeated in different banks you wouldn't be able to make use of that because the banks are encoded individually, isn't that right?
<br />
<br />We often test compression schemes and measure their efficiency by compressing whole sets of 512 tiles, but not many commercial games compress their tiles like that. They often use smaller sets, and combine them as necessary depending on the level or whatever. For example, it makes sense to have a block with the main character's tiles, a block for each level containing the background graphics and sprites used in that level, a block for common items, things like that.
<br />
<br />The Codemasters codec for example, uses only 1 byte to indicate how many tiles are in a block, because it was never intended for encoding a large number of tiles in the same block.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>cadahl</b> [ Mon Mar 22, 2010 12:25 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">It makes sense to have empty areas in a game that uses CHR-ROM, but in order to use your compression the game must use CHR-RAM, in which case it would be better to compress just the tiles which are actually used. It would make no sense to compress empty tiles.</div><br /><br />Good point. Maybe a front-end with skip lists, an address table or something might be useful? Or it could be entirely manual.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">... up to an offset of one bank.</div><br />That makes sense for CHR-ROM, but not for CHR-RAM. Since you can update as many tiles as you want you'd hardly waste time redrawing tiles that look the same. Also, if I understood it correctly, you can only copy data from the same bank, that has already been decompressed, so even if the tiles were repeated in different banks you wouldn't be able to make use of that because the banks are encoded individually, isn't that right?<br /></div><br /><br />Yep, the offset is up to -8192 bytes, so you can reach from the last to the first pattern in a bank (But not past the beginning since the encoder only knows this bank.) <br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">...smaller sets, and combine them as necessary...</div>
<br />
<br />Now that you say it, it makes all the sense in the world, with CHR-RAM being about fine grained control. (At least I guess the price was steep compared to ROM in the past so you needed a *good* reason to use it?)
<br />
<br />Plenty to think about. I think I'll make this less bank-oriented, and I have another idea to pursue: using previously decoded tiles as "predictors" and encoding the EOR residual only. 
<br />
<br />There are plenty of cases where tiles are similar but not identical. I think the decoder would be fast enough even if it 1) copies a previous pattern, 2) EORs the residual error on top (encoded with current modes) and 3) writes the pattern to VRAM. I'll experiment with the encoder and see what wins can be had.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Mon Mar 22, 2010 11:57 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I imagined something like using mode 7 to indicate that the encoded tile should be EOR'ed with a previous one.
<br />
<br />In this case, another byte would be necessary: 3 bits would indicate the encoding mode and 5 bits would point to a previous pattern. If mode 7 is used again the next byte would contain the actual compression mode and the 2 5-bit references would form a 10-bit reference, enough to select any pattern in the 8KB space.
<br />
<br />I don't know if that's the best idea, because the 2 bytes necessary to point to a distant pattern may be a lot of overhead.
<br />
<br />Another thing I thought about was making use of the fact that mode 0 (raw pattern) would never be used to encode the residual error. I can't think of anything right now, but that's something to keep in mind.
<br />
<br />Another idea I had was to use a command to redefine the common patterns, to make the whole scheme more adaptive.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>4</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>