<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - OAM/DMC DMA tests</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="https://forums.nesdev.com/">https://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">OAM/DMC DMA tests</span><br /><span class="gensmall"><a href="https://forums.nesdev.com/viewtopic.php?f=3&amp;t=14120">https://forums.nesdev.com/viewtopic.php?f=3&amp;t=14120</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>3</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Fri Apr 22, 2016 2:34 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>OAM/DMC DMA tests</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />cpow ran some tests with visual2a03 to delve further into DMA behavior.  Though his notes were a bit scattered for my tastes, and left me with a few unanswered questions.<br /><br />So using his notes as a base, I ran my own tests on visual2a03 to verify them, and to fill in a few of the gaps.<br /><br />Here are my findings:<br /><br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">==========================================<br />==========================================<br />==========================================<br />General<br />==========================================<br /><br /><br />DMA unit alternates between 'get' cycles and 'put' cycles.&nbsp; Values are read on 'get' cycles and written on 'put' cycles.&nbsp; 'get' cycles can never write -- 'put' cycles can read, but discard any value read.&nbsp; DMA unit seems to alternate between get/put even when DMA is not active -- effectively meaning that even cycles are 'get' cycles, and odd cycles are 'put' cycles.<br /><br />&quot;Dummy reads&quot; ALWAYS seem to be performed from whatever address the CPU will want to read from next -- that is, whatever address will be read from once the DMA is complete.<br /><br /><br />When the DMA unit needs to cut into the CPU, it begins a 'halt' process.&nbsp; The process appears to be as follows:<br /><br />&nbsp; &nbsp; 1)&nbsp; The 'halt attempt' cycle -- Let the CPU start its next cycle.&nbsp; <br />&nbsp; &nbsp; &nbsp; &nbsp; a)&nbsp; If this cycle is a write, perform it normally.&nbsp; Repeat step 1<br />&nbsp; &nbsp; &nbsp; &nbsp; b)&nbsp; If this cycle is a read, hijack the read, discard the value, and prevent all other actions that occur on this cycle (PC not incremented, etc).<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Presumably, side-effects from performing the read still occur.&nbsp; Proceed to step 2<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <br />&nbsp; &nbsp; 2)&nbsp; For DMC DMA ONLY -- do another dummy read, discarding the result.<br />&nbsp; &nbsp; <br />&nbsp; &nbsp; 3)&nbsp; If the DMA unit is currently on a 'put' cycle, do another dummy read&nbsp; ('alignment' cycle)<br />&nbsp; &nbsp; <br />&nbsp; &nbsp; 4)&nbsp; Actually perform the DMA<br />&nbsp; &nbsp; &nbsp; &nbsp; a)&nbsp; For DMC, this performs a single read cycle, then returns control to main CPU logic<br />&nbsp; &nbsp; &nbsp; &nbsp; b)&nbsp; For OAM, this performs 256 alternating reads/writes as you'd expect<br />&nbsp; &nbsp; &nbsp; &nbsp; <br />&nbsp; &nbsp; &nbsp; &nbsp; <br />Note that the DMA is effectively delayed as it waits for all CPU write cycles to complete.&nbsp; Though this is just a delay, and does not actually alter the length of the DMA<br /><br />What DOES alter the length of the DMA is the optional alignment cycle.<br /><br /><br /><br />==========================================<br />==========================================<br />==========================================<br />DMC<br />==========================================<br /><br />DMC DMAs appear to try to halt during the 'put' phase -- meaning they will take 4 cycles normally:<br />&nbsp; &nbsp; 1) 'put' - halt<br />&nbsp; &nbsp; 2) 'get' - extra DMC dummy read<br />&nbsp; &nbsp; 3) 'put' - dummy cycle for alignment<br />&nbsp; &nbsp; 4) 'get' - DMA<br />&nbsp; &nbsp; <br />When DMC halt happens &quot;on a write cycle&quot;, this makes it take 3 cycles because alignment can be skipped:<br />&nbsp; &nbsp; *) 'put' - initial halt attempt -- but if a write cycle, it's delayed<br />&nbsp; &nbsp; 1) 'get' - attempt to halt again -- successful this time because it's a read cycle<br />&nbsp; &nbsp; 2) 'put' - extra DMC dummy read<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; alignment not needed<br />&nbsp; &nbsp; 3) 'get' - DMA<br />&nbsp; &nbsp; <br />&nbsp; &nbsp; (note the '*' write cycle is performed normally, and therefore does not count as a stolen cycle, hence DMC only steals 3 cycles here)<br />&nbsp; &nbsp; <br />&nbsp; &nbsp; <br />However the DMC will steal 4 cycles if it attempts to halt during the first write of a RMW instruction (INC/DEC/etc)<br />&nbsp; &nbsp; *) 'put' - halt attempt - fails because CPU is writing (first RMW write)<br />&nbsp; &nbsp; *) 'get' - halt attempt - fails because CPU is writing (second RMW write)<br />&nbsp; &nbsp; 1) 'put' - halt attempt - successful<br />&nbsp; &nbsp; 2) 'get' - extra DMC dummy read<br />&nbsp; &nbsp; 3) 'put' - alignment<br />&nbsp; &nbsp; 4) 'get' - DMA<br /><br />The above logic matches for 3 consecutive writes (interrupts/BRK).&nbsp; If the halt is during the 1st or 3rd write, it'll steal 3 cycles... but if it's during the 2nd write, it'll steal 4.<br /><br />==========================================<br />==========================================<br />==========================================<br />OAM / 4014<br />==========================================<br />&nbsp; &nbsp; <br />OAM DMA behaves similarly, but skips the DMC-only dummy read.&nbsp; Meaning OAM will take 513 / 514 cycles depending on whether or not<br />the alignment cycle is needed<br /><br />Assuming the write is performed with a STA/STX/STY:<br />&nbsp; &nbsp; *)&nbsp; $4014 write cycle triggering OAM DMA<br />&nbsp; &nbsp; 1)&nbsp; halt attempt - successful (next cycle is a read for the next opcode, or is an interrupt)<br />&nbsp; &nbsp; ?)&nbsp; possible alignment<br />&nbsp; &nbsp; 2)&nbsp; 'get' - read 1st byte<br />&nbsp; &nbsp; 3)&nbsp; 'put' - write 1st byte<br />&nbsp; &nbsp; &nbsp; &nbsp; ...<br />&nbsp; &nbsp; &nbsp; &nbsp; <br />&nbsp; &nbsp; &nbsp; &nbsp; <br />Writing to 4014 twice consecutively (INC/DEC/etc) holds expected logic.&nbsp; Both writes will perform, followed by the halt cycle,<br />possible alignment, then 512 cycles of DMA.<br /><br /><br /><br />==========================================<br />==========================================<br />==========================================<br />Both at the same time<br />==========================================<br /><br />Things to note:<br />- DMC DMA trumps OAM DMA<br />- A DMC halt is considered successful if it happens on an OAM DMA cycle<br />- under no circumstances can a DMC DMA cycle immediately follow a successful DMC halt cycle.&nbsp; There must be at least 1 dummy cycle, alignment cycle, or OAM DMA cycle between the halt and the DMA.<br /><br /><br />Examples:<br />&nbsp; &nbsp; Cycles marked with '+' are &quot;DMC stolen&quot;<br />&nbsp; &nbsp; p = must be a 'put' cycle (remember DMC always halts on a put cycle)<br />&nbsp; &nbsp; g = must be a 'get' cycle <br />&nbsp; &nbsp; * = normal, unaffected CPU cycle<br /><br />DMC halts on the $4014 write cycle:<br />&nbsp; &nbsp; p *)&nbsp; &nbsp; $4014 write - unsuccessful DMC halt<br />&nbsp; &nbsp; g 1)&nbsp; &nbsp; DMC &amp; OAM halt -- successful<br />&nbsp; &nbsp; p 2)&nbsp; &nbsp; DMC dummy / alignment&nbsp; &nbsp; &nbsp; not a DMC stolen cycle, since this would have to be alignment regardless<br />&nbsp; &nbsp; g+3)&nbsp; &nbsp; DMC DMA<br />&nbsp; &nbsp; p+4)&nbsp; &nbsp; re-alignment<br />&nbsp; &nbsp; g 5)&nbsp; &nbsp; OAM DMA read 1<br />&nbsp; &nbsp; p 6)&nbsp; &nbsp; OAM DMA write 1<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ...<br />&nbsp; &nbsp; &nbsp; &nbsp; <br />DMC halts 1 cycle after $4014 write:<br />&nbsp; &nbsp; g *)&nbsp; &nbsp; $4014 write<br />&nbsp; &nbsp; p 1)&nbsp; &nbsp; DMC &amp; OAM halt - successful<br />&nbsp; &nbsp; g 2)&nbsp; &nbsp; OAM read 1&nbsp; &nbsp; &nbsp; (DMC dummy)<br />&nbsp; &nbsp; p 3)&nbsp; &nbsp; OAM write 1&nbsp; &nbsp; &nbsp;(DMC alignment)<br />&nbsp; &nbsp; g+4)&nbsp; &nbsp; DMC<br />&nbsp; &nbsp; p+5)&nbsp; &nbsp; re-alignment<br />&nbsp; &nbsp; g 6)&nbsp; &nbsp; OAM read 2<br />&nbsp; &nbsp; p 7)&nbsp; &nbsp; OAM write 2<br />&nbsp; &nbsp; ...<br />&nbsp; &nbsp; <br />&nbsp; &nbsp; <br />This logic follows for 2 consecutive writes to $4014.<br /><br /><br /><br /><br />==========================================<br />==========================================<br />==========================================<br />What I was not able to test<br />==========================================<br /><br /><br />Visual2a03 gave EXTREMELY weird behavior for OAM DMA.&nbsp; I suspect it needs more warmup time.&nbsp; OAM DMA was fetching from the wrong address, and the address being read from was being mangled by DMC DMAs, which was resulting in 700+ stolen cycles... and would also result in extremely corrupted sprites on a real system.&nbsp; Because of this I was unable to test the following:<br /><br />1)&nbsp; What happens on edge case when DMC DMA occurs at the very end of OAM DMA?<br />2)&nbsp; If you INC $4014, does it DMA from the pre-incremented value or post-incremented?</div><br /><br /><br />I also uploaded the unpolished / scattered notes which has the results of my tests as well as links to the test programs I ran:<br /><br /><!-- m --><a class="postlink" href="https://www.dropbox.com/s/afvbxers66v9994/dma.txt?dl=0">https://www.dropbox.com/s/afvbxers66v9994/dma.txt?dl=0</a><!-- m -->

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Fri Apr 22, 2016 12:46 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: OAM/DMC DMA tests</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I just want to point out that what you describe as &quot;halt attempt&quot; is describing what the 6502 RDY pin does.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Zepper</b> [ Fri Apr 22, 2016 2:26 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: OAM/DMC DMA tests</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">If you INC $4014, does it DMA from the pre-incremented value or post-incremented?</div><br /><strong>Both.</strong> It'll perform a read from $4014 (dummy, should return $40), then write it to $4014 (DMA-ing). The value $40 becomes $41 and another DMA is performed. Now waiting for someone to correct me. <img src="./images/smilies/icon_mrgreen.gif" alt=":mrgreen:" title="Mr. Green" />  <img src="./images/smilies/icon_rolleyes.gif" alt=":roll:" title="Rolling Eyes" /> <br /><br />Well, that's the expected operation considerating the INC timing diagram. What happens during the 1st or 2nd sprite DMA is another subject. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Fri Apr 22, 2016 2:35 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: OAM/DMC DMA tests</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />DMA can't start until R/W goes high, because that's how the 6502 RDY signal works.<br />It definitely only does one of the two DMAs, but I don't remember which.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Zepper</b> [ Fri Apr 22, 2016 2:47 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: OAM/DMC DMA tests</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">lidnariq wrote:</div><div class="quotecontent">DMA can't start until R/W goes high, because that's how the 6502 RDY signal works.<br />It definitely only does one of the two DMAs, but I don't remember which.</div><br /><br />So... an INC $4014 wouldn't be correctly performed in the current emulators. Why would it fail in the first write to $4014? A read from $4014 returns $40; then a write should occur. Where is my mistake?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Fri Apr 22, 2016 3:16 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: OAM/DMC DMA tests</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Zepper wrote:</div><div class="quotecontent">So... an INC $4014 wouldn't be correctly performed in the current emulators. Why would it fail in the first write to $4014? A read from $4014 returns $40; then a write should occur. Where is my mistake?</div><br /><br />You can think of it this way:<br /><br />A $4014 write does not immediately perform a DMA.  Instead, it sets a flag to indicate that a DMA should start on the next CPU read cycle.<br /><br />If two $4014 writes happen back-to-back (as with INC), they both set the flag, but no DMA has been performed yet because there hasn't been a read cycle.<br /><br /><br /><div class="quotetitle">lidnariq wrote:</div><div class="quotecontent">I just want to point out that what you describe as &quot;halt attempt&quot; is describing what the 6502 RDY pin does.</div><br /><br />Yeah I'm pretty sure a lot of this info was known already.  I know cpow posted several posts where he tested a lot of this and came up with similar results.  I just wanted to test it myself because the information was scattered and often unclear.<br /><br />I get feedback sometimes that people like when I make these kinds of summaries because I guess the way I explain it is helpful?  *shrug*  So I figured I'd post it.  =P<br /><br />If nothing else, doing these tests has certainly helped ME understand it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Zepper</b> [ Fri Apr 22, 2016 4:55 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: OAM/DMC DMA tests</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Disch wrote:</div><div class="quotecontent">A $4014 write does not immediately perform a DMA.  Instead, it sets a flag to indicate that a DMA should start on the next CPU read cycle.<br /><br />If two $4014 writes happen back-to-back (as with INC), they both set the flag, but no DMA has been performed yet because there hasn't been a read cycle.</div><br />Wait. Lemme think...<br />1. read instruction opcode <span style="color: #008000">($EE)</span><br />2. read low byte of address <span style="color: #FF0000">($14)</span><br />3. read high byte of address <span style="color: #FF0000">($40)</span><br />4. read from effective address (<span style="color: #FF0000">$4014</span> should return <span style="color: #008000">$40</span>)<br />5. write the value back to effective address (should set the <strong>SPRDMA</strong> flag?)<br />6. do the operation (INC) and write the new value (<span style="color: #008000">$41</span>) to the effective address (<strong>SPRDMA</strong> flag already set)<br />*7. read the <em>next instruction opcode</em> (trigger <strong>SPRDMA</strong>?)<br /><div class="quotetitle">Disch wrote:</div><div class="quotecontent">I get feedback sometimes that people like when I make these kinds of summaries because I guess the way I explain it is helpful?  *shrug*  So I figured I'd post it.  =P</div><br /><strong><span style="text-decoration: underline">Always</span></strong> welcome. ^_^;;<br /><br />EDIT: *I mean... if the SPRDMA flag is waiting for a CPU read to trigger, it should do on the first cycle of the next instruction... no??

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Fri Apr 22, 2016 5:53 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: OAM/DMC DMA tests</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Your summary looks correct.<br /><br /><br />- write: 1st $4014 write (original value)<br />- write: 2nd $4014 write (new value)<br />- read: next opcode -- but DMA halts here, so this read is thrown away<br />&gt; optional read:  next opcode again &amp; thrown away.  This only done if this is an odd cycle (DMA unit has to align so reads are on even cycles)<br />- read:  $xx00<br />- write: $2004<br />- read: $xx01<br />- write: $2004<br />...<br />- read: $xxFF<br />- write: $2004<br />- read: next opcode

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Rahsennor</b> [ Fri Apr 22, 2016 7:06 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: OAM/DMC DMA tests</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Disch wrote:</div><div class="quotecontent">I get feedback sometimes that people like when I make these kinds of summaries because I guess the way I explain it is helpful?  *shrug*  So I figured I'd post it.  =P<br /><br />If nothing else, doing these tests has certainly helped ME understand it.</div><br /><br />I've been wanting to make the DMC reads in my NSF player accurate for some time now (not that it actually matters for an NSF player), and this is the first time anyone has described it in terms I can understand. Thank you muchly.<br /><br />One quick question: is the DMA put/get cycle in any way related to the APU clock? Are they aligned in a specific way, or can the alignment change between resets?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Fri Apr 22, 2016 7:39 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: OAM/DMC DMA tests</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Glad it's useful!   <img src="./images/smilies/icon_mrgreen.gif" alt=":mrgreen:" title="Mr. Green" /> <br /><br />Regarding your questions:  I have no idea.  This is something I wouldn't want to test on visual2a03 -- but would want to do on a real cart... and making an actual test ROM for it would be a lot of work  =x

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Rahsennor</b> [ Fri Apr 22, 2016 9:24 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: OAM/DMC DMA tests</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I was hoping someone might have traced the circuit to see if they were driven by the same divider. Never mind.<br /><br />The reason I asked is that if the APU (and therefore DMC output unit) always clocks on a &quot;get&quot; cycle, that might explain why the DMC DMA always starts on a &quot;put&quot; cycle.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Fri Apr 22, 2016 9:36 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: OAM/DMC DMA tests</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />They're the same divider. In Visual2A03 they're called <em>apu_clk1</em> and <em>apu_clk2e</em> and control the OAM DMA cadence. Tracing down the exact even/odd clock used by the DPCM DMA is more of a pain, but I see <em>apu_/clk2</em> poking around it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Rahsennor</b> [ Fri Apr 22, 2016 11:27 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: OAM/DMC DMA tests</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Chip internals are way beyond me, so thanks for looking into it.<br /><br />I implemented the above logic for DMC DMA in my NSF player, and got... no observable result, as expected. <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" /> It still passes all the same tests as it did before, but I don't have anything picky enough to spot the difference.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>fred</b> [ Sat Apr 23, 2016 3:11 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: OAM/DMC DMA tests</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">2)  If you INC $4014, does it DMA from the pre-incremented value or post-incremented?</div><br />Visual2A03 seems to be able to DMA only from zero page, even though I can see enough memory for two pages. Hmm...<br /><br /><br />Btw, can someone clarify for me what the wiki means here regarding DMAs? <em>&quot;1 dummy read cycle while waiting for writes to complete, +1 if on an odd CPU cycle, then 256 alternating read/write cycles.&quot;</em><br />Does the &quot;while waiting for writes to complete&quot; refer to what happens if you R&amp;W(2 write cycles) to 0x4014? Isn't it easier to say that a DMA (and only one DMA) starts after an instruction finishes? Did I miss something here or is it referring to something else?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Rahsennor</b> [ Sat Apr 23, 2016 5:36 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: OAM/DMC DMA tests</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">fred wrote:</div><div class="quotecontent">Isn't it easier to say that a DMA (and only one DMA) starts after an instruction finishes? Did I miss something here or is it referring to something else?</div><br />The DMA starts after the <em>writes</em> finish. The DMA unit has no knowledge of where instructions start and end. It can only watch the bus to see if the CPU is writing or reading, and it can only pause the CPU after a read, so it always waits for a single read to complete before it starts. The result of that read is then discarded, turning it into a dummy read.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>3</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>