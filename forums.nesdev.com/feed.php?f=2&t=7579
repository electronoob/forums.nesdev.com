<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=2&amp;t=7579" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2011-03-22T17:17:32-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=2&amp;t=7579</id>
<entry>
<author><name><![CDATA[qbradq]]></name></author>
<updated>2011-03-22T17:17:32-07:00</updated>
<published>2011-03-22T17:17:32-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7579&amp;p=75707#p75707</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7579&amp;p=75707#p75707"/>
<title type="html"><![CDATA[Need Help Optimizing Platformer Background Collision]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7579&amp;p=75707#p75707"><![CDATA[
<div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><br />I have to agree that even 6 scanlines per object sounds very reasonable if you are doing proper physics and collisions for all of them. A lot of games don't even apply the same rules to all objects, since not all of them need such complex handling. Some objects don't move at all, others are always on the floor and never move vertically, and most times they can get by with fewer collision points than the main character, so you can usually save some processing time in those cases.<br /></div><br /><br />Right, there will be many more types of objects in the game, such as NPCs, pick-up-able items, attack hit boxes and shields. None of these objects have an applied velocity, nor do they collide with the background. The only processing they require is pre-calculating the bounding boxes for the object to object collision phase.<br /><br />Even for objects that do need complex processing if they have a zero X speed I skip the bottom half of the routine. Every complex object has some Y speed every frame due to gravity.<br /><br />Thanks again for the input! This type of semi-rhetorical questioning is very helpful to me, and hopefully to others that find this thread.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3706">qbradq</a> — Tue Mar 22, 2011 5:17 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[qbradq]]></name></author>
<updated>2011-03-22T17:04:56-07:00</updated>
<published>2011-03-22T17:04:56-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7579&amp;p=75706#p75706</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7579&amp;p=75706#p75706"/>
<title type="html"><![CDATA[Need Help Optimizing Platformer Background Collision]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7579&amp;p=75706#p75706"><![CDATA[
6 scanlines per object. I have 1 player, 4 mobiles and 11 projectiles possible giving me a worst-case of 96 lines. This does not include AI or object to object collision detection or music.<br /><br />I suppose I could lower the projectile count. This more of a Zelda II affair anyhow. That would help with scaling the object to object collisions as well.<br /><br />Thanks for your input!<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3706">qbradq</a> — Tue Mar 22, 2011 5:04 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2011-03-22T16:55:52-07:00</updated>
<published>2011-03-22T16:55:52-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7579&amp;p=75705#p75705</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7579&amp;p=75705#p75705"/>
<title type="html"><![CDATA[Need Help Optimizing Platformer Background Collision]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7579&amp;p=75705#p75705"><![CDATA[
I have to agree that even 6 scanlines per object sounds very reasonable if you are doing proper physics and collisions for all of them. A lot of games don't even apply the same rules to all objects, since not all of them need such complex handling. Some objects don't move at all, others are always on the floor and never move vertically, and most times they can get by with fewer collision points than the main character, so you can usually save some processing time in those cases.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Tue Mar 22, 2011 4:55 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Drag]]></name></author>
<updated>2011-03-22T16:05:41-07:00</updated>
<published>2011-03-22T16:05:41-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7579&amp;p=75703#p75703</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7579&amp;p=75703#p75703"/>
<title type="html"><![CDATA[Re: Need Help Optimizing Platformer Background Collision]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7579&amp;p=75703#p75703"><![CDATA[
<div class="quotetitle">qbradq wrote:</div><div class="quotecontent"><br />My current implementation is taking a full 6 scan lines worst-case.<br /></div><br /><br />Is that 6 scanlines per object, or 6 scanlines total for all of the objects?<br />Either way, that sequence itself is correct, so any optimizations would need to be for the code itself.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=21">Drag</a> — Tue Mar 22, 2011 4:05 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[cartlemmy]]></name></author>
<updated>2011-03-22T15:49:25-07:00</updated>
<published>2011-03-22T15:49:25-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7579&amp;p=75701#p75701</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7579&amp;p=75701#p75701"/>
<title type="html"><![CDATA[Need Help Optimizing Platformer Background Collision]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7579&amp;p=75701#p75701"><![CDATA[
6 scan lines total? That's really good as far as I know. Even 6 scan lines per object doesn't seem too bad. Though I'm no expert  <img src="http://forums.nesdev.com/images/smilies/icon_lol.gif" alt=":lol:" title="Laughing" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4574">cartlemmy</a> — Tue Mar 22, 2011 3:49 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[qbradq]]></name></author>
<updated>2011-03-22T13:51:07-07:00</updated>
<published>2011-03-22T13:51:07-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7579&amp;p=75698#p75698</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7579&amp;p=75698#p75698"/>
<title type="html"><![CDATA[Need Help Optimizing Platformer Background Collision]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7579&amp;p=75698#p75698"><![CDATA[
I've just written my first update and background collision routine for a new project I am working on. I have never done a platformer before. I've gone over the logic several times, but I get the impression that it is sub-optimal. Could you all help me think this through? I can't seem to find any discussion of this on the forums.<br /><br />Note that this routine handles applying gravity, applying velocity to position, background collision and response to those collisions.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">For Object in All Objects<br />   Apply gravity to Object Y velocity<br />   Apply Y velocity to Y position<br />   Calculate bounds<br />   Check Y collision with background<br />      If a collision occured<br />         Correct Y position<br />         Recalculate top and bottom bounds<br />   Apply X velocity to X position<br />   Recalculate left and right bounds<br />   Check X collision with background<br />      If a collision occured<br />         Correct X position<br />         Recalculate left and right bounds<br /></div><br /><br />My current implementation resolves all edge-cases, but there is a lot of processing here. My current implementation is taking a full 6 scan lines worst-case. I could probably trim this down a bit, but I can't shake the feeling that my logic is not optimal.<br /><br />Thoughts? How do you all implement platformer-style collision detection?<br /><br />Thanks!<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3706">qbradq</a> — Tue Mar 22, 2011 1:51 pm</p><hr />
]]></content>
</entry>
</feed>