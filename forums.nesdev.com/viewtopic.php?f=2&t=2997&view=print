<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Make absence of # an asm warning</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Make absence of # an asm warning</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=2997">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=2997</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Mon Feb 26, 2007 7:51 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Make absence of # an asm warning</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The 65xx series and a few other assembler languages differentiate between an immediate constant and a memory address by the presence/absence of the # character:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda #10 ; A = the value 10<br />lda 10&nbsp; ; A = byte at address 10</div><br />Since the # is not required on constants in other common computer languages or general writing, it is very easy to forget. The value at the unintended address might work most of the time, making the bug rare to appear. You may think you never forget this, but there's no way to be know since the assembler can't warn you.<br /><br />My proposal is to prevent this error by adding a warning to assemblers for the second case above. To avoid the warning, the value must have some sort of "this is an address" prefix on it, or be defined symbolically in advance. For the moment I'll use the @ symbol, but any syntax could be used:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda 10&nbsp; &nbsp; &nbsp; &nbsp; ; warning<br />lda @10&nbsp; &nbsp; &nbsp; &nbsp;; OK<br /><br />addr = @10<br />lda addr&nbsp; &nbsp; &nbsp; ; OK<br /><br />lda #addr&nbsp; &nbsp; &nbsp;; OK, sets A to the value 10<br /><br />not_addr = 10<br />lda not_addr&nbsp; ; warning<br />lda @not_addr ; OK<br /><br />table: .byte 1,2,3,4<br /><br />lda table&nbsp; &nbsp; &nbsp;; OK</div>
<br />
<br />The main aspects of implementation would be
<br />* Assembler keeps track of the type of a value, either an address if prefixed with @, or a pure value if not
<br />* Assembler warns on use of pure value not prefixed with a #
<br />* Labels are addresses
<br />* In an arithmetic expression, if any value is an address, the result of the expression is an address
<br />
<br />I think the need to use @ would be minimal, only for the absolute addresses of hardware registers, which would be in a common include file anyway. Non-absolute addresses (i.e. variables and constants) would virtually all be labels, which the assembler would already treat as an address. If there's any complaining about this issue, it should be that the annoying # is required everywhere, when the most common case is a numeric constant, not an absolute address. Enabling this warning would involve the addition of a small number of @ symbols (unless you don't use symbolic constants).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>baisoku</b> [ Mon Feb 26, 2007 10:17 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Your logic is sound. I'll implement this in my fork of nesasm when i get the chance.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Tue Feb 27, 2007 8:13 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />What would be really cool is something that doesn't render the source incompatible with other assemblers, sort of a hint to a <a href="http://en.wikipedia.org/wiki/Lint_programming_tool" class="postlink">"lint-like"</a> assembler used to catch this bug. For assemblers that accept macros, you could just define an ADDR(value) macro that added @ if the assembler supported the proposed extension. As for choice of syntax, the @ symbol might not work well with its use for anonymous labels in some assemblers. If the macro approach above were taken, it could be something ugly and obscure since it would be hidden behind a macro.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>never-obsolete</b> [ Tue Feb 27, 2007 8:18 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />my assembler generates an error when the operand is ambiguous and forces either a '#' or '$' to prefix every number.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Tue Feb 27, 2007 4:08 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">never-obsolete wrote:</div><div class="quotecontent">my assembler generates an error when the operand is ambiguous and forces either a '#' or '$' to prefix every number.</div>
<br />In 6502, $ is the prefix for a base 16 number. Under your assembler, is it not possible to specify a zero-page or absolute address in base 10, which is a common idiom when using the bottom locations of zero page as extra registers?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>never-obsolete</b> [ Tue Feb 27, 2007 5:02 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent"><div class="quotetitle">never-obsolete wrote:</div><div class="quotecontent">...</div><br />In 6502, $ is the prefix for a base 16 number. Under your assembler, is it not possible to specify a zero-page or absolute address in base 10, which is a common idiom when using the bottom locations of zero page as extra registers?</div>
<br />
<br />if you mean like a...
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp;lda #$xx<br />&nbsp;sta 255<br /></div>
<br />
<br />...then no its not. since this isn't part of my coding style (which entails 100% of the user base) there was no need for it. though if anyone really wanted it, i could add support instead of throwing an exception. but i don't see that being the case, so i just add features as i need them. though for completeness i will add it in  <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>doppelganger</b> [ Tue Feb 27, 2007 8:04 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I have enough trouble using assemblers without worrying about this crap.  The standard of using # for values was established as a standard a long time ago by other 6502 programmers.  What goes on in other languages is the business of the programmers of said languages.  Also, I would just like to point out that even though the use of # to mean values isn't common outside the 6502 asm realm, neither is the use of $ to mean hexadecimal.
<br />
<br />Having said that, however, I do support the ability to let the end user decide whether to use # or @ for either value or address...or whatever.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Tue Feb 27, 2007 9:31 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Having said that, however, I do support the ability to let the end user decide whether to use # or @ for either value or address...or whatever.</div>
<br />Yeah, it should be an optional warning that's off by default, since a few people I've talked to also seem to prefer convenience over reduced bugs, even though the latter are far more time-consuming.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Tue Feb 27, 2007 10:02 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You could even name it like the GNU tools like to name their warnings: -Wliteral-zero-page-address

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Wed Feb 28, 2007 7:53 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">-Wliteral-zero-page-address</div>
<br />That wouldn't catch this error:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">value = 255<br />lda value&nbsp; &nbsp;; warning<br />lda value+1 ; no warning, treated as lda @value+1</div><br />You'd want -Wmissing-#-or-@ or something. Of course GCC uses these verbose names for the warnings since there are so many. It'd be out of place on an assembler with only a few.<br /><br />Another thing I just realized, this warning would be great for people new to 65xx assembly. Give them a "nes.inc" file with lines like<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">PPUSTATUS = @$2002</div>
<br />and they'll never even have to know about @.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Fri Jan 18, 2008 10:10 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I finally implemented an experimental version of this in ca65 and made a <a href="http://forum.6502.org/viewtopic.php?t=1245" class="postlink">post about it on 6502.org</a>. In summary:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">const = 10 <br />lda #const&nbsp; &nbsp; &nbsp; &nbsp;; OK<br />lda 10&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; warning<br />lda const&nbsp; &nbsp; &nbsp; &nbsp; ; warning<br /><br />ADDR = 0&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; special constant that makes something an address<br />PPUSTATUS = ADDR+$2002 ; this is an address, not just a number<br /><br />lda PPUSTATUS&nbsp; &nbsp; ; OK<br />lda $4015+ADDR&nbsp; &nbsp;; OK<br /><br />lda &lt;12&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; OK, often used for quick nameless temporaries<br />lda $4000,x&nbsp; &nbsp; &nbsp; ; OK, indexed modes always accept numeric expressions<br />lda const,y&nbsp; &nbsp; &nbsp; ; OK<br />sta const&nbsp; &nbsp; &nbsp; &nbsp; ; OK, since STA never accepts immediate anyway<br />sta $2000&nbsp; &nbsp; &nbsp; &nbsp; ; OK</div>
<br />Note how the special ADDR constant will be treated as a normal constant of zero by an assembler that doesn't support this extension, thus allowing full source compatibility. Score!

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>