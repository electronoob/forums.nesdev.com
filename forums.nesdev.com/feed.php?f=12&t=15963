<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=12&amp;t=15963" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2017-05-29T09:58:38-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=12&amp;t=15963</id>
<entry>
<author><name><![CDATA[HihiDanni]]></name></author>
<updated>2017-05-29T09:58:38-07:00</updated>
<published>2017-05-29T09:58:38-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=15963&amp;p=196884#p196884</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=15963&amp;p=196884#p196884"/>
<title type="html"><![CDATA[Re: Alternative assembler recommendations?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=15963&amp;p=196884#p196884"><![CDATA[
Thanks for the clarification. Thinking about this some more, I might wrap some of this stuff into a macro which would be both human- and tool-friendly.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7494">HihiDanni</a> — Mon May 29, 2017 9:58 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2017-05-29T09:55:55-07:00</updated>
<published>2017-05-29T09:55:55-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=15963&amp;p=196882#p196882</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=15963&amp;p=196882#p196882"/>
<title type="html"><![CDATA[Re: Alternative assembler recommendations?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=15963&amp;p=196882#p196882"><![CDATA[
Speaking of <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">*</tt> and namespaces, I filed feature request <a href="https://github.com/cc65/cc65/issues/346" class="postlink">#346</a> for prefix exports and imports.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Mon May 29, 2017 9:55 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[rainwarrior]]></name></author>
<updated>2017-05-29T09:37:33-07:00</updated>
<published>2017-05-29T09:37:33-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=15963&amp;p=196879#p196879</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=15963&amp;p=196879#p196879"/>
<title type="html"><![CDATA[Re: Alternative assembler recommendations?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=15963&amp;p=196879#p196879"><![CDATA[
<tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.scope foo</tt> creates a namespace, but not a label.<br /><tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.proc foo</tt> creates both at once, a label that also encloses a namespace.<br /><tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.global foo</tt> import and/or exports a symbol, it doesn't create foo by itself.<br /><tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.export foo</tt> only exports a symbol, its definition will be elsewhere.<br /><tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.export foo := *</tt> apparently exports and defines foo in one line (compound of assignment and export into one statement).<br /><tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">*</tt> is not a wildcard, it is the current PC location in the code.<br /><br />Just to clarify that last one, * works like other labels, it just happens to change its value on every line:<br /><tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.export foo := bar</tt> exports and defines foo as equal to another label.<br /><tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.export foo = 25</tt> exports and defines foo as the number 25.<br /><br /><div class="quotetitle">HihiDanni wrote:</div><div class="quotecontent"><br />Which is really what I want - the ability to mass export/import labels for definition files.<br /></div><br />Each label/symbol you want to import or export must be explicitly mentioned in an .import/.export/.global statement. You can't import an entire namespace in one step, by itself...<br /><br />However, if you want to create groups of these, you can put a collection of .global statements in a separate &quot;header&quot; file and <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.include</tt> that header in files that need them. The include allows you to hide a bunch of code in another file via in a single line, at least?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5165">rainwarrior</a> — Mon May 29, 2017 9:37 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[HihiDanni]]></name></author>
<updated>2017-05-29T09:29:54-07:00</updated>
<published>2017-05-29T09:29:54-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=15963&amp;p=196877#p196877</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=15963&amp;p=196877#p196877"/>
<title type="html"><![CDATA[Re: Alternative assembler recommendations?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=15963&amp;p=196877#p196877"><![CDATA[
The use of &quot;.export foo := *&quot; implies there is some kind of wildcard here, hence I assumed it to be some kind of namespace. Which is really what I want - the ability to mass export/import labels for definition files.<br /><br />At this rate the best thing I can think of is to put ROM data definitions inside an include file and somehow find a way to ensure that it's only written to ROM once even if included from multiple locations.<br /><br />Edit: Or better yet, a more concrete example of using &quot;.export foo := *&quot; with a large number of labels. I'd prefer all these labels being declared once if possible.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7494">HihiDanni</a> — Mon May 29, 2017 9:29 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[nicklausw]]></name></author>
<updated>2017-05-29T09:08:15-07:00</updated>
<published>2017-05-29T09:08:15-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=15963&amp;p=196874#p196874</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=15963&amp;p=196874#p196874"/>
<title type="html"><![CDATA[Re: Alternative assembler recommendations?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=15963&amp;p=196874#p196874"><![CDATA[
foo is just a label, not a namespace.<br /><br />If you had foo.s:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.include &quot;foo.inc&quot;<br />.code<br />foo:</div><br /><br />foo.inc:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.global foo</div><br /><br />And main.s:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.include &quot;foo.inc&quot;<br />.code<br />main: jmp foo</div><br /><br />This would work without error. (<tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.code</tt> is short for <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.segment &quot;CODE&quot;</tt>).<br /><br />Edit, forgot to mention that you could do what thefox said and change <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">foo:</tt> to <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.export foo := *</tt> and <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.global foo</tt> to <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.import foo</tt> and take out the include for foo.s and that would also work. Not sure why you'd want to do that.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6832">nicklausw</a> — Mon May 29, 2017 9:08 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[HihiDanni]]></name></author>
<updated>2017-05-29T08:06:56-07:00</updated>
<published>2017-05-29T08:06:56-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=15963&amp;p=196868#p196868</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=15963&amp;p=196868#p196868"/>
<title type="html"><![CDATA[Re: Alternative assembler recommendations?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=15963&amp;p=196868#p196868"><![CDATA[
<div class="quotetitle">thefox wrote:</div><div class="quotecontent"><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.define lw(v) .loword(v)<br />.define bank(v) .lobyte(.bank(v))<br />Macro_LoadVRAM #lw Tileset, #bank Tileset, #$0000, #$8000<br /></div><br />(YMMV whether this is actually any better.)<br /></div><br />It's surprisingly elegant!<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />You can use <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">export foo := *</tt> instead of <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.export foo</tt> + <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">foo:</tt>. (Or, you can make your own macro to simplify the export.)<br /><br />With <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.global</tt>, you would have <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.global foo</tt> in your module header (e.g., module.inc), and the definition (e.g., module.s) would simply have <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">foo:</tt>.<br /></div><br />What's the definition of foo here? Does foo become a namespace? In that case, how is the import done, and what's the syntax for referencing the labels from the import?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7494">HihiDanni</a> — Mon May 29, 2017 8:06 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[thefox]]></name></author>
<updated>2017-05-29T07:31:08-07:00</updated>
<published>2017-05-29T07:31:08-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=15963&amp;p=196863#p196863</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=15963&amp;p=196863#p196863"/>
<title type="html"><![CDATA[Re: Alternative assembler recommendations?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=15963&amp;p=196863#p196863"><![CDATA[
<div class="quotetitle">HihiDanni wrote:</div><div class="quotecontent"><br />However, the use of .loword() and &lt;.bank() is really ugly. Any suggestions on best practices to use here to make the syntax less painful to deal with?<br /></div><br />You can handle it at the macro side (where appropriate, as discussed), or <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.define</tt> your own macro aliases to simplify the syntax. For example:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.define lw(v) .loword(v)<br />.define bank(v) .lobyte(.bank(v))<br />Macro_LoadVRAM #lw Tileset, #bank Tileset, #$0000, #$8000<br /></div><br />(YMMV whether this is actually any better.)<br /><br /><div class="quotetitle">HihiDanni wrote:</div><div class="quotecontent"><br />Passing Tileset to the macro was the previous way of doing things. Perhaps I should make two versions of macros, make the first one always use immediates, and the second one called Indirect.<br /><br />But now that I think about it, all the macros are doing are setting a few register values before jumping to the subroutine that does the DMA transfer. So I may as well just make the macros immediate-only.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Mostly I don't want to have to list each label twice in my file (once for the definition and once again for the export).<br /></div></div><br />You can use <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">export foo := *</tt> instead of <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.export foo</tt> + <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">foo:</tt>. (Or, you can make your own macro to simplify the export.)<br /><br />With <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.global</tt>, you would have <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.global foo</tt> in your module header (e.g., module.inc), and the definition (e.g., module.s) would simply have <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">foo:</tt>.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=80">thefox</a> — Mon May 29, 2017 7:31 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[HihiDanni]]></name></author>
<updated>2017-05-28T12:58:36-07:00</updated>
<published>2017-05-28T12:58:36-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=15963&amp;p=196823#p196823</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=15963&amp;p=196823#p196823"/>
<title type="html"><![CDATA[Re: Alternative assembler recommendations?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=15963&amp;p=196823#p196823"><![CDATA[
Passing Tileset to the macro was the previous way of doing things. Perhaps I should make two versions of macros, make the first one always use immediates, and the second one called Indirect.<br /><br />But now that I think about it, all the macros are doing are setting a few register values before jumping to the subroutine that does the DMA transfer. So I may as well just make the macros immediate-only.<br /><br />I'm hesitant to use .global, and it doesn't really address my issue. Mostly I don't want to have to list each label twice in my file (once for the definition and once again for the export).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7494">HihiDanni</a> — Sun May 28, 2017 12:58 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[nicklausw]]></name></author>
<updated>2017-05-28T12:52:04-07:00</updated>
<published>2017-05-28T12:52:04-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=15963&amp;p=196822#p196822</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=15963&amp;p=196822#p196822"/>
<title type="html"><![CDATA[Re: Alternative assembler recommendations?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=15963&amp;p=196822#p196822"><![CDATA[
Why not just pass Tileset to the macro and then inside it use .bank and .loword?<br /><br />Also, .global works wonders. Cuts imports and exports in half.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6832">nicklausw</a> — Sun May 28, 2017 12:52 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[HihiDanni]]></name></author>
<updated>2017-05-28T12:44:43-07:00</updated>
<published>2017-05-28T12:44:43-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=15963&amp;p=196821#p196821</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=15963&amp;p=196821#p196821"/>
<title type="html"><![CDATA[Re: Alternative assembler recommendations?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=15963&amp;p=196821#p196821"><![CDATA[
Okay, I have successfully ported my engine over to ca65! Thanks for the help! Already this has several advantages:<br /><br />- My project now has a proper structure with each source file being its own module, with all the modules linked together after assembly.<br />- I no longer need to maintain a spreadsheet of the WRAM layout to make sure I'm not overwriting variables from other modules<br />- While porting the engine to the new assembler I ended up fixing a few bugs that only cropped up due to the altered memory layout, and made the game actually run slightly faster in the process!<br />- I understand the memory layout as seen by the linker which makes it easier to move things around the different memory regions<br />- The size of the game object list can be easily changed at assembly time to be something other than 128 to adjust the tradeoff between max objects and memory usage/overhead.<br /><br />However, I do have a couple small issues which I would like some advice on:<br /><br />- When I ported the macros for transferring data to VRAM, etc., I made it so immediate addressing is no longer implicit (or required). However, now you have to write the macros like this:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">Macro_LoadVRAM #.loword(Tileset), #&lt;.bank(Tileset), #$0000, #$8000</div><br />Now I don't mind the need to specify # quite so much (although it's technically error-prone - if you forget the # you'll end up with different transfer addresses than intended). However, the use of .loword() and &lt;.bank() is really ugly. Any suggestions on best practices to use here to make the syntax less painful to deal with?<br /><br />- Additionally, it seems like you need to import/export each symbol or label individually, which wouldn't be so bad if I didn't also want to have things like sprite definition files with lots of labels that I really, really don't want to have to import/export one by one. That would be a nightmare. Surely there's a better way to deal with this, perhaps by grouping them so just a single import/export is needed?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7494">HihiDanni</a> — Sun May 28, 2017 12:44 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2017-05-27T13:30:13-07:00</updated>
<published>2017-05-27T13:30:13-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=15963&amp;p=196774#p196774</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=15963&amp;p=196774#p196774"/>
<title type="html"><![CDATA[Re: Alternative assembler recommendations?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=15963&amp;p=196774#p196774"><![CDATA[
<div class="quotetitle">HihiDanni wrote:</div><div class="quotecontent"><br />- How do I force 24-bit addressing? I need this for the SPC upload routines in order to support uploading data from different data banks while still having access to the upload src/dest/size variables.<br /></div><br />In ca65, use <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">f:$2140</tt>. In any assembler, use <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">$212140</tt>.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />- How is the checksum and complement computed? <a href="http://www.smwiki.net/wiki/Internal_ROM_Header" class="postlink">This page</a> gives a basic description but since they're part of the file being checksummed, wouldn't that mess things up? I'd think at least the complement might cause the result of the checksum to differ based on its initial value?<br /></div><br />The third byte of the checksum is always $FF minus the first byte, and The fourth byte is always $FF minus the second byte. Thus the four bytes will by definition always add to $1FE, as if the four bytes were 00 00 FF FF. So overwrite the checksum with those four bytes before calculating it.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Sat May 27, 2017 1:30 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[creaothceann]]></name></author>
<updated>2017-05-27T09:26:27-07:00</updated>
<published>2017-05-27T09:26:27-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=15963&amp;p=196752#p196752</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=15963&amp;p=196752#p196752"/>
<title type="html"><![CDATA[Re: Alternative assembler recommendations?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=15963&amp;p=196752#p196752"><![CDATA[
Checksum + inverted checksum = 0<br /><br />Just set both fields to zero, checksum the file, and set the fields.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=290">creaothceann</a> — Sat May 27, 2017 9:26 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[HihiDanni]]></name></author>
<updated>2017-05-27T08:26:04-07:00</updated>
<published>2017-05-27T08:26:04-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=15963&amp;p=196748#p196748</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=15963&amp;p=196748#p196748"/>
<title type="html"><![CDATA[Re: Alternative assembler recommendations?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=15963&amp;p=196748#p196748"><![CDATA[
Alright, I have a couple questions currently:<br /><br />- How do I force 24-bit addressing? I need this for the SPC upload routines in order to support uploading data from different data banks while still having access to the upload src/dest/size variables.<br />- How is the checksum and complement computed? <a href="http://www.smwiki.net/wiki/Internal_ROM_Header" class="postlink">This page</a> gives a basic description but since they're part of the file being checksummed, wouldn't that mess things up? I'd think at least the complement might cause the result of the checksum to differ based on its initial value?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7494">HihiDanni</a> — Sat May 27, 2017 8:26 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[AWJ]]></name></author>
<updated>2017-05-22T15:00:22-07:00</updated>
<published>2017-05-22T15:00:22-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=15963&amp;p=196341#p196341</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=15963&amp;p=196341#p196341"/>
<title type="html"><![CDATA[Re: Alternative assembler recommendations?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=15963&amp;p=196341#p196341"><![CDATA[
<div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent"><br />In general, parentheses + defines/macros in ca65 are a bit of a landmine, unfortunately. (See also: (indirect), Y addressing.)<br /></div><br />The problem is that you aren't supposed to put parentheses around the argument list when invoking a macro (either a multiline <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.macro</tt> or a one-line <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.define</tt>). Assembler macros aren't C preprocessor macros. If you put parentheses around the argument list, the opening parenthesis gets interpreted as part of the first argument and the closing parenthesis as part of the last argument, which is almost certainly not what you want to happen.<br /><br />If you want to pass an argument that contains a separator character like a comma, you put <em>curly braces</em> around that individual argument.<br /><br />There's a clear example of this use of curly braces in the documentation (which, admittedly, is generally poorly written and unclear), under &quot;Parametrized macros&quot;.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />I find it very strange/interesting that it obviously knows that '(' is not part of the name of the define, too, so that character has a special &quot;new token&quot; property to it.<br /></div><br />The <em>definition</em> of a one-line macro requires parentheses around the parameter list, so that the parser knows where the list of parameters ends and where the actual definition (what to expand the macro to) begins.<br /><br />I have no idea either what the sentence &quot;Since the assembler cannot detect the end of one parameter, only the first token is used&quot; is supposed to mean.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3737">AWJ</a> — Mon May 22, 2017 3:00 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[pubby]]></name></author>
<updated>2017-05-22T14:05:26-07:00</updated>
<published>2017-05-22T14:05:26-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=15963&amp;p=196339#p196339</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=15963&amp;p=196339#p196339"/>
<title type="html"><![CDATA[Re: Alternative assembler recommendations?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=15963&amp;p=196339#p196339"><![CDATA[
The confusing thing is that parentheses are used when defining but not when invoking:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.define foo(a, b, c) ; ...<br /><br />; invoke<br />foo 0, 1, 2</div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7486">pubby</a> — Mon May 22, 2017 2:05 pm</p><hr />
]]></content>
</entry>
</feed>