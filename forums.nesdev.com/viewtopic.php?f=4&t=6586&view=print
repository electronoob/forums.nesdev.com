<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Squeedo Synthesizer v2.0a</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Squeedo Synthesizer v2.0a</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=4&amp;t=6586">http://forums.nesdev.com/viewtopic.php?f=4&amp;t=6586</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Sat Jul 10, 2010 7:45 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Squeedo Synthesizer v2.0a</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Just thought I'd share some results from my latest project, a rewrite and vast improvement to my Squeedo sound synth.  The biggest functional difference is that I'm making the instrument format native to the synth, rather than everything being controlled by some registers the NES writes to.  But I think that's great, since the instrument format (not including any waveform) currently is close to 200 bytes and sure to get larger (mostly because of all the envelopes).  But it's all still user-controllable in real-time as it should be, these instruments will exist in RAM for each channel.<br /><br />A big difference in the code is that the original version was written in PIC18F assembly, and this one is being written in C for portability.  So the natural thing to do, before I make the NES board later, is to test out the synthesis as a PC program. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />  I also used 2 cross-platform libraries, SDL and portmidi, so I guess it will work on mac/linux if it's ever any use.  It's also my first actual program in C (other than hello world type stuff).<br /><br />So, for now I've focused on wavetable synthesis like I did on the older version, and mostly the same in that regard.  One new feature is being able to cross-fade between 2 different waveforms (using linear interpolation).  Features like that are what call for all those envelopes, heheh.<br /><br />So to get stuff going with it, I've gotten MIDI input working.  So now I can use windows control panel to select the Squeedo synth as my MIDI device and hear it wherever I want.  Fun stuff. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />  I'm currently cheating with the polyphony, and only allowing one note per channel (unlike MIDI).  So most MIDIs don't play right.  I'm also totally ignoring the 'drum channel' until I improve the instrument format some more.<br /><br />Here's a few example songs:<br /><a href="http://membler-industries.com/squeedo/Squeedo%202010-06-29%20-%20Tron%20Theme%20by%20Wendy%20Carlos.mp3" class="postlink">http://membler-industries.com/squeedo/Squeedo%202010-06-29%20-%20Tron%20Theme%20by%20Wendy%20Carlos.mp3</a><br />played similar to the arcade game, but using 256 byte square waveform that I manually faded into a sawtooth wave as the song went on<br /><br /><a href="http://membler-industries.com/squeedo/Squeedo%202010-06-29%20-%20Gauntlet%202.mp3" class="postlink">http://membler-industries.com/squeedo/Squeedo%202010-06-29%20-%20Gauntlet%202.mp3</a><br />this one uses a 256-byte waveform (same one for every channel) that is a sine wave blended with a sawtooth.<br /><br /><a href="http://membler-industries.com/squeedo/Squeedo%202010-07-10%20-%20Castlevania%20Wicked%20Child.mp3" class="postlink">http://membler-industries.com/squeedo/Squeedo%202010-07-10%20-%20Castlevania%20Wicked%20Child.mp3</a><br />this one is using a bunch of randomly assigned waveforms for each instrument.  These are 32-byte waveforms.  Everything is still using the same volume envelope though, so it's still pretty boring for now until I refine the instruments.<br /><br />--------------------------------------------------------------<br />EDIT:<br />see all newer examples here <a href="http://membler-industries.com/squeedo/" class="postlink">http://membler-industries.com/squeedo/</a><br /><br />--------------------------------------------------------------<br /><br />EDIT (2) April 2013 :<br />I'm going to start linking to these directly.  Note the following!<br /><ul><li>These are Standard MIDI Files played through the Squeedo synth using a wavetable-based General MIDI instrument set</li><li>I didn't make any of these MIDI files, I'll try to keep the <a href="http://membler-industries.com/squeedo/MIDI/" class="postlink">source MIDI's here</a></li><li>There are not any kind of &quot;finalized&quot; version, mostly I recorded them as a log of my progress on the synth and MIDI instruments, i.e. the instruments were not 'tuned' for any particular song</li><li>These were recorded with the synth engine running on winxp and win7 PC, with Audacity through waveout, post-effect applied was normalization (some earlier ones were pre-amp'ed and clip, ugh)</li><li>Song credit corrections are welcome</li></ul><br />These songs demonstrate some 256-byte wavetable-based General MIDI instruments, 8-bit sample playing (a timpani drum is the only sample), and the MIDI drum channel.  The drum sounds currently use LFSR pseudo-noise only, or an alternate &quot;aliased noise&quot;, used for cymbals.<br /><ul><a href="http://membler-industries.com/squeedo/Squeedo%202013-04-13%20-%20Super%20Ghouls%20and%20Ghosts%20by%20Mari%20Yamaguchi.mp3" class="postlink">Super Ghouls and Ghosts by Mari Yamaguchi.mp3</a><br /><a href="http://membler-industries.com/squeedo/Squeedo%202013-04-12%20-%20Street%20Fighter%20II%20-%20Vega%20by%20Yoko%20Shimomura.mp3" class="postlink">Street Fighter II - Vega by Yoko Shimomura.mp3</a><br /><a href="http://membler-industries.com/squeedo/Squeedo%202013-04-10%20-%20Faxanadu%20-%20Overworld%20by%20Jun%20Chikuma.mp3" class="postlink">Faxanadu - Overworld by Jun Chikuma.mp3</a><br /><a href="http://membler-industries.com/squeedo/Squeedo%202013-04-10%20-%20F-Zero%20-%20Ending%20by%20Yumiko%20Kameya%20&amp;%20Naoto%20Ishida.mp3" class="postlink">F-Zero - Ending by Yumiko Kameya &amp; Naoto Ishida.mp3</a><br /><a href="http://membler-industries.com/squeedo/Squeedo%202013-04-10%20-%20Dragon%20Quest%203%20-%20Heavenly%20Flight%20by%20Koichi%20Sugiyama.mp3" class="postlink">Dragon Quest 3 - Heavenly Flight by Koichi Sugiyama.mp3</a><br /><a href="http://membler-industries.com/squeedo/Squeedo%202013-04-08%20-%20Wrecking%20Crew%20by%20Hirokazu%20Tanaka.mp3" class="postlink">Wrecking Crew by Hirokazu Tanaka.mp3</a><br /><a href="http://membler-industries.com/squeedo/Squeedo%202013-04-08%20-%20Simcity%20(SNES)%20-%20Megalopolis%20by%20Soyo%20Oka.mp3" class="postlink">Simcity (SNES) - Megalopolis by Soyo Oka.mp3</a><br /><a href="http://membler-industries.com/squeedo/Squeedo%202013-04-08%20-%20Hostages%20(Embassy%20Mission)%20-%20by%20Alberto%20Gonzales.mp3" class="postlink">Hostages (Embassy Mission) - by Alberto Gonzales.mp3</a><br /><a href="http://membler-industries.com/squeedo/Squeedo%202013-04-08%20-%20GG%20Shinobi%20-%20by%20Yuzo%20Koshiro.mp3" class="postlink">GG Shinobi - by Yuzo Koshiro.mp3</a><br /><a href="http://membler-industries.com/squeedo/Squeedo%202013-01-11%20-%20Star%20Solder%20-%20Powerup%20by%20Hudson%20Soft.mp3" class="postlink">Star Solder - Powerup by Hudson Soft.mp3</a><br /><a href="http://membler-industries.com/squeedo/Squeedo%202013-01-06%20-%20Nectaris%20(Military%20Madness)%20-%20NEC_M04%20by%20Jun%20Chikuma.mp3" class="postlink">Nectaris (Military Madness) - NEC_M04 by Jun Chikuma.mp3</a><br /><a href="http://membler-industries.com/squeedo/Squeedo%202013-01-03%20-%20Transport%20Tycoon%20Deluxe%20-%20Small%20Town%20by%20John%20Broomhall.mp3" class="postlink">Transport Tycoon Deluxe - Small Town by John Broomhall.mp3</a><br /><a href="http://membler-industries.com/squeedo/Squeedo%202013-01-01%20-%20Princess%20Maker%202%20-%20Tournament%20by%20Masahiro%20Kajihara%20&amp;%20Ryu%20Umemoto.mp3" class="postlink">Princess Maker 2 - Tournament by Masahiro Kajihara &amp; Ryu Umemoto.mp3</a><br /><a href="http://membler-industries.com/squeedo/Squeedo%202013-01-01%20-%20Princess%20Maker%202%20-%20Tournament%20Combat%20by%20Masahiro%20Kajihara%20&amp;%20Ryu%20Umemoto.mp3" class="postlink">Princess Maker 2 - Tournament Combat by Masahiro Kajihara &amp; Ryu Umemoto.mp3</a><br /><a href="http://membler-industries.com/squeedo/Squeedo%202013-01-01%20-%20FoFT%20by%20Ben%20Daglish.mp3" class="postlink">FoFT by Ben Daglish.mp3</a><br /><a href="http://membler-industries.com/squeedo/Squeedo%202012-12-31%20-%20Strider%20(Arcade)%20by%20Junko%20Tamiya.mp3" class="postlink">Strider (Arcade) by Junko Tamiya.mp3</a><br /><a href="http://membler-industries.com/squeedo/Squeedo%202012-10-18%20-%20Goemon%20-%20Cat%20Kurobei%20by%20Konami.mp3" class="postlink">Goemon - Cat Kurobei by Konami.mp3</a><br /><a href="http://membler-industries.com/squeedo/Squeedo%202012-10-08%20-%20Actraiser%202%20-%20Industen%20by%20Yuzo%20Koshiro.mp3" class="postlink">Actraiser 2 - Industen by Yuzo Koshiro.mp3</a><br /><a href="http://membler-industries.com/squeedo/Squeedo%202012-09-10%20-%20E.V.O.%20-%20Ocean%20by%20Koichi%20Sugiyama.mp3" class="postlink">E.V.O. - Ocean by Koichi Sugiyama.mp3</a><br /><a href="http://membler-industries.com/squeedo/Squeedo%202012-09-07%20-%20Actraiser%20-%20Sacrifices%20by%20Yuzo%20Koshiro.mp3" class="postlink">Actraiser - Sacrifices by Yuzo Koshiro.mp3</a><br /><a href="http://membler-industries.com/squeedo/Squeedo%202010-12-26%20-%20Drakkhen%20Earth%20Night%20by%20Hiroyuki%20Masuno.mp3" class="postlink">Drakkhen Earth Night by Hiroyuki Masuno.mp3</a><br /></ul><br />I'll add further edits and eventually bump this thread once other synthesis modes are better utilized.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Sun Jul 11, 2010 1:28 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Sound cool. So basically you have a MIDI synth in a pic, and send data to the NES via a port which is supposed to be copied to $4011, right ?
<br />It sound N106-like to me.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Sun Jul 11, 2010 3:02 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yep, N106 is based on wavetable synthesis as well.  I was inspired a lot by Konami's music for the SCC on the MSX, and stuff like the arcade version of Spy Hunter.
<br />
<br />I used the IRQ to $4011 method like you said on the original Squeedo, and I still want to do that with this one too.  But, I'm also thinking I will put a DAC on the cart that will require an audio mod for the NES (not like the PowerPak one, but 2 wires for audio in and out).  I'm also wanting a stereo line-out connector on the cartridge as well.. I'd rather use that but I'll have to see how that will work into it.
<br />
<br />There will be some memory on the cart that will be usable as wave memory.  If the memory was used for nothing but that, you could have over 400kBytes of samples at once.  That could play a lot of MODs, or sound similar to the SNES.  When I get sample playing implemented I'm thinking I'll try grabbing a BRR sample decoder and try playing some of the SNES music MIDIs with the original samples, heheh.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Sun Jul 11, 2010 9:07 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />That's whicked !!
<br />A line-out on the cartridge would suck IMO it would force the user to use headphones, and prevent the use of the regular sound channels.
<br />
<br />Other than this it's really exiting. If you implement true looping and non-looping samples (not just a fixed-length waveform) you'll get GBA-style sound (with PSG + wavetable channels). It's be only slightly worse than GBA because it's 7-bit instead of 8-bit.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Sun Jul 11, 2010 9:19 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Whatever this thing is (Squeedo), it sounds neat (audibly).  Can you explain what it is, Memblers?  Sorry if that sounds like a stupid or ignorant question, but I couldn't find an answer on the forum here.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sun Jul 11, 2010 12:15 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />My question is: can this be done at the same time as a complex game (i.e. not a single-screen puzzle) runs? Or is most of the CPU time taken?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sun Jul 11, 2010 1:03 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It depends on the mixer frequency.
<br />
<br />All the synthesis is done on the Squeedo side. So the CPU has to do this:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; /IRQ&nbsp; &nbsp; &nbsp; &nbsp;; 7<br />&nbsp; pha&nbsp; &nbsp; &nbsp; &nbsp; ; 3<br />&nbsp; lda squeedo_sample_output&nbsp; ; 4<br />&nbsp; sta $4011&nbsp; ; 4<br />&nbsp; pla&nbsp; &nbsp; &nbsp; &nbsp; ; 4<br />&nbsp; rti&nbsp; &nbsp; &nbsp; &nbsp; ; 7<br /></div><br />If this ISR executes once every two scanlines (227 CPU cycles), a 29-cycle ISR takes about 1/8 of CPU time.<br /><br />I just remembered $4011 is write-only. If the cart decodes $4011 to a read-only register, can the CPU see it? Because if so, the ISR would execute in only 18 cycles:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; /IRQ&nbsp; &nbsp; &nbsp; &nbsp;; 7<br />&nbsp; inc $4011&nbsp; ; 4<br />&nbsp; rti&nbsp; &nbsp; &nbsp; &nbsp; ; 7<br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Sun Jul 11, 2010 1:56 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />1/8 of CPU time is not negligible, but largely acceptable. Also, this could be further decreased by decreasing the sampling rate (haha this makes it even more similar to the GBA to what I first thought).
<br />A pair of lda/sta zeropage would be 1 cycle faster than pha/pla, too. Or even better, place the interrupt code in zero-page, and have the sta instructoin overwrite the lda before the RTI, to be 1 cycle even faster (so 2 cycles faster than your solution). Something like that :
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">ZPage_IRQ<br />&nbsp; sta _saveA+1<br />&nbsp; lda Squeedo_Audio&nbsp; ;Hopefully this read acknownledges the interrupt<br />&nbsp; sta $4011<br />_saveA<br />&nbsp; lda #$00<br />&nbsp; rti<br /></div>
<br />
<br />Tepples, your later idea is in fact incredibly clever, but you'd loose accuracy low bit doing that, because it would write two consecutive values. The question is, would this cause any distortion to the sound ? Well after thought, it's very very unlikely a 1-cycle error can give anything audible - so I guess it's really a good solution.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Sun Jul 11, 2010 2:09 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Heh, I had the same idea as tepples. You wouldn't lose any accuracy either, because squeedo would give you back a value one less than the one to be written to $4011. You could also use LSR, and have Squeedo output 8-bit unsigned samples.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sun Jul 11, 2010 2:38 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">blargg wrote:</div><div class="quotecontent">You could also use LSR, and have Squeedo output 8-bit unsigned samples.</div>
<br />I thought of that, but it would produce a slight click between the unmodified writeback and the modified writeback. It's probably imperceptible, but I went with INC anyway.
<br />
<br />I don't know how to program PowerPak mappers, or I'd test this theory myself.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Sun Jul 11, 2010 6:50 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Wow, the INC $4011 idea is great.  If you want 44khz sound like the MP3s (those are 16-bit though) then you would doing this about once per scanline, with that optimization freeing up well over 2000 CPU cycles per frame.
<br />
<br />Today I got the MIDI polyphony working (using some wacky on-the-fly channel assignment / note-stealing stuff), using 24 channels so it's up the General MIDI standard.  4, 8, and 16 channels is more like I was thinking to use on the NES version, 24 channels is a bit much.
<br />
<br />Bregalad:  For the line-out I would suggest an adapter <a href="http://www.computercableinc.com/ccinc/images/CABLE-Audio-Y-Splitter-2-RCA-Females-to-1-3-5mm-Male-IEC-M7401.jpg" class="postlink">like this one</a> (very cheap if you buy it at the right place).  I think it also should be possible to pass through and mix the regular NES channels on the cart, but of course that still needs the aforementioned audio mod to the NES (or use a Famicom with a modded NES adapter for all these cases <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />).  It was also thinking it could be fun to hook the NES audio up to the PIC's ADC, and display the waveform while playing NSFs on the actual system, heheh.
<br />
<br />koitsu:  Back in 2004 or so I had started writing a sound synth to run on the NES, but realized I was quickly running out of CPU cycles and needed an IRQ, I was also designing a game that needed more than 8kB WRAM (and being able to save), so I set out to design a board that would have everything I needed.  So with it I'm (ab)using an MCU and using it like a DSP, have FlashROM on board, lots of RAM..  Then since the MCU has all these hardware peripherals (especially the serial ports), I coded a small kind of API/BIOS thing so the NES can use the RS232/USB and stuff like that, right over the data bus.  There are pictures of the various boards <a href="http://www.parodius.com/~memblers/nes/squeedo/pics/" class="postlink">here</a>, but that's all old stuff from 5 years ago and I've learned a lot since then, heheh.  I've had a lot of help from kevtris too, on the original and this newer one with solving and optimizing some of the main design issues.
<br />
<br />This new design is still in it's infancy though, there's not even a schematic yet, just a parts list and a pretty good idea of how it will all fit together.  I'm trying not to get too freaked out about how much it will cost to have a batch produced, heheh.
<br />
<br />tokumaru:  There is the CPU cycle draining issue (the older Squeedo had to wait for the IRQ acknowledge to be handled, so it was possibly a little worse), but another issue that the using the IRQ for something else like a scanline timer would tie it up even more when checking the IRQ source.  On the CHR-side at least, there is one thing that helps out - the CHR (and perhaps nametable) switching can be automated to happen at a specified time, so no interrupt is needed for that.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Mon Jul 12, 2010 2:11 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Memblers wrote:</div><div class="quotecontent">koitsu:  Back in 2004 or so I had started writing a sound synth to run on the NES, but realized I was quickly running out of CPU cycles and needed an IRQ, I was also designing a game that needed more than 8kB WRAM (and being able to save), so I set out to design a board that would have everything I needed.  So with it I'm (ab)using an MCU and using it like a DSP, have FlashROM on board, lots of RAM..  Then since the MCU has all these hardware peripherals (especially the serial ports), I coded a small kind of API/BIOS thing so the NES can use the RS232/USB and stuff like that, right over the data bus.  There are pictures of the various boards <a href="http://www.parodius.com/~memblers/nes/squeedo/pics/" class="postlink">here</a>, but that's all old stuff from 5 years ago and I've learned a lot since then, heheh.  I've had a lot of help from kevtris too, on the original and this newer one with solving and optimizing some of the main design issues.<br /><br />This new design is still in it's infancy though, there's not even a schematic yet, just a parts list and a pretty good idea of how it will all fit together.  I'm trying not to get too freaked out about how much it will cost to have a batch produced, heheh.</div>
<br />
<br />You hardware guys blow my mind.  You always make it look so easy...  :-)
<br />
<br />How exactly do you interface with the board though?  What I mean is, how do you feed it sequence data?  I'm guessing the RS232 or USB port is involved, but maybe not.  MIDI port?  *clueless*

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Mon Jul 12, 2010 3:40 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">koitsu wrote:</div><div class="quotecontent">How exactly do you interface with the board though?  What I mean is, how do you feed it sequence data?  I'm guessing the RS232 or USB port is involved, but maybe not.  MIDI port?  *clueless*</div>
<br />
<br />Actually, I do want to put MIDI input on this one.  Right now that is what it's doing in the PC version (and using the popular "MIDI-Yoke" windows driver so I can redirect between MIDI ports).  In this setup, it is only getting the notes commands and such as they happen.
<br />
<br />The first code I started writing for the MIDI part was a General MIDI file parser.  So you could just load and play any .mid file.  But I was running into the problem of having to support (or carefully ignore) pretty much every MIDI feature imaginable before getting to the good stuff.  So I went the easy way and used the 'portmidi' library to filter out stuff I didn't want yet.  I am kind of hoping later to get that working properly, but I'm leaning more towards using a tracker and also hacking it into MCK.  This reminds me too, I was thinking maybe I should get an NES sound emulator working in the PC version soon..
<br />
<br />The other interface is the parallel port on the PIC, it's a really great peripheral.  It improved a lot on the PIC32, now there is a FIFO (4 bytes, but that's better than none on the PIC18 - a big timing hazard).  But it can just sit on the data bus, and has /RD, /WR, /CE.  Since there is a DMA, kevtris and I were speculating that the NES CPU perhaps could jump to this register and execute entirely off of the PIC.  That could be an interesting way to copy data (since loading with LDA #immediate is fast), or it could also make for some industrial-strength copy protection.  Seems possible in theory, may have issues in reality though.  It should be able to run 4 bytes of code at the minimum, I suppose. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Mon Sep 13, 2010 8:29 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I've added some more features to the synth, still needs a little fine-tuning (literally!) before I record some new songs though.
<br />
<br />I've added support for 8-bit PCM samples.  I tried some very basic linear interpolation, which makes it a little less noisy (but not much better).  There's not a whole lot of memory for samples, but I might see how quickly I could load a sample out of external memory when an instrument change command is given.  Right now, instruments are imported from .XI format (FastTracker 2).  The fine-tune setting isn't implemented yet, though, so the samples have to tuned already.
<br />
<br />I also made a phase distortion synthesis mode, this could sort-of emulate Casio keyboards from the 80's.
<br /><a href="http://membler-industries.com/squeedo/Squeedo%202010-09-13%20-%20Phase%20Distortion%20Synthesis.mp3" class="postlink">http://membler-industries.com/squeedo/Squeedo%202010-09-13%20-%20Phase%20Distortion%20Synthesis.mp3</a>
<br />
<br />Next up should be the Yamaha "FM" phase modulation.  I also need to add support for the MIDI drum channel, instead of ignoring it still.
<br />
<br />All these different modes are able to play at the same time now, selectable for each channel.
<br />
<br />Other sounds are here: <a href="http://membler-industries.com/squeedo/" class="postlink">http://membler-industries.com/squeedo/</a>, not much to see yet though.  I'll make a board soon, so I can hopefully get it running on the PIC32 soon.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Fri Dec 24, 2010 1:43 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I haven't worked on this again until just recently, but I fixed a major bug that was causing lots of distortion (when using the 32-byte waveforms).  Now I can apply that distortion in a controlled way, heheh.
<br />
<br />I've got some ideas of more stuff to post up, but I was curious if anyone has any song requests (game music or not) or specific MIDI files to hear with it.  Right now I'm working on creating the default instrument settings for it.
<br />
<br />edit: Only one new file has been uploaded so far.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>