<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - PPUSTATUS lower bits</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">PPUSTATUS lower bits</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=8214">http://forums.nesdev.com/viewtopic.php?f=3&amp;t=8214</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Elessar</b> [ Sun Oct 16, 2011 3:50 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>PPUSTATUS lower bits</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'm in the middle of my PPU development, and I would like to clear up a few things about the PPUSTATUS register. Most of the sources of information that I have checked so far more or less agree with what is said in the wiki:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">76543210<br />||||||||<br />|||+++++- Least significant bits previously written into a PPU register<br />|||&nbsp; &nbsp; &nbsp; &nbsp;&#40;due to register not being updated for this address&#41;<br />||+------ Sprite overflow. The PPU can handle only eight sprites on one<br />||&nbsp; &nbsp; &nbsp; &nbsp; scanline and sets this bit if it starts dropping sprites.<br />||&nbsp; &nbsp; &nbsp; &nbsp; Normally, this triggers when there are 9 sprites on a scanline,<br />||&nbsp; &nbsp; &nbsp; &nbsp; but the actual behavior is significantly more complicated.<br />|+------- Sprite 0 Hit.&nbsp; Set when a nonzero pixel of sprite 0 'hits'<br />|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;a nonzero background pixel.&nbsp; Used for raster timing.<br />+-------- Vertical blank has started &#40;0: not in VBLANK; 1: in VBLANK&#41;</div><br /><br />However, the Nestech document provides this information:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">+---------+----------------------------------------------------------+<br />|&nbsp; $2002&nbsp; | PPU Status Register &#40;R&#41;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; |<br />|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; |<br />|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|&nbsp; &nbsp; D7: VBlank Occurance&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; |<br />|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 0 = Not occuring&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; |<br />|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 1 = In VBlank&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|&nbsp; &nbsp; D6: Sprite #0 Occurance&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 0 = Sprite #0 not found&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 1 = PPU has hit Sprite #0&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|&nbsp; &nbsp; D5: Scanline Sprite Count&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 0 = Eight &#40;8&#41; sprites or less on current scan-&nbsp; |<br />|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; line&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; |<br />|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 1 = More than 8 sprites on current scanline&nbsp; &nbsp; &nbsp;|<br />|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|&nbsp; &nbsp; D4: VRAM Write Flag&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 0 = Writes to VRAM are respected&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; |<br />|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 1 = Writes to VRAM are ignored&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; |<br />|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; |<br />|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;| NOTE: D7 is set to 0 after read occurs.&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; |<br />|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;| NOTE: After a read occurs, $2005 is reset, hence the&nbsp; &nbsp; &nbsp;|<br />|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|&nbsp; &nbsp; &nbsp; &nbsp;next write to $2005 will be Horizontal.&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; |<br />|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;| NOTE: After a read occurs, $2006 is reset, hence the&nbsp; &nbsp; &nbsp;|<br />|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|&nbsp; &nbsp; &nbsp; &nbsp;next write to $2006 will be the high byte portion. |<br />+---------+----------------------------------------------------------+</div>
<br />
<br />So here are the things I would like cleared up for me:
<br />
<br />1. How many bits are written to PPUSTATUS as a result of data being written into a PPU register - 4 bits or 5 bits?
<br />2. Is bit 4 actually a VRAM write flag?
<br />3. Is bit 7 cleared after a read from PPUSTATUS, or a read from any PPU register?
<br />4. Similarly, are PPUSCROLL and PPUADDR cleared after a read from PPUSTATUS, or a read from any PPU register?
<br />
<br />
<br />Like I said, the Nestech document seems to have different information than most of my sources on this register, so I would like to know how accurate this information is. Any help would be appreciated!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Sun Oct 16, 2011 4:00 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Always trust the wiki info over any 3rd party stuff, I've never heard of that other document you were referencing. But anyway...
<br />
<br />1. You don't write to the register. the "clearing" is of the way the $2006/$2005 registers work. You write multiple values. $2006 goes high byte of data and then low, and a read resets it to write the high byte being written so you KNOW the status of $2006 write is as it could be the low byte for some reason. Same with the $2005 latch, you write X then Y scroll. You read $2002 it to make sure you're writing the first byte of the latch first, not the another for any reason. 
<br />
<br />2. AFAIK, D4 does nothing. there's only those 3 flags. And I also hear that D5 is slightly more complicated, but I know no details about that, wait till others chime in.
<br />
<br />3. D7 is cleared when read from $2002 and $2002 only. It also triggers the NMI too. If it's 1 and and NMI is disabled on the CPU side, nothing happens. But if it's 1 and you then enable NMI on the CPU side, the CPU will get interrupted at that very time nomatter if it's rendering or not IIRC.
<br />
<br />4. See how the PPU $2006 works, same thing, making sure you're writing the value you want first pretty much.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sun Oct 16, 2011 4:01 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: PPUSTATUS lower bits</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Elessar wrote:</div><div class="quotecontent">However, the Nestech document provides this information</div><br />NESTECH.txt is <em>very</em> old.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">1. How many bits are written to PPUSTATUS as a result of data being written into a PPU register - 4 bits or 5 bits?</div><br />I'm not aware of any test ROM for PPU open bus behavior, and I'm not aware of any game that depends on it. I think it has something to do with how the pin drivers are set up inside the PPU.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">2. Is bit 4 actually a VRAM write flag?</div><br />No.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">3. Is bit 7 cleared after a read from PPUSTATUS, or a read from any PPU register?</div><br />Bit 7 of PPUSTATUS is set to 0 after reading PPUSTATUS, not after reading any of the other seven ports. The behavior is described in the <a href="http://wiki.nesdev.com/w/index.php/NMI" class="postlink">page on NMI</a>.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">4. Similarly, are PPUSCROLL and PPUADDR cleared after a read from PPUSTATUS, or a read from any PPU register?</div>
<br />Nothing "clears" PPUSCROLL and PPUADDR, except that parts of <em>t</em> (loaded through PPUSCROLL) are copied to <em>v</em> (PPUADDR) at the start of a frame and at the end of each scanline if rendering is turned on in PPUMASK. What this refers to is an internal 1-bit address latch telling whether to write to the top half or the bottom half of a register.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Elessar</b> [ Sun Oct 16, 2011 4:08 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: PPUSTATUS lower bits</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent"><div class="quotetitle">Elessar wrote:</div><div class="quotecontent">However, the Nestech document provides this information</div><br />NESTECH.txt is <em>very</em> old.<br /><br />...<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">2. Is bit 4 actually a VRAM write flag?</div><br />No.</div><br />I suspected that this might be the case, but I wanted to make sure.<br /><br /><br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent"><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">1. How many bits are written to PPUSTATUS as a result of data being written into a PPU register - 4 bits or 5 bits?</div><br />I'm not aware of any test ROM for PPU open bus behavior, and I'm not aware of any game that depends on it. I think it has something to do with how the pin drivers are set up inside the PPU.</div>
<br />Would I be able to safely ignore the lower bits of the PPUSTATUS register then?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sun Oct 16, 2011 4:15 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yes, you can ignore D4-D0 of PPUSTATUS because games typically use instructions that likewise ignore these bits. Typical program fragments:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">; In init code, while waiting for the PPU to warm up<br /><br />warmup1:<br />&nbsp; bit PPUSTATUS<br />&nbsp; bpl warmup1<br />&nbsp; ; at this point we should be at the bottom of the first frame<br />warmup2:<br />&nbsp; bit PPUSTATUS<br />&nbsp; bpl warmup2<br />&nbsp; ; after this point, the game will use only NMIs to wait for vblank<br /><br />; 8&lt; cut &gt;8<br /><br />; During game play, while waiting for sprite 0 to change the<br />; scroll position from the status bar to the playfield<br /><br />&nbsp; ; first wait for sprite 0 flag to be cleared at end of vblank<br />s0wait_0:<br />&nbsp; bit PPUSTATUS<br />&nbsp; bvs s0wait_0<br />&nbsp; ; now wait for it to be set again<br />s0wait_1:<br />&nbsp; bit PPUSTATUS<br />&nbsp; bvs s0wait_1<br />&nbsp; ; at this point, the game is likely to write to PPUCTRL,<br />&nbsp; ; PPUSCROLL, and/or PPUADDR to change the scroll position<br /></div>
<br />The BIT instruction is commonly used to load bits 7 and 6 of a value in into flags N and V.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bisqwit</b> [ Sun Oct 16, 2011 4:31 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: PPUSTATUS lower bits</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent"><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">1. How many bits are written to PPUSTATUS as a result of data being written into a PPU register - 4 bits or 5 bits?</div><br />I'm not aware of any test ROM for PPU open bus behavior, and I'm not aware of any game that depends on it. I think it has something to do with how the pin drivers are set up inside the PPU.</div>
<br />No idea about games depending on stuff, but Blargg has an open bus test that can be downloaded at <!-- m --><a class="postlink" href="http://blargg.parodius.com/nes-tests/">http://blargg.parodius.com/nes-tests/</a><!-- m -->  .

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Elessar</b> [ Sun Oct 16, 2011 4:36 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">Yes, you can ignore D4-D0 of PPUSTATUS because games typically use instructions that likewise ignore these bits.</div><br />Good to know.<br /><br /><br /><div class="quotetitle">Bisqwit wrote:</div><div class="quotecontent"><div class="quotetitle">tepples wrote:</div><div class="quotecontent"><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">1. How many bits are written to PPUSTATUS as a result of data being written into a PPU register - 4 bits or 5 bits?</div><br />I'm not aware of any test ROM for PPU open bus behavior, and I'm not aware of any game that depends on it. I think it has something to do with how the pin drivers are set up inside the PPU.</div><br />No idea about games depending on stuff, but Blargg has an open bus test that can be downloaded at <!-- m --><a class="postlink" href="http://blargg.parodius.com/nes-tests/">http://blargg.parodius.com/nes-tests/</a><!-- m -->  .</div>
<br />I'll check it out, thanks!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>beannaich</b> [ Sun Oct 16, 2011 6:15 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I still find that open bus test ROM a little vague in it's errors and descriptions of how PPU open bus works.
<br />
<br />I can also state that not having it emulated causes exactly 0 games to malfunction. That being said PPU open bus should be low priority for any PPU emulator. It really doesn't matter.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Mon Oct 17, 2011 8:46 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">3. D7 is cleared when read from $2002 and $2002 only. It also triggers the NMI too. If it's 1 and and NMI is disabled on the CPU side, nothing happens. But if it's 1 and you then enable NMI on the CPU side, the CPU will get interrupted at that very time nomatter if it's rendering or not IIRC.</div>
<br />I just wanted to correct you, it's impossible to disable NMIs from CPU side, you can only disable IRQs by setting the I flag.
<br />However, you can disable NMIs on the PPU side by setting $2000.7 to 0, then what you say happens.
<br />
<br />$2002.7 was really meant to be a NMI acknownledge, reading it as a '1' means the PPU just triggered an NMI. Because of how the 2A03 is wired inside the NES, no other NMI sources are possible so a game can freely ignore the acknownledge part and exectue NMI without any acknownledge, but you can trigger multiple NMIs by toggling $2000.7 off and on again without reading $2002.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>