<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Controls Hacking -- Unlicenced Game</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Controls Hacking -- Unlicenced Game</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=9537">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=9537</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>magicant</b> [ Thu Nov 29, 2012 10:46 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Controls Hacking -- Unlicenced Game</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Would anyone know how to go about hacking the controls of an unlicenced NES game? Specifically; Master Chu and the Drunkard Hu.<br /><br />In the game, you need to press up on the directional pad to jump. I want to switch it to B, which is a useless fan attack.<br /><br />This game could be a classic if not for it's jump controls.<br /><br />Thank you.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Kasumi</b> [ Thu Nov 29, 2012 11:12 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Controls Hacking -- Unlicenced Game</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Have you ever done any game hacking/assembly language coding before?<br /><br />Basically, are you looking for someone to do this for you, or do you want to learn how to do it?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>magicant</b> [ Thu Nov 29, 2012 11:18 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Controls Hacking -- Unlicenced Game</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'd really like to learn assembly, but the coding extent I have is basic python and C. <br /><br />I'm proficient with graphics hacking but I'd like to take it a step further.<br /><br />Any guides you could point me to?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Kasumi</b> [ Thu Nov 29, 2012 11:51 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Controls Hacking -- Unlicenced Game</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Well uh... Here's a hack, anyway. <!-- m --><a class="postlink" href="http://www.mediafire.com/download.php?595844turtp14je">http://www.mediafire.com/download.php?595844turtp14je</a><!-- m --><br />Edit2: I should specify this is for the Color Dreams version with the title in English. But it'd probably be easy to make one for the other version.<br /><br />If I broke the game in some non obvious way, let me know. I literally didn't even move far enough to find out if the game scrolls. (But uh... no guarantees I'll be able to make a fix if it's gonna take more than a few minutes to.)<br /><br />As for a guide, I dunno. There are all the <a href="http://www.nintendoage.com/pub/faq/NA/nerdy_nights_out.html" class="postlink">nerdy nights guides</a> which teach you how to program for NES, more or less. I don't run in hacking circles, so there may be a general guide for that somewhere. I just apply my knowledge of the instruction set.<br /><br />I like <a href="http://nesdev.com/6502guid.txt" class="postlink">this guide as a really basic introduction to the 6502</a>, <a href="http://www.obelisk.demon.co.uk/6502/reference.html" class="postlink">this for finding opcodes.</a> The <a href="http://www.exifpro.com/utils.html" class="postlink">6502 Macro Assembler</a> is a great program to mess around with general 6502 programming in a forgiving environment. Getting started on the NES requires a lot of setup just to test out instructions. <br /><br />Edit: Hacking requires knowledge of what each instruction (and register) does. Essentially what you're doing is reprogramming the game. If you know lda $4016, means the game is reading player 1's joypad, you can look at what it does with the result to find out where the buttons pressed are stored in RAM. What happens when assembly code becomes a rom, is that the assembler determines the bytes for the instructions you're using, and places them in the rom. If you wanted to (for some reason) make player two's controller control player 1, you could replace the <br />$AD (This is the instruction that refers to lda $XXXX. You can find that out using the opcode guide)<br />$16 ($4016 is an address that takes two bytes. The NES had the lower byte of an address first)<br />$40 (The high byte of $4016.)<br /><br />to<br /><br />$AD (no change)<br />$17<br />$40<br /><br />Because $4017 is where to read for player two's buttons. But you can't just search for any old string of $AD $16 $40 in the rom and replace it, because in a rom you can't guess at what is actual code and what is data. To get around this, you use a debugger and break on reads to the address you're looking for. That will tell you where in the rom the actual code you want to change is. Fun fact: This game doesn't even use $AD to read from its controllers. And the hack I described (swapping player one and two's controllers), would have been a bit more difficult because of this. But a debugger set to look for a read of $4016 would still have found where to change things.<br /><br />Now, this is a giant oversimplication of things... but once you pick up some assembly knowledge, the hacking knowledge comes easy. (But... actual hacking can be a terribly difficult process. Worse than just making new stuff if you're doing anything complicated, in my opinion)<br /><br />My process for this was pretty lame. I opened the hex editor in FCEUX and looked for variables that remained steady when I held buttons down. RAM $1C became #$40 when I held B button down. <br /><br />So I made breakpoint on reads of $1C, and ran it until I found one that had AND #$40 after the read. (AND is one way to check if a specific bit is set.) I searched for these bytes in the rom. Then I held up to see what the value in $1C was when I held up. It was #$08. So I changed $40 to $08 at that location in the rom.<br /><br />Then I found a place in the rom where AND #$08 was after a load of $1C, and replaced that $08 with $40 in the rom. Done.<br /><br />If you know what the instructions do, you can make very simple hacks. Say... by finding the variable in RAM that holds the number of lives. If you see lda #$03 before a store to that location, you can change it to something like say... #$09. But I'm not sure how much sense any of that makes and now this post has taken longer to make than the actual hack took.<br /><br />Edit: Put in a lot more text explaining what goes on with hacks. Hopefully not too obtuse or too overly simplified. If you have more specific questions after reading some of those guides, fire away. I can't help much with actual hacking as it has all that other stuff as prerequisite knowledge, and I'd rather you explore a little on your own there.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>