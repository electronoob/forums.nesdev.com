<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=2&amp;t=2870" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2007-01-17T18:39:58-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=2&amp;t=2870</id>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2007-01-17T18:39:58-07:00</updated>
<published>2007-01-17T18:39:58-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2870&amp;p=21369#p21369</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2870&amp;p=21369#p21369"/>
<title type="html"><![CDATA[DMC interrupts - help please]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2870&amp;p=21369#p21369"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />All that really happens is that the dot-crawl pattern changes.<br /></div><br />If that's the only side-effect, I'm cool. =)<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Wed Jan 17, 2007 6:39 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2007-01-17T12:53:04-07:00</updated>
<published>2007-01-17T12:53:04-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2870&amp;p=21345#p21345</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2870&amp;p=21345#p21345"/>
<title type="html"><![CDATA[DMC interrupts - help please]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2870&amp;p=21345#p21345"><![CDATA[
All that really happens is that the dot-crawl pattern changes.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Wed Jan 17, 2007 12:53 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2007-01-17T12:42:42-07:00</updated>
<published>2007-01-17T12:42:42-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2870&amp;p=21344#p21344</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2870&amp;p=21344#p21344"/>
<title type="html"><![CDATA[DMC interrupts - help please]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2870&amp;p=21344#p21344"><![CDATA[
Hello all, it's me again.<br /><br />I got one more thing to ask, but decided to do it here instead of starting a new thread just for this.<br /><br />I'm enabling rendering late, OK? Let's say that scanline 16 is the first one that gets rendered. What do I get, in addition to the 16 (0 to 15) scanlines that were not displayed? There are 20 scanlines in vblank, but there's that "pre-render" scanline also right? So do I get 20 + 1 + 16 = 37 scanlines worth of vblank time, is that it?<br /><br />I know that something happens to the video when rendering is disabled (everyone uses Battletoads as an example for that), I don't know exactly what (because I don't know much about video), I just know it happens because of that scanline that's 1 PPU cycle shorter. I'm not worried about that though, I don't think the video looks bad at all.<br /><br />So, my other question is: what happens to the pre-render scanline when rendering is disabled? Does it happen after I enable rendering instead, or something weird like that?<br /><br />Is there anything I should actually be worried about when enabling rendering late?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Wed Jan 17, 2007 12:42 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2007-01-15T12:25:12-07:00</updated>
<published>2007-01-15T12:25:12-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2870&amp;p=21250#p21250</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2870&amp;p=21250#p21250"/>
<title type="html"><![CDATA[DMC interrupts - help please]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2870&amp;p=21250#p21250"><![CDATA[
<div class="quotetitle">Disch wrote:</div><div class="quotecontent"><br />Nonetheless, tokumaru, if you plan to go this route -- I would not recommend you test it on anything other than the actual system... as this is the kind of thing that existing emus might be emulating all wrong without knowing it.<br /></div><br />Got it! Thanks for the tips. =)<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Mon Jan 15, 2007 12:25 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2007-01-15T11:51:31-07:00</updated>
<published>2007-01-15T11:51:31-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2870&amp;p=21248#p21248</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2870&amp;p=21248#p21248"/>
<title type="html"><![CDATA[DMC interrupts - help please]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2870&amp;p=21248#p21248"><![CDATA[
Having a length of 0 for the DMC makes good sense to get it started -- but once you have it moving, it makes more sense to lengthen it a bit so that IRQs don't occur as frequently.<br /><br />Set the length to 0 (1 byte) and have the speed at max.  Once that IRQs, slow it down, and maybe increase the length a bit and run the DMC again.  If you're careful about when you change the speed, you can keep the timing relatively reliable.<br /><br />If you [carefully] change the speed to $08, and the length to 1 ($11 bytes), the second IRQ will come 25840 cycles after the first.  And since it was triggered by a shorter/faster IRQ, you'll still have the same ~432 cycle window you had before, even though you upped the freq.<br /><br />I highly suspect MiG 29 Soviet Fighter does something like this, but I haven't checked.  I know that emulating that game becomes very difficult unless you have your DMC timing pretty sharp -- which makes sense if it does something like this which relies so heavily on when the IRQ trips and when the frequency change affects the playing samples.  Nonetheless, tokumaru, if you plan to go this route -- I would not recommend you test it on anything other than the actual system... as this is the kind of thing that existing emus might be emulating all wrong without knowing it.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Mon Jan 15, 2007 11:51 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2007-01-15T10:20:23-07:00</updated>
<published>2007-01-15T10:20:23-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2870&amp;p=21240#p21240</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2870&amp;p=21240#p21240"/>
<title type="html"><![CDATA[DMC interrupts - help please]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2870&amp;p=21240#p21240"><![CDATA[
<div class="quotetitle">blargg wrote:</div><div class="quotecontent"><br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">Set the rate to (i.e. one sample every 54 cycles on NTSC) and the length to 0 (i.e. one byte, or 8 samples), which should make an IRQ every 432 CPU cycles. Have the IRQ copy the low byte of the program counter from the stack to a variable in zero page and increment the number of IRQs encountered.<br /></div><br />And say bye-bye to at least 10% of your CPU time.</div><br />Compare to about 100% if you have to use timed code for multiple splits.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Mon Jan 15, 2007 10:20 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2007-01-15T08:45:50-07:00</updated>
<published>2007-01-15T08:45:50-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2870&amp;p=21231#p21231</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2870&amp;p=21231#p21231"/>
<title type="html"><![CDATA[DMC interrupts - help please]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2870&amp;p=21231#p21231"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />Set the rate to (i.e. one sample every 54 cycles on NTSC) and the length to 0 (i.e. one byte, or 8 samples), which should make an IRQ every 432 CPU cycles. Have the IRQ copy the low byte of the program counter from the stack to a variable in zero page and increment the number of IRQs encountered.<br /></div><br />And say bye-bye to at least 10% of your CPU time. How many cycles would this IRQ routine take? Getting at the saved PC takes several instructions, and you've got to restart the DMC. If you're going to take a complex route like this, I bet you could use a combination of several different lower DMC rates so that the sum of the delays totals 29380 2/3 CPU clocks each frame (maybe you give the routine feedback every frame or something). Someone needs to examine Fire Hawk and Silent Service to find out how they use the DMC to get an interrupt lower in the frame (at least I've heard they use the DMC for this).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Mon Jan 15, 2007 8:45 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2007-01-15T08:35:51-07:00</updated>
<published>2007-01-15T08:35:51-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2870&amp;p=21229#p21229</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2870&amp;p=21229#p21229"/>
<title type="html"><![CDATA[DMC interrupts - help please]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2870&amp;p=21229#p21229"><![CDATA[
Your idea seems very interesting, but although I think I got the general idea, I'm not familiar with the concepts of "NOP slide subroutines" or "partial NOP slide".<br /><br />It would be cool to see a proof-of-concept demo, but I'm not sure if it would worth the trouble in a real game.<br /><br />What do you have in mind when you say "more-or-less precise timing" anyway?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Mon Jan 15, 2007 8:35 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2007-01-15T00:42:25-07:00</updated>
<published>2007-01-15T00:42:25-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2870&amp;p=21224#p21224</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2870&amp;p=21224#p21224"/>
<title type="html"><![CDATA[DMC interrupts - help please]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2870&amp;p=21224#p21224"><![CDATA[
<div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><br />I have almost decided to leave color 0 as it is (as opposed to setting it to some known value while rendering is off), mainly because it's easier (I don't have to do anything different from what I already am), but also because I believe it's harder for the player to notice that something is missing if the border uses the same overall color of the level.<br /></div><br />Nintendo engineers agreed with you in the early days of the NES when developing <em>Super Mario Bros.</em><br /><br />And yes it should be possible to squeeze more-or-less precise timing out of the DMC. Set the rate to (i.e. one sample every 54 cycles on NTSC) and the length to 0 (i.e. one byte, or 8 samples), which should make an IRQ every 432 CPU cycles. Have the IRQ copy the low byte of the program counter from the stack to a variable in zero page and increment the number of IRQs encountered. Then in each frame, do the following:<br /><ol style="list-style-type: decimal"><li>Starting at a known raster point, run a NOP slide subroutine. The DMC IRQ will fire sometime during this and copy the PC. This gives a delta between the raster and the DMC IRQ. </li><li>Wait until nLines*341/(3*432) iterations of the DMC IRQ have elapsed. </li><li>Run a partial NOP slide, computing where to start based on the saved program counter. </li></ol><br />Anyone want me to write a proof-of-concept ROM based on this principle?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Mon Jan 15, 2007 12:42 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2007-01-14T18:10:36-07:00</updated>
<published>2007-01-14T18:10:36-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2870&amp;p=21216#p21216</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2870&amp;p=21216#p21216"/>
<title type="html"><![CDATA[DMC interrupts - help please]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2870&amp;p=21216#p21216"><![CDATA[
<div class="quotetitle">blargg wrote:</div><div class="quotecontent"><br />Hey, simpler is better (if it works).<br /></div><br />Yeah, that's what I figured too. Now most of the vblank code (copying routines) is ready and I can move on to game logic, map decoding, collision detection, object engine... (wow, there's a lot to go!)! =)<br /><br />I have most of this stuff figured out (and documented) already though, I just need to write the code. =)<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />For the background color, use palette entries $3F04, $3F08, or $3F0C for your border color(s), as these three distinct entries are otherwise never displayed during rendering. This way you don't have to save/restore the color every frame.<br /></div><br />I actually thought about using that trick (pointing to the color I want to display) but soon I realized that...<br /><br /><div class="quotetitle">Disch wrote:</div><div class="quotecontent"><br />I would assume he would have to use $3F00, since he's going to be making PPU accesses for those lines (why else would he want 16 blank scanlines?).<br /></div><br />I was indeed going to make a lot of PPU access, so if I want to use anything specific I'd have to use $3F00.<br /><br />I have almost decided to leave color 0 as it is (as opposed to setting it to some known value while rendering is off), mainly because it's easier (I don't have to do anything different from what I already am), but also because I believe it's harder for the player to notice that something is missing if the border uses the same overall color of the level.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Sun Jan 14, 2007 6:10 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2007-01-14T15:32:34-07:00</updated>
<published>2007-01-14T15:32:34-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2870&amp;p=21210#p21210</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2870&amp;p=21210#p21210"/>
<title type="html"><![CDATA[DMC interrupts - help please]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2870&amp;p=21210#p21210"><![CDATA[
I would assume he would have to use $3F00, since he's going to be making PPU accesses for those lines (why else would he want 16 blank scanlines?).  You can only use $3F04, $3F08, and $3F0C if you leave the PPU address there -- somewhat defeating the point of extending VBlank.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Sun Jan 14, 2007 3:32 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2007-01-14T14:57:35-07:00</updated>
<published>2007-01-14T14:57:35-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2870&amp;p=21208#p21208</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2870&amp;p=21208#p21208"/>
<title type="html"><![CDATA[DMC interrupts - help please]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2870&amp;p=21208#p21208"><![CDATA[
Hey, simpler is better (if it works).<br /><br />For the background color, use palette entries $3F04, $3F08, or $3F0C for your border color(s), as these three distinct entries are otherwise never displayed during rendering. This way you don't have to save/restore the color every frame. See this thread: <!-- m --><a class="postlink" href="http://nesdev.com/bbs/viewtopic.php?p=8346">http://nesdev.com/bbs/viewtopic.php?p=8346</a><!-- m --><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Sun Jan 14, 2007 2:57 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2007-01-14T14:43:02-07:00</updated>
<published>2007-01-14T14:43:02-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2870&amp;p=21207#p21207</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2870&amp;p=21207#p21207"/>
<title type="html"><![CDATA[DMC interrupts - help please]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2870&amp;p=21207#p21207"><![CDATA[
I played a lot with the timing and all, but there is some quite big fluctuation that makes it impossible to use this without the aid of sprite 0 hits.<br /><br />In the end, I'd also lose some time waiting for the sprite hit. Quite a few scanlines, considering the high fluctuation of the time the IRQ fires. Or course, I wouldn't lose the time every frame, as sometimes the IRQ would fire very close to sprite 0.<br /><br />And as I said earlier, setting up sprite hits may not be trivial because of all the scrolling that goes on. Bregalad's suggestion of using a special tile that is cloned and altered to force the hit was nice, but in the end that's just more "wasted" time (for cloning the tile).<br /><br />So, I spent some more time on the tasks that should be performed during vblank, looking for a way to alternate between tasks (since not everything needs to be done every frame) in a way that the total time would not require more than 16 "stolen" scanlines (24 was just too much). Also, those tasks are now so tightly packed that I'll rarely be wasting time (there will almost always be something to do).<br /><br />Routines that alternate are programmed to use the same ammount of time, so that calling one or the other has no effect on timing. It seems to work pretty well, so I'm happy about this method.<br /><br />So, I ended up not using the DMC interrupts, but I'm glad I learned something new. I now know what you can and can not do with them. And hopefully I'll use them for some other project. So even though I'm not using that know, thank you all (specially blargg) for helping me out with this.<br /><br />So, since I decided to go with the (16 pixels tall) blank bar at the top of the screen, what do you feel is the best way to color it? Simply leave it as current color 0, or go through the trouble of setting a new color 0 (as black, for example) during vblank and restore original color 0 just before enabling rendering again?<br /><br />Sometimes I feel like having the black bar, as I think it will be less evident when seen on a TV. However, if the level uses a lot of color 0 on the background, the bar may not be so evident either, since the player will hardly be looking directly at it, it may seem like part of the level since it has the same overall color of the level. What do you think?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Sun Jan 14, 2007 2:43 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2007-01-13T12:13:46-07:00</updated>
<published>2007-01-13T12:13:46-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2870&amp;p=21180#p21180</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2870&amp;p=21180#p21180"/>
<title type="html"><![CDATA[DMC interrupts - help please]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2870&amp;p=21180#p21180"><![CDATA[
I guess I can understand that. Although we enable the IRQ almost at the same time every frame (when NMI fires), there is also the internal working of the DMC timer, and we never know the current state of that. I think I got it, thanks!<br /><br /><div class="quotetitle">blargg wrote:</div><div class="quotecontent"><br />That's why the code sets the rate to maximum ($F) between interrupts, to reduce this variability to a minimum<br /></div><br />I was wondering just that! Now I know what that was for.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />experiment with the timings, even things that seem crazy).<br /></div><br />I'll try that too, thanks.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Sat Jan 13, 2007 12:13 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2007-01-13T11:28:38-07:00</updated>
<published>2007-01-13T11:28:38-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2870&amp;p=21178#p21178</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2870&amp;p=21178#p21178"/>
<title type="html"><![CDATA[DMC interrupts - help please]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2870&amp;p=21178#p21178"><![CDATA[
<div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><br />I can see now how the time the IRQ fires can vary. I wonder why is that, since it would make sence that the same audio would play using the same ammount of time. But I know squat about sound, so maybe precise timing isn't so important.<br /></div><br />Think of it like in this hypothetical example: you have an NMI routine that decrements a counter on each interrupt, then does something special if the counter reached zero. If you reset the counter to 5 and enable NMI ($2000=$80) at various random times, the counter will reach zero anywhere from slightly over 4 NMI periods (if you enable just before VBL) to almost 5 NMI periods (if you enable after VBL ends), depending on where in the frame you enabled NMI. It's the same with the DMC, where it's <em>always</em> running the timer internally. That's why the code sets the rate to maximum ($F) between interrupts, to reduce this variability to a minimum (hmmm, I tried varying this rate and some made really stable timings, but that might just be due to chance... experiment with the timings, even things that seem crazy).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Sat Jan 13, 2007 11:28 am</p><hr />
]]></content>
</entry>
</feed>