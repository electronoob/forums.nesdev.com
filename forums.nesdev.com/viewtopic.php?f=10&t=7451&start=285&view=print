<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - 8x16 and whatever else unreg wants to know</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">8x16 and whatever else unreg wants to know</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=7451">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=7451</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>20</strong> of <strong>83</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Jarhmander</b> [ Thu Sep 01, 2011 7:03 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">unregistered (a few pages back)  wrote:</div><div class="quotecontent">Thank you all for the honest and helpfull advice.  Scrolling will be ok for me to attempt, I think, because there are two big thick books that remind me of programming with Torque, a 3D game engine.  It was a hard and immensly difficult task, but God was there with me and he helped me figure it out. <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />  We made an A and I got credit for an internship for that class! <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />  My <span style="text-decoration: underline"><strong>mom</strong></span> helped me remember the last part of that.  I think I can do this scrolling... my <strong><span style="text-decoration: underline">sister</span></strong> helped me to find <a href="http://www.nintendoage.com/forum/messageview.cfm?catid=22&amp;threadid=36958" class="postlink">this Nerdy Nights scrolling article</a>.  And it has made some sense so far... I've made it to the drawing new columns part.  Will read this again after supper.</div><br /><div class="quotetitle">unregistered wrote:</div><div class="quotecontent">I'm sorry for saying some of the code that you spent valuable time typing out for me was a waste.  My <span style="text-decoration: underline"><strong>sister</strong></span> helped me understand my mistake but I asked her too late.  Ok.  Thank you for your response tokumaru.  Have a good night. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /></div>
<br />You've got a quite interesting family!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Fri Sep 02, 2011 10:12 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">3gengames wrote:</div><div class="quotecontent">Well, start making parts of the entire system. Stuff like background collision </div><br />Thank you 3gengames. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /> <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /> Found this thread; it was my starting place to learn about background collision.<br /><br /><a href="http://nesdev.com/bbs/viewtopic.php?t=7579&amp;highlight=background+collision" class="postlink">http://nesdev.com/bbs/viewtopic.php?t=7579&amp;highlight=background+collision</a><br /><br /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">I'm not gonna lie to you, this will be hard to get right. This is the part where your little NES program stops being a playground and starts becoming a game. At this point, everything you program needs to be more robust and integrated, everything must be a "system", rather than just random blocks of code with immediate results on the screen. This is serious business.</div><br /><br />This sounds like fun. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />  The posts you mentioned/linked are so great! Thank you tokumaru! <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /><br /><br /><div class="quotetitle">~J-@D!~ wrote:</div><div class="quotecontent">You've got a quite interesting family!</div>
<br />Thank you! <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /> I love them all so very much!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Mon Sep 05, 2011 8:24 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">Considering that there are usually several objects that need collision tests against the background, the time taken to do this will easily be more than 20 scanlines, so that fact that this HAS to be done outside of VBlank is not even up for discussion.</div>
<br />
<br />Ok, so collision should be done outside of VBlank.  Does this mean  collision code should go in to the empty loop that "; Transfer<strong>s</strong> control to the VBLANK routines"?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Mon Sep 05, 2011 9:54 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">unregistered wrote:</div><div class="quotecontent">Does this mean  collision code should go in to the empty loop that "; Transfer<strong>s</strong> control to the VBLANK routines"?</div>
<br />Not necessarily. If you currently have your whole engine running in the NMI (which I assume you do, since you have an empty loop), just be sure to run the collision code <strong>after</strong> the VRAM updates (i.e. sprite DMA, name table updates, setting the scroll, etc.).
<br />
<br />The NMI fires as soon as VBlank starts. Since VBlank is quite short, you can't waste time doing tasks that could be performed outside of VBlank, so you should rush to the video updates and get them done as soon as possible. THEN you do the other stuff, such as music, collision and all other game logic.
<br />
<br />It does feel kinda "backwards", but since you are doing it all inside the NMI then there's no other way.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Mon Sep 05, 2011 9:58 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It's not so backwards if you think of it as preprocessing and thinking of it like you're doing next frame's work now.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Mon Sep 05, 2011 12:10 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />That's why I said "kinda" backwards. What's more confusing to a newbie, IMO, is that the first time the NMI runs there are no updates to do, because the frame logic hasn't run yet. To work around that you have to implement a "FrameReady" or "FirstFrame" flag, to skip the first session of VRAM updates.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Mon Sep 05, 2011 12:21 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I just preprocess the first frame of my game myself, turn on the screen/nmi when it hits and is ready, and then hits the groun running, no variables needed. See, unregistered, there's many ways to go about everything. Youcan do different tests on mini programs and find what works best for you and the mini programs will really help you get a better understanding each one. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Sep 05, 2011 12:42 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">the first time the NMI runs there are no updates to do, because the frame logic hasn't run yet. To work around that you have to implement a "FrameReady" or "FirstFrame" flag, to skip the first session of VRAM updates.</div>
<br />You have to do that anyway in an NMI-driven game engine in case your game logic runs over 27 kcycles.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Wed Sep 07, 2011 2:30 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><div class="quotetitle">unregistered wrote:</div><div class="quotecontent">Does this mean  collision code should go in to the empty loop that "; Transfer<strong>s</strong> control to the VBLANK routines"?</div><br />Not necessarily. If you currently have your whole engine running in the NMI (which I assume you do, since you have an empty loop)</div>
<br />
<br />What normally would go into the empty loop?  Are there any downsides to having a whole engine running in the NMI?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Wed Sep 07, 2011 3:27 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">unregistered wrote:</div><div class="quotecontent">What normally would go into the empty loop?</div><br />There are 3 main ways to set up NES programs:<br /><br /><strong>1. Game logic in the main loop, video and audio updates in the NMI:</strong><br />The whole game logic (i.e. movement, collisions, etc.) is in the main loop, and once it finishes the program waits for the NMI to fire. When it fires, it performs all the necessary video and audio updates, and then control is returned to the main loop, where the next frame will be processed.<br /><br /><strong>2. Game logic and video and audio updates in the main loop, the NMI only sets a flag:</strong><br />The whole game logic is in the main loop, and once it finishes the program waits for VBlank. The NMI will simply set a flag to indicate that VBlank has started and then return, at which point the main loop will proceed to perform video and audio updates and loop back to process the next frame.<br /><br /><strong>3. Video and audio updates and game logic in the NMI, the main loop is empty:</strong><br />Video and audio updates based on the previous frame are performed first, and then the game logic of the following frame is calculated. Absolutely nothing is done in the main loop. This is considered the most newbie-friendly method because the programmer doesn't have to worry about 2 "threads" running in parallel, and the NMI automatically firing 60 (or 50, if it's a PAL NES) times per second is a very convenient way to time the program without any effort (i.e. no need to wait for VBlank).<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Are there any downsides to having a whole engine running in the NMI?</div>
<br />Yes, if you have raster effects timed from the start of the frame (such as a status bar). Methods 2 an 3 suck for handling cases when the game logic takes too long (i.e. longer than a frame) to complete and you have such effects. Unpleasant visual glitches and music slowdown are the side effects of this (the program can even crash if sprite 0 hits are involved). Method 1 is the best to avoid these problems.
<br />
<br />Simple games will hardly use too much CPU time unless they are very badly programmed, but complex games with scrolling, large number of active enemies, and so on, will certainly have a few sections with slowdown, and this is an issue for them.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Wed Sep 07, 2011 5:57 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><div class="quotetitle">unregistered wrote:</div><div class="quotecontent">What normally would go into the empty loop?</div><br />There are 3 main ways to set up NES programs:<br /><br /><strong>1. Game logic in the main loop, video and audio updates in the NMI:</strong><br />The whole game logic (i.e. movement, collisions, etc.) is in the main loop, and once it finishes the program waits for the NMI to fire. When it fires, it performs all the necessary video and audio updates, and then control is returned to the main loop, where the next frame will be processed.<br /><br /><strong>2. Game logic and video and audio updates in the main loop, the NMI only sets a flag:</strong><br />The whole game logic is in the main loop, and once it finishes the program waits for VBlank. The NMI will simply set a flag to indicate that VBlank has started and then return, at which point the main loop will proceed to perform video and audio updates and loop back to process the next frame.<br /><br /><strong>3. Video and audio updates and game logic in the NMI, the main loop is empty:</strong><br />Video and audio updates based on the previous frame are performed first, and then the game logic of the following frame is calculated. Absolutely nothing is done in the main loop. This is considered the most newbie-friendly method because the programmer doesn't have to worry about 2 "threads" running in parallel, and the NMI automatically firing 60 (or 50, if it's a PAL NES) times per second is a very convenient way to time the program without any effort (i.e. no need to wait for VBlank).<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Are there any downsides to having a whole engine running in the NMI?</div><br />Yes, if you have raster effects timed from the start of the frame (such as a status bar). Methods 2 an 3 suck for handling cases when the game logic takes too long (i.e. longer than a frame) to complete and you have such effects. Unpleasant visual glitches and music slowdown are the side effects of this (the program can even crash if sprite 0 hits are involved). Method 1 is the best to avoid these problems.<br /><br />Simple games will hardly use too much CPU time unless they are very badly programmed, but complex games with scrolling, large number of active enemies, and so on, will certainly have a few sections with slowdown, and this is an issue for them.</div>
<br />
<br />tokumaru, wow, you could write an NES book!  <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />  Thank you so much for all of this info! I'm going to try Method 1. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />  Does Method 1 have an empty loop in it where it waits for  NMI?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Wed Sep 07, 2011 7:26 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">unregistered wrote:</div><div class="quotecontent">tokumaru, wow, you could write an NES book!</div><br />Nah, I get things wrong more often than I'd like! =)<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Does Method 1 have an empty loop in it where it waits for  NMI?</div>
<br />It often uses a flag to indicate that the frame calculations are done and the data necessary for VRAM updates is ready. The main loop will look something like this:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;;initialize the flag to &quot;false&quot;<br />&nbsp; &nbsp;lda #$00<br />&nbsp; &nbsp;sta FrameReady<br /><br />MainLoop:<br /><br />&nbsp; &nbsp;;DO THE GAME LOGIC HERE<br /><br />&nbsp; &nbsp;;indicate that the frame calculations are done<br />&nbsp; &nbsp;dec FrameReady<br /><br />WaitForUpdates:<br /><br />&nbsp; &nbsp;;wait for the flag to change<br />&nbsp; &nbsp;bit FrameReady<br />&nbsp; &nbsp;bmi WaitForUpdates<br /><br />&nbsp; &nbsp;jmp MainLoop</div><br /><br />And the NMI will be similar to this:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NMI:<br />&nbsp; &nbsp;;skip the video updates if the frame calculations aren't over yet<br />&nbsp; &nbsp;bit FrameReady<br />&nbsp; &nbsp;bpl SkipUpdates<br /><br />&nbsp; &nbsp;;PERFORM VIDEO UPDATES HERE<br /><br />&nbsp; &nbsp;;modify the flag<br />&nbsp; &nbsp;inc FrameReady<br /><br />SkipUpdates:<br /><br />&nbsp; &nbsp;;PERFORM TASKS THAT MUST BE PERFORMED EVEN<br />&nbsp; &nbsp;;WHEN THE FRAME IS NOT READY, SUCH AS UPDATING<br />&nbsp; &nbsp;;THE MUSIC OR DRAWING A STATUS BAR<br /><br />&nbsp; &nbsp;;return from the NMI<br />&nbsp; &nbsp;rti</div>
<br />
<br />I'm using "FrameReady" as a boolean variable here ($00 = false, $ff = true), but you can implement this logic differently if you want.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Sep 08, 2011 12:41 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><div class="quotetitle">unregistered wrote:</div><div class="quotecontent">tokumaru, wow, you could write an NES book!</div><br />Nah, I get things wrong more often than I'd like! =)</div>
<br />Don't worry: if you make the book on Wikibooks, other people will have a chance to fix what you get wrong.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Thu Sep 08, 2011 4:07 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><div class="quotetitle">unregistered wrote:</div><div class="quotecontent">tokumaru, wow, you could write an NES book!</div><br />Nah, I get things wrong more often than I'd like! =)<br /><br /></div><br />Ah, ok.  <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">And the NMI will be similar to this:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NMI:<br />&nbsp; &nbsp;;skip the video updates if the frame calculations aren't over yet<br />&nbsp; &nbsp;bit FrameReady<br />&nbsp; &nbsp;bpl SkipUpdates<br /><br />&nbsp; &nbsp;;PERFORM VIDEO UPDATES HERE<br /><br />&nbsp; &nbsp;;modify the flag<br />&nbsp; &nbsp;inc FrameReady<br /><br />SkipUpdates:<br /><br />&nbsp; &nbsp;;PERFORM TASKS THAT MUST BE PERFORMED EVEN<br />&nbsp; &nbsp;;WHEN THE FRAME IS NOT READY, SUCH AS UPDATING<br />&nbsp; &nbsp;;THE MUSIC OR DRAWING A STATUS BAR<br /><br />&nbsp; &nbsp;;return from the NMI<br />&nbsp; &nbsp;rti</div></div>
<br />
<br />I'm keeping <span style="color: orange">jsr react_to_input</span> in the video updates because the video may be changed by the controller.  Is that right? : )
<br />
<br />Thanks for the awesome example code tokumaru! <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Thu Sep 08, 2011 6:05 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">unregistered wrote:</div><div class="quotecontent">I'm keeping <span style="color: orange">jsr react_to_input</span> in the video updates because the video may be changed by the controller.  Is that right? : )</div>
<br />I think it makes more sense to put it at the start of the main loop. After all, the way your game reacts to input is part of the game logic. In a way, EVERYTHING in the game affects the video, and that's why you run all the game logic first, to prepare everything for the video updates that will follow.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>20</strong> of <strong>83</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>