<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=3&amp;t=8751" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2012-04-07T11:44:18-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=3&amp;t=8751</id>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2012-04-07T11:44:18-07:00</updated>
<published>2012-04-07T11:44:18-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8751&amp;p=92266#p92266</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8751&amp;p=92266#p92266"/>
<title type="html"><![CDATA[Is there a $4014 DMA test?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8751&amp;p=92266#p92266"><![CDATA[
RDY can be pulled low to pause any read, but not writes, as I understand it. That's probably why DMC DMA waits 4 cycles instead of two: to make sure that the three consecutive writes of a BRK, /IRQ, or /NMI have finished.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Sat Apr 07, 2012 11:44 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[lidnariq]]></name></author>
<updated>2012-04-07T10:48:55-07:00</updated>
<published>2012-04-07T10:48:55-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8751&amp;p=92265#p92265</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8751&amp;p=92265#p92265"/>
<title type="html"><![CDATA[Is there a $4014 DMA test?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8751&amp;p=92265#p92265"><![CDATA[
Well, the DMA can't start until the previous instruction finishes, because the 6502 does everything on instruction boundaries. So I think it follows how that would preclude multiple transfers...<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3512">lidnariq</a> — Sat Apr 07, 2012 10:48 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[beannaich]]></name></author>
<updated>2012-04-07T04:40:28-07:00</updated>
<published>2012-04-07T04:40:28-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8751&amp;p=92253#p92253</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8751&amp;p=92253#p92253"/>
<title type="html"><![CDATA[Is there a $4014 DMA test?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8751&amp;p=92253#p92253"><![CDATA[
<div class="quotetitle">crudelios wrote:</div><div class="quotecontent"><br />Because of that, I believe that when using ROL $4014, the CPU will copy either $80 or $81, depending on the C flag.<br /></div><br /><br />I thought about this more. The ROL would write $40 to $4014, and depending on how quickly the PPU initiates the transfer either immediately, or soon thereafter stalls the CPU by stealing the bus. Which is why I thought 2 transfers would seem logical, but I guess according to blargg only one transfer happens.<br /><br />Not to question blargg, but that doesn't seem right unless Ricoh was aware of this and designed the PPU to only acknowledge the first of multiple sequential writes. It would be nice to have a thorough test of this on a real NES though.<br /><br />Until then, blargg is definitely a reliable source. <img src="http://forums.nesdev.com/images/smilies/icon_razz.gif" alt=":P" title="Razz" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4320">beannaich</a> — Sat Apr 07, 2012 4:40 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[crudelios]]></name></author>
<updated>2012-04-06T05:20:45-07:00</updated>
<published>2012-04-06T05:20:45-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8751&amp;p=92215#p92215</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8751&amp;p=92215#p92215"/>
<title type="html"><![CDATA[Is there a $4014 DMA test?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8751&amp;p=92215#p92215"><![CDATA[
STA $4014 seems to be just a bunch of STA $2004 stacked one after another, without the associated overhead of the opcode fetching.<br /><br />It seems logical me (but again, this is just speculation) what the CPU stores the written $4014 value to a temporary reg. So when you use ROL $4014, you write to that same reg twice, and only the last written value will be used at the and of the ROL instruction/beginning of SPRDMA transfer.<br /><br />Because of that, I believe that when using ROL $4014, the CPU will copy either $80 or $81, depending on the C flag.<br /><br />However, it might happen that the temp reg cannot be written for two consecutive cycles (that happens, for example, with the MMC1 mapper). In that case, $40 would be used.<br /><br />A test would be nice though <img src="http://forums.nesdev.com/images/smilies/icon_wink.gif" alt=";)" title="Wink" /><br /><br /><strong>Edit: </strong>This has been discussed before: <!-- m --><a class="postlink" href="http://nesdev.com/bbs/viewtopic.php?p=16685">http://nesdev.com/bbs/viewtopic.php?p=16685</a><!-- m --><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5192">crudelios</a> — Fri Apr 06, 2012 5:20 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[beannaich]]></name></author>
<updated>2012-04-06T04:23:38-07:00</updated>
<published>2012-04-06T04:23:38-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8751&amp;p=92212#p92212</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8751&amp;p=92212#p92212"/>
<title type="html"><![CDATA[Is there a $4014 DMA test?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8751&amp;p=92212#p92212"><![CDATA[
I actually came to the forums to ask this very question! I was wondering what would happen if you executed a RMW instruction on the $4014 register.<br /><br />I would think that there are only 2 possible cases:<br /><br />case 1 - The PPU ignores two writes in a row, so the page from $4000 - $40FF is copied (Garbage is displayed on the screen?). 513 + n cycles are consumed.<br /><br />case 2 - The PPU doesn't ignore two writes in a row, so 2 DMA transfers take place, the first from $4000, the second from $8000 or $8100 depending on carry. 513 + 513 + n cycles are consumed.<br /><br />This is obviously a very specific quirk of the NES hardware, as no commercial game I've encountered does this, as far as I've seen (I haven't searched the disassembly of every commercial ROM). But it would be very interesting to know the answer.<br /><br />Just when I thought I was being clever, you guys are already discussing!<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4320">beannaich</a> — Fri Apr 06, 2012 4:23 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Zepper]]></name></author>
<updated>2012-03-26T18:34:59-07:00</updated>
<published>2012-03-26T18:34:59-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8751&amp;p=91854#p91854</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8751&amp;p=91854#p91854"/>
<title type="html"><![CDATA[Is there a $4014 DMA test?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8751&amp;p=91854#p91854"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />But which page will get copied out? For example, if the program does ROL $4014 ($0E $14 $40), the CPU reads $40 from open bus, writes back $40, and then writes back $80 or $81 depending on carry.<br /></div><br /><br />Probably only the "STA $4014" is being seen as sprite DMA, as "standard". Your example is perfectly possible, but non-standard... and yes, good point.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Does it end up copying $4000-$40FF or $8000-$80FF/$8100-$81FF? The difference can still be discerned with sprite 0.<br /></div><br /><br />Could it be tested in a Powerpak?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=39">Zepper</a> — Mon Mar 26, 2012 6:34 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2012-03-26T18:08:36-07:00</updated>
<published>2012-03-26T18:08:36-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8751&amp;p=91853#p91853</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8751&amp;p=91853#p91853"/>
<title type="html"><![CDATA[Is there a $4014 DMA test?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8751&amp;p=91853#p91853"><![CDATA[
But which page will get copied out? For example, if the program does ROL $4014 ($0E $14 $40), the CPU reads $40 from open bus, writes back $40, and then writes back $80 or $81 depending on carry. Does it end up copying $4000-$40FF or $8000-$80FF/$8100-$81FF? The difference can still be discerned with sprite 0.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Mon Mar 26, 2012 6:08 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[crudelios]]></name></author>
<updated>2012-03-26T17:54:52-07:00</updated>
<published>2012-03-26T17:54:52-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8751&amp;p=91852#p91852</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8751&amp;p=91852#p91852"/>
<title type="html"><![CDATA[Is there a $4014 DMA test?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8751&amp;p=91852#p91852"><![CDATA[
SPR DMA should take 513 cycles if it starts on an even cycle, 514 if it starts on an odd cycle.<br /><br />Remember that SPR DMA only takes place when the instruction has finished executing, and not at the write cycle of the instruction! You can check this behavior by using a RMW instruction with $4014, it will only do one sprite dma at the end of the instruction.<br /><br />I m able to pass irq and dma, as well as both spr and dma tests using this implementation.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5192">crudelios</a> — Mon Mar 26, 2012 5:54 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Zepper]]></name></author>
<updated>2012-03-24T15:23:08-07:00</updated>
<published>2012-03-24T15:23:08-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8751&amp;p=91782#p91782</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8751&amp;p=91782#p91782"/>
<title type="html"><![CDATA[Is there a $4014 DMA test?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8751&amp;p=91782#p91782"><![CDATA[
<div class="quotetitle">Bisqwit wrote:</div><div class="quotecontent"><br />For clarity, Zepper, my post was not an attempt to answer your questions. I was asking more questions from an alternative perspective. Sorry about the confusion.<br /></div><br /><br />Yes, that's ok. <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=39">Zepper</a> — Sat Mar 24, 2012 3:23 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bisqwit]]></name></author>
<updated>2012-03-24T11:46:59-07:00</updated>
<published>2012-03-24T11:46:59-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8751&amp;p=91779#p91779</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8751&amp;p=91779#p91779"/>
<title type="html"><![CDATA[Is there a $4014 DMA test?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8751&amp;p=91779#p91779"><![CDATA[
For clarity, Zepper, my post was not an attempt to answer your questions. I was asking more questions from an alternative perspective. Sorry about the confusion.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5043">Bisqwit</a> — Sat Mar 24, 2012 11:46 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Zepper]]></name></author>
<updated>2012-03-24T08:43:50-07:00</updated>
<published>2012-03-24T08:43:50-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8751&amp;p=91768#p91768</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8751&amp;p=91768#p91768"/>
<title type="html"><![CDATA[Is there a $4014 DMA test?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8751&amp;p=91768#p91768"><![CDATA[
Personally, I'd prefer the following format for such description...<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">Write instructions &#40;STA, STX, STY, SAX&#41;<br /><br />        #  address R/W description<br />       --- ------- --- ------------------------------------------<br />        1    PC     R  fetch opcode, increment PC<br />        2    PC     R  fetch low byte of address, increment PC<br />        3    PC     R  fetch high byte of address, increment PC<br />        4  address  W  write register to effective address</div><br /><br />Anyway...<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />- On the cycle when $4014 is written to; the value from bus is read and captured, but nothing else happens (cycle 0)<br /></div><br /><br />AFAIK, the value on the bus should be from the last fetch (high byte of address); quite vague.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />- On the next cycle after that, RDY is signalled, and a 1 cycle of wait is performed. (cycle 1)<br /></div><br /><br />Well, yes, I could confirm such info a few months ago, after debugging my sprite dma code; and extra cycle is at the beginning, not at the end of it.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=39">Zepper</a> — Sat Mar 24, 2012 8:43 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bisqwit]]></name></author>
<updated>2012-03-24T04:23:49-07:00</updated>
<published>2012-03-24T04:23:49-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8751&amp;p=91762#p91762</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8751&amp;p=91762#p91762"/>
<title type="html"><![CDATA[Re: Is there a $4014 DMA test?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8751&amp;p=91762#p91762"><![CDATA[
Or, alternatively put: How does the DMA work?<br /><br />My current emulation approach (untested) works like this:<br />- On the cycle when $4014 is written to; the value from bus is read and captured, but nothing else happens (cycle 0)<br />- On the next cycle after that, RDY is signalled, and a 1 cycle of wait is performed. (cycle 1)<br />- Then, the next 512 cycles, the addressline is alternatingly signalled with R:value*0x100 and W:0x2004. The DMA does neither write nor read the values on the bus; it only controls the addresses and reading/writing modes. The RAM will put values on the bus and the PPU will read values from the bus, when their respective addresses are signalled. (cycles 2-513)<br />- On the final cycle, RDY is reset, and the DMA controller goes back to its default state. (cycle 514)<br /><br />This approach does not cooperate in any manner with the DMC DMA. Currently, the DMC has its own DMA, which works as such:<br />- On the cycle when the wavelength counter demands a next sample, and the sample buffer is empty, RDY is signalled, and nothing else is done for DMC. (cycle 1)<br />- Two next cycles, idle, for a total of 3 idle cycles. (cycles 2-3)<br />- Fourth cycle, address line is signalled with R:address. (cycle 4)<br />- Fifth cycle, value is read from the bus (one cycle of wait was necessary for the value to become available on the bus) and RDY is reset, and the DMC unit continues its business. (cycle 5)<br />If the DMA and the DMC happen simultaneously, they will do ill things.<br /><br />The CPU works as such:<br />- At the beginning of cycle, if the address line is in Reading mode, RDY is checked.<br />- If RDY was not signalled, the current cycle is processed. Otherwise, nothing is for this cycle.<br />- Processing the cycle (i.e. when RDY is not a problem), involves reading the bus (if previous cycle was supposed to signal a read), doing actions, and possibly putting a value on the bus (if the current cycle is going to begin a write), and programming the addressline with an address and either a read or a write.<br />Without testing I already know that this does not work properly when DMA or DMC has interrupted the processing and put other values on the address bus than expected by the CPU in between of the end of previous cycle and the beginning of current cycle.<br /><br />I would appreciate any and all corrections to these workflows.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5043">Bisqwit</a> — Sat Mar 24, 2012 4:23 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Zepper]]></name></author>
<updated>2012-03-23T17:42:28-07:00</updated>
<published>2012-03-23T17:42:28-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8751&amp;p=91748#p91748</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8751&amp;p=91748#p91748"/>
<title type="html"><![CDATA[Is there a $4014 DMA test?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8751&amp;p=91748#p91748"><![CDATA[
I'll ask again - how long is a $4014 sprite DMA in CPU cycles? I suspect my code isn't right. The idea should be simple, but I guess it's more complicated.<br /><br />Currently, test ROM irq_and_dma fails, even in Nintendulator. Plus, the DMC and SPR DMA test ROM looks ok, but... I'm unsure.<br /><br /><strong>EDIT:</strong> ok, my emulator executes 513 cycles (+1 on odd cycles).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=39">Zepper</a> — Fri Mar 23, 2012 5:42 pm</p><hr />
]]></content>
</entry>
</feed>