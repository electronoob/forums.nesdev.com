<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=3&amp;t=5638" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2009-10-17T07:22:27-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=3&amp;t=5638</id>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2009-10-17T07:22:27-07:00</updated>
<published>2009-10-17T07:22:27-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5638&amp;p=51479#p51479</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5638&amp;p=51479#p51479"/>
<title type="html"><![CDATA[Re: Simple questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5638&amp;p=51479#p51479"><![CDATA[
<div class="quotetitle">tomaitheous wrote:</div><div class="quotecontent"><br />Well; everything else in the processor is 8bit, it was made as cheaply as possible (and that could be an understatement), having a single 8bit incrementor for the PC fits in with the rest.<br /></div><br />More than likely, there's an 8-bit incrementor for both the lower and upper bytes of the PC, and the upper result isn't used unless the old value of the lower byte is $FF. Some behaviors of the unofficial instructions involve ((PC&gt;&gt;8)+1), which is more evidence for this second incrementor's presence.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Logic analyzer would be the best idea. Loops and visual conformation are inaccurate. Especially for this conversation. I mean, the amount of impact of what we are talking about would be extremely tiny.<br /></div><br />If the extra cycle happens all the time under those conditions, then in what way would a loop repeatedly triggering those precise conditions be inaccurate?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Sat Oct 17, 2009 7:22 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tomaitheous]]></name></author>
<updated>2009-10-17T01:35:46-07:00</updated>
<published>2009-10-17T01:35:46-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5638&amp;p=51477#p51477</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5638&amp;p=51477#p51477"/>
<title type="html"><![CDATA[Re: Simple questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5638&amp;p=51477#p51477"><![CDATA[
<div class="quotetitle">koitsu wrote:</div><div class="quotecontent"><br />No offence intended -- but comparing the PCE's incredibly custom HuC6280A to that of an NMOS 6502 is pretty ballsy, especially since the PCE's CPU is CMOS to boot.  Hudson's processor is massively custom in many ways.<br /></div><br /><br /> How is it ballsy? All the normal extra cycles under certain conditions of the original 65c02, are executed in full on the 6280. The 6280 might be custom, but it's still based on Rockwell's 65C02 IP. It's not some microcoded compatible 65x. I'm saying there's more than a passing coincidence.<br /><br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />What makes you think the CPU logic for page boundary crossing is the same for instruction (opcode/operands) fetching as it is indexed opcodes?  We don't know this.<br /></div><br /><br />Well; everything else in the processor is 8bit, it was made as cheaply as possible (and that could be an understatement), having a single 8bit incrementor for the PC fits in with the rest. But, I have read that the effective address calculation of indexing, didn't pass through the ALU - but a separate 8bit ADDER unit. Thus, no extra cycles for indexing (that doesn't cross a page boundary). It would make sense that the PC would also use this second ADDER unit as well, considering all the corners they were cutting. Yes - it's a lot of speculation and hearsay, but then there's the statement of Bxx taking an extra-extra cycle on page crossing and 6280 mysterious additional cycles that match up with 65x if you include page crossing penalties.<br /><br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />I'd offer to contact Bill Mensch via WDC, but I'm of the realisation that it wouldn't do much good.<br /></div><br /><br /> That's not the same guy that stated in a recent online video interview, that any <em>serious</em> project for the 65x should be made with sweet16 - is it? For a man that had a hand in designing this legacy processor (if it's the same guy), he sure knows <em>little</em> about programming on these old processor. Sweet16 is pathetic. I close out the podcast after hearing that in the interview :/  What a jerk.<br /><br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Someone would really need to bust out an oscilloscope or some kind of logic analyser to figure it out.  Bunnyboy?  <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":-)" title="Smile" /><br /></div><br /><br /> Logic analyzer would be the best idea. Loops and visual conformation are inaccurate. Especially for this conversation. I mean, the amount of impact of what we are talking about would be extremely tiny. Charles MacDonald had the right idea. He underclocked the PCE processor with a 600khz clock and used a logic analyzer. Same should be done with the NES.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3645">tomaitheous</a> — Sat Oct 17, 2009 1:35 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2009-10-16T11:01:54-07:00</updated>
<published>2009-10-16T11:01:54-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5638&amp;p=51456#p51456</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5638&amp;p=51456#p51456"/>
<title type="html"><![CDATA[Simple questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5638&amp;p=51456#p51456"><![CDATA[
From nestech 2.0:<br /><div class="quotetitle">koitsu wrote:</div><div class="quotecontent"><br /><strong>L. Sprite #0 Hit Flag</strong><br />---------------------<br />The PPU is capable of figuring out where Sprite #0 is, and stores<br />it's findings in D6 of $2002. The way this works is as follows:<br /><br />The PPU scans for the first actual non-transparent "sprite pixel" and<br />the first non-transparent "background pixel." A "background pixel" is<br />a tile which is in use by the Name Table. Remember that colour #0<br />defines transparency.<br /><br />The pixel which causes D6 to be set *IS* drawn.<br /></div><br />D6 turns off at the end of vertical blanking and on once the PPU draws these overlapping opaque pixels. So we can carefully plan the execution of a loop so that it starts with the raster in a known position and finishes <em>before</em> the flag turns on if the CPU waits 256 penalty cycles (one for each iteration), or <em>after</em> the flag turns on if the CPU does not wait the extra cycles.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Fri Oct 16, 2009 11:01 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[koitsu]]></name></author>
<updated>2009-10-16T10:29:01-07:00</updated>
<published>2009-10-16T10:29:01-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5638&amp;p=51454#p51454</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5638&amp;p=51454#p51454"/>
<title type="html"><![CDATA[Simple questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5638&amp;p=51454#p51454"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br /><div class="quotetitle">koitsu wrote:</div><div class="quotecontent"><div class="quotetitle">tepples wrote:</div><div class="quotecontent">All one has to do is make some timing tests involving single instructions split across a boundary and run them on a PowerPak (or the TG16 counterpart).<br /></div><br />I don't know how this would work, or what the PowerPak provides that would allow for detection of a single cycle difference.  Clue me in.</div><br />How do you think Blargg's CPU timing test ROMs work?</div><br /><br />I have no idea because I haven't used them and I have no idea how such a thing would work anyway, hence my "clue me in".<br /><br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />The NES PPU draws one scanline in the time it takes the CPU to execute 106.56 (PAL) or 113.67 (NTSC) cycles. So run a loop 256 times, and it'll take at least two scanlines longer if each iteration is one cycle longer. That's enough to make the loop finish before or after the sprite 0 hit.<br /></div><br /><br />Hmm, I kind of see where you're going with this.  I understand the purpose of said 256-iteration loop is to provide "more evidence" confirming/denying the cycle penalty.  But I don't understand what sprite 0 hit has to do with this.<br /><br />I suppose you could say I'm questioning the accuracy of such a method.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3">koitsu</a> — Fri Oct 16, 2009 10:29 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2009-10-16T09:37:56-07:00</updated>
<published>2009-10-16T09:37:56-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5638&amp;p=51452#p51452</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5638&amp;p=51452#p51452"/>
<title type="html"><![CDATA[Simple questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5638&amp;p=51452#p51452"><![CDATA[
<div class="quotetitle">koitsu wrote:</div><div class="quotecontent"><br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">All one has to do is make some timing tests involving single instructions split across a boundary and run them on a PowerPak (or the TG16 counterpart).<br /></div><br />I don't know how this would work, or what the PowerPak provides that would allow for detection of a single cycle difference.  Clue me in.</div><br />How do you think Blargg's CPU timing test ROMs work?<br /><br />The NES PPU draws one scanline in the time it takes the CPU to execute 106.56 (PAL) or 113.67 (NTSC) cycles. So run a loop 256 times, and it'll take at least two scanlines longer if each iteration is one cycle longer. That's enough to make the loop finish before or after the sprite 0 hit.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Fri Oct 16, 2009 9:37 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[koitsu]]></name></author>
<updated>2009-10-16T09:19:23-07:00</updated>
<published>2009-10-16T09:19:23-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5638&amp;p=51450#p51450</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5638&amp;p=51450#p51450"/>
<title type="html"><![CDATA[Simple questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5638&amp;p=51450#p51450"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />No logic analyzer needed. All one has to do is make some timing tests involving single instructions split across a boundary and run them on a PowerPak (or the TG16 counterpart). Make sure to use JMP in these tests for more predictability, as it doesn't lose a cycle when crossing a page boundary.<br /></div><br /><br />I don't know how this would work, or what the PowerPak provides that would allow for detection of a single cycle difference.  Clue me in.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3">koitsu</a> — Fri Oct 16, 2009 9:19 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2009-10-16T08:48:19-07:00</updated>
<published>2009-10-16T08:48:19-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5638&amp;p=51447#p51447</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5638&amp;p=51447#p51447"/>
<title type="html"><![CDATA[Simple questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5638&amp;p=51447#p51447"><![CDATA[
No logic analyzer needed. All one has to do is make some timing tests involving single instructions split across a boundary and run them on a PowerPak (or the TG16 counterpart). Make sure to use JMP in these tests for more predictability, as it doesn't lose a cycle when crossing a page boundary.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Fri Oct 16, 2009 8:48 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[koitsu]]></name></author>
<updated>2009-10-16T08:35:01-07:00</updated>
<published>2009-10-16T08:35:01-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5638&amp;p=51445#p51445</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5638&amp;p=51445#p51445"/>
<title type="html"><![CDATA[Re: Simple questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5638&amp;p=51445#p51445"><![CDATA[
<div class="quotetitle">tomaitheous wrote:</div><div class="quotecontent"><br />I heard it from more than one source (conversations, cycle testing/emu accuracy related). I thought this was common knowledge. The PCE's related 65x was tested for all these conditions. Has no page boundary penalties. But the again, the PCE has +1 cycle for every instruction that's 2bytes or longer - hinting to the fact that the processor is updating the MSB of the PC on every opcode *or* address calculation (sans [zp,x]). Bxx's are 2/4 cycles, not 2/3. Etc. Books aren't always 100%. Hell, quite a few patents are incorrect as well manufacture manuals (this I've seen first hand).<br /></div><br /><br />No offence intended -- but comparing the PCE's incredibly custom HuC6280A to that of an NMOS 6502 is pretty ballsy, especially since the PCE's CPU is CMOS to boot.  Hudson's processor is massively custom in many ways.<br /><br /><div class="quotetitle">tomaitheous wrote:</div><div class="quotecontent"><br />Curious, how would you validate absolute addressing with indexing's extra cycle if the indexing regs value puts it into another page boundary (LSB addition overflows) - but *not* for when an instruction crosses a page boundary?<br /></div><br /><br />What makes you think the CPU logic for page boundary crossing is the same for instruction (opcode/operands) fetching as it is indexed opcodes?  We don't know this.<br /><br />I spent time this morning reading through the six different 6502 books I have, including one which covers NMOS 6502, 65C02, and 65816.  All of them mention the cycle penalty for indexed operations, but none of them -- including 3 of the books which include a full copy of the engineering and hardware implementation manual -- mention this penalty for instructions themselves.<br /><br />The closest thing I can find to your claim is in one of my books, and it's a long shot.  In Programming The 6502 by Rodnay Zaks (ISBN 089588-046-6), page 49, section "6502 Hardware Organization", subsection "The Paging Concept", there is the following quote:<br /><br /><em>"In the case of the 6502, it is important to keep in mind the page organization of the memory.  Whenever a page boundary has to be crossed, it will often introduce an extra cycle delay in the execution of the instruction."</em><br /><br />This section comes immediately after the section describing the stack, and immediately before the section describing the address and data bus lines on the chip itself.  It's hard to conclude if the placement of that section means the concept is universal across the CPU or not.<br /><br /><div class="quotetitle">tomaitheous wrote:</div><div class="quotecontent"><br />Anyway, only one way to find out for sure :)<br /></div><br /><br />I'd offer to contact Bill Mensch via WDC, but I'm of the realisation that it wouldn't do much good.<br /><br />Someone would really need to bust out an oscilloscope or some kind of logic analyser to figure it out.  Bunnyboy?  :-)<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3">koitsu</a> — Fri Oct 16, 2009 8:35 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[kyuusaku]]></name></author>
<updated>2009-10-15T17:34:44-07:00</updated>
<published>2009-10-15T17:34:44-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5638&amp;p=51433#p51433</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5638&amp;p=51433#p51433"/>
<title type="html"><![CDATA[Simple questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5638&amp;p=51433#p51433"><![CDATA[
Technically the PC doesn't have adder, just an incrementer ;)<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=20">kyuusaku</a> — Thu Oct 15, 2009 5:34 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tomaitheous]]></name></author>
<updated>2009-10-15T17:03:22-07:00</updated>
<published>2009-10-15T17:03:22-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5638&amp;p=51432#p51432</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5638&amp;p=51432#p51432"/>
<title type="html"><![CDATA[Re: Simple questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5638&amp;p=51432#p51432"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br /><div class="quotetitle">tomaitheous wrote:</div><div class="quotecontent">The PC counter only has an 8bit adder. So instructions that fall between two pages have an extra cycle added to the opcode.<br /></div><br />All instructions? I thought it was just branches whose not-taken instruction and taken instruction had their first byte on different pages.</div><br /><br /> Why would it *only* apply to conditional branch instructions? I assume you're not talking about the normal +1 cycle if the branch is taken, but an additional +1 cycle if the taken branch crosses a page boundary.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Every 6502, 65c02, and 65816 book I have (and that's MANY, for the record) has no mention of an extra cycle being applied to opcodes+operands which are "split" across a page boundary (e.g. for 80FE: LDA $1234, you'd have 80FE=A9, 80FF=$34, 8100=$12).<br /></div><br /><br /> I heard it from more than one source (conversations, cycle testing/emu accuracy related). I thought this was common knowledge. The PCE's related 65x was tested for all these conditions. Has no page boundary penalties. But the again, the PCE has +1 cycle for every instruction that's 2bytes or longer - hinting to the fact that the processor is updating the MSB of the PC on every opcode *or* address calculation (sans [zp,x]). Bxx's are 2/4 cycles, not 2/3. Etc. Books aren't always 100%. Hell, quite a few patents are incorrect as well manufacture manuals (this I've seen first hand).<br /><br /> Curious, how would you validate absolute addressing with indexing's extra cycle if the indexing regs value puts it into another page boundary (LSB addition overflows) - but *not* for when an instruction crosses a page boundary? <br /><br /> Anyway, only one way to find out for sure <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3645">tomaitheous</a> — Thu Oct 15, 2009 5:03 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[cpow]]></name></author>
<updated>2009-10-14T18:17:31-07:00</updated>
<published>2009-10-14T18:17:31-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5638&amp;p=51404#p51404</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5638&amp;p=51404#p51404"/>
<title type="html"><![CDATA[Re: Simple questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5638&amp;p=51404#p51404"><![CDATA[
<div class="quotetitle">koitsu wrote:</div><div class="quotecontent"><br />It also seems that as of late people have been wanting an accurate opcode chart, including with all the "catches" (cycle penalties, etc.).  I might spend some time typing the 6502 chart in this weekend if enough people are interested.<br /></div><br />If your typing is free of transcription errors it would be greatly appreciated.  Ascending by opcode [for easy comparisons for those of us using a function pointer table] would be most useful for me. <img src="http://forums.nesdev.com/images/smilies/icon_cool.gif" alt="8)" title="Cool" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3705">cpow</a> — Wed Oct 14, 2009 6:17 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[koitsu]]></name></author>
<updated>2009-10-14T06:22:43-07:00</updated>
<published>2009-10-14T06:22:43-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5638&amp;p=51383#p51383</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5638&amp;p=51383#p51383"/>
<title type="html"><![CDATA[Re: Simple questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5638&amp;p=51383#p51383"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br /><div class="quotetitle">tomaitheous wrote:</div><div class="quotecontent">The PC counter only has an 8bit adder. So instructions that fall between two pages have an extra cycle added to the opcode.<br /></div><br />All instructions? I thought it was just branches whose not-taken instruction and taken instruction had their first byte on different pages.</div><br /><br />Tepples is correct.<br /><br />Every 6502, 65c02, and 65816 book I have (and that's MANY, for the record) has no mention of an extra cycle being applied to opcodes+operands which are "split" across a page boundary (e.g. for 80FE: LDA $1234, you'd have 80FE=A9, 80FF=$34, 8100=$12).<br /><br />I believe the cycle penalty only applies to branches and loads which cross a page boundary.<br /><br />It also seems that as of late people have been wanting an accurate opcode chart, including with all the "catches" (cycle penalties, etc.).  I might spend some time typing the 6502 chart in this weekend if enough people are interested.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3">koitsu</a> — Wed Oct 14, 2009 6:22 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2009-10-14T05:36:32-07:00</updated>
<published>2009-10-14T05:36:32-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5638&amp;p=51382#p51382</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5638&amp;p=51382#p51382"/>
<title type="html"><![CDATA[Re: Simple questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5638&amp;p=51382#p51382"><![CDATA[
<div class="quotetitle">tomaitheous wrote:</div><div class="quotecontent"><br />The PC counter only has an 8bit adder. So instructions that fall between two pages have an extra cycle added to the opcode.<br /></div><br />All instructions? I thought it was just branches whose not-taken instruction and taken instruction had their first byte on different pages.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Wed Oct 14, 2009 5:36 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tomaitheous]]></name></author>
<updated>2009-10-13T22:29:48-07:00</updated>
<published>2009-10-13T22:29:48-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5638&amp;p=51375#p51375</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5638&amp;p=51375#p51375"/>
<title type="html"><![CDATA[Re: Simple questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5638&amp;p=51375#p51375"><![CDATA[
<div class="quotetitle">someone_somewhere wrote:</div><div class="quotecontent"><br />-From what I gather the program counter is the only thing that should be treated as 16 bit in the nes, am I correct?<br /></div><br /><br /> The PC counter only has an 8bit adder. So instructions that fall between two pages have an extra cycle added to the opcode. Same with indexing (except for [zp,x] where the MSB isn't effected IIRC). When the cpu calculates the effective address of base plus index, and the index+lsb of the address causes an overflow, an extra cycle is taken to add the carry to the MSB of the base address.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3645">tomaitheous</a> — Tue Oct 13, 2009 10:29 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[someone_somewhere]]></name></author>
<updated>2009-10-13T17:35:00-07:00</updated>
<published>2009-10-13T17:35:00-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5638&amp;p=51370#p51370</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5638&amp;p=51370#p51370"/>
<title type="html"><![CDATA[Simple questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5638&amp;p=51370#p51370"><![CDATA[
That makes sense, thanks<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4071">someone_somewhere</a> — Tue Oct 13, 2009 5:35 pm</p><hr />
]]></content>
</entry>
</feed>