<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=6&amp;t=3866" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2008-03-27T01:51:36-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=6&amp;t=3866</id>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2008-03-27T01:51:36-07:00</updated>
<published>2008-03-27T01:51:36-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3866&amp;p=32081#p32081</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3866&amp;p=32081#p32081"/>
<title type="html"><![CDATA[Music transposing/altering and saving ROM space]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3866&amp;p=32081#p32081"><![CDATA[
Oh thanks tepples this helps a lot. I can now understand note lenghts in english.<br /><br />Yeah your system is good as long as no triplets are used. I guess what you guys are talking about "macros" is what I call a special command.<br /><br />And yeah I have a mck-style input (done with all .db with definied variables), it's pretty quickly converted and is flexible and work well. What I dislike in trackers is their lack of flexibility. While they work fine for most regular 4/4 tunes, doing anything else is a headache (okay, I'll admit all songs I've composed are 4/4 right now but I guess I'll try something else someday).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Thu Mar 27, 2008 1:51 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[ReaperSMS]]></name></author>
<updated>2008-03-26T17:14:50-07:00</updated>
<published>2008-03-26T17:14:50-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3866&amp;p=32076#p32076</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3866&amp;p=32076#p32076"/>
<title type="html"><![CDATA[Music transposing/altering and saving ROM space]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3866&amp;p=32076#p32076"><![CDATA[
For this one I have a set of macros, but only for the commands, not the note data.<br /><br />The quality of your triplet timing generally comes down to your tempo and time signature, and how well 60 divides into it<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=8">ReaperSMS</a> — Wed Mar 26, 2008 5:14 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2008-03-26T16:32:38-07:00</updated>
<published>2008-03-26T16:32:38-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3866&amp;p=32075#p32075</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3866&amp;p=32075#p32075"/>
<title type="html"><![CDATA[Music transposing/altering and saving ROM space]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3866&amp;p=32075#p32075"><![CDATA[
American English uses German-style terminology for note durations. But Wikipedia has links between articles in English and corresponding articles in French. So let me translate the table into French: <ul><li>sixteenth note = 1/16 whole note = <em>double croche</em> </li><li>eighth note = 1/8 whole note = <em>croche</em> </li><li>quarter note = 1/4 whole note = <em>noire</em> ("black note") </li><li>half note = 1/2 whole note = <em>blanche</em> ("white note") </li><li>whole note = <em>ronde</em> ("round note") </li><li>dot = <em>point de prolongation</em> </li></ul><br />In simple meters (e.g. 4/4, 2/4, 2/2), my engine would handle triplets the same way Scream Tracker does: with a "delay noteon by x ticks" command. Triplets would be even easier in compound meters such as 6/8, as the row would be an 8th or 16th note.<br /><br /><div class="quotetitle">ReaperSMS wrote:</div><div class="quotecontent"><br />That assumes one is using rows, rather than an MCK style input<br /></div><br />Tidbit: MIDI specifies song positions in units equivalent to a tracker row. The <a href="http://www.borg.com/~jglatt/tech/midispec/ssp.htm" class="postlink">Song Position Pointer</a> is expressed in units of 16th notes, which are divided into six "MIDI clocks". Smells like mod/s3m/xm, no?<br /><br /><div class="quotetitle">ReaperSMS wrote:</div><div class="quotecontent"><br />It tended to result in really tiny data, but it was a mess to edit without a cheat sheet.<br /></div><br />Or without an assembler. I once made a music playback engine for the GBA, and I wrote what amounts to an assembler to translate textual input to music bytecode.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Wed Mar 26, 2008 4:32 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[ReaperSMS]]></name></author>
<updated>2008-03-26T13:46:36-07:00</updated>
<published>2008-03-26T13:46:36-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3866&amp;p=32073#p32073</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3866&amp;p=32073#p32073"/>
<title type="html"><![CDATA[Music transposing/altering and saving ROM space]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3866&amp;p=32073#p32073"><![CDATA[
That assumes one is using rows, rather than an MCK style input, but your point is of course valid.<br /><br />That would be why bloopageddon has *another* extended command telling it how many bits are note, and how many are length. Length goes through a lookup table, and for repeated sequences, can apply a per-note macro to *that*.<br /><br />It carved the command escape out of note range for commands though, as length wasn't guaranteed to exist, since you could set the length cutoff to 0. I got bored and moved to other projects while thinking up a redesign.<br /><br />It tended to result in really tiny data, but it was a mess to edit without a cheat sheet.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=8">ReaperSMS</a> — Wed Mar 26, 2008 1:46 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2008-03-26T13:29:52-07:00</updated>
<published>2008-03-26T13:29:52-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3866&amp;p=32072#p32072</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3866&amp;p=32072#p32072"/>
<title type="html"><![CDATA[Music transposing/altering and saving ROM space]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3866&amp;p=32072#p32072"><![CDATA[
Your format seems interesting, however I doubt I'll adopt it because I'm too lazy to completely re-encode my music data and adapt replay code just to save maybe a couple of bytes.<br />I don't like too much the idea to have only 8 lenghts, I have 16 but that's not directly the lenght, I use a lockup table. I'm not confortable to how note lenghts works in english I only know them in french. But your sheme seems to disallow triplets, something that's somewhat limitating.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Wed Mar 26, 2008 1:29 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2008-03-26T13:17:24-07:00</updated>
<published>2008-03-26T13:17:24-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3866&amp;p=32070#p32070</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3866&amp;p=32070#p32070"/>
<title type="html"><![CDATA[Music transposing/altering and saving ROM space]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3866&amp;p=32070#p32070"><![CDATA[
But do we need to have 16 distinct lengths for notes? If we assume that a row is a sixteenth note, we can use an 8-entry table of note lengths:<br />1 sixteenth<br />2 eighth<br />3 dotted eighth<br />4 quarter<br />6 dotted quarter<br />8 half<br />12 dotted half<br />16 whole<br />Then allocate only 3 bits to the length and 5 bits to the offset from the bottom note:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">7654 3210  NoteOn/NoteOff command &#40;$00-$D7&#41;<br />|||| ||||<br />|||| |+++- Number of rows to wait after this command, from the table <br />|||| |     &#91;1, 2, 3, 4, 6, 8, 12, 16&#93;<br />++++-+---- 0-24: Offset from base note in semitones<br />           25: Hold existing note on this voice<br />           26: Release existing note on this voice<br /></div><br />This would allow spreads much larger than an octave, which should accommodate any non-pathological melody. And it would leave $D8-$FF open for other commands.<br /><br />What is pathological, you might ask? Listen to these tracks, and ask yourself how your music encoding would handle them: <ul><li><a href="http://pics.pineight.com/nt2/covers.zip" class="postlink">OpenTris</a> 02 triangle </li><li>OpenTris 06 triangle </li><li>OpenTris 07 squares (first 10 s or so) </li><li>OpenTris 08 triangle (first 30 seconds) </li><li>OpenTris 09 squares (first 15 seconds) </li><li>OpenTris 10 triangle </li><li><a href="http://pics.pineight.com/nt2/covers.zip" class="postlink">Covers vol. 1</a> 03 squares </li><li>Covers vol. 1 09 triangle </li><li>Covers vol. 1 10 triangle </li><li>Covers vol. 1 11 squares </li><li>Covers vol. 1 13 everything </li><li>Covers vol. 1 15 triangle (in "tetris" part) </li><li><a href="http://pics.pineight.com/nt2/meatspin.nsf" class="postlink">Comic Bakery/You Spin Me Round</a> triangle </li><li><a href="http://pics.pineight.com/nt2/dj_tepples_-_running_in_the_90s.nsf" class="postlink">Running in the 90s</a> square backing </li><li><a href="http://pics.pineight.com/nt2/dj_tepples_-_what_is_love.nsf" class="postlink">What Is Love?</a> triangle </li><li><a href="http://pics.pineight.com/nt2/emerald_hill.nsf" class="postlink">Emerald Hill Zone</a> square bass </li><li><a href="http://www.pineight.com/lj/lj-contrib.zip" class="postlink">lj-contrib</a> Korobeiniki channel 1 </li><li>lj-contrib Loginska channel 3, and channel 2 in the overly happy sounding part </li><li>Most of Tengen Tet&#1103;is, for that matter </li></ul><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Wed Mar 26, 2008 1:17 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[ReaperSMS]]></name></author>
<updated>2008-03-26T11:51:10-07:00</updated>
<published>2008-03-26T11:51:10-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3866&amp;p=32067#p32067</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3866&amp;p=32067#p32067"/>
<title type="html"><![CDATA[Music transposing/altering and saving ROM space]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3866&amp;p=32067#p32067"><![CDATA[
What I was referring to wasn't transposing per se, as you still ended up with the same audio output.<br /><br />Picture a system, where notes are packed into 8 bits, 4 bit tone, 4 bit length/cmd. <br /><br />Tone 0-E would pass through, F would indicate a rest.<br />lengths 0-C would refer to whatever set you wanted at the time, they aren't important. length D would be octave down, length E octave up, length F would be an escape for lengthier commands.<br /><br />Tones that pass through are offsets from a base tone, the sum of which is the actual absolute tone played (0-128). Octave up and down just add or subtract 12 to that base.<br /><br />What I was talking about would be the case of an extended command, that could set the tone base to anything, thus giving you compact access to any contiguous stretch of 14 notes in the scale.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=8">ReaperSMS</a> — Wed Mar 26, 2008 11:51 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2008-03-26T04:32:19-07:00</updated>
<published>2008-03-26T04:32:19-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3866&amp;p=32060#p32060</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3866&amp;p=32060#p32060"/>
<title type="html"><![CDATA[Music transposing/altering and saving ROM space]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3866&amp;p=32060#p32060"><![CDATA[
Yeah it wasn't that long ago.<br /><br />Anyway, I've noted there is no way to really save a significant amount of bytes by transposing. Where you save a few octave crosses on one place, you'll automatically waste a considerable amount of them at another place of the tune, so there is hardly an "ideal" scale for a tune so that it have minimal octave crosses. Unless you make a programm that searches this, there is no way to tell which scale would be better, so overall it's better to just avoid transposing. (since most people seems to think key is important).<br /><br />On one other hand if you try to "guess" which key a tune you know well will be played before you actually play it, chances are that you were completely wrong (or at least for me).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Wed Mar 26, 2008 4:32 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[ReaperSMS]]></name></author>
<updated>2008-03-24T15:01:59-07:00</updated>
<published>2008-03-24T15:01:59-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3866&amp;p=32036#p32036</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3866&amp;p=32036#p32036"/>
<title type="html"><![CDATA[Music transposing/altering and saving ROM space]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3866&amp;p=32036#p32036"><![CDATA[
Key is rather important.<br /><br />A better idea is to just have a transpose command for your format, that lets you move the base around. Essentially, you remap c-&gt;C to say, e-&gt;E, and thus stay within the octave.<br /><br />Crap, didn't notice the date.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=8">ReaperSMS</a> — Mon Mar 24, 2008 3:01 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2008-01-30T02:49:31-07:00</updated>
<published>2008-01-30T02:49:31-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3866&amp;p=30478#p30478</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3866&amp;p=30478#p30478"/>
<title type="html"><![CDATA[Music transposing/altering and saving ROM space]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3866&amp;p=30478#p30478"><![CDATA[
I'm not sure what you think is a rest.<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />I think what you're talking about is removing the rests. I would forget about decay, and do volume envelopes. The easy way would be to set the volume for each frame (until the envelope loops or ends). The other way would be to write code that generates them (ADSR - attack, decay, sustain, release), but that's probably only good if you're really want a lot of different envelopes.<br /></div><br />In fact I'm doing it quite differently to both methods you describe. I just made my own method, although it's rather limited (but I wanted it to be simple, I'm thinking of more complex things for my next version of my sound code). It allows to do an attack, and then to decay the note at varied sppeds, but even the fastest speed isn't really fast, because one frame is really a long unit of time when it comes to music/SFX. I wish it would be possible to have a more precise basetime for sound code pratically, but it's not. Unless you have a mapper with IRQs it's hard to do. Of course I could call it twice per frame, one at the beginning and once at the end but that'd be rather weird and won't be a fixed interval between calls. The only thing that can perform faster are hardware sweeps and hardware decays. I can also use hardware decays, but I didn't really use them. I can even use a combination of hardware and software decays, so that the hardware decaying rate is going smaller due to software decay, resulting in a slow-then-fast decaying note. Maybe I could made up something better that can allow notes to be decayed faster ?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Wed Jan 30, 2008 2:49 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Memblers]]></name></author>
<updated>2008-01-29T18:16:29-07:00</updated>
<published>2008-01-29T18:16:29-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3866&amp;p=30471#p30471</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3866&amp;p=30471#p30471"/>
<title type="html"><![CDATA[Re: Music transposing/altering and saving ROM space]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3866&amp;p=30471#p30471"><![CDATA[
<div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br />Another big space wasting thing is "short notes". I mean using a note then a silence to ensure the note is short. This will make the song sound much more dynamic than if all notes are played full, where the song will sound blatant boring. But it also significantly incrase the number of bytes needed to code the song, by placing note-silent-note-silent instead of just note-note-note. A solution is to decay the note, but even long decayed notes sounds much less dynamic than short notes.<br /></div><br /><br />I think what you're talking about is removing the rests.  I would forget about decay, and do volume envelopes.  The easy way would be to set the volume for each frame (until the envelope loops or ends).  The other way would be to write code that generates them (ADSR - attack, decay, sustain, release), but that's probably only good if you're really want a lot of different envelopes.<br /><br />If you kept the rests also, you could for example in the volume envlope have a start, loop, and ending, and the ending would play when the note length ends.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=10">Memblers</a> — Tue Jan 29, 2008 6:16 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2008-01-29T10:54:00-07:00</updated>
<published>2008-01-29T10:54:00-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3866&amp;p=30455#p30455</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3866&amp;p=30455#p30455"/>
<title type="html"><![CDATA[Music transposing/altering and saving ROM space]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3866&amp;p=30455#p30455"><![CDATA[
In fact I've already build my own format for long, and I always first write everything in MIDI and then convert it manually to the format I use. I use one byte per note, and I'm pretty sure that's the best I can go. One tyble for tone and one nybble for lenght (higher tones above 12 are reserved for controls). The delta thing seems interesting, as rarely more than one octave of delta is seen, but +- one octave means range -12..+12 which needs at least 5 bits. With only 4 bits we're stuck with -8...+7, which isn't really good, as you'd have a way to go out of this interval, and would require a more complex format to barely save space at all. More importantly, this would be much more pain to convert manually. That wasn't the point anyways.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />The musician in me says to let the song be heard how it was written and intended to be heard. A song will sound pretty different when it's played lower or higher in the chord structure than it was originally written.<br /></div><br />I guess you're right here. I'm not good with the chord stuff, I usually start with a good melody and then try to put stuff with it that fit well and eventually contine with variants of it. Sometimes on the contrary I start with a baseline and place stuff on the top of it, but I often end up with weird results here. I guess that works pretty well, but this certainly isn't the best one can do.<br />However, to be honnest, if the song is transposed one or two semitones higher or lower that won't make a really big difference, exept for the insane amount of sharps/flats that will be required to play it (in the case of moving the thing a semitone), which isn't really important since that's no problem for the computer.<br />And eventually they song will never sound *exactly* as intended as everyone knows no instrument nor synthetiser can reproduce a sound that come close to the NES, you only have to imagine it. However I guess it's good if it sound pretty close to what you wanted.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Tue Jan 29, 2008 10:54 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2008-01-29T09:22:57-07:00</updated>
<published>2008-01-29T09:22:57-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3866&amp;p=30453#p30453</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3866&amp;p=30453#p30453"/>
<title type="html"><![CDATA[Music transposing/altering and saving ROM space]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3866&amp;p=30453#p30453"><![CDATA[
First off, don't try to use the same format for music on your development machine as in the ROM; have an easy-to-enter-and-edit format for development, and a program which converts this to whatever the ROM will have. This way you can experiment with different encodings, and use ones that aren't easy to enter by hand. For example, you could use a format which encoded the delta from the previous note, using fewer bits for small deltas.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Tue Jan 29, 2008 9:22 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Dwedit]]></name></author>
<updated>2008-01-29T05:28:02-07:00</updated>
<published>2008-01-29T05:28:02-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3866&amp;p=30450#p30450</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3866&amp;p=30450#p30450"/>
<title type="html"><![CDATA[Music transposing/altering and saving ROM space]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3866&amp;p=30450#p30450"><![CDATA[
I'd think one note per nibble wouldn't be too bad.  You'd maybe have the 12 notes, octave up, octave down, and octave set.  Maybe also something to re-center the notes so that you don't need octave changes when going from C to Bb.<br /><br />Edit: I just realized how stupid this post was, sorry.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=53">Dwedit</a> — Tue Jan 29, 2008 5:28 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Roth]]></name></author>
<updated>2008-01-29T04:47:11-07:00</updated>
<published>2008-01-29T04:47:11-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3866&amp;p=30449#p30449</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3866&amp;p=30449#p30449"/>
<title type="html"><![CDATA[Music transposing/altering and saving ROM space]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3866&amp;p=30449#p30449"><![CDATA[
Interesting topic!<br /><br />The musician in me says to let the song be heard how it was written and intended to be heard. A song will sound pretty different when it's played lower or higher in the chord structure than it was originally written.<br /> <br />On the other hand, it sounds like a great exercise in coding : )<br /><br />I'd say back up your files, and do the coding to try and save bytes just to do it as an exercise. I'd expect you wouldn't be as happy with the final product if the music didn't sound right to you any longer.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=174">Roth</a> — Tue Jan 29, 2008 4:47 am</p><hr />
]]></content>
</entry>
</feed>