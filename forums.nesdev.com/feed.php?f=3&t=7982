<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=3&amp;t=7982" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2011-08-08T17:43:26-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=3&amp;t=7982</id>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2011-08-08T17:43:26-07:00</updated>
<published>2011-08-08T17:43:26-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7982&amp;p=82591#p82591</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7982&amp;p=82591#p82591"/>
<title type="html"><![CDATA[Looking for feedback on new APU Low-Pass FIR Filter]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7982&amp;p=82591#p82591"><![CDATA[
FIR is easier to parallelize, among other things. (Read <a href="http://www.dspguru.com/dsp/faqs/multirate/decimation" class="postlink">here</a>.)<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Mon Aug 08, 2011 5:43 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Jarhmander]]></name></author>
<updated>2011-08-08T16:56:45-07:00</updated>
<published>2011-08-08T16:56:45-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7982&amp;p=82589#p82589</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7982&amp;p=82589#p82589"/>
<title type="html"><![CDATA[Looking for feedback on new APU Low-Pass FIR Filter]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7982&amp;p=82589#p82589"><![CDATA[
Here I ask a (possibly stupid) question: why not using an IIR filter? (Is stability really an issue here?)<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=336">Jarhmander</a> — Mon Aug 08, 2011 4:56 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Dwedit]]></name></author>
<updated>2011-08-07T08:54:57-07:00</updated>
<published>2011-08-07T08:54:57-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7982&amp;p=82556#p82556</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7982&amp;p=82556#p82556"/>
<title type="html"><![CDATA[Looking for feedback on new APU Low-Pass FIR Filter]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7982&amp;p=82556#p82556"><![CDATA[
The pitch changing is very suspicious, and sounds like something else is up.<br />I'll go whip up a version without any anti-aliasing to see if has the same problem.<br /><br />edit: Looks like the pitch change with aliasing is correct.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=53">Dwedit</a> — Sun Aug 07, 2011 8:54 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[jwdonal]]></name></author>
<updated>2011-08-07T11:04:09-07:00</updated>
<published>2011-08-07T01:37:53-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7982&amp;p=82552#p82552</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7982&amp;p=82552#p82552"/>
<title type="html"><![CDATA[Looking for feedback on new APU Low-Pass FIR Filter]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7982&amp;p=82552#p82552"><![CDATA[
<div class="quotetitle">lidnariq wrote:</div><div class="quotecontent"><br />You only need to run the FIR filter for each OUTPUT sample. After all, if the decimation just throws away the results for most of the previous FIR results, why calculate them at all?<br /></div><br />Hello all! I have an awesome update!  What lidnariq described above is something that I had never learned/known about FIR filters before.  But after I read it and it made sense to me I ventured to go and try to figure out how to do it.  And I did!<br /><br />Lidnariq has previously referred to his filter description as a "unified FIR-and-decimate". I have come to learn that these types of filters are also very often called "polyphase" FIRs.  And dang are these things freakin _awesome_. You can implement insanely efficient FIR filters with very little resource usage.<br /><br />I still haven't figured out exactly how Kevtris implemented his but I imagine it was some type of polyphase filter. But even if it was, his description still does not make complete sense to me nor can I see how it would work properly given the clock rates he mentions.  But regardless, I don't really care anymore at this point since my new FIR implementation is so efficient.  I can now implement a 512-tap FIR with only 32 multiplies! <img src="http://forums.nesdev.com/images/smilies/icon_surprised.gif" alt=":-o" title="Surprised" />  And if I cared to increase the filter's operating clock frequency I could do it with even fewer.  Not only that but the frequency of the output samples from the FIR is already decimated to the exact frequency that I need.  Rockin!<br /><br />I would like to thank everyone who helped me and also thank them for their persistence in trying to beat this into my noggin. <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" />  I have learned at least twice what I originally knew about FIR filter implementations.<br /><br />Here are some output samples from Solstice (noise channel only) with my new polyphase FIR filter in case you're interested.  It's coolest if you DL them all and then compare them to one another - it's really neat to hear how the increasing number of taps steadily improves the aliasing and pitch.<br /><br />- <a href="http://dl.dropbox.com/u/36237540/2011_08_07_solstice_in_game_music_lp_folded_pp_mac_fir_16tap.wav" class="postlink">Solstice (Noise Channel Only) 16-tap</a><br />- <a href="http://dl.dropbox.com/u/36237540/2011_08_07_solstice_in_game_music_lp_folded_pp_mac_fir_32tap.wav" class="postlink">Solstice (Noise Channel Only) 32-tap</a><br />- <a href="http://dl.dropbox.com/u/36237540/2011_08_07_solstice_in_game_music_lp_folded_pp_mac_fir_64tap.wav" class="postlink">Solstice (Noise Channel Only) 64-tap</a><br />- <a href="http://dl.dropbox.com/u/36237540/2011_08_07_solstice_in_game_music_lp_folded_pp_mac_fir_128tap.wav" class="postlink">Solstice (Noise Channel Only) 128-tap</a><br />- <a href="http://dl.dropbox.com/u/36237540/2011_08_07_solstice_in_game_music_lp_folded_pp_mac_fir_256tap.wav" class="postlink">Solstice (Noise Channel Only) 256-tap</a><br />- <a href="http://dl.dropbox.com/u/36237540/2011_08_07_solstice_in_game_music_lp_folded_pp_mac_fir_512tap.wav" class="postlink">Solstice (Noise Channel Only) 512-tap</a><br /><br />Thanks again to everyone!<br /><br />Jonathon <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3962">jwdonal</a> — Sun Aug 07, 2011 1:37 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Mednafen]]></name></author>
<updated>2011-08-03T16:55:23-07:00</updated>
<published>2011-08-03T16:55:23-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7982&amp;p=82434#p82434</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7982&amp;p=82434#p82434"/>
<title type="html"><![CDATA[Looking for feedback on new APU Low-Pass FIR Filter]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7982&amp;p=82434#p82434"><![CDATA[
The coefficients at <!-- m --><a class="postlink" href="http://pastebin.com/raw.php?i=SgwVDLjL">http://pastebin.com/raw.php?i=SgwVDLjL</a><!-- m --> can be used<br />with the algorithm I described earlier, with 256 multiplies per output sample.<br /><br />Phases: 12, Output rate: 44101.176031, 487 12<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=1026">Mednafen</a> — Wed Aug 03, 2011 4:55 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[lidnariq]]></name></author>
<updated>2011-08-03T14:40:12-07:00</updated>
<published>2011-08-03T14:40:12-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7982&amp;p=82430#p82430</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7982&amp;p=82430#p82430"/>
<title type="html"><![CDATA[Looking for feedback on new APU Low-Pass FIR Filter]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7982&amp;p=82430#p82430"><![CDATA[
<div class="quotetitle">jwdonal wrote:</div><div class="quotecontent"><br />But then what sampling frequency should I use to generate the coefficients?  Would it still be 21MHz? Or would it be 21M/256?  Or something else?<br /></div><br />The filter coefficients should still match the input audio rate. That said, I don't understand why you're generating the audio at a higher rate than the NES did originally —you're not generating any genuine data; you're probably just adding a lossy interpolation stage (that's hopefully rejected by whatever FIR).<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />If it's still 21M then even with the unified decimation (decimation does not change a filter's response) the filter response would still be what I've shown <a href="http://dl.dropbox.com/u/36237540/response.PNG" class="postlink">here</a> (which is incredibly crappy and is getting nowhere near the cutoff). Ideas?<br /></div><br />I'd generate the audio at the same rate the NTSC NES does — 1.789773MHz. At that point, I'd pick a FIR filter that achieved 40dB rejection at your cutoff -- Using <!-- m --><a class="postlink" href="http://www-users.cs.york.ac.uk/~fisher/mkfilter/racos.html">http://www-users.cs.york.ac.uk/~fisher/ ... racos.html</a><!-- m --> I've gotten useful response graphs with Fcutoff=16kHz, beta=.1, length=257 and beta=.9, length=501. Per his page, if you want to run the input audio faster, you'll want to increase the length of the FIR filter by the same ratio.<br /><br />In terms of decimation ratios relative to S/PDIF rates, I see ~1% errors for 1789773Hz/41 -&gt; 44.1kHz, 1789773Hz/37 -&gt; 48kHz, and a 0.1% error for 1789773Hz/56 -&gt; 32kHz (although that would need a different cutoff frequency for the filter).<br /><br />One last anecdote that may be helpful: on the NES's audio output stage, there is a first order <a href="http://nesdev.com/bbs/viewtopic.php?p=44320#44320" class="postlink">analog lowpass at 14kHz</a><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3512">lidnariq</a> — Wed Aug 03, 2011 2:40 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[jwdonal]]></name></author>
<updated>2011-08-07T00:40:50-07:00</updated>
<published>2011-08-02T23:04:18-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7982&amp;p=82405#p82405</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7982&amp;p=82405#p82405"/>
<title type="html"><![CDATA[Looking for feedback on new APU Low-Pass FIR Filter]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7982&amp;p=82405#p82405"><![CDATA[
<div class="quotetitle">lidnariq wrote:</div><div class="quotecontent"><br />You only need to run the FIR filter for each OUTPUT sample. After all, if the decimation just throws away the results for most of the previous FIR results, why calculate them at all?<br /></div><br />Okay, so reading your post again that does make perfect sense to me.  But then what sampling frequency should I use to generate the coefficients?  Would it still be 21MHz? Or would it be 21M/256?  Or something else?  If it's still 21M then even with the unified decimation (decimation does not change a filter's response) the filter response would still be what I've shown <a href="http://dl.dropbox.com/u/36237540/kevtris_response.PNG" class="postlink">here</a> (which is incredibly crappy and is getting nowhere near the cutoff). Ideas?<br /><br />I need the correct sampling frequency in order to generate the proper coefficient values with matlab.<br /><br />Fcutoff = 20kHz<br />Fsampling = ??<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3962">jwdonal</a> — Tue Aug 02, 2011 11:04 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[jwdonal]]></name></author>
<updated>2011-08-02T14:08:35-07:00</updated>
<published>2011-08-02T14:08:35-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7982&amp;p=82384#p82384</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7982&amp;p=82384#p82384"/>
<title type="html"><![CDATA[Looking for feedback on new APU Low-Pass FIR Filter]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7982&amp;p=82384#p82384"><![CDATA[
<div class="quotetitle">lidnariq wrote:</div><div class="quotecontent"><br />You've managed to REALLY confuse yourself. A unified FIR-and-decimate object IS valid, despite your insistance that it's not.<br /></div><br />Haha.  Negative.  What I said was that what was being described was not a FIR.  And I'm right.  What you're describing is what you've coined as a "unified FIR-and-decimate".<br /><br />"Unified FIR-and-decimate" != "FIR"<br /><br />In other words, if a customer at my job asked me to code up a FIR filter I would not provide them with this "unified FIR-and-decimate" filter that you have described. Because that's not what they're asking for.<br /><br />And I still don't think that I agree with the term "unified FIR-and-decimate" but it doesn't matter.  I will definitely try out this filter that you have described and if it works I will be extremely happy and will happily let everyone know that it works.  And I will have learned something new.  If it doesn't work then nothing has been lost.  <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br />Again, I realize that you guys are trying to help and _please_ understand that I truly appreciate that.  I'm just trying to explain the reasoning behind my thoughts.<br /><br />Thanks!<br /><br />Jonathon<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3962">jwdonal</a> — Tue Aug 02, 2011 2:08 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[lidnariq]]></name></author>
<updated>2011-08-02T13:59:26-07:00</updated>
<published>2011-08-02T13:59:26-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7982&amp;p=82383#p82383</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7982&amp;p=82383#p82383"/>
<title type="html"><![CDATA[Looking for feedback on new APU Low-Pass FIR Filter]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7982&amp;p=82383#p82383"><![CDATA[
<div class="quotetitle">jwdonal wrote:</div><div class="quotecontent"><br />The number of samples that go into a FIR filter is _always_ equal to the number of samples that come out of the FIR filter.  Consider the following (completely plausible) FIR filter design scenario:<br /><br />- The input to the FIR filter is a continuous set of 256-sample digital waveforms.<br />- The FIR filter is a 256-tap low-pass filter.<br /><br />With your implementation you would only get one sample out of your filter for each waveform. LOL. That is not a waveform.  On the other hand, with a proper FIR filter using a delay chain you would always get a filtered 256-sample waveform (this is the "convolution" process) on the output.<br /><br />Now, with that said, you can perform "decimation" on the *output* of the FIR filter - which drops samples.  Or you can perform "down-sampling" on the samples _before_ they are input to the FIR which also removes samples. But either way, the number of samples into the FIR is always equal to the number of samples out.<br /></div><br /><br />You've managed to really confuse yourself. A unified FIR-and-decimate object IS valid, despite your insistance that it's not. The thing thefox is describing is exactly what I said earlier: You only need to run the FIR filter for each OUTPUT sample. After all, if the decimation just throws away the results for most of the previous FIR results, why calculate them at all?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3512">lidnariq</a> — Tue Aug 02, 2011 1:59 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[jwdonal]]></name></author>
<updated>2011-08-02T13:37:19-07:00</updated>
<published>2011-08-02T13:37:19-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7982&amp;p=82382#p82382</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7982&amp;p=82382#p82382"/>
<title type="html"><![CDATA[Looking for feedback on new APU Low-Pass FIR Filter]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7982&amp;p=82382#p82382"><![CDATA[
<div class="quotetitle">thefox wrote:</div><div class="quotecontent"><br />You're saying Wikipedia's explanation of FIR is wrong?<br /></div><br />No, but you also need to read it more carefully. And I also wouldn't rely entirely on Wikipedia for an in-depth explanation of FIR filters. Lol.  Wikipedia says: "The top part is an N-stage delay line...".  The Wiki doesn't go into detail but the key words there are "delay line".  That is, you don't take N new samples at a time, rather you take *1* new sample at a time by shifting in a new sample into the delay chain on each clock cycle.  I would go check out some other sites or maybe those old dusty things that no one uses anymore called "books".  Hehe. <img src="http://forums.nesdev.com/images/smilies/icon_wink.gif" alt=";)" title="Wink" /><br /><br />The number of samples that go into a FIR filter is _always_ equal to the number of samples that come out of the FIR filter.  Consider the following (completely plausible) FIR filter design scenario:<br /><br />- The input to the FIR filter is a continuous set of 256-sample digital waveforms.<br />- The FIR filter is a 256-tap low-pass filter.<br /><br />With your implementation you would only get one sample out of your filter for each waveform. LOL. That is not a waveform.  On the other hand, with a proper FIR filter using a delay chain you would always get a filtered 256-sample waveform (this is the "convolution" process) on the output.<br /><br />Now, with that said, you can perform "decimation" on the *output* of the FIR filter - which drops samples.  Or you can perform "down-sampling" on the samples _before_ they are input to the FIR which also removes samples. But either way, the number of samples into the FIR is always equal to the number of samples out.<br /><br />So, again, what you are describing is _not_ a FIR filter. Period.<br /><br />Here are some more sites to educate you on FIR filter operations/calculations/convolution:<br /><a href="http://www.dspguru.com/dsp/faqs/fir/basics" class="postlink">http://www.dspguru.com/dsp/faqs/fir/basics</a><br /><a href="http://www.netrino.com/Embedded-Systems/How-To/Digital-Filters-FIR-IIR" class="postlink">http://www.netrino.com/Embedded-Systems/How-To/Digital-Filters-FIR-IIR</a><br />etc etc etc<br /><br />Pz!<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3962">jwdonal</a> — Tue Aug 02, 2011 1:37 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[thefox]]></name></author>
<updated>2011-08-02T06:28:45-07:00</updated>
<published>2011-08-02T06:28:45-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7982&amp;p=82367#p82367</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7982&amp;p=82367#p82367"/>
<title type="html"><![CDATA[Looking for feedback on new APU Low-Pass FIR Filter]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7982&amp;p=82367#p82367"><![CDATA[
<div class="quotetitle">jwdonal wrote:</div><div class="quotecontent"><br /><div class="quotetitle">kyuusaku wrote:</div><div class="quotecontent">Never was I suggesting that the FPGA be run at 256 x 21 MHz, but rather 21 MHz samples be directly accumulated and decimated simultaneously over 256 iterations. Clearly it's not the traditional topology since the samples aren't buffered and the impulse is non-continuous, but it is some kind of FIR filter.<br /></div><br />Okay, I think I see what you're saying.  What you're describing is not a FIR filter in any form.</div><br />You're saying Wikipedia's explanation of FIR is wrong?<br /><br /><img src="http://thefox.aspekt.fi/fir.png" alt="Image" /><br />(x = input, y = output, b = coefficients, N = filter order)<br /><br />Filter output is only dependent on N+1 previous input samples. So we can calculate output at y[255] using x[0]..x[255], y[511] using x[256]..x[511] and so on. As long as the ratio we're downsampling by in the end is the same as the number of taps we don't need to process any of the input samples more than once.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=80">thefox</a> — Tue Aug 02, 2011 6:28 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[jwdonal]]></name></author>
<updated>2011-08-01T18:01:46-07:00</updated>
<published>2011-08-01T18:01:46-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7982&amp;p=82347#p82347</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7982&amp;p=82347#p82347"/>
<title type="html"><![CDATA[Looking for feedback on new APU Low-Pass FIR Filter]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7982&amp;p=82347#p82347"><![CDATA[
<div class="quotetitle">kyuusaku wrote:</div><div class="quotecontent"><br />Never was I suggesting that the FPGA be run at 256 x 21 MHz, but rather 21 MHz samples be directly accumulated and decimated simultaneously over 256 iterations. Clearly it's not the traditional topology since the samples aren't buffered and the impulse is non-continuous, but it is some kind of FIR filter.<br /></div><br />Okay, I think I see what you're saying.  What you're describing is not a FIR filter in any form.  The reason being because there is no convolution involved, that is, the "sliding window" of samples being shifted in each clock cycle does not exist - hence there can be no convolution.  I have no idea what kind of filter that is and one of my DSP friends at my job didn't know either.  I also tried googling it (not really knowing what to call it) and didn't come up with anything.<br /><br />In any case, I can try this out and see what happens.  It would be incredibly interesting if it worked.  If it did work, then the mis-information that Kevtris gave me was in telling me that he implemented a "FIR" filter when he actually didn't.  I will let you know what happens after I try it...might not be for a couple days though.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3962">jwdonal</a> — Mon Aug 01, 2011 6:01 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[kyuusaku]]></name></author>
<updated>2011-08-01T01:03:13-07:00</updated>
<published>2011-08-01T01:03:13-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7982&amp;p=82310#p82310</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7982&amp;p=82310#p82310"/>
<title type="html"><![CDATA[Looking for feedback on new APU Low-Pass FIR Filter]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7982&amp;p=82310#p82310"><![CDATA[
Never was I suggesting that the FPGA be run at 256 x 21 MHz, but rather 21 MHz samples be directly accumulated and decimated simultaneously over 256 iterations. Clearly it's not the traditional topology since the samples aren't buffered and the impulse is non-continuous, but it is some kind of FIR filter.<br /><br />I took your advice jwdonal and worked out the hardware for a traditional FIR (single-multiplier). Now I understand your conclusion about aliasing, I guess didn't read your post carefully enough either time; nevermind DSP, big posts are hard to follow. What I needed was a reminder of n MAC units / n iterations / n taps = a single MAC implementation effectively must be downsampling at the input. The obvious solution to this problem: reduce the filter order... I really doubt 19th order would be all that bad.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=20">kyuusaku</a> — Mon Aug 01, 2011 1:03 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[jwdonal]]></name></author>
<updated>2011-08-07T00:41:23-07:00</updated>
<published>2011-07-31T23:49:58-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7982&amp;p=82309#p82309</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7982&amp;p=82309#p82309"/>
<title type="html"><![CDATA[Looking for feedback on new APU Low-Pass FIR Filter]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7982&amp;p=82309#p82309"><![CDATA[
<div class="quotetitle">thefox wrote:</div><div class="quotecontent"><br />Input sample rate is 21.47 MHz, multiply input samples with coefficients and accumulate for 256 cycles (needing only one hardware multiplier)<br /></div><br />Wow, I totally missed your reply fox - sorry about that! To answer your question this implementation is not possible on either mine or Kevtris' hardware.  The reason is because if your filter's sample rate is 21MHz with only one multiply-accumulate core, then you must run the MAC operation at 21MHz*256 (i.e. 5Ghz!!) in order to calculate the filtered result before the next sample is shifted in on the next 21MHz clock cycle.  This is simply not possible on any FPGA in existence. Lol. Hope that clears things up.<br /><br /><div class="quotetitle">thefox wrote:</div><div class="quotecontent"><br />I'm not sure how well 256 taps would work though when the sample rate is so high compared to the cutoff frequency.<br /></div><br />Yep, you're right.  The response totally sux - as can be see <a href="http://dl.dropbox.com/u/36237540/kevtris_response.PNG" class="postlink">here</a>.  At -45db the 256-tap frequency is wayyyy out near 200kHz. Lol.  You would literally needs *thousands* of coefficients to reach the desired cutoff of 20kHz.  This is just another of many reasons that Kevtris' filter will not work as described.<br /><br />Pz!<br /><br />Jonathon<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3962">jwdonal</a> — Sun Jul 31, 2011 11:49 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[jwdonal]]></name></author>
<updated>2011-07-30T17:04:49-07:00</updated>
<published>2011-07-30T17:04:49-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7982&amp;p=82249#p82249</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7982&amp;p=82249#p82249"/>
<title type="html"><![CDATA[Looking for feedback on new APU Low-Pass FIR Filter]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7982&amp;p=82249#p82249"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />Perhaps you could use a few stages of 2:1 or 3:1 downsampling first; those don't need as many taps.<br /></div><br />That's def a great idea. And myself and one of the DSP guys at work actually tested that a short while back.  It does help reduce the number of multipliers but not as much as one might think.  After looking at the various frequency responses of both 2-stage and 3-stage filter implementations in matlab we concluded that there was no significant advantage over a single-stage.  Actually, I concluded that a single stage was overall more advantageous since the HDL implementation was much less complex and less error prone. <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /> Hehe.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3962">jwdonal</a> — Sat Jul 30, 2011 5:04 pm</p><hr />
]]></content>
</entry>
</feed>