<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=2&amp;t=10615" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2013-10-26T16:54:01-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=2&amp;t=10615</id>
<entry>
<author><name><![CDATA[rainwarrior]]></name></author>
<updated>2013-10-26T16:54:01-07:00</updated>
<published>2013-10-26T16:54:01-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10615&amp;p=119888#p119888</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10615&amp;p=119888#p119888"/>
<title type="html"><![CDATA[Re: Rendering two layers of tiles]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10615&amp;p=119888#p119888"><![CDATA[
For an overpass situation I had planned to use a trigger that changes the tile height when the player steps on the tile next to the dual-height zone. It would have been uncrossable by NPCs, but I didn't consider that a problem.<br /><br />There are other ways to solve this problem as well, like placeable platforms as a game object rather than a part of the map.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5165">rainwarrior</a> — Sat Oct 26, 2013 4:54 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Shiru]]></name></author>
<updated>2013-10-26T16:14:15-07:00</updated>
<published>2013-10-26T16:14:15-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10615&amp;p=119887#p119887</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10615&amp;p=119887#p119887"/>
<title type="html"><![CDATA[Re: Rendering two layers of tiles]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10615&amp;p=119887#p119887"><![CDATA[
I don't think it is a big deal to store actual 3D tile grid for a flip screen iso game. Like, 10x10x10 tiles (they are pretty large usually) is just 1K RAM buffer, and locations could be compressed pretty well even with RLE, considering how much empty space they usually have.<br /><br />If it is a scrolling iso game, memory could be a problem, but again, Doom-like tech could work pretty well. I.e. columns for the bottom part, and colums with a gap for top part - allows to make 'floating' platforms.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4205">Shiru</a> — Sat Oct 26, 2013 4:14 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2013-10-26T15:44:44-07:00</updated>
<published>2013-10-26T15:44:44-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10615&amp;p=119885#p119885</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10615&amp;p=119885#p119885"/>
<title type="html"><![CDATA[Re: Rendering two layers of tiles]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10615&amp;p=119885#p119885"><![CDATA[
<div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent"><br />I've done it with a grid where each tile had a top, two sides, and a height<br /></div><br />I can see how that'd work given a one-height-per-sector geometry limitation like that of <em>Doom</em> and <em>Doom II</em>. But a lot of scenes from famous iso games involve floors above floors. How would one represent an arch (as seen in the bottom of the screenshot of <em>La Abadía del Crimen</em>) or a staircase that the player can walk under?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Sat Oct 26, 2013 3:44 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[rainwarrior]]></name></author>
<updated>2013-10-26T06:44:25-07:00</updated>
<published>2013-10-26T06:44:25-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10615&amp;p=119872#p119872</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10615&amp;p=119872#p119872"/>
<title type="html"><![CDATA[Re: Rendering two layers of tiles]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10615&amp;p=119872#p119872"><![CDATA[
I've done it with a grid where each tile had a top, two sides, and a height, or it could be a ramp and one side.<br /><img src="http://rainwarrior.ca/dragon/ncmap.gif" alt="Image" /><br /><br />This was software rendering though, walking the grid in diagonal strips back to front. Not a situation where I would be fighting the hardware like on the NES.<br /><br />Also, this was for a scrolling map. For a square screen I guess a complete grid would be inefficient use of memory, but you could replace a grid with a list of strips (each with appropriate length to fit its span across the screen), and it might be nearly as efficient.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5165">rainwarrior</a> — Sat Oct 26, 2013 6:44 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2013-10-26T06:18:29-07:00</updated>
<published>2013-10-26T06:18:29-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10615&amp;p=119869#p119869</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10615&amp;p=119869#p119869"/>
<title type="html"><![CDATA[Re: Rendering two layers of tiles]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10615&amp;p=119869#p119869"><![CDATA[
How do these iso games typically represent their level maps?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Sat Oct 26, 2013 6:18 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Punch]]></name></author>
<updated>2013-10-26T02:08:56-07:00</updated>
<published>2013-10-26T02:08:56-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10615&amp;p=119865#p119865</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10615&amp;p=119865#p119865"/>
<title type="html"><![CDATA[Re: Rendering two layers of tiles]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10615&amp;p=119865#p119865"><![CDATA[
Weird, I remember reading about &quot;Crime Monastery&quot; somewhere... wasn't it on Commandos 2 credits? Anyway, it doesn't matter much.<br /><br />I guess the challenge is to do proper sprite masking and z-sorting. I'll see if I can program a quick tech demo, and report the results<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5877">Punch</a> — Sat Oct 26, 2013 2:08 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[SaucJedi]]></name></author>
<updated>2013-10-25T22:56:53-07:00</updated>
<published>2013-10-25T22:56:53-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10615&amp;p=119863#p119863</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10615&amp;p=119863#p119863"/>
<title type="html"><![CDATA[Re: Rendering two layers of tiles]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10615&amp;p=119863#p119863"><![CDATA[
<div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><br />If your isometric tiles are 8 (not good if you use more than 4 colors though) or 16 pixels wide, you'll only have to worry about mixing the top and bottom of objects with further away tiles, and unless you predict all the overlaps that can happen (this is actually a good choice if you don't have that many different tiles or if you know the level design takes into account that some tiles can't overlap), you'll have to modify the tiles in CHR-RAM.<br /><br />It's perfectly possible to make isometric games on the NES, but it won't be as easy as creating a second background plane. You'll have to decide what limitations you can live with (how many colors you want, how many different tiles can overlap, etc.) and be ready to deal with more complex solutions (e.g. runtime CHR-RAM editing) depending on the limitations you absolutely don't want in the game.<br /></div><br /><br />I want to keep it in 4 colors justo to avoid the attributes issue. Once I have an interpreter for the original data, which renders the screens on the NES, I'l worrry about taking it to 16 colors. There is a remake for the MSX2 which has 16 color, though I think this would be quite a lot of work on the NES, I'm sure I can make this look way better than on the CPC.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=168">SaucJedi</a> — Fri Oct 25, 2013 10:56 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[SaucJedi]]></name></author>
<updated>2013-10-25T22:53:34-07:00</updated>
<published>2013-10-25T22:53:34-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10615&amp;p=119862#p119862</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10615&amp;p=119862#p119862"/>
<title type="html"><![CDATA[Re: Rendering two layers of tiles]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10615&amp;p=119862#p119862"><![CDATA[
<div class="quotetitle">Punch wrote:</div><div class="quotecontent"><br />Is that Crime Monastery on the ZX screenshot?<br /><br />Anyway, I'll watch this thread closely, I wanted to do something in isometric perspective on the NES/PCE but I have no idea how to.<br /></div><br /><br />I don't know if it was even released out of Spain, which is a shame because the game is pretty good and . The literal translation would be 'The Abbey of Crime', however, Crime Monastery is not a far cry... However, this is the Amstrad CPC version, there was one for the ZX, but it had even uglier colors.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=168">SaucJedi</a> — Fri Oct 25, 2013 10:53 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2013-10-25T17:59:03-07:00</updated>
<published>2013-10-25T17:59:03-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10615&amp;p=119856#p119856</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10615&amp;p=119856#p119856"/>
<title type="html"><![CDATA[Re: Rendering two layers of tiles]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10615&amp;p=119856#p119856"><![CDATA[
<div class="quotetitle">Punch wrote:</div><div class="quotecontent"><br />Is that Crime Monastery<br /></div><br />I did not know this game had an english title, but considering that the filename is &quot;abadia_crimen_iso.gif&quot; I guess you are right.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />on the ZX screenshot?<br /></div><br />Not ZX Spectrum though, that's an Amstrad CPC screenshot (this was mentioned by the OP). I believe the CPC has a &quot;high resolution&quot; (i.e. no wide pixels) mode with 4 colors, which kinda makes games look like CGA DOS games (with way better color options though!).<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Anyway, I'll watch this thread closely, I wanted to do something in isometric perspective on the NES/PCE but I have no idea how to.<br /></div><br />There are plenty example games to study. There are other consoles/computers with isometric graphics drawn in single background layers. The Game Gear for example has Sonic Labyrinth and Putt &amp; Putter.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Fri Oct 25, 2013 5:59 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Punch]]></name></author>
<updated>2013-10-25T15:46:53-07:00</updated>
<published>2013-10-25T15:46:53-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10615&amp;p=119849#p119849</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10615&amp;p=119849#p119849"/>
<title type="html"><![CDATA[Re: Rendering two layers of tiles]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10615&amp;p=119849#p119849"><![CDATA[
Is that Crime Monastery on the ZX screenshot?<br /><br />Anyway, I'll watch this thread closely, I wanted to do something in isometric perspective on the NES/PCE but I have no idea how to.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5877">Punch</a> — Fri Oct 25, 2013 3:46 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2013-10-25T11:55:07-07:00</updated>
<published>2013-10-25T11:55:07-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10615&amp;p=119842#p119842</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10615&amp;p=119842#p119842"/>
<title type="html"><![CDATA[Re: Rendering two layers of tiles]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10615&amp;p=119842#p119842"><![CDATA[
<div class="quotetitle">SaucJedi wrote:</div><div class="quotecontent"><br /><img src="http://www.ionlitio.com/images/2007/03/abadia_crimen_iso.gif" alt="Image" /><br /></div><br />If you're going to restrain yourself to 4 colors (like in this CPC video mode), then drawing the background becomes much easier, since you won't have to deal with tile attributes.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />If you examine it closely, parts of the image are meant to occlude the characters<br /></div><br />One way to mask sprites on the NES is to use another sprite, of higher priority than the masked one, with the shape you want to cut and put it behind the background using the sprite priority bit. This works because the PPU first resolves the sprite collisions (if there are 2 sprites in the same screen pixel, the one with higher priority wins) and only then it resolves the sprite-background collisions, and since the sprite that's supposed to be rendered is behind the background, the background is drawn instead, effectively masking the first sprite. If you don't want to do it like this, the only option is to edit the CHR-RAM during runtime, like has been suggested.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />but ALSO have to be mixed with the floor when drawing the screen.<br /></div><br />If your isometric tiles are 8 (not good if you use more than 4 colors though) or 16 pixels wide, you'll only have to worry about mixing the top and bottom of objects with further away tiles, and unless you predict all the overlaps that can happen (this is actually a good choice if you don't have that many different tiles or if you know the level design takes into account that some tiles can't overlap), you'll have to modify the tiles in CHR-RAM.<br /><br />It's perfectly possible to make isometric games on the NES, but it won't be as easy as creating a second background plane. You'll have to decide what limitations you can live with (how many colors you want, how many different tiles can overlap, etc.) and be ready to deal with more complex solutions (e.g. runtime CHR-RAM editing) depending on the limitations you absolutely don't want in the game.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Fri Oct 25, 2013 11:55 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2013-10-25T11:06:26-07:00</updated>
<published>2013-10-25T11:06:26-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10615&amp;p=119841#p119841</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10615&amp;p=119841#p119841"/>
<title type="html"><![CDATA[Re: Rendering two layers of tiles]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10615&amp;p=119841#p119841"><![CDATA[
Solstice used CHR RAM to cut background tiles out from in front of the hero sprite. This can get CPU intensive if a lot of sprites are moving, but you don't absolutely need 60 fps. A lot of these old isometric games for 8-bit micros ran at 5-8 fps, so a Micronics style 12 fps should be enough.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Fri Oct 25, 2013 11:06 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Shiru]]></name></author>
<updated>2013-10-25T10:37:56-07:00</updated>
<published>2013-10-25T10:37:56-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10615&amp;p=119840#p119840</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10615&amp;p=119840#p119840"/>
<title type="html"><![CDATA[Re: Rendering two layers of tiles]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10615&amp;p=119840#p119840"><![CDATA[
Well, you don't really need layers to occlude the characters. You just need to occlude characters graphics with background graphics. So you could prepare an occluded version of a sprite for current frame in software and send it to the VRAM.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4205">Shiru</a> — Fri Oct 25, 2013 10:37 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[SaucJedi]]></name></author>
<updated>2013-10-25T10:10:14-07:00</updated>
<published>2013-10-25T10:10:14-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10615&amp;p=119838#p119838</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10615&amp;p=119838#p119838"/>
<title type="html"><![CDATA[Re: Rendering two layers of tiles]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10615&amp;p=119838#p119838"><![CDATA[
<div class="quotetitle">Dwedit wrote:</div><div class="quotecontent"><br />Have you checked out Solstice?<br /></div><br /><br />Just thought of it moments after I posted!<br /><br />I don't want to dive into parallaxing, as it would be much more difficult... I'm more, as Dwedit pointed out, in the line of isometric, static backgrounds, but as iso tiles are not square, parts of foreground tiles will unavoidable be mixed with the floors and things like that.<br /><br />This is the game. It was developed in Spain for the Amstrad CPC, a british 8-bit microcomputer:<br /><br /><img src="http://www.ionlitio.com/images/2007/03/abadia_crimen_iso.gif" alt="Image" /><br /><br />If you examine it closely, parts of the image are meant to occlude the characters but ALSO have to be mixed with the floor when drawing the screen.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=168">SaucJedi</a> — Fri Oct 25, 2013 10:10 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[rainwarrior]]></name></author>
<updated>2013-10-25T07:35:39-07:00</updated>
<published>2013-10-25T07:35:39-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10615&amp;p=119836#p119836</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10615&amp;p=119836#p119836"/>
<title type="html"><![CDATA[Re: Rendering two layers of tiles]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10615&amp;p=119836#p119836"><![CDATA[
Ah yeah, Sword Master has a really simple and elegant technique for it. It uses MMC3, which has 1k CHR banking, and then just has 32 1k CHR banks dedicated to 4 32x32 scrolling tile animations. Really simple to set up and code for, no fancy timing or anything, all you need is a mapper with 1k CHR banking and 32k of CHR ROM space to spare! (Batman RotJ does a similar thing for some scrolling clouds.)<br /><br />Probably the most complicated techniques are the ones that use CHR-RAM, since they tend to require very optimized NMI routines to get that data across in vblank (e.g. Battletoads puts CHR write code in RAM then modifies its immediate values), or something like Solstice where it's doing a lot of bit packing to build CHR tiles on the fly.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5165">rainwarrior</a> — Fri Oct 25, 2013 7:35 am</p><hr />
]]></content>
</entry>
</feed>