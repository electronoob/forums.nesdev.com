<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - SusiKette's project help thread</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">SusiKette's project help thread</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=17266">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=17266</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Mon Apr 23, 2018 8:44 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SusiKette's project help thread</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Compressing to rows is cool because you can create a &quot;library&quot; of rows and reuse them throughout the levels, which will be fairly compressed when each row of 16 metatiles is replaced by a pointer to a compressed row. About 30 bytes per screen isn't bad.<br /><br />If you use 256 or less unique rows per level you can cut the space they take by half, since you can use byte-sized indices to lookup the pointers to the compressed row data.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Mon Apr 23, 2018 9:38 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SusiKette's project help thread</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">Compressing to rows is cool because you can create a &quot;library&quot; of rows and reuse them throughout the levels, which will be fairly compressed when each row of 16 metatiles is replaced by a pointer to a compressed row. About 30 bytes per screen isn't bad.<br /><br />If you use 256 or less unique rows per level you can cut the space they take by half, since you can use byte-sized indices to lookup the pointers to the compressed row data.</div><br />Well, &quot;metatiles&quot; can be any shape, really. A 16x1 row can be effective, but so could, e.g. a 4x4 rectangle. Depends on the content of your game and what aligned shapes are most reusable.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Mon Apr 23, 2018 10:32 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SusiKette's project help thread</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Rows are very good for vertical scrolling, so that's a plus. I do appreciate the use of multiple levels of metatiles too (in this case, 256x16 rows made of 16x16 blocks), it can really help improve compression without increasing the complexity too much.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>SusiKette</b> [ Tue Apr 24, 2018 11:59 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SusiKette's project help thread</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">If you use 256 or less unique rows per level you can cut the space they take by half, since you can use byte-sized indices to lookup the pointers to the compressed row data.</div><br /><br />That would be really nice (and maybe a bit easier too), however it entirely depends on the stage's design. Maybe I should take care of that first.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>SusiKette</b> [ Sat Apr 28, 2018 12:16 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SusiKette's project help thread</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I've been trying to figure out a way to do the level data decoding but I haven't really been making much progress at all and I'm starting to feel like I need a bit more help on it. Maybe some example code or something?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Kasumi</b> [ Sat Apr 28, 2018 1:42 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SusiKette's project help thread</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Arranged in smallest piece to largest piece:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">metatiletopleft:;Tile index of the top left corner of each 16x16 metatile<br />.db $00, $01, $02, $03<br />metatiletopright:;Tile index of the top right corner of each 16x16 metatile<br />.db $04, $05, $06, $07<br />metatilebottomleft:;Tile index of the bottom left corner of each 16x16 metatile<br />.db $08, $09, $0A, $0B<br />metatilebottomright:;Tile index of the bottom right corner of each 16x16 metatile<br />.db $0C, $0D, $0E, $0F<br />metatilepalette:;palette of each 16x16 metatile<br />.db 0, 1, 2, 3<br /><br />;A 16x16 metatile is made of 8x8 tiles<br /><br />row 0:;A row contains 16x16 tile indices.<br />.db 0, 1, 2, 3, 0, 3, 2, 1, 2, 0, 1, 3, 2, 0, 3, 1<br />row1:<br />.db 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3<br /><br />;A row is made of 16x16 metatiles<br /><br />rowlow:;Half the address to access a specific row index<br />.db low(row0);If you're not using NESASM, you'll want .db &lt;row0 instead<br />.db low(row1)<br />rowhigh:;The other half<br />.db high(row0);If you're not using NESASM, you'll want .db &gt;row0 instead<br />.db high(row1)<br /><br />;A list of rows is made up of references to rows<br /><br />level0:<br />.db 0, 0, 1, 0, 1<br />;A level is made of row numbers<br /></div><br />To load it, you go from largest to smallest.<br />The scroll will tell you which row in level to use.<br />The address from that row will give you access to the metatile indices that make it up.<br />The metatiles indices will give you access to tile numbers and attributes.<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">;The scroll position will tell us what which row we're on.<br />;We divide it by 16 to get the row we need to draw<br />lda scrollylow<br />sta temp1<br />lda scrollyhigh<br />lsr a;shift the high byte into the carry<br />ror temp1;Shift the carry into the high byte of a copy of the low position of the scroll<br />;We have just done a 16bit divide by 2. <br /><br />lsr a<br />ror temp1<br />;now we've divided by 4<br /><br />lsr a<br />ror temp1<br />;now we've divided by 8<br /><br />lsr a<br />ror temp1<br />;now we've divided by 16<br /><br />ldy temp1;This is the row we want to load.<br />lda level0,y;We get which row we need to draw at that position<br /><br />tay<br />lda rowlow,y;We get the low byte of where that row is<br />sta temp1<br /><br />lda rowhigh,y;We get the high byte of where that row is.<br />sta temp2<br /><br />ldy #0<br />metatileloop:<br />lda &#91;temp1&#93;,y;If you're not using NESASM, you'll want lda (temp1),y instead<br />;The above loads the first byte of the given address. So, the leftmost metatile. Let's just copy it in a loop for now<br />sta metatiledump,y<br />iny<br />cpy #16<br />bne metatileloop<br /><br />ldy #0;Now we write the left and right side of the top of the metatile alternating<br />metadrawloop:<br />lda metatiledump,y<br />tax;Get the index of the metatile so we can read the table<br />lda metatiletopleft,x<br />sta $2007<br />lda metatiletopright,x<br />sta $2007<br />iny<br />cpy #16<br />bne metadrawloop<br />;Top half is copied. Now the bottom half<br />ldy #0<br />metadrawloop2:<br />lda metatiledump,y<br />tax<br />lda metatilebottomleft,x<br />sta $2007<br />lda metatilebottomright,x<br />sta $2007<br />iny<br />cpy #16<br />bne metadrawloop2<br />;Done<br /></div><br />Two things are not shown.<br />One, how to set up attributes.<br />Two, how to get the proper nametable address for the row. (But hint, the scroll position also tells you this.)<br />The code is untested, but even if it's subtly broken it should at least give you an idea of how this works. Just large pieces made of small pieces. You use what you know to get the position in the largest piece, then work down using the references.<br /><br />Edit: Hah. Well there was one mistake. I copied the top twice instead of the top and the bottom. Fixed now. I'll keep looking.<br />Edit2: Standard warning. You can't write to $2007 whenever, it has to be when rendering is disabled or early in your NMI. One way to make the above code work is to just move the part that reads from metatiledump and stores to $2007 to your NMI.<br />Edit3: Found a missing '#' symbol too.  <img src="./images/smilies/icon_wink.gif" alt=":wink:" title="Wink" /> Fixed.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>SusiKette</b> [ Sun Apr 29, 2018 3:07 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SusiKette's project help thread</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />What about screens? I'm using them as a part of the compression as well. It'd be easier to loop sections of the level that way when you can just repeat the same screen multiple times.<br /><br />EDIT: As a reference my level data looks like this:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">MetatileList:<br />T00:&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;; blank tile<br />&nbsp;.db $00,$00,$00,$00<br /><br />T01:&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;; test tile<br />&nbsp;.db $1D,$0E,$1C,$1D<br /><br />T02:&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;; question mark tile<br />&nbsp;.db $26,$26,$26,$26<br /><br />T03:&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;; score part 1<br />&nbsp;.db $90,$91,$00,$00<br /><br />T04:&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;; score part 2<br />&nbsp;.db $92,$93,$00,$00<br /><br />T05:&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;; lives part 1<br />&nbsp;.db $94,$95,$00,$00<br /><br />T06:&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;; lives part 2<br />&nbsp;.db $96,$97,$00,$00<br /><br />T07:&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;; bombs part 1<br />&nbsp;.db $98,$99,$00,$00<br /><br />T08:&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;; bombs part 2<br />&nbsp;.db $9A,$9B,$00,$00<br /><br />RowList:<br />R00:&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;; blank row<br />&nbsp;.dw T00,T00,T00,T00,T00,T00,T00,T00,T00,T00,T00,T00,T00,T00,T00,T00<br /><br />R01:&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;; test row<br />&nbsp;.dw T01,T01,T01,T01,T01,T01,T01,T01,T01,T01,T01,T01,T01,T01,T01,T01<br /><br />R02:&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;; question mark row<br />&nbsp;.dw T02,T02,T02,T02,T02,T02,T02,T02,T02,T02,T02,T02,T02,T02,T02,T02<br /><br />R03:&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;; status row<br />&nbsp;.dw T00,T00,T03,T04,T00,T00,T00,T05,T06,T00,T00,T00,T07,T08,T00,T00<br /><br />ScreenList:<br />S00:&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;; test screen 1 <br />&nbsp;.dw R00,R01,R00,R01,R00,R01,R00,R01,R00,R01,R00,R01,R00,R01,R00<br /><br />S01:&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;; test screen 2<br />&nbsp;.dw R02,R02,R02,R02,R02,R02,R02,R00,R02,R02,R02,R02,R02,R02,R02<br /><br />S02:&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;; test screen 3<br />&nbsp;.dw R00,R00,R03,R00,R00,R03,R00,R00,R03,R00,R00,R03,R00,R00,R03<br /><br />LevelList:<br />L01:&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;; test level<br />&nbsp;.dw S00,S01,S02,S00,S01,S02</div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Kasumi</b> [ Sun Apr 29, 2018 11:17 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SusiKette's project help thread</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If you want screens, you add screens.<br /><br />In my example, levels were made of rows. To load the rows, you found out where you were in the level, then loaded that row.<br />If you add screens, then levels are made of screens made of rows.<br /><br />So you find where you are in the level, to get which screen, then find where you are in the screen to get that row.<br />Edit:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda scrollyhigh<br />asl a;Since you're storing both bytes of the screen together in your Levels. Multiply by 2 to get the offset for the start<br />tay;of the address.<br />lda L01,y;Get the low byte of the screen you're on<br />sta templo<br />iny<br />lda L01,y;Get the high byte of the screen you're on<br />sta temphi<br /><br />lda scrollylow;Divide by 16 like before, except we don't need to do 16 bit because we already know what screen we're one<br />lsr a<br />lsr a<br />lsr a<br />lsr a<br />tay<br />lda (templo),y;Get the row.<br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Mon Apr 30, 2018 8:44 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SusiKette's project help thread</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Kasumi wrote:</div><div class="quotecontent">;A row is made of 16x16 metatiles<br /><br />rowlow:;Half the address to access a specific row index<br />.db low(row0);If you're not using NESASM, you'll want .db &lt;row0 instead<br />.db low(row1)<br />rowhigh:;The other half<br />.db high(row0);If you're not using NESASM, you'll want .db &gt;row0 instead<br />.db high(row1)<br /></div>Small note: if someone is using <strong>asm6</strong> they can just type:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">rowlow:<br />.dl row0, row1 ;dl writes the low byte of an address<br />rowhigh:<br />.dh row0, row1 ;dh writes the high byte of an address</div><br /><br />That's really convenient and cool for me because we just have to type out the <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.dl</tt> line and then copy/paste it (and just change the new line's l to a h). <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />  Thank you Loopy!  <img src="./images/smilies/icon_mrgreen.gif" alt=":mrgreen:" title="Mr. Green" />  <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Mon Apr 30, 2018 12:06 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SusiKette's project help thread</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I THINK you can use .EQU to create a symbol containing all the elements, so you don't have to copy &amp; paste the list every time you change it. This might work (haven't tested it):<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">rows .equ row0, row1, row2<br /><br />rowlow:<br />&nbsp; .dl rows<br />rowhigh:<br />&nbsp; .dh rows</div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Mon Apr 30, 2018 2:04 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SusiKette's project help thread</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />^that's really cool tokumaru! Thank you for that idea; it works wonderfully!  <img src="./images/smilies/icon_mrgreen.gif" alt=":mrgreen:" title="Mr. Green" />  <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /><br /><br />edit:  caution:  this will make changing the file easier, like tokumaru said, but the characters used in the asm6 .lst file will be a little more than 1.5 times as many as needed for the copy/paste method.  But, if filesize isn't an issue, go for it.  <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />   Small changs to identical lines to avoid copy/paste isn't much of a problem for me. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br />edit2: When you consider that the section of each asm file you use this <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.equ</tt> optimization in will be about half as many characters in size, you actually save space, I think.  <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />   8 characters x 1.5 x 0.5 == 6 characters.   Each of asm6's .lst lines has an added 32 characters so using <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.equ</tt> is a pretty even way of having less to change.  Thanks again tokumaru! <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br />final edit:  Each line of characters saved would have to be at least 128 characters in length, I think, to break even with the 32 added characters appended to the front of each line in an asm6 .lst file. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>