<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=3&amp;t=5987" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2010-01-26T12:21:34-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=3&amp;t=5987</id>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2010-01-26T12:21:34-07:00</updated>
<published>2010-01-26T12:21:34-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5987&amp;p=55725#p55725</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5987&amp;p=55725#p55725"/>
<title type="html"><![CDATA[How-to HLE the FDS BIOS?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5987&amp;p=55725#p55725"><![CDATA[
<div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br />They could also use [FDS BIOS functions] for reading the controller and do VRAM transfer, but they might also use their own routines instead - especially if they want to be released on both FDS and cartridge format.<br /></div><br />I'd bet Nintendo provided these controller and VRAM functions from the FDS BIOS as examples to all authorized developers. Square, for instance, is <a href="http://nesdev.com/bbs/viewtopic.php?p=53115#53115" class="postlink">known to use FDS vsync() in cart games</a>. So using them in the FDS version would save RAM for more important things, like keeping more levels loaded at once. But then they'd be just as easy to HLE.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Tue Jan 26, 2010 12:21 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2010-01-26T12:04:22-07:00</updated>
<published>2010-01-26T12:04:22-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5987&amp;p=55722#p55722</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5987&amp;p=55722#p55722"/>
<title type="html"><![CDATA[How-to HLE the FDS BIOS?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5987&amp;p=55722#p55722"><![CDATA[
In fact it makes sense the games only uses the FDS bios to load files, and save files.<br />They could also use it for reading the controller and do VRAM transfer, but they might also use their own routines instead - especially if they want to be released on both FDS and cartridge format.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Tue Jan 26, 2010 12:04 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2010-01-25T13:56:35-07:00</updated>
<published>2010-01-25T13:56:35-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5987&amp;p=55688#p55688</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5987&amp;p=55688#p55688"/>
<title type="html"><![CDATA[Re: How-to HLE the FDS BIOS?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5987&amp;p=55688#p55688"><![CDATA[
<div class="quotetitle">oRBIT2002 wrote:</div><div class="quotecontent"><br />I've read that some emulators HLE the BIOS. I'm kind of curious how this works. I've read a few documents about the BIOS and its functions. How do you HLE-this? Do you trap the calls to these functions and replace with your own code?<br /></div><br />To high-level emulate a program, you first implement each known entry point in C or whatever language your emulator is in. Then when the program counter hits a known entry point, call your native-code implementation and estimate the number of cycles that the authentic implementation probably took. It's easy when the entry points are together (like a syscall mechanism), or a bit harder when the entry points are scattered (like the Apple II Monitor or the FDS BIOS).<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />The LoadFiles() doesn't seem to load a single file but several(?).<br /></div><br />From the point of view of the RAM cart, a <a href="http://en.wikipedia.org/wiki/History_of_the_floppy_disk#Quick" class="postlink">Quick Disk</a> looks like a <a href="http://en.wikipedia.org/wiki/Mellotron" class="postlink">Mellotron</a>: a tape drive with a fast rewind mechanism. The data is stored in a spiral track that is always accessed sequentially from start to finish. A LoadFiles() call tells the BIOS to rewind the disk head, watch for these files on the incoming data stream, and when anything on the list shows up, copy it to RAM. Specifying a list of files to load allows the game to load several files without having to rewind after each one.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Mon Jan 25, 2010 1:56 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[MottZilla]]></name></author>
<updated>2010-01-25T13:49:28-07:00</updated>
<published>2010-01-25T13:49:28-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5987&amp;p=55686#p55686</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5987&amp;p=55686#p55686"/>
<title type="html"><![CDATA[How-to HLE the FDS BIOS?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5987&amp;p=55686#p55686"><![CDATA[
At startup after the disk is checked a value somewhere on the disc determines what files are loaded. I think it was something like load all files of the Value and all less than the value too. All these files are loaded whereever they go according to the information on the disk. After this is done you can transfer control to the FDS reset vector of the FDS program. The FDS program will make subroutine calls to the FDS BIOS, most notably the LoadFiles function. But I believe there are some smaller functions too. <br /><br />Simple games like Donkey Kong that only load initially probably barely need the FDS BIOS and might not use any function calls from it. Brad Taylor (pretty sure that's who) wrote a big FDS document with a pretty complete and detailed FDS BIOS disasm and other details about key functions. With that you could probably hack together your own BIOS or figure out how to HLE the whole thing.<br /><br />In my emulator I HLEd disk access but still load the FDS BIOS for all its other purposes like program control.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=1726">MottZilla</a> — Mon Jan 25, 2010 1:49 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[oRBIT2002]]></name></author>
<updated>2010-01-25T12:51:16-07:00</updated>
<published>2010-01-25T12:51:16-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5987&amp;p=55684#p55684</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5987&amp;p=55684#p55684"/>
<title type="html"><![CDATA[How-to HLE the FDS BIOS?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5987&amp;p=55684#p55684"><![CDATA[
I've read that some emulators HLE the BIOS. I'm kind of curious how this works. I've read a few documents about the BIOS and its functions. How do you HLE-this? Do you trap the calls to these functions and replace with your own code?<br />I've disassembled a few FDS games (just taking a quick peek through the code mostly) but I hardly find any OS-calls at all...? A few LoadFiles() perhaps but the documention I've seen doesn't really explain (for mortals anyway) how it really work.<br />The LoadFiles() doesn't seem to load a single file but several(?).<br /><br />I'd love to get some more information concerning this. <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /> How does the game load a specific file from the disc? <br /><br />Thanks in advance<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=353">oRBIT2002</a> — Mon Jan 25, 2010 12:51 pm</p><hr />
]]></content>
</entry>
</feed>