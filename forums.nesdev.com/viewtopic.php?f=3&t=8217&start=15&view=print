<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Batman OAM corruption with rapid-fire?</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Batman OAM corruption with rapid-fire?</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=8217">http://forums.nesdev.com/viewtopic.php?f=3&amp;t=8217</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Oct 21, 2011 5:25 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">MottZilla wrote:</div><div class="quotecontent">I suppose they could have had a maximum read-retry variable to fail and assume no input after so many attempts at getting valid data.</div>
<br />That's probably why LJ65 uses only two reads and falls back to the previous frame's input on failure.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>beannaich</b> [ Fri Oct 21, 2011 8:52 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">That's probably why LJ65 uses only two reads and falls back to the previous frame's input on failure.</div>
<br />I assume the behavior for that is similar to:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp; PHA ; preserve a<br />&nbsp; &nbsp; TXA<br />&nbsp; &nbsp; PHA ; preserve x<br />&nbsp; &nbsp; LDX #$00<br />&nbsp; &nbsp; LDA $4016 ; get current joypad state<br />&nbsp; &nbsp; STA $11 ; set pad read buffer<br />read:<br />&nbsp; &nbsp; LDA $4016 ; get current joypad state<br />&nbsp; &nbsp; INX<br />&nbsp; &nbsp; CPX #$05 ; don't waste too much time attempting<br />&nbsp; &nbsp; BEQ retn<br />&nbsp; &nbsp; CMP $11 ; pad read buffer<br />&nbsp; &nbsp; BNE read ; keep trying if the two reads aren't the same<br />&nbsp; &nbsp; STA $10 ; set pad data to current valid data<br />retn:<br />&nbsp; &nbsp; PLA<br />&nbsp; &nbsp; TAX<br />&nbsp; &nbsp; PLA<br />&nbsp; &nbsp; RTS</div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Oct 21, 2011 9:53 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Similar, but I see a couple problems in code fragment: <ol style="list-style-type: decimal"><li>LDA $4016 gives you one bit, not the whole state. To fix this, replace the LDA $4016 instructions with calls to a subroutine that reads the gamepad once, which in fact is possible without modifying X or Y by using ROL as a loop counter. </li><li>If the first read is the corrupt one and all five reads after that are not corrupt, the state won't be updated. To fix this, move the STA below read, which will wait until two consecutive reads of the same state. </li></ol>
<br />Possibly fixed (but still untested) code:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp; PHA ; preserve a<br />&nbsp; &nbsp; TXA<br />&nbsp; &nbsp; PHA ; preserve x<br />&nbsp; &nbsp; LDX #$00<br />&nbsp; &nbsp; JSR readOnce ; get current joypad state<br />read:<br />&nbsp; &nbsp; STA $11 ; set pad read buffer<br />&nbsp; &nbsp; JSR readOnce ; get current joypad state<br />&nbsp; &nbsp; INX<br />&nbsp; &nbsp; CPX #$05 ; don't waste too much time attempting<br />&nbsp; &nbsp; BEQ retn<br />&nbsp; &nbsp; CMP $11 ; pad read buffer<br />&nbsp; &nbsp; BNE read ; keep trying if the two reads aren't the same<br />&nbsp; &nbsp; STA $10 ; set pad data to current valid data<br />retn:<br />&nbsp; &nbsp; PLA<br />&nbsp; &nbsp; TAX<br />&nbsp; &nbsp; PLA<br />&nbsp; &nbsp; RTS<br /><br />readOnce:<br />&nbsp; &nbsp; LDA #$01<br />&nbsp; &nbsp; STA $12&nbsp; ; initialize the output register/loop counter<br />&nbsp; &nbsp; STA $4016&nbsp; ; send the strobe pulse<br />&nbsp; &nbsp; LSR A&nbsp; ; load a zero<br />&nbsp; &nbsp; STA $4016&nbsp; ; finish sending the strobe pulse<br />readBit:<br />&nbsp; &nbsp; LDA $4016,Y&nbsp; ; read one player's gamepad<br />&nbsp; &nbsp; AND #$03&nbsp; ; mask off non-button bits<br />&nbsp; &nbsp; CMP #1&nbsp; ; C &lt;- either D0 or D1 is set<br />&nbsp; &nbsp; ROL $12&nbsp; ; add a bit to the output register<br />&nbsp; &nbsp; BCC readBit ; keep going while initial 1 hasn't been shifted out<br /><br />&nbsp; &nbsp; LDA $12<br />&nbsp; &nbsp; RTS<br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>beannaich</b> [ Fri Oct 21, 2011 1:52 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The LDA $4016 was just short-hand, but I'll admit I forgot about the 1-bit at a time thing when I wrote that. Consider it 6502 pseudo-code at best, as I've never actually programmed anything in 6502 assembler.
<br />
<br />I still find it amazing, that a seemingly small error can have such interesting implications in emulation. It's also always fun to try and figure out why two seemingly unconnected things are logically connected. At first, I had absolutely no clue why spamming a button would cause Batman to freak out, but now it would be weird to think the game <strong>wouldn't</strong> do that!

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>