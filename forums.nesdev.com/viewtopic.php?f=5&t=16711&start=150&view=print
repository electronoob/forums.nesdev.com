<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Why &quot;logic&quot; is bullshit (RANT)</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Why &quot;logic&quot; is bullshit (RANT)</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=5&amp;t=16711">http://forums.nesdev.com/viewtopic.php?f=5&amp;t=16711</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>11</strong> of <strong>12</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>TOUKO</b> [ Sat Dec 30, 2017 6:33 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Why &quot;logic&quot; is bullshit (RANT)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Without seeing the dies though its all speculation</div><br />i agree .<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">So I guess it could be seen as a 1phase 21Mhz or a 2Phase 10Mhz</div><br />Ah, not false, I did not see the SA-1 like that but it does not sound illogical.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>psycopathicteen</b> [ Sat Dec 30, 2017 10:10 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Why &quot;logic&quot; is bullshit (RANT)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />What is the ROM speed of SA-1 games?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Oziphantom</b> [ Sun Dec 31, 2017 1:47 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Why &quot;logic&quot; is bullshit (RANT)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hard to know, the Chips on the photos I could find of SA-1 Board don't seem to have datasheets available, surprise surprise, one however was -11 which might mean 110ns which is too slow for 10.5Mhz. The &quot;Book II&quot; says that when you run from ROM the CPU runs at 10.5Mhz but then also later says in the list of things to will incur a wait-sate - ruining from ROM is listed. However it also lists if the resulting address of a branch is ODD. This makes me think that they have modded the 65816 to have a full 16bit data bus, and done away with the pin plexing for the address while they were at it, then they make it pull 16bits data per access, to which the internal systems then read the 8bits each &quot;tock&quot; like normal. This is could be because if its odd aligned it only grabbed half and you wait while it re-grabs the other half, and it can't hit the ROM at full speed again so fast, you need to wait for the next 5.25mhz window. If it does pull 16bits every 2nd access then that drops the bus to 5.25mhz and 110ns is overkill.<br /><br />Looking at a pinout it does indeed have 16 data lines...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>psycopathicteen</b> [ Sun Dec 31, 2017 1:13 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Why &quot;logic&quot; is bullshit (RANT)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Stef wrote:</div><div class="quotecontent"><div class="quotetitle">psycopathicteen wrote:</div><div class="quotecontent">Opcodes that a 4 Mhz 65816 would be faster than a 8 Mhz 68000 would be:<br /><br />-branching<br />-shifting by less than 3<br />-shifting by 8<br />-ALU and load/store instructions that use immediate, absolute or indexed addressing (except when &quot;clc&quot; and &quot;sec&quot; are needed)<br />-non-word aligned memory accesses<br /><br />Opcodes 8 Mhz 68000 is faster at:<br /><br />-shifting by more than 3 but less than 8<br />-ALU and load/store instructions that use registers or register indirect addressing<br />-ALU instructions that require &quot;clc&quot; or &quot;sec&quot;<br />-32-bit ALU instructions</div><br /><br />We can say that, but again you will tend to use more one or the other depending the CPU you are working on...<br />On a 68000 you tend to cache everything in register and do all operations from them, also you try to optimize to code to take benefit of the 32/16 bits as much as possible. What is important is to see how much you can process bottlenecks on these  CPUs, and for me bottlenecks always tend to be a data processing stream less or more. If it has a lot of branching the 65816 can have the edge, but in general the 68000 will be faster to process data (higher bandwidth / higher ALU rate with 32/16 bits)</div><br /><br />Now that I look at it from the chart I made, it looks like a 8Mhz 68000's biggest strength over a 4Mhz 65816 is register to register math (especially when clc and sec are needed).  If you divide 4 cycles by 2, you get only 2 cycles, and the only math instructions on the 65816 that take 2 cycles, are 8-bit immediate instructions without a clc or sec.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>TOUKO</b> [ Sun Dec 31, 2017 3:19 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Why &quot;logic&quot; is bullshit (RANT)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You forgot math operations that need decimal mode ,very useful for games .

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Stef</b> [ Mon Jan 08, 2018 8:10 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Why &quot;logic&quot; is bullshit (RANT)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />@touko&gt;Definitely no :p I guess you speak about BCD instructions, imo BCD instructions are totally useless here... you only need it to compute score mainly and some rare others stuff. You need to process score very rarely (less than once per frame) so even if you do it using the slow way (software conversion or LUT) it's never a problem... And i would say that even a 8 bits system (like a NES or SMS) computing visual number which change less than once per frame (score, life) in software isn't a big deal.<br /><br />@psycopathicteen&gt; If you compare a 4 Mhz vs a 8 Mhz 68000 (i didn't saw it first) i would say there is no context, the 68000 would be faster in a lot of case. I think to make them almost on part you need at least a 5 Mhz 65816 vs a 8 Mhz 68000.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>TOUKO</b> [ Mon Jan 08, 2018 8:20 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Why &quot;logic&quot; is bullshit (RANT)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">you only need it to compute score mainly and some rare others stuff.</div><br />You compute score each times you need to do .<br />Of course you can do it in some frame, but it's the same, you need to keep each value to add in RAm and add all in a frame or more, it's definitely not good because you cannot know how many times you must update the score because it can vary a lot between each frame,it works in a plateformer but not in a shmup for exemple,and why doing this when you can add it in real time for 40 cycles  .<br />For the score and hi-score computation on Z80 / 68k you spend a lot of cycles(even with LUTs),and delaying it too mush is also not good visualy speaking .<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"> it's never a problem</div><br />It's not a problem, it's only slow as hell on the 68k,you can add this with all things that are slower like branching,jumping, interrupts,8 bits processing (which represent a lot in 16 bits games ),communicate with 8 bits devices, etc ..<br />Damn, it's all that a game needed  <img src="./images/smilies/icon_lol.gif" alt=":lol:" title="Laughing" /> <br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">If you compare a 4 Mhz vs a 8 Mhz 68000 (i didn't saw it first) </div><br />You should do better search then, SA-1(10mhz) and superCPU(20mhz) for exemple, not a 65816 but the apple 2C+ use a 4mhz 65c02,atari lynx (6502 at 4mhz) and of course the hu6280 .<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"> I think to make them almost on part you need at least a 5 Mhz 65816 vs a 8 Mhz 68000.</div><br />And for the 1000 times, Nintendo could have done it at 5MHz if they had taken the way that Hudson did, easily,and without changing anythings .<br />They could have even removed the 8 bit bus for a 16 one like mitsubishi did .<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"> the 68000 would be faster in a lot of case</div><br />And what's your definition of &quot;lot of case&quot; ??<br />It's already not faster by a huge margin with a 2.6 mhz !!<br />For me a 2.6mhz 65816 is not faster than the MD's CPU, but not so far .<br /><br />Ps: stef and speaking of misinformations on gamopat is really welcome from a guy like you .<br />You wrote a lot of false things(and you continue) and don't correct yourself even when some people said you that you're false .

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Jan 08, 2018 10:21 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Why &quot;logic&quot; is bullshit (RANT)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">TOUKO wrote:</div><div class="quotecontent"><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">you only need it to compute score mainly and some rare others stuff.</div><br />You compute score each times you need to do .<br />Of course you can do it in some frame, but it's the same, you need to keep each value to add in RAm and add all in a frame or more, it's definitely not good because you cannot know how many times you must update the score because it can vary a lot between each frame,it works in a plateformer but not in a shmup for exemple,and why doing this when you can add it in real time for 40 cycles  .</div><br />No matter how many additions you do in a single frame, you only have to run the binary to decimal conversion once per frame. Keep updating the score in binary and then set a flag &quot;score has changed&quot;. Then after all game logic has run, if there's free CPU time and video memory bandwidth, it performs the conversion and queues up new score data to send to video memory.<br /><br />A compromise is seen in <em>Thwaite</em>, which uses a ones place and a hundreds place. Whenever the ones exceed 100, <a href="https://github.com/pinobatch/thwaite-nes/blob/master/src/bg.s" class="postlink"><tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">addScore</tt> in bg.s</a> adds 1 to hundreds, and then it marks the status bar as needing to be redrawn (by setting a bit in <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">bgDirty</tt>). Later on, <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">buildBGUpdate</tt> sees that the status bar contents have changed and reconverts the score and play time, using a fast binary-to-decimal routine optimized for numbers no larger than one byte (<a href="https://github.com/pinobatch/thwaite-nes/blob/master/src/bcd.s" class="postlink"><tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">bcd8bit</tt> in bcd.s</a>).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>TOUKO</b> [ Mon Jan 08, 2018 10:33 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Why &quot;logic&quot; is bullshit (RANT)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">No matter how many additions you do in a single frame, you only have to run the binary to decimal conversion once per frame. </div><br />i'am not sure you can easily do that using the 68k 32 bits registers,i saw the score management of a recent sik's game and it's not a simple number addition:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">;****************************************************************************<br />; AddScore<br />; Adds score to a player.<br />;----------------------------------------------------------------------------<br />; input d7.l ... How much to add (in BCD)<br />; input d6.b ... Which player (0 or 1)<br />;****************************************************************************<br /><br />AddScore:<br />&nbsp; &nbsp; and.w&nbsp; &nbsp;#$FF, d6&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; Whose score to affect?<br />&nbsp; &nbsp; lsl.w&nbsp; &nbsp;#2, d6<br />&nbsp; &nbsp; lea&nbsp; &nbsp; &nbsp;(Score1P), a6<br />&nbsp; &nbsp; lea&nbsp; &nbsp; &nbsp;(a6,d6.w), a6<br />&nbsp; &nbsp; <br />&nbsp; &nbsp; move.l&nbsp; (a6), d6&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; Add both scores<br />&nbsp; &nbsp; and.b&nbsp; &nbsp;#$00, ccr<br />&nbsp; &nbsp; abcd.b&nbsp; d7, d6<br />&nbsp; &nbsp; ror.l&nbsp; &nbsp;#8, d7<br />&nbsp; &nbsp; ror.l&nbsp; &nbsp;#8, d6<br />&nbsp; &nbsp; abcd.b&nbsp; d7, d6<br />&nbsp; &nbsp; ror.l&nbsp; &nbsp;#8, d7<br />&nbsp; &nbsp; ror.l&nbsp; &nbsp;#8, d6<br />&nbsp; &nbsp; abcd.b&nbsp; d7, d6<br />&nbsp; &nbsp; <br />&nbsp; &nbsp; bcc.s&nbsp; &nbsp;@NoOverflow&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; Overflowed?<br />&nbsp; &nbsp; move.l&nbsp; #$99990099, d6<br />@NoOverflow:<br />&nbsp; &nbsp; <br />&nbsp; &nbsp; swap&nbsp; &nbsp; d6&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; Store new score<br />&nbsp; &nbsp; move.l&nbsp; d6, (a6)<br />&nbsp; &nbsp; rts&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; End of subroutine<br /></div><br />Vs hu6280<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent"><br />;----------------------------------------------------------------------------<br />; input REG A ... low value to add<br />; input REG Y ... high value to add<br />; 8 digits score<br />;----------------------------------------------------------------------------<br />Add_Score:<br />&nbsp; &nbsp;&nbsp; &nbsp;ldx&nbsp; &nbsp;&nbsp; &nbsp;#LOW( score + 2 )<br />&nbsp; &nbsp;&nbsp; &nbsp;<br />&nbsp; &nbsp;&nbsp; &nbsp;sed&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;; // Active le mode décimal&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;<br />&nbsp; &nbsp;&nbsp; &nbsp;clc&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;<br />&nbsp; &nbsp;&nbsp; &nbsp;adc &nbsp; &nbsp;&lt;score&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;; // Unites &amp; dixaines<br />&nbsp; &nbsp;&nbsp; &nbsp;sta &nbsp; &nbsp;&lt;score<br />&nbsp; &nbsp;&nbsp; &nbsp;tya<br />&nbsp; &nbsp;&nbsp; &nbsp;adc&nbsp; &nbsp;&nbsp; &nbsp;&lt;score + 1&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;; // Centaine &amp; milliers&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;<br />&nbsp; &nbsp;&nbsp; &nbsp;sta &nbsp; &nbsp;&lt;score + 1&nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp;<br />&nbsp; &nbsp;&nbsp; &nbsp;set<br />&nbsp; &nbsp;&nbsp; &nbsp;adc &nbsp; &nbsp;#00&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;; // 10 aine de millier &amp; 100 aine de millier&nbsp; &nbsp;&nbsp; &nbsp;<br />&nbsp; &nbsp;&nbsp; &nbsp;inx<br />&nbsp; &nbsp;&nbsp; &nbsp;set<br />&nbsp; &nbsp;&nbsp; &nbsp;adc &nbsp; &nbsp;#00&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;; // million &amp; 10 aine de millions<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;<br />&nbsp; &nbsp;&nbsp; &nbsp;cld&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;; // Désactive le mode décimal<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <br />&nbsp; &nbsp; &nbsp; &nbsp;rts<br /><br />&nbsp;TOTAL 42 CYCLES&nbsp; &nbsp;&nbsp; &nbsp;<br />&nbsp; &nbsp;&nbsp; &nbsp;<br /></div><br /><br />it's not free on the 68k and consume &quot;lot of cycles&quot;(lot compared to 65xxx BCD of course) to do without a good BCD mode,and it also help to update the score/hi-score in VRAM .<br />You spend more cycles for the score/hi-score computation than the overhead for using 32 bits datas for physic on the 65xxx,and with headaches  <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" />  .<br /><br />There is a good thread here (in 68K assembly) :<br /><!-- m --><a class="postlink" href="http://eab.abime.net/showthread.php?t=54585&amp;highlight=bcd">http://eab.abime.net/showthread.php?t=5 ... hlight=bcd</a><!-- m --><br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"> imo BCD instructions are totally useless here..</div><br />Hopefully it's only your opinion,unless if you're speaking of the 68k BCD mode !!.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Stef</b> [ Tue Jan 09, 2018 6:27 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Why &quot;logic&quot; is bullshit (RANT)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />To be honest Touko i really don't understand your interventions, your replies are always out of focus :<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">If you compare a 4 Mhz vs a 8 Mhz 68000 (i didn't saw it first)<br /></div><br />You should do better search then, SA-1(10mhz) and superCPU(20mhz) for exemple, not a 65816 but the apple 2C+ use a 4mhz 65c02,atari lynx (6502 at 4mhz) and of course the hu6280.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I think to make them almost on part you need at least a 5 Mhz 65816 vs a 8 Mhz 68000.<br /></div><br />And for the 1000 times, Nintendo could have done it at 5MHz if they had taken the way that Hudson did, easily,and without changing anythings .<br />They could have even removed the 8 bit bus for a 16 one like mitsubishi did .</div><br /><br />What is the point of your replies ?? Where did i said the 65816 could not be faster ? the problem is memory/ROM speed, not CPU speed.. Customizing the 65816 would have cost a lot of time and money in research and design, something Nintendo couldn't afford to as the Megadrive was already there at a good price. Sega could have used a 12 Mhz 68000, added 4 extra palettes, 128 KB of VRAM without cutting anything in the MD VDP with more money... There is no real point in saying that.<br /><br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">It's not a problem, it's only slow as hell on the 68k,you can add this with all things that are slower like branching,jumping, interrupts,8 bits processing (which represent a lot in 16 bits games ),communicate with 8 bits devices, etc ..<br />Damn, it's all that a game needed <img src="./images/smilies/icon_lol.gif" alt=":lol:" title="Laughing" /><br /></div><br /><br />In the whole, what are you trying to prove ? Of course the 68000 is not perfect but in the whole it's a much better CPU than the 65816...<br />Do you see how this is ridiculous ? You're trying to prove the 68000 is slow because 68k BCD instructions are slow ? really ? Even tepples try to explain you why computing score isn't an issue, even without BCD instructions. You are programming games but honestly your experience seems quite weak in some area. I don't understand why you are posting methods to compare BCD addition, as tepples said, normally a &quot;smart&quot; developer would keep the score in a  normal integer (i assume a 8bit integer won't be enough here :p), then you compute the BCD version only after updating the score and to display it. You will *never* do it more than once per frame so you will *never* care about the performance here (unless you're doing something really insane which eat about 50% of the frame time just to compute a single int BCD conversion <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />).<br /><br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">It's already not faster by a huge margin with a 2.6 mhz !!<br />For me a 2.6mhz 65816 is not faster than the MD's CPU, but not so far .<br /></div><br /><br />Of course <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /> Free to you to think whatever you want, at least this time you said &quot;for me&quot; in your second sentence, this is already a progress <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" /><br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">There is a good thread here (in 68K assembly) :<br /><!-- m --><a class="postlink" href="http://eab.abime.net/showthread.php?t=54585&amp;highlight=bcd">http://eab.abime.net/showthread.php?t=5 ... hlight=bcd</a><!-- m --><br /></div><br /><br />The only valuable information in this thread is here :<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">So that's how much adding instructions on a whim saves, 11 cycles per digit. <strong>BCD was added as a lazy convenience, never to save cycles or code size. It's never used where performance is of importance, as this max-once-per-frame score example shows.</strong><br /></div><br /><br />Exactly what we said earlier...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>TOUKO</b> [ Tue Jan 09, 2018 8:18 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Why &quot;logic&quot; is bullshit (RANT)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Do you see how this is ridiculous ? You're trying to prove the 68000 is slow because 68k BCD instructions are slow ?</div><br />No, you 're proud to show how the 68k is wonderful for 32 bits operations even when they are useless in a 16bits game, i show you that it's easy to find something which is very slow on a 68k and useful for games,this is what i mean.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">the problem is memory/ROM speed, not CPU speed</div><br />Frankly stop to be so stupid, we have explained so many times that you can double the CPU frequency with same ROM/RAM, you're boring to not understand that .<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">So that's how much adding instructions on a whim saves, 11 cycles per digit. BCD was added as a lazy convenience, never to save cycles or code size. It's never used where performance is of importance, as this max-once-per-frame score example shows.<br /></div><br />Oooh 42 cycles VS 130, yes, you're right !!<br />And like usal you don't take care that somebodies in the thread said that BCD is useful even on the 68K, you keep always what you want  .<br />It's useless on the 68k because is so slow .

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Stef</b> [ Tue Jan 09, 2018 9:10 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Why &quot;logic&quot; is bullshit (RANT)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Frankly stop to be so stupid, we are explained so many time that you can double the CPU frequency with same ROM/RAM, you're boring to not understand that .<br /></div><br /><br />Not without a massive redesign of the chip and raising up the costs a lot (and you don't really double the speed).<br />I don't see the point speculating about that honestly, you don't really know if it was feasible or not, at which cost --&gt; no point<br />We're comparing the SNES's CPU versus MD's CPU, not comparing a hypothetical customized 65C816 ...<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">... And like usal you don't take care that somebodies in the thread said that BCD is useful even on the 68K, you keep always what you want  . It's useless on the 68k because is so slow .</div><br /><br />Yeah, because honestly it's just wrong :p<br />BCD isn't useful to make a game. If you need to display tons of base 10 numbers on display refreshing very quickly i would say &quot;why not...&quot; but in a game we just don't care. I won't debate for days about it...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>TOUKO</b> [ Tue Jan 09, 2018 9:31 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Why &quot;logic&quot; is bullshit (RANT)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Not without a massive redesign of the chip and raising up the costs a lot (and you don't really double the speed).</div><br />Like i said stef, you are boring as hell .<br />The 65xxx classic design is a 2 phase CPU, each phase access to the ram at  1/2 cycle, this is why 2x the CPU frequency ram is needed, if you redesign your CPU to be &quot; a 1 phase&quot; like the hu6280 you need RAM to be at the same frequency than the CPU,no cost added or something,all is the same, it's so hard to understand ???<br />I don't see why you add cost when you don't need to change anything !!<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Yeah, because honestly it's just wrong :p</div><br />Yeah, this is why speaking of CPU with you is boring and pointless ..<br />I took the sik's code as exemple, and it use BCD,as a bunch of exemple on the EAB thread .<br />Score calculation is only one exemple,because i know you like to compare code, unless when it's not in favor of the 68k,and yes,sorry if it is a bit more than the 2 lda and 3 sta you did on sega-16,before  declaring the 65xxx inefficient.<br /><br />Ps: Et pour ta gouverne, je suis parti de gamopat à cause de toi, j'en avais marre de te voir traiter ceux qui pensent pas comme toi, de fanboys, ou de personnes ayant des avis biaisés, ou ce genre de conneries ,surtout venant d'un boulet incapable de voir plus loin que son nombril,et le plus beau c'est que tu continus .<br />Donc la prochaine foi que tu craches sur moi, évites de raconter n'importe quoi comme à ton habitude STP ..

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Stef</b> [ Tue Jan 09, 2018 10:08 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Why &quot;logic&quot; is bullshit (RANT)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">TOUKO wrote:</div><div class="quotecontent">The 65xxx classic design is a 2 phase CPU, each phase access to the ram at  1/2 cycle, this is why 2x the CPU frequency ram is needed.<br /></div><br /><br />Thanks but i know...<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">if you redesign your CPU to be &quot; a 1 phase&quot;</div><br /><br />redesign... do you understand that redesigning the CPU is all except trivial ??<br />There is a good reason why the 65xx CPU works in 2 phases, it's needed by its internal implementation. The HuC CPU required a major redesign with a MMU unit to make it acting 1 phase externally. It's required *a lot* of time / work and money to design this CPU. You can read this page to learn more about it : <!-- m --><a class="postlink" href="http://archaicpixels.com/HuC6280">http://archaicpixels.com/HuC6280</a><!-- m --><br />Also the 65C816 is a different beast and probably not as easy to redesign than a 6502...<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Yeah, this is why speaking of CPU with you is boring and pointless ..<br />I took the sik's code as exemple, and it use BCD,as a bunch of exemple on the EAB thread .<br />Score calculation is only one exemple,because i know you like to compare code, unless when it's not in favor of the 68k,and yes,sorry if it is a bit more than the 2 lda and 3 sta you did on sega-16,before  declaring the 65xxx inefficient.</div><br /><br />I said &quot;you can use it as it makes the BCD conversion code simpler&quot; but still we don't *need* it performance wise, it's an instruction you almost never use... it's not as common as the ADD instruction for instance (oh my bad, the 65C816 doesn't have ADD instruction  <img src="./images/smilies/icon_lol.gif" alt=":lol:" title="Laughing" /> )

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>TOUKO</b> [ Tue Jan 09, 2018 10:18 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Why &quot;logic&quot; is bullshit (RANT)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">There is a good reason why the 65xx CPU works in 2 phases, it's needed by its internal implementation</div><br />No, the 2 phase was here to permit an external chips accessing to the main RAM without stealing any CPU cycles like the Z80 did in the CPC or spectrum .<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">The HuC CPU required a major redesign with a MMU unit to make it acting 1 phase externally. It's required *a lot* of time / work and money to design this CPU.</div><br />And you know that because you were in the team who's designed the CPU ???<br />MMU was part of improvements hudson did over the 65C02,like sound and new opcodes,not a consequence .<br />Hudson did it with his limited team and budget,don't forget hudson was a very little structure and has done all the PCE's chipset alone, i don't think really that nintendo cannot do it easily .<br />Nintendo went with the standard design for the nes compatibility, nothing else and it was too late to redoing it when compatibility was drop out .<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"> it's not as common as the ADD instruction for instance (oh my bad, the 65C816 doesn't have ADD instruction  <img src="./images/smilies/icon_lol.gif" alt=":lol:" title="Laughing" /> )</div><br />i prefer the block transfert instructions what the hu6280 has, rather than a stupid add,more useful when you need to transfer through a 8/16 bit port(oh sorry i forgot, the 68k has nothing like this  <img src="./images/smilies/icon_lol.gif" alt=":lol:" title="Laughing" /> ) . ..

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>11</strong> of <strong>12</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>