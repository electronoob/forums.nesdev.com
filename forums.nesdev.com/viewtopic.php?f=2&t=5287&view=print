<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Way too slow...</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Way too slow...</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=5287">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=5287</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Cybergoth</b> [ Tue Jun 09, 2009 3:33 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Way too slow...</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hi there!
<br />
<br />I'm currently working on a particle engine. I have a first draft ready, but unfortunately so far my efforts are way too slow.
<br />
<br />My goal was to move 128 Tile pixels at 60Hz, but my current best approach moves only 96 pixels at 15Hz <img src="./images/smilies/icon_redface.gif" alt=":oops:" title="Embarassed" />
<br />
<br />Albeit my main VBLANK code is probably near perfect I think (first loop of NMI code, does 96 PPU RAM updates per frame), but maybe I'm missing something substantial.
<br />
<br />I have uploaded my source and binary, hoping that maybe someone here has an idea to make things faster <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />
<br />
<br />=&gt; <!-- m --><a class="postlink" href="http://home.arcor.de/cybergoth/apocalypse.zip">http://home.arcor.de/cybergoth/apocalypse.zip</a><!-- m -->
<br />
<br />Greetings,
<br />Manuel

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Tue Jun 09, 2009 8:22 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Well, I don't think it is too slow, in fact it is pretty cool. It is always faster than my pseudo-mode 7 demo that was computing a frame in arround 2-3 seconds or something like that (I didn't optimize my code).
<br />
<br />Does only the pattern table or the name table too being uploaded ?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Cybergoth</b> [ Tue Jun 09, 2009 9:59 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">Well, I don't think it is too slow, in fact it is pretty cool. It is always faster than my pseudo-mode 7 demo that was computing a frame in arround 2-3 seconds or something like that (I didn't optimize my code).</div><br /><br />Thanks for the heads-up. I found the thread here and tried your demo, that's really impressive stuff! <img src="./images/smilies/icon_eek.gif" alt=":shock:" title="Shocked" /> <br /><br /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">Does only the pattern table or the name table too being uploaded ?</div>
<br />
<br />Both, yes. I need 4 writes per dot: Erase old dot+tile and draw anew. I just randomized dot positions for the moment and implemented the simplest movement scheme possible, but every dot can actually be freely(*) positioned.
<br />
<br />*Right now I'm doing nothing against tile clashes, so the last drawn dot always "wins" the tile <img src="./images/smilies/icon_wink.gif" alt=":wink:" title="Wink" />
<br />
<br />Basically I have a few general directions of thought for speed-up:
<br />
<br />1. Something like a mapper that allows toggling the same RAM between PPU and CPU. Does something like that exist?
<br />
<br />2. Selfmodifying code. Should definitely speed it up some, but could require up to 15*128 Bytes of RAM.
<br />
<br />3. Updating the PPU just-in-time. I assume as long as I'm ahead of the raster beam I can do whatever I want, regardless wether it's still VBLANK or not? (Still, Y-Sorting 128 objects during a frame might be impossible as well...)
<br />
<br />4. Optimize by restricting/patternizing the dot movement. Something I will possibly do later.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Tue Jun 09, 2009 11:10 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"> <br />1. Something like a mapper that allows toggling the same RAM between PPU and CPU. Does something like that exist?</div><br />No this will not be electronically possible. Even if you used dual-port RAM there would still be issues. Maybe if you insrert a modern Multi-megahertz-super-fast DSP in the cartridge that will multiplex RAM read and writes for both chips in a transparant fashion this would be possible.<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">3. Updating the PPU just-in-time. I assume as long as I'm ahead of the raster beam I can do whatever I want, regardless wether it's still VBLANK or not? (Still, Y-Sorting 128 objects during a frame might be impossible as well...)</div>
<br />No you need to be in VBlank or forced VBlank to acess RAM. You can however force VBlank for a part of the frame to get more RAM writes.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Tue Jun 09, 2009 11:48 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Cybergoth wrote:</div><div class="quotecontent">*Right now I'm doing nothing against tile clashes, so the last drawn dot always "wins" the tile <img src="./images/smilies/icon_wink.gif" alt=":wink:" title="Wink" /></div><br />Ah, I thought I saw some of the pixels disappearing for small amounts of time...! =)<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">1. Something like a mapper that allows toggling the same RAM between PPU and CPU. Does something like that exist?</div><br />I think the MMC5 will let you access it's internal RAM from the CPU address space even while the screen renders, but that memory can only be used for a name table I think. I might have got that wrong, I haven't read about the MMC5 in a while, but I think it's not what you're looking for anyway.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">2. Selfmodifying code. Should definitely speed it up some, but could require up to 15*128 Bytes of RAM.</div><br />That's nearly all of the internal RAM, but shouldn't be a problem if you use a cart with 8KB of extra RAM.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">3. Updating the PPU just-in-time. I assume as long as I'm ahead of the raster beam I can do whatever I want, regardless wether it's still VBLANK or not?</div>
<br />Like Bregalad said, there is no way around that. The address register we use to write data to the PPU (accessed through $2006) is also used by the PPU during rendering, so accessing it outside of VBlank will corrupt whatever is being rendered at the moment. As Bregalad suggested, you can turn rendering off manually for a few extra scanlines of PPU access.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Cybergoth</b> [ Tue Jun 09, 2009 12:42 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">Ah, I thought I saw some of the pixels disappearing for small amounts of time...! =)</div><br /><br />I'm undecided yet if I'm going to do something against it or just allow it to happen <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" /><br /><br /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">I think the MMC5 will let you access it's internal RAM from the CPU address space even while the screen renders, but that memory can only be used for a name table I think. I might have got that wrong, I haven't read about the MMC5 in a while, but I think it's not what you're looking for anyway.</div><br /><br />That mappers quite a beast! <img src="./images/smilies/icon_eek.gif" alt=":shock:" title="Shocked" /><br /><br />I'd assume that's a configuration that'll never be used for homebrew efforts, unless one is going to cannibalize original carts <img src="./images/smilies/icon_eek.gif" alt=":shock:" title="Shocked" /> <img src="./images/smilies/icon_eek.gif" alt=":shock:" title="Shocked" /> <img src="./images/smilies/icon_eek.gif" alt=":shock:" title="Shocked" /><br /><br /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">That's nearly all of the internal RAM, but shouldn't be a problem if you use a cart with 8KB of extra RAM.</div><br /><br />While still in tech-demo stages I might just try it once to see how much speed up it provides. Probably not really worth the tradeoff <img src="./images/smilies/icon_confused.gif" alt=":?" title="Confused" /><br /><br /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">Like Bregalad said, there is no way around that. The address register we use to write data to the PPU (accessed through $2006) is also used by the PPU during rendering, so accessing it outside of VBlank will corrupt whatever is being rendered at the moment.</div><br /><br />That's quite interesting. I think I got that idea from reading some tech notes from Ian Bell coming with his Tank demo, where it says he's cycle counting in order to know the position of the beam or somesuch? Maybe I just misunderstood that part.<br /><br /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">As Bregalad suggested, you can turn rendering off manually for a few extra scanlines of PPU access.</div>
<br />
<br />Is the default VBLANK window already maxed out or can you already gain some cycles here without shrinking the resolution? I'm thinking about some unused overscan area or the missing top/bottom lines.
<br />
<br />In case, is there some sample code available that maxes out vblank time?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>CartCollector</b> [ Tue Jun 09, 2009 12:45 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />To expand on what Bregalad said, <a href="http://nesdev.com/2C02%20technical%20reference.TXT" class="postlink">This document</a> shows exactly what the PPU does each scanline. It accesses VRAM with every cycle it has available except for one, and since 1 PPU cycle is 1/3 of a CPU cycle, it doesn't help you that much. So it's impossible to access VRAM while a scanline is being rendered without messing up the video. However, you CAN access the PPU's internal registers, like the scroll registers, during certain times while a scanline is being rendered. The document there, along with loopy's "The Skinny on NES Scrolling," tell you how to do so.
<br />
<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I think the MMC5 will let you access it's internal RAM from the CPU address space even while the screen renders, but that memory can only be used for a name table I think. I might have got that wrong, I haven't read about the MMC5 in a while, but I think it's not what you're looking for anyway.</div><br /><br /><br />That mappers quite a beast! Shocked<br /><br />I'd assume that's a configuration that'll never be used for homebrew efforts, unless one is going to cannibalize original carts Shocked Shocked Shocked</div><br /><br />The MMC5's internal ram, when it's used for enhancing the graphics, is usually used as a second name and attribute table. It allows you to use up to 16384 different tiles in the background at the same time, and also lets you use 1 palette per tile, instead of the 2 by 2 tile area that normal attribute tables use. It only works with one screen mirroring though, and doesn't really help with sprites. More info is on the NESdevWiki.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Is the default VBLANK window already maxed out or can you already gain some cycles here without shrinking the resolution? I'm thinking about some unused overscan area or the missing top/bottom lines.<br /><br />In case, is there some sample code available that maxes out vblank time?</div>
<br />
<br />Depends on the TV. If it's NTSC then some scanlines are probably being chopped off. Most emulators remove the first and last 8 scanlines, though real NTSC TVs might remove more or less, and they might remove more from the top than the bottom or vice versa. But 8 from the top and bottom is usually a safe bet. If it's PAL then it's displaying more scanlines than the NES does, approximately 260 scanlines according to the NESdevWiki. So with PAL you shouldn't remove any scanlines from the display if you don't have to. But then again with PAL you get 70 scanlines of VBlank, so you probably don't need to.
<br />
<br />That document by Ian Bell probably refers to counting cycles so that the tank demo always enables and disables the PPU at the same scanlines. The reason he needed to do so was because he was using a mapper (UNROM I think) that didn't have scanline interrupts. If you use something like an MMC3 or better though it'll probably have the option to use scanline interrupts, which means you don't have to count cycles to know when a certain scanline is being rendered. The Tank demo is an example of a program that disables rendering for extended VBlank. So are Battletoads and this one test program by Celius. I forget what it's called though.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Tue Jun 09, 2009 2:08 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Cybergoth wrote:</div><div class="quotecontent">Is the default VBLANK window already maxed out or can you already gain some cycles here without shrinking the resolution? I'm thinking about some unused overscan area or the missing top/bottom lines.<br /><br />In case, is there some sample code available that maxes out vblank time?</div><br /><a href="http://www.lj65.org/" class="postlink">LJ65</a> turns off rendering about nine lines early so that it can blit a whole 200-byte playfield, plus OAM and the palette, in one NTSC vblank.<br /><br /><div class="quotetitle">CartCollector wrote:</div><div class="quotecontent"><a href="http://nesdev.com/2C02%20technical%20reference.TXT" class="postlink">This document</a> shows exactly what the PPU does each scanline. It accesses VRAM with every cycle it has available except for one</div>
<br />Unless a mapper queues up (address, data) pairs to write to VRAM and executes the queue during times when the data read by the PPU doesn't matter. The document lists the following memory fetch phases when the PPU appears to ignore what it reads: <ul><li>125-128: Unused thirty-fourth sliver of the background </li><li>129, 130, 133, 134, ..., 157, 158: Garbage nametable bytes </li><li>169  and 170: PPU is frozen while waiting 5 dots for horizontal blanking to end </li></ul>
<br />But then that might be almost as hard to build as MMC5, with independent front-side and back-side PPU address buses. And like MMC5, it might screw up on mostly-NES-compatible consoles using "NOAC" chipsets. If you really want to write to VRAM during rendering, then try programming for the TurboGrafx-16 or the Game Boy Advance.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Tue Jun 09, 2009 3:11 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The latest program I've written allows a lot of room for VRAM writes.  But all the code running during the displayed part of the screen (and vblank) has to take the same amount of cycles every frame.  I didn't even use the sprite #0 hit yet.  But the end part was just a delay loop, which would work fine for sprite #0 hit.  It's a totally wrong set up, but what I'm doing takes several frames to finish the main loop, but it updates the screen all at once when it's ready.  Having some fun with the nametables. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />
<br />
<br />Using the sprite #0 hit detect is the common way to combine variable code with timed code.  But it only works once per frame.  An IRQ would be better, but only ASIC-basic mappers have them, generally.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>CartCollector</b> [ Tue Jun 09, 2009 4:31 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">LJ65 turns off rendering about nine lines early so that it can blit a whole 200-byte playfield, plus OAM and the palette, in one NTSC vblank. </div><br /><br />How do you know when to turn the screen back on? Is the blit guaranteed to not take over 30 scanlines of time? I get 30 from 20 normal VBlank + 9 extended VBlank + 1 scanline before normal VBlank that the PPU doesn't render but doesn't trigger the VBlank NMI for either.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">If you really want to write to VRAM during rendering, then try programming for the TurboGrafx-16 or the Game Boy Advance.</div>
<br />
<br />Or the Atari 800, Atari 5200, or Commodore 64. All of which were released before the Famicom <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Tue Jun 09, 2009 6:49 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">CartCollector wrote:</div><div class="quotecontent">How do you know when to turn the screen back on? Is the blit guaranteed to not take over 30 scanlines of time?</div>
<br />Correct. I timed a 22-line update plus palette update plus OAM DMA, and it didn't exceed 3500 cycles, even with DPCM stealing cycles. That's 9 forced blank lines, 1 post-render line, 20 vblank lines, and the first 100 CPU cycles of the pre-render line. But then you do get most of the pre-render scanline too.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Tue Jun 09, 2009 7:31 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I wrote what I consider to be a pretty great PPU updating routine. It uses 12 scanlines of extended Vblank, but it can do a lot (in my mind).
<br />
<br />Each frame, it does:
<br />
<br />64 tile writes (row)
<br />30 tile writes (column)
<br />16 attribute writes (row)
<br />8 attribute writes (column)
<br />32 entry palette update
<br />10 * (1 CHR RAM tile) or (6 Miscellaneous PPU writes)
<br />Sprite DMA
<br />Sets Scroll
<br />
<br />Unfortunately, since I'm using extended Vblank, it has to take an exact amount of cycles every frame. So it's about 3600 cycles for all of that, but it's worth it. And for each of the CHR RAM tile routines, one can decide to do 6 miscellaneous PPU writes instead if they so desire, which is handy if there's a BG update that's not related to scrolling over level data.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Cybergoth</b> [ Wed Jun 10, 2009 9:41 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thanks guys for all your feedback. I'll see what I can do with all the ideas I got now for the next revision of the engine <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Cybergoth</b> [ Sun Jun 14, 2009 7:16 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Way too slow...</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Cybergoth wrote:</div><div class="quotecontent">my current best approach moves only 96 pixels at 15Hz</div>
<br />
<br />By significantly changing that approach I managed to almost double the speed of my particle engine (without any vblank extension!) <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />
<br />
<br />Now it updates 94 particles with 30Hz.
<br />
<br />=&gt; <!-- m --><a class="postlink" href="http://home.arcor.de/cybergoth/apocalypse.zip">http://home.arcor.de/cybergoth/apocalypse.zip</a><!-- m -->

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Sun Jun 14, 2009 12:23 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Nice!  Looks like a couple 'lemmings' blew up in outer space.  <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>