<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=5&amp;t=6489" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2010-06-11T15:05:48-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=5&amp;t=6489</id>
<entry>
<author><name><![CDATA[jwdonal]]></name></author>
<updated>2010-06-11T15:05:48-07:00</updated>
<published>2010-06-11T15:05:48-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6489&amp;p=62860#p62860</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6489&amp;p=62860#p62860"/>
<title type="html"><![CDATA[Anyone have a good understanding of CRC-32 generation?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6489&amp;p=62860#p62860"><![CDATA[
Aha!  Awesome!  Thanks a lot Reaper!! =D<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3962">jwdonal</a> — Fri Jun 11, 2010 3:05 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[ReaperSMS]]></name></author>
<updated>2010-06-11T14:51:52-07:00</updated>
<published>2010-06-11T14:51:52-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6489&amp;p=62859#p62859</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6489&amp;p=62859#p62859"/>
<title type="html"><![CDATA[Anyone have a good understanding of CRC-32 generation?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6489&amp;p=62859#p62859"><![CDATA[
<a href="http://www.ross.net/crc/" class="postlink">http://www.ross.net/crc/</a> has plenty of details about it.<br /><br />The quick version is that the CRC is effectively a 1-bit operation, so when you're shortcutting things a bit by running it 8+bits at a time, the bit order matters a bunch.<br /><br />The inversion thing has to do with disagreements as to the exact implementation of the polynomial, and also with the different initial values used. Usually it's initialized to FFFFFFFF so it will notice initial 0 strings, and sometimes the output gets re-inverted, sometimes it doesn't.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=8">ReaperSMS</a> — Fri Jun 11, 2010 2:51 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[jwdonal]]></name></author>
<updated>2010-06-11T13:32:23-07:00</updated>
<published>2010-06-11T13:32:23-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6489&amp;p=62854#p62854</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6489&amp;p=62854#p62854"/>
<title type="html"><![CDATA[Anyone have a good understanding of CRC-32 generation?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6489&amp;p=62854#p62854"><![CDATA[
So I've recently implemented ROM IEEE CRC-32 calculation in hardware for my VeriNES.  It actually works perfectly and all the ROMs I've tested all have identical CRCs to that of BootGod's NesCartDB.  So this isn't really a debugging-type question since i have it working - it's more of a curiosity that I'd like to make some sense of.<br /><br />When I first implemented the CRC module in my hardware the CRCs were totally incorrect.  After doing some research online I realized that I should have been reversing my data input to my CRC calculator.  As far as I can tell this has to do with the fact that the data words of say, an Ethernet packet, are put on the wire MSbit first.  So each bit is shifted into the CRC calculation routine MSbit first.  I think some CRC-32 algo implementations simply reverse the polynomial itself which results in the same effect (at least I think that's why).<br /><br />However, even after I reversed the data input to the CRC module my answers were still wrong.  Then I thought to myself, "hey, maybe I need to reverse the CRC back again since if we use the "wire" metaphor then the data would be coming to me MSbit first" (since that's how it was originally sent/input).  So I did that and the answer was still wrong!<br /><br />But fortunately, BootGod had emailed me some of his CRC code and told me to make sure that I XOR'ed the final CRC result with 0xFFFFFFFF (this is the same as just inverting every bit).  Once I did that I _finally_ got the right answer.<br /><br />So I have 2 questions:<br /><br />1) Is my interpretation of putting the data bits on the wire MSbit first correct (i.e. the reason I need to reverse the data input and then reverse the resulting CRC output)?<br /><br />2) Why in the heck do I need to invert the resulting CRC before I get the correct answer?  In my CRC research on other sites I've actually seen both types of solutions - that is, some people invert the CRC result and some just plain don't.  It's weird, it's like no one really knows whether they should or not.<br /><br />Anyway, thanks in advance for any input.<br /><br />Pz<br /><br />Jonathon<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3962">jwdonal</a> — Fri Jun 11, 2010 1:32 pm</p><hr />
]]></content>
</entry>
</feed>