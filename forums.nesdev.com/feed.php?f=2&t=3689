<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=2&amp;t=3689" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2007-11-14T19:16:58-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=2&amp;t=3689</id>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2007-11-14T19:16:58-07:00</updated>
<published>2007-11-14T19:16:58-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3689&amp;p=28283#p28283</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3689&amp;p=28283#p28283"/>
<title type="html"><![CDATA[cheating]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3689&amp;p=28283#p28283"><![CDATA[
<div class="quotetitle">never-obsolete wrote:</div><div class="quotecontent"><br />what ways have you tought of? this was the only way i could come up with for a Konomi code type cheat.<br /></div><br />You don't want to know. =) The only time I ever implemented cheats like these was back when I made QBasic games, and wasn't able to program anything else. I used to keep the codes of the last N pressed keys in a string (N being the largest a cheat code could be), then I'd check the end of that string against strings containing the cheats. This worked fine in QBasic, but in assembly your idea has to be the best.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Wed Nov 14, 2007 7:16 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[never-obsolete]]></name></author>
<updated>2007-11-13T10:40:35-07:00</updated>
<published>2007-11-13T10:40:35-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3689&amp;p=28219#p28219</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3689&amp;p=28219#p28219"/>
<title type="html"><![CDATA[cheating]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3689&amp;p=28219#p28219"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />I had never thought of implementing cheats the way you described.<br /></div><br /><br />what ways have you tought of? this was the only way i could come up with for a Konomi code type cheat.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent"> lda NewButtons <br /> eor OldButtons <br /> and NewButtons<br /></div><br /></div><br /><br />i do something similar:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent"> lda JoypadOld<br /> eor #$FF<br /> and JoypadCurrent<br /></div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=187">never-obsolete</a> — Tue Nov 13, 2007 10:40 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2007-11-13T09:26:51-07:00</updated>
<published>2007-11-13T09:26:51-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3689&amp;p=28213#p28213</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3689&amp;p=28213#p28213"/>
<title type="html"><![CDATA[cheating]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3689&amp;p=28213#p28213"><![CDATA[
<div class="quotetitle">never-obsolete wrote:</div><div class="quotecontent"><br />your implementation is much more elegant. <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /></div><br />I had never thought of implementing cheats the way you described. I liked the idea so much that I had to try! =)<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />the P1Joypad is a hangover from checking for START to skip the scrolling title screen (a la smb3's curtain intro) irregardless if it was newly pressed or held. though i did have that "start" problem earlier on in development with the menu system.<br /></div><br />Yeah, there are many places in a game, mostly ouside of the main game engine, where all you are interested in are the buttons that were just pressed, or else cursors would fly through the options because a person usually keeps the buttons pressed for longer than a frame. This is the trick I talked about&#058;<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   lda NewButtons<br />   eor OldButtons<br />   and NewButtons</div><br />This will result in a byte with 1's indicating buttons that were just pressed, and whatever was already pressed in the previous frame is ignored. It is very useful to keep track of both types of keypresses.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />this game has some nasty code. most of it was from the early stages of development when i had little experience in a project this large.<br /></div><br />I know how it works! =) In fact, I always find myself rewriting code, and that must be one of the reasons I never finish anything!<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />then i just got too lazy to fix what wasn't broke.<br /></div><br />Probably a very wise decision!<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Tue Nov 13, 2007 9:26 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[never-obsolete]]></name></author>
<updated>2007-11-13T08:27:52-07:00</updated>
<published>2007-11-13T08:27:52-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3689&amp;p=28209#p28209</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3689&amp;p=28209#p28209"/>
<title type="html"><![CDATA[cheating]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3689&amp;p=28209#p28209"><![CDATA[
your implementation is much more elegant. <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><br />First of all, the byte that holds the state of the buttons must only indicate buttons that were just pressed (the NewButtons XOR OldButtons AND NewButtons trick), and not the current snapshot of the controller. This saves you from having to compare against the previous index. Most games keep track of both types of keypresses, for things such as pausing (you only need to know if "start" was just pressed in order to pause, and you are not interested if was kept down for a few frames - in fact, that would unpause the game in the very next frame, and that'd be nasty).<br /></div><br /><br />the P1Joypad is a hangover from checking for START to skip the scrolling title screen (a la smb3's curtain intro) irregardless if it was newly pressed or held. though i did have that "start" problem earlier on in development with the menu system.<br /><br />this game has some nasty code. most of it was from the early stages of development when i had little experience in a project this large. then i just got too lazy to fix what wasn't broke. i was able to salvage and clean up a lot of code for use in 2 other projects i started.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=187">never-obsolete</a> — Tue Nov 13, 2007 8:27 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2007-11-12T23:29:37-07:00</updated>
<published>2007-11-12T23:29:37-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3689&amp;p=28200#p28200</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3689&amp;p=28200#p28200"/>
<title type="html"><![CDATA[cheating]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3689&amp;p=28200#p28200"><![CDATA[
I really liked your idea, but I feel that the implementation could be better. Here's my shot at it:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   lda ButtonsJustPressed<br />   beq NoChange   ;If nothing was pressed, there is nothing to do<br /><br />   ;Compare against the first cheat sequence<br />   ldx Cheat1Index   ;Index of the value to match<br />   cmp Cheat1, x   ;Compare with the current buttons<br />   bne Cheat1Reset   ;If they are different, go reset the sequence<br />   dec Cheat1Index ;Move closer to the end of the sequence<br />   bpl Cheat1End   ;Skip if we're not at the end of the sequence<br />   ;-&gt;ENABLE CHEAT HERE&lt;-<br />Cheat1Reset:<br />   ldx #Cheat1StartIndex   ;Go back to the start of the sequence<br />   stx Cheat1Index<br />Cheat1End:<br /><br />   ;Compare against the second cheat sequence<br />   ldx Cheat2Index<br />   cmp Cheat2, x<br />   bne Cheat2Reset<br />   dec Cheat2Index<br />   bpl Cheat2End<br />   ;-&gt;ENABLE CHEAT HERE&lt;-<br />Chaet2Reset:<br />   ldx #Cheat2StartIndex<br />   stx Cheat2Index<br />Cheat2End:<br /><br />NoChange:</div><br />First of all, the byte that holds the state of the buttons must only indicate buttons that were just pressed (the NewButtons XOR OldButtons AND NewButtons trick), and not the current snapshot of the controller. This saves you from having to compare against the previous index. Most games keep track of both types of keypresses, for things such as pausing (you only need to know if "start" was just pressed in order to pause, and you are not interested if was kept down for a few frames - in fact, that would unpause the game in the very next frame, and that'd be nasty).<br /><br />Second, I'm scanning the cheat sequence backwards, because it's easier to detect if the index wrapped from 0 to 255, and that is the condition that indicates that the sequence was completed.<br /><br />Also, in the code above, I'm supporting 2 different cheats, each with it's own button sequence, but more could be added without problems. I just commented the first one, because the second uses the exact same logic.<br /><br />Note that I haven't tested this, this is just an idea, so there are probably bugs. One that I just thought of, which may not be a bug, is that it is possible to perform the whole button sequence while keeping pressed a button that does not belong to the sequence. To fix that you could probably load A with the current snapshot of the controller right after the "beq NoChange" command. That would make the code only run when something was pressed, but the whole controller must be as specified in the cheat sequence table.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Mon Nov 12, 2007 11:29 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[never-obsolete]]></name></author>
<updated>2007-11-12T12:48:16-07:00</updated>
<published>2007-11-12T12:48:16-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3689&amp;p=28176#p28176</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3689&amp;p=28176#p28176"/>
<title type="html"><![CDATA[cheating]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3689&amp;p=28176#p28176"><![CDATA[
i had a friend of mine beta testing my Pitfall! clone and his skills are terrible. i decided to put a cheat code in to help him out and this i what i came up with:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   ldx cheatIndex         ; if button_index &gt;= cheat_length<br />   cpx #08<br />   bcs _cheat_Activate      ;     branch to set cheat == ACTIVE<br />   lda P1Joypad         ; if cur_pressed == cur_button<br />   cmp cheatCodeData, X<br />   beq _cheat_gotoNextButton   ;     branch to check next button on next loop<br /><br />_cheat_checkPrevButton:   dex      ; else button didn't match<br />   cpx #$FF<br />   beq _cheat_resetIndex<br />   cmp cheatCodeData, X      ;     so check if cur_pressed == prev_button<br />   beq _cheat_HangOnPrevButton   ;         branch to wait for another frame<br /><br />_cheat_resetIndex:   ldx #00      ;     else reset button index<br />   stx cheatIndex<br />   jmp _cheat_ExitCheck<br /><br />_cheat_gotoNextButton:   inx      ; button matched so move on to next<br />   stx cheatIndex<br />   jmp _cheat_ExitCheck<br /><br />_cheat_Activate:   lda #01      ; all 8 buttons matched so set cheat==true<br />   sta cheatActive<br /><br />_cheat_HangOnPrevButton:<br />_cheat_ExitCheck:<br /></div><br /><br />i think it works nicely. has anyone else ever implemented a cheat system in their projects? i'd like to know how mine stacks up.<br /><br />edit: should proabably describe it<br /><br />so each frame of the title screen it checks the currently pressed buttons against a sequence of button presses.<br /><br /> 1. if the sequence index(cheatIndex) is greater then the sequence size (8), the cheat is enabled. <br /> 2. else if the current pressed button matches the next button in sequence, the sequence index is incremented and then wait for another loop<br /> 3. if #2 fails, then the current pressed button is compared to the previous button in sequence. if it matches the, the code hangs for another loop.<br /> 4. else it resets the sequence index and we repeat.<br /><br />if the whole process takes too long, then the cheat is no longer available<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=187">never-obsolete</a> — Mon Nov 12, 2007 12:48 pm</p><hr />
]]></content>
</entry>
</feed>