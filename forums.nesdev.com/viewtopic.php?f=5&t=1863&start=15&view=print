<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Game Boy and GBA sound registers</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Game Boy and GBA sound registers</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=5&amp;t=1863">http://forums.nesdev.com/viewtopic.php?f=5&amp;t=1863</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>3</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Tue Aug 22, 2006 9:13 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If you ignore all the libraries and stuff, you'll find that writing C is pretty much like describing what you want in assembly.  Not that I have a lot of experience though (barely any, honestly).  Loops seem kinda odd with the loop condition at the front rather than end.  Functions are just subroutines.  Goto is JMP.
<br />
<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Not only the GBA is the only machine to provide both analog and digital channels (and sorry for those who doesn't like those therms), but also the digital channel is both endless and very limited, wich is extremely exciting.</div>
<br />
<br />Hey, NES has this too! <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />  Just that it's 7-bit mono PCM.  But you can do mixing at 44.1kHz and higher, I've done it with Squeedo's CPU-cycle-counting IRQ mode.  Once the timing issue is solved, it's easy.  You use unsigned samples, so you just add them together.  You'd need a 64kB lookup table to be able to get volume control though, because any 8*8 multiplication routine is far too slow.
<br />
<br />AFAIK, noone has ever released anything for NES that does digital mixing though.  Probably because no common mappers have CPU cycle counters.  People have released mixers for C64, and it's CPU speed is only 1Mhz.
<br />
<br />I'm really really interested in DSP stuff also.  It was pretty much my motivation for designing Squeedo.  Heh, the main reason I put a PIC on there was because I wanted a CPU cycle counter.. then later I just realized I could use a better PIC (the 18F one) as a real DSP chip.  It's pretty much like having an ~8Mhz 6502 on there, except it can also do 8*8 multiplies in one cycle.  There's nothing to stop the NES CPU from adding even more channels to the output (and with big samples, since it has easy access to a lot more ROM), just that I haven't written any code to do that part yet.  I've only got a hacked up version of MCK replacing Namco106, which really isn't too good for anything besides demos.
<br />
<br />I'm really wanting to play around with something more powerful eventually, like the Blackfin DSPs by Analogue Devices.  I'm talking 400Mhz chips that cost about $15.  And specialized for this kind of stuff.  How about one of those on an NES cart? <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Tue Aug 22, 2006 9:21 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It is impossible to code a DSP on the NES using $4011 for the simple reason that it isn't buffered (and the CPU is far too slow also). You can play a steamed song back trough this channel, but you cannot resample and mix audio samples to create your own DSP, because you NEED a buffer that the output read trough timed DMAs, else your programm can do nothing but calculate a sample, send it to output, caluclate next sample, etc... And this is impossible.
<br />
<br />The only way to do that on the NES would be to add a coprocessor inside a cartridge and send the output to the FC audio external channel, like Lagrange Point does (assuming you modified your console).
<br />
<br />I ask myself if it is possible to have a 64k mixing table on the GBA. On the NES this is of course unthinkable, but on the GBA 64kb may not be much more than what 256 bytes is to the NES, in comparaison with the size of a game (that is 128kb average for the NES, and 8Mb average for the GBA).
<br />
<br />I'd have trouble seeing myself writing 65535 ".db" one after eachother. The talbe should be generated by another software.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Tue Aug 22, 2006 9:56 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">I ask myself if it is possible to have a 64k mixing table on the GBA.</div>
<br />You won't need it. Multiplication on an ARM7TDMI is faster than ROM access.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Tue Aug 22, 2006 9:56 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">I'd have trouble seeing myself writing 65535 ".db" one after eachother.</div>
<br />
<br />Why is it that people think .db is the only way to include binary data?  Everyone seems to forget about .incbin which is the better option 90% of the time.
<br />
<br />
<br />Though yes... such a table probably would be generated by external software (but stored in a 64k binary file to be .incbined -- not in a huge .db filled txt file)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Tue Aug 22, 2006 10:02 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Disch wrote:</div><div class="quotecontent">such a table probably would be generated by external software (but stored in a 64k binary file to be .incbined -- not in a huge .db filled txt file)</div>
<br />Three reasons: <ul><li>It can be easier to make sure that your program is correct if you can see the output as a .s file than if you see it in a hex editor. </li><li>On some platforms, the most common assembler doesn't support .incbin at all. This was true of the GBA for a long time. </li><li>Some assemblers can take source code (but not .incbin) on standard input, allowing the output of your table-generating program to be piped directly into the assembler without any step of generating the table. </li></ul>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Tue Aug 22, 2006 10:12 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Don't confuse the impossible with the impractical.  <img src="./images/smilies/icon_wink.gif" alt=":wink:" title="Wink" /> 
<br />A DMA would make things easier, but not in a huge way.  An IRQ just adds the overhead of the usual state saving/restoring.  Which admittedly would be pretty significant.  However, on Squeedo it's as simple as:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">irq:<br />&nbsp;pha<br />&nbsp;lda $5000<br />&nbsp;sta $4011<br />&nbsp;pla<br />&nbsp;rti<br /></div>
<br />Though that's the coprocessor method (cheating).  It does works on any unmodified NES though.
<br />
<br />Resampling is super easy - just use a fixed-point number for the sample pointer.  Volume control is the multiplication.  And the mixing is simply adding.  All possible on NES, but to be practical with multiple channels (and have other stuff besides sound processing going on) it would have to be done at some obnoxiously low sample rate.  And to keep things simple with the mixer you can really only do 2, 4, 8 (16, etc.) channels.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Tue Aug 22, 2006 10:34 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />In a tight, cycle-timed mixing loop, how would you handle waveforms that loop or that end?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Tue Aug 22, 2006 10:52 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">In a tight, cycle-timed mixing loop, how would you handle waveforms that loop or that end?</div>
<br />
<br />Check if the sample pointer has passed the sample end (BCS/BCC on 6502).  When you want it to loop, subtract the loop-back amount from the sample pointer (always leaving the fixed-point part of the pointer untouched).  This leaves some extra cycles though on times when it doesn't loop or end.  Then read the pointed-to sample.
<br />
<br />On the Squeedo wavetable synth I currently just use 256 byte samples and 8-bit indexing, which makes an automatic loop.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Tue Aug 22, 2006 12:13 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hey, I wasn't meaning that I perfer use .db over .incbin.
<br />I'd say I'd also have trouble seeing myself pick an hex editor, and fill 65536 bytes by hand to set the volume multiplication values.
<br />A very simple C software in DOS could generate the file I guess.
<br />Memblers, what you said interest me more and more. You said you Squeedo mapper would do the DSP, write its output to $5000, and send an IRQ periodically to the NES's main CPU just to update the value ? What's the difference between this and just use the extra sound pin ? You're stuck with 7-bit output with your method, and that could eat a lot of CPU time to have a decent sampling frequency. (22100 Hz and above)
<br />As I understand, this would also create audible gaps during NMI where all IRQs are blocked off.
<br />You could trick to do something interesting without DMA, but definitely, DMA is necesary if you want a decent sound quality, including a decent sampling rate and no gaps in output.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Quietust</b> [ Tue Aug 22, 2006 12:46 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">What's the difference between this and just use the extra sound pin?</div>
<br />
<br />The difference is that the sound pin only exists on the Famicom, not the NES (at least not without significant modification).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Tue Aug 22, 2006 1:05 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Adding one resistor and one capacity in my system is not what I call a significant modification. Cart pin 18 is only connected to the expansion port, wich is useless anyway.
<br />
<br />Oh, and I forgot. Why would it be easier with a power of 2 number of channels ? Why wouldn't 6 channels or 12 channels not work fine ?
<br />The PS1 has 24 channels and the PS2 48, wich both aren't any power of 2 (but they are mixed in hardware anyway).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Tue Aug 22, 2006 2:16 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If you're generating 2^x channels, the volume factor for each channel is 1/2^x, which can be implemented as a simple shift. If you know the number of channels during development, you could just pre-scale all your samples and wavetables by 1/n in the ROM.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Wed Aug 23, 2006 5:26 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">If you know the number of channels during development, you could just pre-scale all your samples and wavetables by 1/n in the ROM.</div>
<br />Owww... I think you're not wrong but this leads to another problem : The more channels there is, the worse the quality will be since the same 8-bit output is maintened (on the GBA all PCM channels are 8-bit). For example, mixing 16 channel would do 4-bit samples, wich would REALLY suck.
<br />I think the software DSP/mixer should do all cacluations adding 8-bit samples, then obtain a 16-bit result and upload the high bytes only in the buffer. That would suck less, but still be mid-decent if there is really a lot of channels (like 16). Also I'm unsure if it change something if the number of channels is a power of 2 or not using that method.
<br />
<br />The other solution would be to come on with an APR, wich automatically scale the main volume in function of the wave, but that would suck as much I think because the volume will change unpredicably.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Fri Aug 25, 2006 1:38 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I've been thinking a long time on how to handle echo/reverb on a DSP engine.
<br />I think one buffer of a variable lenght in funciton of the echo lenght have to be mixed back with the main wave source, with a volume reduction wich is more often refered to the echo feedback parameter. Then send this data to both the output and the echo buffer. Then, since the output is written back to the echo buffer for a given amount of time (and that with the previous echo), the echoed wave will automatically repeat itself weaker and weaker, due to the feed back. Isn't that cool ?
<br />
<br />I've think this buffer could waste a lot of RAM for long echo times.
<br />But, I could just save 1/2 or even 1/4 of the output samples to the echo buffer, and then apply some linear interolation when mixing it back with the high-freq main output. This does both tricks in one hit : A lowpass filter on the echoed wave and save RAM. Isn't that so cool ?
<br />
<br />I think reverb is the same, but with more than one single echo buffer, and with various lenghts, so that the listener cannot hear the actual echo. It would need more parameters and more RAM, but it sounds probably better.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Aug 25, 2006 3:58 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">I've been thinking a long time on how to handle echo/reverb on a DSP engine.<br />I think one buffer of a variable lenght in funciton of the echo lenght have to be mixed back with the main wave source, with a volume reduction wich is more often refered to the echo feedback parameter. Then send this data to both the output and the echo buffer. Then, since the output is written back to the echo buffer for a given amount of time (and that with the previous echo), the echoed wave will automatically repeat itself weaker and weaker, due to the feed back. Isn't that cool ?</div><br />And if you set up the delay line to be less than 1/50 second, you can <a href="http://en.wikipedia.org/wiki/Karplus-Strong_string_synthesis" class="postlink">simulate a plucked string</a>.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I've think this buffer could waste a lot of RAM for long echo times.</div><br />It's considered normal to use RAM for the delay lines that make up an echo or reverb filter. Any machine with enough RAM to hold samples to mix is going to have enough RAM for the delay lines.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I think reverb is the same, but with more than one single echo buffer, and with various lenghts, so that the listener cannot hear the actual echo. It would need more parameters and more RAM, but it sounds probably better.</div>
<br />It takes about three delay lines of coprime lengths to make a convincing reverb. These lengths will be proportional to the room size.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>3</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>