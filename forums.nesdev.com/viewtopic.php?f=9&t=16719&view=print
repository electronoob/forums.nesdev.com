<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Newer &quot;universal&quot; RAM/ROM types - a collection thread</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Newer &quot;universal&quot; RAM/ROM types - a collection thread</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=9&amp;t=16719">http://forums.nesdev.com/viewtopic.php?f=9&amp;t=16719</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FrankenGraphics</b> [ Sat Nov 18, 2017 6:27 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Newer &quot;universal&quot; RAM/ROM types - a collection thread</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />So, i might aswell try to compile a comparative list of the newer RAM/ROM types that i think are getting more and more practical for NES(and other machines) homebrew related hardware. Maybe this is public knowledge, but i thought it might be a good time to collect this info. <br /><br />We all know flashROM. It's abundantly available, cheap, versatile. GTROM is using it, and it can sort of be considered a well-rounded universal memory, if a little slow. It's great for what it does. It has three caveats as far as i'm concerned. <br /><br />-Slow rewrites, + the fact that you can't read and write at the same time is a combo makes it somewhat inappropriate as expansion work RAM.<br />-Data cells overwritten will slowly lose their data retention capacity over use, with a capacity that's comparatively low-end to alternatives listed below. <br />-Also because of the slow rewrites, it is somewhat slow when you want to compile/assemble and test in quick cycles (for GTROM, now there's a workaround provided by NovaSquirrels' PowerPak support)<br /><br />Then we have<span style="font-size: 150%; line-height: normal"><strong> MRAM</strong></span> (magnetoresistive RAM). <br />This can also sort of be considered a universal memory. <br /><br />Pros:<br />+endless write/read/rewrite endurance<br />+(sometimes) block-based write protection<br />+Hi-speed writes, they seem to range 35-45ns <br />+Interface: are parallel interfaced versions (aswell as less useful serials). <br />Cons:<br />-Data retention typically lasts only 20 years after last power-off. This makes its use for PRG-ROM/CHR-ROM purposes debatable.<br />-Maybe a bit pricey; see below.<br /><br />Other notes:<br />*warning: power supply nominally 3.3V, with a typical tolerance up to 3.6. Needs a voltage converter, might add to cost depending on if it was needed anyway or not. <br /> <br />Price and availability: <br />I haven't found too many actual commercial producers, and the one i found most info on only had few suitable types in stock at mouser. The most interesting was this:<br /><a href="https://eu.mouser.com/search/refine.aspx?N=4292725693&amp;Keyword=MR256A08BCYS35R" class="postlink">256kB parallel</a>, at the price of 4,75EUR at a batch of 100. This seemed to be the most reasonable one. TSOP package. SOIC currently not in stock. <br /><br />There might be more manufacturers of similar memory chips, i wasn't very thorough<br /><br />There are 1, 4 and 16MB versions. 1MB would clock in at around 9-10EUR in a reasonable batch, and the 4 and 16MB versions are probably both more than any homebrewer would need + a lot too much in price. <br /><br />Quick Evaluation:<br />Great for Work RAM, Save RAM, <s>external graphics RAM</s> (seemingly a lot better than FlashROM), but debatable use in the role of PRG-ROM or CHR-ROM because a copy unused in ~20 years will start to decay. Speculatively, maybe future generations of MRAM will improve on this, who knows. <br />As for external graphics RAM, it is potentially OK, but look at lidnariq:s comment just below for potential problems. <br /><br />References:<br /><!-- m --><a class="postlink" href="https://eu.mouser.com/new/Everspin-Technologies/everspinmram/">https://eu.mouser.com/new/Everspin-Tech ... rspinmram/</a><!-- m --><br /><br /><br />And then there's <span style="font-size: 150%; line-height: normal"><strong>FeRAM / FRAM</strong></span> (reformatted from this <a href="https://forums.nesdev.com/viewtopic.php?f=2&amp;t=16716&amp;start=10" class="postlink">post</a>).<br />Pros:<br />+Speed: Close to conventional RAM speeds; overwrites in a single cycle. Suitable for quick access.<br />+Durability/data retention: While there's an upper limit (typically 10^12 times per byte ), it goes way many times beyond FlashROM and EEPROM. <br />+Interface: Comes as parallel, though serial seems to be cheaper in general. The parallel ones typically have a SRAM like interface built in. <br />+Price range: 1-5 dollars for reasonable sizes in the 64kB-512kB range<br />+Unpowered data retention: typically estimated to last over 200 years below +35C, 95 years at +55C, or 10 years at a temperature of +85C, which is way better than MROM in this regard<br /><br />Cons:<br />-Because reads wear the memory down just like writes (it's basically the same operation), this memory type is only suitable for storing ROM if any and all tight loops, like spinlocks, are copied from ROM and run from the systems' internal RAM instead. If used on a cartridge, emulators supporting it should be made to warn devs of code that is potentially harmful to this memory type. <br /><br />Other notes:<br />*price and availability: seemingly better than MRAM in both regards. A few major companies like fujitsu and texas instruments manufacture FeRAM/FRAM; aswell as some relatively smaller companies. <br />*warning: just like MRAM, power supply is nominally 3.3V, with a typical tolerance up to 3.6. Needs a voltage converter; might add to cost depending on if it was needed anyway or not. <br /><br />Quick evaluation:<br />Great for WorkRAM, Save RAM, external CHR-RAM/ROM. <br />Potentially OK for PRG-ROM, <em>provided the program copies and runs any and all high-rate code like tight loops and such in the NES' internal 2kB RAM. </em> <br /><br />(Has better data rentention than MRAM in a powered off state. Has better data retention than FlashROM when rewriting, but worse than MRAM in this regard, and worse than both when reading).<br /><br />References:<br /><!-- m --><a class="postlink" href="https://www.semiconductorstore.com/cart/pc/viewPrd.asp?idproduct=48940">https://www.semiconductorstore.com/cart ... duct=48940</a><!-- m --><br /><br /><br /><br />====<br /><br />While i started looking into this as a part of the &quot;<a href="https://forums.nesdev.com/viewtopic.php?f=2&amp;t=16716" class="postlink">procedural level generation on the NES</a>&quot; query, it seems to me the largest benefit with both MRAM and FeRAM from a design perspective is that they potentially provide means to make the outlook of simulation, map manipulation, large save files and persistent level generation more available to homebrews. Compared to battery backed standard RAM, i think they should prove somewhat competitive in price, although they'll need a 5v to 3.3v converter.<br /><br /><strong>Edit:</strong><br />Some last notes: <br />-PCB size: FlashROM, EEPROM, FRAM and MRAM all have in common that they need less PCB real estate than battery backed RAM <br /><br />-FRAM used as PRG-ROM - durability calculations:<br />Code run 60 times per second is rated by Fujitsu to last ~5 years and 3 months of<em> continous use</em>, so it's safe to say this is sound.<br />Code spinning at 7 cycles, as calculated by Tepples, would last ~83 days and 8 hours of <em>continous use</em>, which i wouldn't recommend even if i think it's rare of any single cartridge to see so much use. For example, a demo/arcade cartridge is going to be burnt out rather quickly. It's worse still with code spinning faster than that.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Sat Nov 18, 2017 7:57 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Newer &quot;universal&quot; RAM/ROM types - a collection thread</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">FrankenGraphics wrote:</div><div class="quotecontent">-Data cells overwritten will slowly lose their data retention capacity over use, with a capacity that's comparatively low-end to alternatives listed below. <br /></div>Er.<br /><br />Flash has a lower total number of <em>writes</em> than other options, but its program/erase speed already makes it inappropriate for repeated read/write cycles.<br /><br />But as far as raw retention without rewrites? It trivially blows everything else out of the water. Microchip's SST39SF040 Flash is rated for 100 years retention <em>after</em> a block has been erased 10k times.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">-Also because of the slow rewrites, it is somewhat slow when you want to compile/assemble and test in quick cycles (for GTROM, now there's a workaround provided by NovaSquirrels' PowerPak support)<br /></div>Flashing the SST39SF040 is quite quick; 8 seconds to erase and refill it is probably faster than the amount of time it takes remove the CF card from the PowerPak and put a new image on. One of the serial bootloaders (both Memblers's modified Game Genie and the Power Pak have serial port adapters) makes this more comparable, but otherwise the difference is going to be hard to notice.<br /><br />Older and/or bigger flash is slower, but not relevant here.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">[FeRAM] Great for WorkRAM, Save RAM, external CHR-RAM/ROM. <br /></div>Last bit is not entirely clear. Worst case: on every scanline, any scanline with fewer than 8 sprites sees a fetch from tile $FF. I don't know which row ... it's probably always the same one? That means that you're talking about at least ~7k reads of wear per second on that byte. That hits 10¹² reads in about 4.5 years of continuous operation; half that time if using 8x8 sprites, and prorate by the number of sprites fewer than 64. (Of course, it might be ok to just write off tile $FF from the sprite sheet if FeRAM errors remain confined to the overworn byte)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sat Nov 18, 2017 8:00 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Newer &quot;universal&quot; RAM/ROM types - a collection thread</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />MRAM is &quot;Maybe a bit pricey&quot;, but how does this compare to, say, the combination of flash and 32 KiB of non-battery-backed work RAM (such as a 62256 SRAM)? A game would load a campaign by copying it from flash to work RAM and save it by copying it back.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FrankenGraphics</b> [ Sat Nov 18, 2017 8:26 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Newer &quot;universal&quot; RAM/ROM types - a collection thread</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">lidnariq wrote:</div><div class="quotecontent">Flash has a lower total number of writes than other options, but its program/erase speed already makes it inappropriate for repeated read/write cycles.</div>Huh, I thought i wrote that, albeit in different places and probably way more unclear than you put it. But yeah, my (perhaps poor) judgment is based on what the different types of memory are capable of doing up to their rated number of writes (or in the case of FeRAM, any access), not how good they retain data past that point. <br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Flashing the SST39SF040 is quite quick</div>So the bottleneck isn't really FlashROM in itself, but any serial interface added into the mix.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Last bit is not entirely clear. Worst case: on every scanline, any scanline with fewer than 8 sprites sees a fetch from tile $FF.</div>Oh. So i wouldn't exactly label it &quot;great&quot; with this knowledge in hand. I'll revise the OP, thanks!<br /><br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">MRAM is &quot;Maybe a bit pricey&quot;, but how does this compare to, say, the combination of flash and 32 KiB of non-battery-backed work RAM (such as a 62256 SRAM)? </div>In terms of price, that should be a bit cheaper? But it's not as straightforward as a procedure. More code for the programmer to write, and you still need to copy and run your storage code from RAM. While storing, you might want to turn rendering off, because you're likely to save all of the campaign in one chunk. Other methods, especially with the help of MRAM, could provide continuous saving depending on cpu budget, or simply treat the campaign as the save.<br /><br />I think the price of MRAM is bound to drop a euro or two for sizes 256kB-1M, *if* wider commercial applications are found and/or more manufacturers start making them, though the market seems to be in bigger sizes of the STT-MRAM variety.<br /><br />&lt;digression&gt;FeRAM already has some solid applications in the form of one-time init factory settings where the write speed plays a role in effectivizing the assembly line, so you can get a better profit margin or retailer price on your product, and in passcard systems, which are somewhat more secure and above all just a little quicker to process a pass, which plays a role in public transportation.&lt;/digression&gt;

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>