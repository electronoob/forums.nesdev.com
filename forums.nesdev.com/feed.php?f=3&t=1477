<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=3&amp;t=1477" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2010-02-26T15:06:30-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=3&amp;t=1477</id>
<entry>
<author><name><![CDATA[jwdonal]]></name></author>
<updated>2010-02-26T15:06:30-07:00</updated>
<published>2010-02-26T15:06:30-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1477&amp;p=57209#p57209</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1477&amp;p=57209#p57209"/>
<title type="html"><![CDATA[quick question]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1477&amp;p=57209#p57209"><![CDATA[
This is the first time I've seen this demo.  It's very cool.<br /><br />Does it play the music using all APU channels (e.g. pulse, triangle, noise, and DMC)?  Or just the DMC?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3962">jwdonal</a> — Fri Feb 26, 2010 3:06 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Zepper]]></name></author>
<updated>2010-02-26T13:59:43-07:00</updated>
<published>2010-02-26T13:59:43-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1477&amp;p=57198#p57198</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1477&amp;p=57198#p57198"/>
<title type="html"><![CDATA[Down to the cycle]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1477&amp;p=57198#p57198"><![CDATA[
- It's a PAL demo, so I can't test it.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=39">Zepper</a> — Fri Feb 26, 2010 1:59 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2010-02-26T08:55:22-07:00</updated>
<published>2010-02-26T08:55:22-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1477&amp;p=57185#p57185</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1477&amp;p=57185#p57185"/>
<title type="html"><![CDATA[Down to the cycle]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1477&amp;p=57185#p57185"><![CDATA[
"Years Behind" is on <a href="http://nesdev.com/#NESPrograms" class="postlink">the front page</a>.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Fri Feb 26, 2010 8:55 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Zepper]]></name></author>
<updated>2010-02-26T08:31:02-07:00</updated>
<published>2010-02-26T08:31:02-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1477&amp;p=57181#p57181</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1477&amp;p=57181#p57181"/>
<title type="html"><![CDATA[Down to the cycle]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1477&amp;p=57181#p57181"><![CDATA[
- I'd like to test this demo. Where can I download it?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=39">Zepper</a> — Fri Feb 26, 2010 8:31 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2010-02-26T07:35:16-07:00</updated>
<published>2010-02-26T07:35:16-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1477&amp;p=57179#p57179</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1477&amp;p=57179#p57179"/>
<title type="html"><![CDATA[Down to the cycle]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1477&amp;p=57179#p57179"><![CDATA[
Here you are some pics so people can compare. I'm at this very time running the demo on my NES and comparing the result with emulators running on my laptop.<br /><br />First let's look at the real NES pics :<br /><img src="http://jonathan.microclub.ch/dummy/DSC00176.JPG" alt="Image" /><br /><img src="http://jonathan.microclub.ch/dummy/DSC00175.JPG" alt="Image" /><br /><img src="http://jonathan.microclub.ch/dummy/DSC00174.JPG" alt="Image" /><br /><br />And Nestopia &amp; Nintendulator screenshots :<br /><img src="http://jonathan.microclub.ch/dummy/yb2.png" alt="Image" /> <img src="http://jonathan.microclub.ch/dummy/yb1.png" alt="Image" /><br /><br />There is a few problems, not counting the DMC problem I mentionned eariler :<br />1) The top left corner has a very visible white dash on my NES.<br />Nestopia have a much shorter white dash, and Nintendulator is even worse, having a short red dash.<br /><br />2) The bottom left corner have only an occasional very short dark-blue-ish dash, which seems to be emulated pretty much correctly by Nintendulator and Nestopia - but it is much more noticeable on emulators than hardware (it might be due to incorrect color of the dash but I'm not sure)<br /><br />3) The upper right corner have a black dash jittering into the last line of the big white line. Nintendulator &amp; Nestopia seems to emulate this correctly, but it seems the dash are bigger - but I suspect my TV to hide the rightmost pixels.<br /><br />4) The lower right corner has a lot of jittering, a really long red dash that goes increasing in luminosity, sometimes becomes white, below the text, and a white dash before the white line. Emulators seems pretty close to the trurth, but it doesn't jitter the same way, and the red dash don't become white at the right side.[/img]<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Fri Feb 26, 2010 7:35 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2010-02-25T00:53:48-07:00</updated>
<published>2010-02-25T00:53:48-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1477&amp;p=57084#p57084</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1477&amp;p=57084#p57084"/>
<title type="html"><![CDATA[Down to the cycle]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1477&amp;p=57084#p57084"><![CDATA[
I doubt any emulators properly handle the DMC wait-state insertion, especially that it's 3 or 4 cycles depending on what kind of cycle the CPU is in.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Thu Feb 25, 2010 12:53 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2010-02-24T13:13:15-07:00</updated>
<published>2010-02-24T13:13:15-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1477&amp;p=57056#p57056</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1477&amp;p=57056#p57056"/>
<title type="html"><![CDATA[Down to the cycle]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1477&amp;p=57056#p57056"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />But can emulator authors living in NTSC territories be forgiven for getting behavior wrong if the only ROMs that exercise this behavior are PAL-only?<br /></div><br />I have the same problem the other way arround - I can code PAL and NTSC compatible NES programs, but can only test them in PAL mode.<br /><br />What tepples said would fix the most noticeable bug of Nintendulator &amp; Nestopia, but even when not playing samples it seems it doesn't emulate it perfectly. I've taken pics, but unfortunately it seems the server I use is down or something for now so I'll upload them whenever I get the occasion.<br /><br />In summary, it seems both Nestopia and Nintendulator are innacurate at emulating the glitches arround the scrolling text.<br /><br />EDIT : Probably it's that "$3f00" adressing which hasn't been stress tested enough. Maybe there is a list of a few more things that should be stress tested in order to improve the accuracy of emulators.<br />- $3f00-$3fff adressing during rendering<br />- Sprite overflow flag<br />- Effect of $2003 register on sprite DMA<br />- $2003, $2004 and $2007 acess during rendering<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Wed Feb 24, 2010 1:13 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2010-02-24T13:02:03-07:00</updated>
<published>2010-02-24T13:02:03-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1477&amp;p=57055#p57055</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1477&amp;p=57055#p57055"/>
<title type="html"><![CDATA[Down to the cycle]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1477&amp;p=57055#p57055"><![CDATA[
The period tables for NTSC are confirmed, and the ones for PAL were at least <a href="http://nesdev.com/bbs/viewtopic.php?t=1468" class="postlink">tested</a> a while back.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Wed Feb 24, 2010 1:02 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2010-02-24T12:35:06-07:00</updated>
<published>2010-02-24T12:35:06-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1477&amp;p=57054#p57054</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1477&amp;p=57054#p57054"/>
<title type="html"><![CDATA[Down to the cycle]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1477&amp;p=57054#p57054"><![CDATA[
But can emulator authors living in NTSC territories be forgiven for getting behavior wrong if the only ROMs that exercise this behavior are PAL-only? I'd bet some of the difference has to do with the RP2A07's period lookup tables, which have been modified for a divide-by-16 environment rather than the expected divide-by-15 environment. Are <a href="http://wiki.nesdev.com/w/index.php/APU_DMC" class="postlink">the period lookup tables on the wiki</a> confirmed correct, or are they guesses?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Wed Feb 24, 2010 12:35 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2010-02-24T12:35:41-07:00</updated>
<published>2010-02-24T12:32:23-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1477&amp;p=57053#p57053</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1477&amp;p=57053#p57053"/>
<title type="html"><![CDATA[Down to the cycle]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1477&amp;p=57053#p57053"><![CDATA[
<div class="quotetitle">Bananmos wrote:</div><div class="quotecontent"><br />The first one has to do which syncing correctly to update the scroll value. Timing the demo so that it would keep in sync even when dpcm was stealing cycles wasn't easy when I could use just one sprite scroll hit and lots of timed code to keep in sync. So there are a few tunes where you can occasionally see the scrolltext glitch. And correctly, boomfunk shows the biggest problems. I don't think it's that noticable in the other tunes though. I suppose I could have given it enough time, but getting it perfect for every combination of dpcm pitches and random sprite hits proved harder than expected.<br /></div><br />  <br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />The page "Program Compatibility" on the new wiki should describe the defects in any widely distributed homebrew NES ROM image (or Nesticle ROM image). Thank you for the info on Years Behind, which I have summarized on that page.<br /></div><br />I'm sorry to dig this thread WAY up, but I just figured something by testing the Years Behind demo on my powerpak.<br />The demo doesn't EVER get any glitches on my NES, not even in boomjunk. The scrollbar NEVER shakes like it does in Nestopia and Nintendulator currently, proving the so called high accuracy of those is overrated. To my surprise it's VirtuaNES, a medium accurate emulator, which emulates this demo the best.<br /><br />The only "glitches" I see is palette updates on the topleft and bottom right of the scrolltext. Both Nestopia and Nintendulator show glitches to all 4 corners - which is wrong.<br /><br />As such the info on the wiki by stating Years Behind as an "almost compatible" demo is wrong - it's fully compatible - and the person who wrote that likely did it based on Nintendulator's result.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Wed Feb 24, 2010 12:32 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[kevtris]]></name></author>
<updated>2006-05-11T20:47:35-07:00</updated>
<published>2006-05-11T20:47:35-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1477&amp;p=12788#p12788</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1477&amp;p=12788#p12788"/>
<title type="html"><![CDATA[Down to the cycle]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1477&amp;p=12788#p12788"><![CDATA[
<div class="quotetitle">byuu wrote:</div><div class="quotecontent"><br />It probably needs to test here so that the opcode to execute can be overridden if the work cycle IRQ test deems it necessary. I imagine the CPU executes interrupts just like they were special opcodes.<br /></div><br /><br />This is exactly what it does.  It forces the 00h opcode (BRK) into the<br />opcode latch.  The interrupt logic also controls the break flag... and <br />because of this, it's more a status bit rather than a flag.  It is not possible <br />to set or clear this flag in software.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=230">kevtris</a> — Thu May 11, 2006 8:47 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[byuu]]></name></author>
<updated>2006-05-11T14:26:35-07:00</updated>
<published>2006-05-11T14:26:35-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1477&amp;p=12775#p12775</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1477&amp;p=12775#p12775"/>
<title type="html"><![CDATA[Down to the cycle]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1477&amp;p=12775#p12775"><![CDATA[
<div class="quotetitle">blargg wrote:</div><div class="quotecontent"><br />The model I have in my mind is that the 6502 latches the IRQ/NMI status at the beginning of the last clock of each instruction. This means that it effectively looks at the IRQ/NMI input just before that time, i.e. what its status was on the next-to-last clock. This would account for most of the latency. I'm thinking I need to be more precise about the pipelining.<br /></div><br /><br />Right, due to the two-stage pipeline, the bus cycle is actually at the start of the next opcode when NMI/IRQ is tested, but the work cycle that sets the flag for it is one cycle behind. Hence, there's no need to simulate the pipeline, but you must check for NMI/IRQ triggered at the <em>start</em> of the last cycle of each opcode. You might also run into the same issues as the SNES, where a game can call SEI, and since the last work cycle is the one to set the I flag, the IRQ test will still use the old value of I since it tests prior to setting it.<br /><br />It probably needs to test here so that the opcode to execute can be overridden if the work cycle IRQ test deems it necessary. I imagine the CPU executes interrupts just like they were special opcodes.<br /><br />The SNES has some interesting quirks where reading the IRQ status flag while the pin is transitioning for 4 clock cycles will result in the IRQ status flag remaining set for the next read as well. Whereas if you read it &gt;4 clock cycles after it is set, the status bit goes low and does not read as high twice. And there's more quirks, too. But I'd have to look at my documents to say what they were.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=375">byuu</a> — Thu May 11, 2006 2:26 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2006-05-11T11:55:55-07:00</updated>
<published>2006-05-11T11:55:55-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1477&amp;p=12758#p12758</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1477&amp;p=12758#p12758"/>
<title type="html"><![CDATA[Down to the cycle]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1477&amp;p=12758#p12758"><![CDATA[
I investigated the DMC wait-state behavior more by generating a tone manually and adjusting the loop delay until it synchronized with a square wave. This agrees with previous measurements of 4 clocks per DMC byte read. But when I increase the loop delay by one clock, it stays in sync. I'm guessing that in some cases, only 3 wait-states are inserted, somehow related to the instruction being executed. I tried tepples' suggestion of using various instructions (including BRK) but that didn't seem to affect it. I don't even know exactly when the DMC read is occuring each loop iteration, making it more difficult to determine what's happening.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Thu May 11, 2006 11:55 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2006-05-10T19:25:13-07:00</updated>
<published>2006-05-10T19:25:13-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1477&amp;p=12732#p12732</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1477&amp;p=12732#p12732"/>
<title type="html"><![CDATA[Down to the cycle]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1477&amp;p=12732#p12732"><![CDATA[
<div class="quotetitle">blargg wrote:</div><div class="quotecontent"><br />When I was recently testing the PAL DMC rates, I ran into lots of weirdness when trying to do it via a parallel CPU loop. It seemed that the number of clocks used by DMA averaged to less than 4 (and I'm assuming the same will occur on NTSC). I need to look further into this.<br /></div><br />Does it happen more often when you use write instructions (e.g. STA $FE)? Does it happen more often when you use read-write-write instructions (e.g. ROL $FE)? Does it happen more often when you use a stream of BRK $00 (the only instruction to write-write-write) that heads straight to RTI? If so, I think I know what's happening.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Wed May 10, 2006 7:25 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2006-05-10T19:03:27-07:00</updated>
<published>2006-05-10T19:03:27-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1477&amp;p=12731#p12731</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1477&amp;p=12731#p12731"/>
<title type="html"><![CDATA[Down to the cycle]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1477&amp;p=12731#p12731"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Okay... so there are some quirks even when emulating properly. I get what I *think* is the desired result when I only steal 3 CPU cycles for each DMC fetch instead of stealing 4.<br /><br />Could it be that only 3 cycles are stolen on PAL? That doesn't make a lot of sense... but I can't seem to figure out anything else that could be the problem here.<br /></div><br /><br />When I was recently testing the PAL DMC rates, I ran into lots of weirdness when trying to do it via a parallel CPU loop. It seemed that the number of clocks used by DMA averaged to less than 4 (and I'm assuming the same will occur on NTSC). I need to look further into this.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />The IRQ flag can be read as set as early as 29830 cycles in, however the IRQ does not occur until at least 29833 cycles in, implying a latency of 2 or 3 cycles.<br /></div><br /><br />The model I have in my mind is that the 6502 latches the IRQ/NMI status at the beginning of the last clock of each instruction. This means that it effectively looks at the IRQ/NMI input just before that time, i.e. what its status was on the next-to-last clock. This would account for most of the latency. I'm thinking I need to be more precise about the pipelining.<br /><br />Remember, you can completely ignore my theories and simply examine the tests to determine the timing. They test the edge cases for reading $4015 and the IRQ occurring.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Wed May 10, 2006 7:03 pm</p><hr />
]]></content>
</entry>
</feed>