<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Questions about scrolling and sprites on (S)NES</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Questions about scrolling and sprites on (S)NES</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=5770">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=5770</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>3</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>MottZilla</b> [ Sat Nov 28, 2009 1:55 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I can't think of anything else to avoid other than the usual don't be wasteful. Every bit of code you do will take time and when that code is executed in the game loop you need to be as quick as possible while still getting all the tasks done. Outside of the game loop you don't need to worry as much. But you should really think about how many operations are involved in whatever C code you write as with C it's very easy to write a small amount of code that results in a lot of operations taking alot of cpu time.
<br />
<br />But I think that a game, even an action game, is possible to program in C for SNES and get good results without slowdown if you are efficient. But that's just my opinion as I have never personally written a SNES game in C but I'd bet others have.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Sat Nov 28, 2009 2:10 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Well I think it is possible to merge C and assembly ? If so it should be possible to write speed dependant parts (VRAM updates, controller reading, communication with SPC, sprite mazing, ...) in assembly and the game engine in C.
<br />
<br />Oh and be sure to use shifts instead of multiplications when you can.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>AndiNo</b> [ Sat Nov 28, 2009 5:16 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">Well I think it is possible to merge C and assembly ?</div>Yes, I think it is, but as I have absolutely no knowledge about assembler (and honestly I have no intention to learn it) that is not an option for me. Although I might find a person who could do that for me, I currently want to try to code this game myself.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>MottZilla</b> [ Sat Nov 28, 2009 11:16 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I think you can manage with just C. Just be efficient and if you need to you can limit the game loop to 30fps for effectively a speed boost.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sat Nov 28, 2009 11:37 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It might be possible to do it all in C, but it worries me a bit that he probably doesn't have much implemented yet (just the meta-sprite system?) and it already lags. He might have to rethink things a bit.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>AndiNo</b> [ Sun Nov 29, 2009 4:27 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />No, fortunately I have already implemented more <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" />
<br />I have the metasprites (which I still need to test) and tile-based collision detection already works completely. I implemented box-box collision for objects (which isn't used currently as I tested without such objects). So you're half right, I have more than the sprites, but not everything I want. So I'm just going to see what I can achieve... I guess I can cut down some parts.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>MottZilla</b> [ Sun Nov 29, 2009 11:44 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />That or cut the frame rate as suggested. That would give you an entire frame rendering time worth of extra cpu cycles to calculate 1 game frame. While I would avoid it if possible if it turns out to be your only good option short of drastically reducing what you can do in game action you might want to take it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>AndiNo</b> [ Thu Dec 03, 2009 2:49 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />My game is coming along nicely and even runs smooth again. There is still some room for optimization left, so I should have no problems in the future. We'll see <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />
<br />
<br />I read that the (SNES-)sprite size can be adjusted, up to 64x64 pixels. Does this reduce the maximum possible amount of sprites on the screen or does the enlargement come without a "cost"? And if so, what would be the reason for NOT using the bigger size (except you only have small graphics)?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Thu Dec 03, 2009 3:01 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />As far as I can remember you can have only 2 sizes at once on the screen among 8x8, 16x16, 32x32 and 64x64.
<br />Larger sizes are decomposed into 8x8 internally.
<br />The advantage of dealing with larger sizes is that you can place much more sprites on screen, and 2 more per scanline (the PPU can tolerate 32 sprites, and 34 decomposed 8x8 sprites I guess).
<br />
<br />The reason NOT to use the larger size is that if you deal with smaller objects you'll have to waste VRAM for the blank area arround them.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>AndiNo</b> [ Thu Dec 03, 2009 3:11 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">The advantage of dealing with larger sizes is that you can place much more sprites on screen</div>Sorry for asking again, but does that mean it is possible to have 128 64x64 sprites on the screen? That would be great <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>MottZilla</b> [ Thu Dec 03, 2009 4:33 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You can choose two sprite sizes but not exactly. You actually choose a set of sprite sizes, one smaller, one bigger. Each sprite you put on the screen can be Small or Big. The default setting or mode 0 is 8x8 Small, 16x16 Big.
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">2101&nbsp; wb++?- OBSEL - Object Size and Chr Address<br />&nbsp; &nbsp; &nbsp; &nbsp; sssnnbbb<br /><br />&nbsp; &nbsp; &nbsp; &nbsp; sss&nbsp; = Object size:<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 000 =&nbsp; 8x8&nbsp; and 16x16 sprites<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 001 =&nbsp; 8x8&nbsp; and 32x32 sprites<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 010 =&nbsp; 8x8&nbsp; and 64x64 sprites<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 011 = 16x16 and 32x32 sprites<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 100 = 16x16 and 64x64 sprites<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 101 = 32x32 and 64x64 sprites<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 110 = 16x32 and 32x64 sprites &#40;'undocumented'&#41;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 111 = 16x32 and 32x32 sprites &#40;'undocumented'&#41;<br /><br />&nbsp; &nbsp; &nbsp; &nbsp; nn&nbsp; &nbsp;= Name Select<br />&nbsp; &nbsp; &nbsp; &nbsp; bbb&nbsp; = Name Base Select &#40;Addr&gt;&gt;14&#41;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; See the section &quot;SPRITES&quot; below for details.<br /></div>
<br />
<br />The disadvantage using larger sprites like 64x64 is that you only have 512 8x8 tiles for Objects. Also DMA is limited in the amount of tiles you can manage to update from frame to frame. So yes it supports really big sprites but they aren't practical for most uses. 
<br />
<br />The SNES could actually fill the entire screen with sprites if you wanted to do that. The real limit is the amount of different tiles you have for sprites. It's up to the developer to decide what is best for their game at any particular scene. 
<br />
<br />Personally I see 8x8 and 16x16 more useful but I can see where you might decide to go a bit bigger and have the 32x32 but 64x64 seems pretty wasteful for most types of games. If you want non-player objects in games with multiple enemies on screen and to have decent animation it would be hard to achieve that on large characters.
<br />
<br />I can't stress that enough that you have a limit to how many Sprite tiles you have available. Unlike NES you can't just bankswitch a small portion of CHR-ROM and have new animation tiles at the ready. 512 8x8 tiles at 4bpp works out to 16Kbytes where as with Backgrounds you can have up to 1024 8x8 tiles giving you 32kbytes. So you are quite a big better off with lots of background tiles but rather limited with Sprites.
<br />
<br />The good thing is your Player which is what the User of the game will be looking at most of the time is deterministic in terms of what tiles need to be available at any one time. This means if you DMA sprite tiles for your player every frame you can have tons of animation for the player with little cost to Sprite Tiles in VRAM. This also helps save more VRAM for enemy tiles which are non-deterministic since enemys will generally appear on the screen many times and in different states of animation so all of their Tiles must be loaded at once. 
<br />
<br />I hope this all helps. I've been working on something for the SNES lately and been investigating things like this.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>GradualGames</b> [ Sun Dec 13, 2009 4:53 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">AndiNo wrote:</div><div class="quotecontent"><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">Well I think it is possible to merge C and assembly ?</div>Yes, I think it is, but as I have absolutely no knowledge about assembler (and honestly I have no intention to learn it) that is not an option for me. Although I might find a person who could do that for me, I currently want to try to code this game myself.</div>
<br />
<br />If you already know C, it isn't a very big step to learn assembly I don't think. Especially if you're already familiar with bitwise operations such as &amp;, |,  &lt;&lt;, &gt;&gt; etc.  If you know bitwise logic stuff, and you're familiar with hex and binary..assembly would be a cinch to learn.  Plus it'll give you added power as a programmer. At work I use C++, and every so often it is very instructive to check out the disassembly of my code to see what is actually going on in the compiled code. Without that knowledge, that sort of thing is all guesswork.
<br />
<br />*edit* I really should add that learning 2's complement math on top of hex, binary and bitwise operations is another skill that would help for assembly. Those are the only things you really need to *LEARN,* beyond that it is almost as though assembly is programming without parentheses, as it were. So instead of:
<br />
<br />x = ( a + b ) your code would look like (in pseudo code)
<br />
<br />result = a  
<br />result += b 
<br />x = result   
<br />
<br />but in assembly language it looks only slightly more cryptic:
<br />lda a
<br />adc b
<br />sta x
<br />
<br />(this is ignoring the importance of the carry bit but you'd learn that too if you went down this road)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>LocalH</b> [ Mon Dec 14, 2009 2:23 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">And BTW the C64 has a way to actually disable sprites, and you usually have to play tricks with it to do OAM cycling to be able to show more than 8 sprites on the screen.</div>
<br />Not really, all you have to do is rewrite the Y-pos of the sprite. New Y-pos takes effect after sprite display, other sprite parameters take effect when written.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>AndiNo</b> [ Mon Dec 14, 2009 2:47 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Gradualore wrote:</div><div class="quotecontent">2's complement math on top of hex, binary and bitwise operations</div>In fact I know a bit of all of them as I am a computer science student (if that's the right word for it). But anyway, ASM seems so awkward to me <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /> I guess I won't touch it if I don't have to. Your points seem to be right though...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>GradualGames</b> [ Tue Dec 15, 2009 7:41 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I forgot to mention the most important reason to learn assembly language. It's fun. Very fun, in fact.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>3</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>