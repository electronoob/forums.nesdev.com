<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?mode=news" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2019-09-11T11:09:14-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?mode=news</id>
<entry>
<author><name><![CDATA[tschak909]]></name></author>
<updated>2019-09-11T11:09:14-07:00</updated>
<published>2019-09-11T11:09:14-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=19286&amp;p=242434#p242434</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=19286&amp;p=242434#p242434"/>
<title type="html"><![CDATA[PLATOTERM for NES - It just needs a bit of hw engineering!]]></title>

<category term="NESdev" scheme="http://forums.nesdev.com/viewforum.php?f=2" label="NESdev"/>
<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=19286&amp;p=242434#p242434"><![CDATA[
Hey guys,<br /><br />A few months ago, I had asked about ways to do a bitmap mode on the NES, and the responses were quite good. <br /><br />As it happens, I ran across the 8-bit-workshop's NES environment he had just added, and one of the examples was for a mono-bitmap. <br /><br />After talking with sehugg, I managed to get the neslib2 fork he did, and cobble together enough screen logic for PLATOTERM to work (I had to replace the line draw routine with a proper bresenham that can take care of a few edge cases), and so...here it is!<br /><br /><img src="https://i.imgur.com/FNDRPMU.gif" alt="Image" /><br /><br />Code is here:<br /><!-- m --><a class="postlink" href="http://github.com/tschak909/platotermnes">http://github.com/tschak909/platotermnes</a><!-- m --><br /><br />Rom is attached.<br /><br />This begs the question, how to implement I/O?<br /><br />It needs at the very least, a keyboard, and a way to shift ascii bytes coming to and from the host, either over serial link or via ethernet.<br /><br />I was thinking something like a Raspberry Pi Zero embedded on the cartridge?<br /><br />What do you think? (also yeah, need some help making the rendering faster, naively only one vram change is happening per frame to avoid overruns)<br /><br />-Thom<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=8569">tschak909</a> — Wed Sep 11, 2019 11:09 am — Replies 2 — Views 99</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[gravelstudios]]></name></author>
<updated>2019-09-11T05:19:32-07:00</updated>
<published>2019-09-11T05:19:32-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=19285&amp;p=242430#p242430</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=19285&amp;p=242430#p242430"/>
<title type="html"><![CDATA[APU Pulse Sweep Behavior Question]]></title>

<category term="NESdev" scheme="http://forums.nesdev.com/viewforum.php?f=2" label="NESdev"/>
<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=19285&amp;p=242430#p242430"><![CDATA[
I'm using the sweep for several sound effects. Sometimes, it sounds like the sweep is skipping the first pitch and going directly to the second pitch. It seems to be happening right after playing a different sound effect. I thought maybe the data from the previous sound was affecting the next one, so I tried loading all zeros into the pulse channel before loading the next set of data, but that didn't seem to help. Then I thought that maybe I need to reset the frame counter, so I tried loading $FF into $4017 on every frame, and also right before loading the data into the pulse registers and neither of those worked. I thought maybe the order mattered, so I tried loading the data in reverse (starting at $4003 and going backward to $4000), but I got the same thing. I'm really at a loss. I'm not even sure if I'm doing a good job explaining what my problem is. it's like, if I use the sweep to make an arpeggio sort of sound, sometimes it starts on the second pitch rather than the first one. Does anybody know what I'm talking about?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=8320">gravelstudios</a> — Wed Sep 11, 2019 5:19 am — Replies 5 — Views 137</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[MLX]]></name></author>
<updated>2019-09-11T02:09:15-07:00</updated>
<published>2019-09-11T02:09:15-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=19284&amp;p=242423#p242423</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=19284&amp;p=242423#p242423"/>
<title type="html"><![CDATA[Weird pirate MMC3 PCB]]></title>

<category term="NES Hardware and Flash Equipment" scheme="http://forums.nesdev.com/viewforum.php?f=9" label="NES Hardware and Flash Equipment"/>
<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=19284&amp;p=242423#p242423"><![CDATA[
While checking the original releases of the infamous <em>Super Bros.</em> hacks, I remembered that my <a href="https://i.imgur.com/yYpvXUX.jpg" class="postlink">two copies</a> of the Jackie Chan one (<em>Super Bros. 10</em>) had different PCBs. The small one revealed to be M196, like most of those hacks. However the large one, which at first was a candidate for an original print with an obscure mapper, showed to be just standard MMC3.<br /><br />Was this meant to be a 2-in-1 MMC3 multicart with two 2x128kB games? Clues on the reason for the 4kB UVEPROM?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=8265">MLX</a> — Wed Sep 11, 2019 2:09 am — Replies 2 — Views 153</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Nugem]]></name></author>
<updated>2019-09-10T11:04:51-07:00</updated>
<published>2019-09-10T11:04:51-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=19282&amp;p=242400#p242400</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=19282&amp;p=242400#p242400"/>
<title type="html"><![CDATA[Metroid - Mother]]></title>

<category term="Homebrew Projects" scheme="http://forums.nesdev.com/viewforum.php?f=22" label="Homebrew Projects"/>
<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=19282&amp;p=242400#p242400"><![CDATA[
I apologize if while looking for hours on the net for the answer it has already been answered, please excuse me.<br /><br />I am awaiting a few hundred dollars in eproms,  programmers,  shells, solder irons,  solder removers, etc<br /><br />My goal is to flash metroid mother on a cart to play.<br /><br />Am I understanding correctly I can use the SNROM? <br /><br />Thanks very much<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=15396">Nugem</a> — Tue Sep 10, 2019 11:04 am — Replies 0 — Views 134</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[wonder]]></name></author>
<updated>2019-09-10T01:15:06-07:00</updated>
<published>2019-09-10T01:15:06-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=19281&amp;p=242393#p242393</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=19281&amp;p=242393#p242393"/>
<title type="html"><![CDATA[Fast 2D Array access in C (with inline Assembly?)]]></title>

<category term="NESdev" scheme="http://forums.nesdev.com/viewforum.php?f=2" label="NESdev"/>
<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=19281&amp;p=242393#p242393"><![CDATA[
Hello again!<br /><br />Let say I want to represent a 32x32 tiled map for a game with destructible tiles (read-write access).<br /><br />1) Is the best way a one-dimensional char array of size 1024 or should I declare as a 2D matrix?<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">// 1D Array:<br />// + Faster access with i = ((y * len_x) + x)<br />// - 16bit index<br />char map&#91;1024&#93; = {...};<br /><br />// 2D Matrix:<br />// + 8 bit indexes<br />// - Slower access (pointer-to-pointer?)<br />char map&#91;32&#93;&#91;32&#93; = {<br />    {...},<br />    {...},<br />       .<br />       .<br />       .<br />};<br /></div><br /><br />2) Given the best possible solution, what's the leanest and fastest way to access (read) it?<br />I'm looking for either C or inline assembly code.<br /><br />So far, the [32][32] solution seem to be the faster one, with pre-calculated indexes:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">x = ...; y = ...;<br />v = map&#91;y&#93;&#91;x&#93;;<br /></div><br /><br />How can I improve this? <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br />Many thanks in advance.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=15349">wonder</a> — Tue Sep 10, 2019 1:15 am — Replies 1 — Views 114</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[krzysiobal]]></name></author>
<updated>2019-09-08T13:26:46-07:00</updated>
<published>2019-09-08T13:26:46-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=19280&amp;p=242363#p242363</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=19280&amp;p=242363#p242363"/>
<title type="html"><![CDATA[Nintendo World Championship 1990 - reverse engineering]]></title>

<category term="NES Hardware and Flash Equipment" scheme="http://forums.nesdev.com/viewforum.php?f=9" label="NES Hardware and Flash Equipment"/>
<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=19280&amp;p=242363#p242363"><![CDATA[
One guy asked me to analyze this cartridge. Fortunatelly there were photos of PCB on the web so I give a chance.<br />There is one think I cannot agree with the <a href="http://wiki.nesdev.com/w/index.php/INES_Mapper_105" class="postlink">Mapper 105</a> description:<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />On powerup and reset, the first 32k of PRG (from the first PRG chip) is selected at $8000 *no matter what*.<br /> PRG cannot be swapped until the mapper has been &quot;initialized&quot; by setting the 'I' bit to 0, then to '1'.  This<br /> toggling will &quot;unlock&quot; PRG swapping on the mapper.<br /></div><br />Because the MMC1-PRG-A14 is directly connected to both EPROMS, if MMC1 is switched into 16K+16K mode and MMC1 PRG's bank is modified, $8000 might stop pointing to first 32k even without rising edge on `I` bit.<br /><br /><a href="https://obrazki.elektroda.pl/5623016200_1567973834.jpg" class="postlink"><img src="https://obrazki.elektroda.pl/5623016200_1567973834_thumb.jpg" alt="Image" /></a> <a href="https://obrazki.elektroda.pl/9220582400_1567973838.jpg" class="postlink"><img src="https://obrazki.elektroda.pl/9220582400_1567973838_thumb.jpg" alt="Image" /></a> <a href="https://obrazki.elektroda.pl/4318880500_1567973839.jpg" class="postlink"><img src="https://obrazki.elektroda.pl/4318880500_1567973839_thumb.jpg" alt="Image" /></a>  <a href="https://obrazki.elektroda.pl/1761631800_1567973845.jpg" class="postlink"><img src="https://obrazki.elektroda.pl/1761631800_1567973845_thumb.jpg" alt="Image" /></a> <a href="https://obrazki.elektroda.pl/7854050800_1567973847.png" class="postlink"><img src="https://obrazki.elektroda.pl/7854050800_1567973847_thumb.jpg" alt="Image" /></a><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4898">krzysiobal</a> — Sun Sep 08, 2019 1:26 pm — Replies 6 — Views 307</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[byuu]]></name></author>
<updated>2019-09-06T05:50:01-07:00</updated>
<published>2019-09-06T05:50:01-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=19279&amp;p=242321#p242321</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=19279&amp;p=242321#p242321"/>
<title type="html"><![CDATA[SNES gamepad rumble/analog support proposal]]></title>

<category term="SNESdev" scheme="http://forums.nesdev.com/viewforum.php?f=12" label="SNESdev"/>
<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=19279&amp;p=242321#p242321"><![CDATA[
I want to offer an extension for ROM hacks and homebrew to be able to add rumble support to SNES gamepads.<br /><br />Obviously, this'll be optional, but designed in a way it could work on real hardware if an adapter for a PC gamepad were made.<br /><br />As for why? Well, why not?<br /><br />My thought is to add it to the IObit of the gamepads:<br /><br />Whenever the latch is cleared (1-&gt;0 transition), the IObit value, eg $4201.(d7 player 1, d6 player 2) goes into an 8-bit shift register (shift left: x=x&lt;&lt;1|iobit). So basically: set the latch, set IObit, clear the latch to clock it. Repeat eight times. Whenever the shift register == 'F' (for Force Feedback), 0x46, 0b0010'0110, the controller will begin to rumble. Stopping the rumble will be just writing another bit into the register. Whenever the shift register != 'F', rumble stops. I don't know if we should have an automatic timeout (and if so after how long?) or if that just adds to the complexity.<br /><br />The choice of 'F' is so that no matter what is written in the next six writes, it won't start another rumble:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">01000110<br />1000110x<br />000110xx<br />00110xxx<br />0110xxxx<br />110xxxxx<br />10xxxxxx<br />0xxxxxxx</div><br /><br />And when you write 'F' again, it won't activate until the eighth and final write:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">01000110<br />10001100<br />00011001<br />00110010<br />01100100<br />11001000<br />10010001<br />00100011</div><br /><br />Another option we could potentially do while we're at it would be to support analog read-out.<br /><br />While reading the joypad 16 times to get the controller state from data1, analog axis data would be output to data2. The first 8-bits would be the X-axis, the next 8-bits the Y-axis, in little-endian ordering, so in this way, the results from auto-joypad polling would place X into $4219 (player 1) or $421b (player 2), and Y into $421d (player 1) or $421f (player 2.)<br /><br />Since this bit reads as 0 with stock controllers, a value of 0x00 will be considered &quot;no analog support present.&quot; 0x80 will represent a centered axis, 0x01 will represent up/left, 0xff will represent down/right.<br /><br />If we're worried about this interfering with existing games, we could require a one-time write of 'A' (for Analog) to the shift-register to unlock the support. But I feel that'd be annoying to have to hook the reset vector of games to enable it in hacks.<br /><br />Obviously, this isn't compatible with multitaps, so no five-player Super Rumbleman hack.<br /><br />Is this agreeable? Any feedback (no pun intended)? I just posted v109, so we should have at least a month to work on this with bsnes WIPs and make changes if needed.<br /><br />...<br /><br />In the past, Zsnexbox did this via a form of cheat codes. It'd have a list of memory address watchpoints, and whenever those RAM addresses were written, the gamepad would rumble. The upside of it was that the author was able to add support for dozens of games very rapidly.<br /><br />But the downsides were that it couldn't ever work on real hardware, and there were tons of false positives (games clearing RAM at reset, rumble during other parts of the game like end-of-level scoring when it deducts your health to add to your score, etc etc.)<br /><br />Like MSU1 and the proposed widescreen, I think if we're going to do it, it needs to be done right to leave a good impression.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=375">byuu</a> — Fri Sep 06, 2019 5:50 am — Replies 13 — Views 712</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[wonder]]></name></author>
<updated>2019-09-06T07:27:43-07:00</updated>
<published>2019-09-06T02:21:31-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=19275&amp;p=242314#p242314</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=19275&amp;p=242314#p242314"/>
<title type="html"><![CDATA[How can I benchmark my C code?]]></title>

<category term="NESdev" scheme="http://forums.nesdev.com/viewforum.php?f=2" label="NESdev"/>
<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=19275&amp;p=242314#p242314"><![CDATA[
Hi!<br /><br />I'm writing a game framework in C and I would like to benchmark my code.<br />I've tried including &lt;time.h&gt; and using the clock, but it seems that the NES doesn't have one... (please correct me if I'm wrong).<br /><br />The emulator (Nestopia, Mesen, FCEUX) always displays 60fps, which does not reflect the game's internal speed.<br />I've tried using the Lag Counter, but that's not exactly what I'm after.<br /><br />In Python, I would do it like this:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">from time import time<br />def main_loop:<br />    timestamp = time()<br />    ...<br />    do_heavy_stuff()<br />    ...<br />    ...<br />    fps = 1 / (time() - timestamp)<br />    print(fps)<br /></div><br /><br />Do you guys know any way to achieve this, in either C or inline assembly?<br /><br />If not, what the alternative? How do you guys benchmark your code?<br /><br />Many thanks in advance. <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=15349">wonder</a> — Fri Sep 06, 2019 2:21 am — Replies 16 — Views 615</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Goufman]]></name></author>
<updated>2019-09-06T00:22:07-07:00</updated>
<published>2019-09-06T00:22:07-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=19274&amp;p=242311#p242311</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=19274&amp;p=242311#p242311"/>
<title type="html"><![CDATA[Need a MAD CITY game for 4 mappers.]]></title>

<category term="NESdev" scheme="http://forums.nesdev.com/viewforum.php?f=2" label="NESdev"/>
<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=19274&amp;p=242311#p242311"><![CDATA[
Hello. Does anyone have this game ported for 4 mappers? If there is, please share it with me. Thank!<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=8507">Goufman</a> — Fri Sep 06, 2019 12:22 am — Replies 0 — Views 160</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[wonder]]></name></author>
<updated>2019-09-05T16:08:48-07:00</updated>
<published>2019-09-05T16:08:48-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=19273&amp;p=242299#p242299</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=19273&amp;p=242299#p242299"/>
<title type="html"><![CDATA[Physics Demo]]></title>

<category term="Homebrew Projects" scheme="http://forums.nesdev.com/viewforum.php?f=22" label="Homebrew Projects"/>
<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=19273&amp;p=242299#p242299"><![CDATA[
Hi!!<br /><br />My name's Bruno and I'm new here! <img src="http://forums.nesdev.com/images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /><br />I've grown-up with a NES clone and having the opportunity to write code for it, is a dream come true! I haven't been this excited about programming in years!!!<br /><br />So, I've been using the 8bitworkshop IDE for a few weeks now and after creating a mini text adventure, I decided to start experimenting with collision detection.<br />The entire thing is written in C and I am well aware of its performance issues. Nevertheless, I'm looking forward into learning how to speed-up the critical parts using assembly (inline or files).<br /><br /><img src="https://i.ibb.co/bzjt6Xh/index.gif" alt="Image" /><br /><em>Sped-up footage, it's actually pretty slow...</em><br /><br /><a href="https://youtu.be/j1qBVLnMHvQ" class="postlink">https://youtu.be/j1qBVLnMHvQ</a><br /><br />About me: <br />As a professional, I'm a software developer (Python, C and some C++) for one of the big Japanese IT companies, nothing game related though, just boring business stuff.<br />As a hobbyist, I develop under the name &quot;Ninja Dynamics&quot; and I have some unfinished/work-in-progress stuff for PC and Android.<br />As a gamer, I'm completely addicted to Dragon Ball FighterZ (Demon~SS3 rank). I've tried to summarize my favorite games but there are just too many to mention. (Doom 2016 &lt;3)<br />As an anime fan, Dragon Ball and Neon Genesis Evangelion are my favorite animes ever, alongside with Full Metal Alchemist: Brotherhood and Food Wars, just to name a few.<br /><br />I have so many questions for you guys, so I'm really looking forward into learning a lot more from you all!<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=15349">wonder</a> — Thu Sep 05, 2019 4:08 pm — Replies 4 — Views 363</p><hr />
]]></content>
</entry>
</feed>