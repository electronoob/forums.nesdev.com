<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=10&amp;t=7484" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2011-02-17T14:46:30-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=10&amp;t=7484</id>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2011-02-17T14:46:30-07:00</updated>
<published>2011-02-17T14:46:30-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7484&amp;p=74133#p74133</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7484&amp;p=74133#p74133"/>
<title type="html"><![CDATA[moving objects (sprites) off screen / accurate collisions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7484&amp;p=74133#p74133"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />You have to add more bits to the upper end of your sprite/object coordinates so that you can represent values larger than 255. If you have scrolling, this means that the area where your objects are is wider than 256 pixels, which is why you need more bits for coordinates.<br /></div><br />Personally I strongly recommand using more bits, even if you don't scroll. This will allow you to handle screen overflow in a managable way (if you use only 8-bit you can't because the screen is EXACTLY 256 pixels wide), and it allows to use a finer grid than on-screen pixel which is important for fluidity of movement.<br /><br />The best way to go if you never load areas bigger than 16x16 screens into memory is to use 16-bit, where the upper 4 bits are the screen, the middle 8-bit the pixel and the lower 4-bits the "subpixel".<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Thu Feb 17, 2011 2:46 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2011-02-17T13:13:37-07:00</updated>
<published>2011-02-17T13:13:37-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7484&amp;p=74131#p74131</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7484&amp;p=74131#p74131"/>
<title type="html"><![CDATA[moving objects (sprites) off screen / accurate collisions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7484&amp;p=74131#p74131"><![CDATA[
Unless other limitations of your level's data format limit it smaller. For example, one of my projects has a "modified" bit per 16-pixel-wide column allowing tracking of collected or switched items from the background that have gone offscreen, but it has only 64 bytes of RAM for these bits. This means each screen takes 2 bytes of this buffer, and levels can be 32 screens wide.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Thu Feb 17, 2011 1:13 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[8bitmatt]]></name></author>
<updated>2011-02-17T12:45:03-07:00</updated>
<published>2011-02-17T12:45:03-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7484&amp;p=74129#p74129</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7484&amp;p=74129#p74129"/>
<title type="html"><![CDATA[moving objects (sprites) off screen / accurate collisions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7484&amp;p=74129#p74129"><![CDATA[
<div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><br />You have to add more bits to the upper end of your sprite/object coordinates so that you can represent values larger than 255. If you have scrolling, this means that the area where your objects are is wider than 256 pixels, which is why you need more bits for coordinates.<br /></div><br /><br />Ok I think I get it. <br /><br />So If I use 3 bytes like Kasumi had <a href="http://nesdev.com/bbs/viewtopic.php?p=74058#74058" class="postlink">previously mentioned</a>...<br /><br />My level could be up to 256 screens wide. Correct? That's 256 screens by 256 pixels = 65,536 pixels wide.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4716">8bitmatt</a> — Thu Feb 17, 2011 12:45 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2011-02-17T12:23:12-07:00</updated>
<published>2011-02-17T12:23:12-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7484&amp;p=74128#p74128</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7484&amp;p=74128#p74128"/>
<title type="html"><![CDATA[moving objects (sprites) off screen / accurate collisions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7484&amp;p=74128#p74128"><![CDATA[
<div class="quotetitle">8bitmatt wrote:</div><div class="quotecontent"><br />So what happens when scrolling is introduced?<br /></div><br />You have to add more bits to the upper end of your sprite/object coordinates so that you can represent values larger than 255. If you have scrolling, this means that the area where your objects are is wider than 256 pixels, which is why you need more bits for coordinates.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Thu Feb 17, 2011 12:23 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[8bitmatt]]></name></author>
<updated>2011-02-17T12:00:09-07:00</updated>
<published>2011-02-17T12:00:09-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7484&amp;p=74124#p74124</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7484&amp;p=74124#p74124"/>
<title type="html"><![CDATA[moving objects (sprites) off screen / accurate collisions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7484&amp;p=74124#p74124"><![CDATA[
<div class="quotetitle">thefox wrote:</div><div class="quotecontent"><br />FYI, this is called <a href="http://en.wikipedia.org/wiki/Fixed-point_arithmetic" class="postlink">fixed-point arithmetic</a>. Also note that nothing forces you to use 8.8 fp, it could as well be 14.2 or something else depending on your needs.<br /></div><br /><br />Thanks man.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4716">8bitmatt</a> — Thu Feb 17, 2011 12:00 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[8bitmatt]]></name></author>
<updated>2011-02-17T11:42:31-07:00</updated>
<published>2011-02-17T11:42:31-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7484&amp;p=74119#p74119</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7484&amp;p=74119#p74119"/>
<title type="html"><![CDATA[moving objects (sprites) off screen / accurate collisions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7484&amp;p=74119#p74119"><![CDATA[
<div class="quotetitle">Kasumi wrote:</div><div class="quotecontent"><br />Yes. All correct, if you don't scroll.<br /></div><br /><br /><br />Well you probably knew this question was coming...<br /><br />So what happens when scrolling is introduced? <br /><br />I've read a few posts on scrolling and know it's pretty complex (so I don't plan to use scrolling in anything until I have a few small projects under my belt) but I'd still like to know some of the conceptual basics.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4716">8bitmatt</a> — Thu Feb 17, 2011 11:42 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[thefox]]></name></author>
<updated>2011-02-16T17:07:14-07:00</updated>
<published>2011-02-16T17:07:14-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7484&amp;p=74065#p74065</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7484&amp;p=74065#p74065"/>
<title type="html"><![CDATA[moving objects (sprites) off screen / accurate collisions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7484&amp;p=74065#p74065"><![CDATA[
<div class="quotetitle">8bitmatt wrote:</div><div class="quotecontent"><br />So maybe I wasn't good at explaining it before but I think what I was saying was correct and we were talking about the same thing.<br /></div><br />FYI, this is called <a href="http://en.wikipedia.org/wiki/Fixed-point_arithmetic" class="postlink">fixed-point arithmetic</a>. Also note that nothing forces you to use 8.8 fp, it could as well be 14.2 or something else depending on your needs.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=80">thefox</a> — Wed Feb 16, 2011 5:07 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Kasumi]]></name></author>
<updated>2011-02-16T16:10:10-07:00</updated>
<published>2011-02-16T16:10:10-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7484&amp;p=74061#p74061</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7484&amp;p=74061#p74061"/>
<title type="html"><![CDATA[moving objects (sprites) off screen / accurate collisions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7484&amp;p=74061#p74061"><![CDATA[
Yes. All correct, if you don't scroll.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3504">Kasumi</a> — Wed Feb 16, 2011 4:10 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[8bitmatt]]></name></author>
<updated>2011-02-16T15:41:31-07:00</updated>
<published>2011-02-16T15:41:31-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7484&amp;p=74060#p74060</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7484&amp;p=74060#p74060"/>
<title type="html"><![CDATA[moving objects (sprites) off screen / accurate collisions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7484&amp;p=74060#p74060"><![CDATA[
<div class="quotetitle">Kasumi wrote:</div><div class="quotecontent"><br />Got it now?<br /></div><br /><br />I think so. Here's  a visual to help explain how I understand it.<br /><br /><img src="http://arcade.publishpath.com/Websites/arcade/Images/nesdev/subpixel.gif" alt="Image" /><br /><br /><br />So maybe I wasn't good at explaining it before but I think what I was saying was correct and we were talking about the same thing.<br /><br />The highbyte is the whole number (actual x position on the 8bit grid "$20"), the low byte is the fraction (subpixel value "$00"). By using 16 bit math we are adjusting the amount of time it takes to move the same 2 pixel distance, thus this change in timing is perceived by the player as a smoother subpixel animation.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4716">8bitmatt</a> — Wed Feb 16, 2011 3:41 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Kasumi]]></name></author>
<updated>2011-02-16T14:37:25-07:00</updated>
<published>2011-02-16T14:37:25-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7484&amp;p=74058#p74058</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7484&amp;p=74058#p74058"/>
<title type="html"><![CDATA[moving objects (sprites) off screen / accurate collisions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7484&amp;p=74058#p74058"><![CDATA[
<div class="quotetitle">8bitmatt wrote:</div><div class="quotecontent"><br />Thanks man. Yea I understand how the 16 bit math works..<br /></div><br />My bad. <br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />I guess what I don't understand is how that 16 bit number we end up with translates into something usable on the 8bit (256 pixel) grid.<br /></div><br />The equation above shows it. Object X minus scroll X gives the position on the 256 pixel grid. If result is too big for the grid (&gt;256) or too small for the grid (&lt;0) the object's not displayed.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Because a sprite can only be at one of those 256 pixel locations on screen. So realistically there's not a true "subpixel" value that the sprite would have as it's x location?<br /></div><br /><br />You need one more byte than needed for the amount of pixel positions in your level for subpixel. Makes sense, right?<br /><br />If you don't scroll, you need two bytes. One to hold the actual X pixel position, and one to hold the subpixel. If you do scroll, but have levels less than 65,536 wide, you need three bytes. Two for the actual X position, and one for the subpixel. <br /><br />You add the movement speed to the subpixel movement, and possibly the lowest x position byte. Say you have 16 bit movement speed. It's $0100. That means you'll be adding 1 to the low X position each frame, and the subpixel won't change. $0080 is half a pixel every frame. #$80 is added to the subpixel, which by itself doesn't change the pixel position of the object. But if it sets the carry, the object will be moved when the X position is updated by adding #$00 (the high byte of the movement speed) (plus carry) to it. <br /><br />Got it now?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3504">Kasumi</a> — Wed Feb 16, 2011 2:37 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[8bitmatt]]></name></author>
<updated>2011-02-16T14:17:04-07:00</updated>
<published>2011-02-16T14:17:04-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7484&amp;p=74057#p74057</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7484&amp;p=74057#p74057"/>
<title type="html"><![CDATA[moving objects (sprites) off screen / accurate collisions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7484&amp;p=74057#p74057"><![CDATA[
<div class="quotetitle">Kasumi wrote:</div><div class="quotecontent"><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent"> $00|FF &#40;the high and low bytes&#41;<br />+$00|01&#40;the immediate number I added with the two adcs in the above example<br />=$01|00<br /><br />The | shows the split between the high and low bytes.<br /></div><br /></div><br /><br /><br />Thanks man. Yea I understand how the 16 bit math works.. I guess what I don't understand is how that 16 bit number we end up with translates into something usable on the 8bit (256 pixel) grid. Because a sprite can only be at one of those 256 pixel locations on screen. So realistically there's not a true "subpixel" value that the sprite would have as it's x location?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4716">8bitmatt</a> — Wed Feb 16, 2011 2:17 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Kasumi]]></name></author>
<updated>2011-02-16T13:41:52-07:00</updated>
<published>2011-02-16T13:41:52-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7484&amp;p=74054#p74054</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7484&amp;p=74054#p74054"/>
<title type="html"><![CDATA[moving objects (sprites) off screen / accurate collisions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7484&amp;p=74054#p74054"><![CDATA[
<div class="quotetitle">8bitmatt wrote:</div><div class="quotecontent"><br />The high byte of the 16 bit coord is the actual x position of the sprite on screen (and is like your whole number). The low byte is like a fraction. So essentially with the 16 bit math you are adjusting the amount of time it takes to move in the 8bit coords of the NES? is this right?<br /></div><br /><br />Not exactly, for scrolling, unless I'm misunderstanding you. That post seems to have detailed subpixel movements (moving a sprite &lt; 1 pixel a frame), not scrolling. One would need a 24 bit number to do subpixel movement that way if one also had scrolling. It shows another use of 16bit numbers though, which can be used for many interesting things.<br /><br />Ignoring the fact that a byte can only hold up to 255 for a moment. Ignoring Y position. (For an object to display with Y, the equation is much the same as for X. And naturally both its Y and X position must be on screen for the object to be displayed.)<br /><br />You have an object's X position. You have the scroll's X position. You subtract the scroll's X position from the object's X position and it gives you where the object should be on the screen.<br /><br />The screen is 256 pixels across. 0-255 are the only possible locations on screen. So if the result of the above equation is  &lt; 0 or &gt;255 for any object X/scroll X position pair, the object is not drawn to the screen.<br /><br />Object X is 0. <br /><br />Scroll X is 0.<br /><br />0-0 = 0. 0 is the object's position on screen.<br /><br />Object X is 0. <br /><br />Scroll X is 1.<br /><br />0-1 = -1. -1 &lt; 0. Object is not displayed.<br /><br />Object X is 257.<br /><br />Scroll X is 0. <br /><br />257-0 = 257. 257 &gt; 255. Object is not displayed.<br /><br />Object X is 596<br /><br />Scroll X is 584<br /><br />596-584 = 12. Object is displayed on pixel 12 of the screen. <br /><br />But one can only store 0-255 in a single byte. So how does one store a number like 584?<br /><br />Lowbyte*256^0+highbyte*256^1(+higherbyte*256^2, etc if you want more than 16 bits.) This equation only shows the "default" way to look at them, though. The example you linked above had it so that it was (lowbyte/256+highbyte). If you understand how 16 bit numbers really work, you can get creative.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">;I'm not indenting the mnemonics.<br />;One adds numbers that are greater than 8 bits by adding lowest byte pair of bytes together, than adding a higher pair of bytes together, until you've reached the highest pair of bytes. One only clears the carry on the addition of the lowest pair of bytes.<br />lda #$00<br />sta highbyte<br />lda #$FF<br />sta lowbyte<br />;#$FF*255^0+0*256^1= 255. That is the value in the 16 bit number<br /><br />lda lowbyte<br />clc<br />adc #$01;Sets carry flag, so the next addition will add one plus whatever number we give it.<br />sta lowbyte<br /><br />lda highbyte<br />adc #$00;Carry is cleared for next addition, because we didn't exceed 255 for this addition<br />sta highbyte;High byte is 01. 0 &#40;high byte+0 &#40;number&#41; + 1 &#40;carry flag&#41; = 1<br /></div><br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent"> $00|FF &#40;the high and low bytes&#41;<br />+$00|01&#40;the immediate number I added with the two adcs in the above example<br />=$01|00<br /><br />The | shows the split between the high and low bytes.<br /></div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3504">Kasumi</a> — Wed Feb 16, 2011 1:41 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[8bitmatt]]></name></author>
<updated>2011-02-16T11:41:34-07:00</updated>
<published>2011-02-16T11:41:34-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7484&amp;p=74049#p74049</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7484&amp;p=74049#p74049"/>
<title type="html"><![CDATA[moving objects (sprites) off screen / accurate collisions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7484&amp;p=74049#p74049"><![CDATA[
<div class="quotetitle">Kasumi wrote:</div><div class="quotecontent"><br />This might be a little off topic, but...<br /><br />I take it you're used to C or something similar? This might help for 16 bit coordinates. (Forgive my syntax if it's wrong, I'm switching between three languages for my current project.)<br /></div><br /><br /><br />Actually I'm not a C or Java guy or anything really. I don't have a huge background in programming. My day job is front-end web development (UI design, CSS, Javascript), but I do have some experience with some web based languages (php, coldfusion, asp.net). Anyway enough about me...<br /><br />I couldn't really follow your example on 16 bit coords that well since I'm no good with C,  but I have been researching this and came across  <a href="http://nesdev.com/bbs/viewtopic.php?p=15144&amp;sid=0b74c905f7b23d3648cd1664bfa6fe08#15144" class="postlink">this post</a> which I think I understand. The high byte of the 16 bit coord is the actual x position of the sprite on screen (and is like your whole number). The low byte is like a fraction. So essentially with the 16 bit math you are adjusting the amount of time it takes to move in the 8bit coords of the NES? is this right?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4716">8bitmatt</a> — Wed Feb 16, 2011 11:41 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2011-02-16T11:13:27-07:00</updated>
<published>2011-02-16T11:13:27-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7484&amp;p=74047#p74047</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7484&amp;p=74047#p74047"/>
<title type="html"><![CDATA[moving objects (sprites) off screen / accurate collisions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7484&amp;p=74047#p74047"><![CDATA[
<div class="quotetitle">8bitmatt wrote:</div><div class="quotecontent"><br />why 30? what's the significance of 30 frames?<br /></div><br />The NTSC NES PPU generates a 240p video signal with 60.0988 frames per second. This means there are about 30 frames in a half second: long enough for the player to have noticed that the ball has left the table.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />And I'm guessing after the game state is changed to STATE_LOST_BALL , within that section of code I need to reset loss_timer to 0 for this to all continue working? correct?<br /></div><br />Yes. The loss_timer gets reset to 0 when you launch a ball.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Wed Feb 16, 2011 11:13 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[8bitmatt]]></name></author>
<updated>2011-02-16T11:06:10-07:00</updated>
<published>2011-02-16T11:06:10-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7484&amp;p=74045#p74045</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7484&amp;p=74045#p74045"/>
<title type="html"><![CDATA[moving objects (sprites) off screen / accurate collisions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7484&amp;p=74045#p74045"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />ball_dx is a number that is negative if the ball is moving left and positive if the ball is moving right. For example, it could be the X component of the ball's velocity.<br /><br />loss_timer is a variable stating how many frames before the animation for a lost ball begins. During play it's zero; once the ball is lost, it's positive. This way, collisions between the paddle and ball are ignored after the ball has broken the plane of the paddle.<br /><br />Which etc?<br /></div><br /><br />The etc... why 30? what's the significance of 30 frames? <br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">elif loss_timer &gt;= 30: <br />    game_state = STATE_LOST_BALL <br /></div><br /><br />And I'm guessing after the game state is changed to STATE_LOST_BALL , within that section of code I need to reset loss_timer to 0 for this to all continue working? correct?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4716">8bitmatt</a> — Wed Feb 16, 2011 11:06 am</p><hr />
]]></content>
</entry>
</feed>