<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Bank-switching for Beginners</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Bank-switching for Beginners</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=5750">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=5750</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>neilbaldwin</b> [ Wed Nov 18, 2009 1:26 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Bank-switching for Beginners</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Before I dive into the murky void of bank-switching can I just ask a couple of fundamental questions;
<br />
<br />1) (I think I know the answer to this already but) Can you bank-switch DPCM?
<br />2) As well as bank-switching graphics, I presume you can bank switch code? If so, what's the protocol for switching PRG, calling routines and returning?
<br />3) If I'm going to go down the bank-switching route, what's the most common bank-switchable mapper/ROM configuration? I thinking here from the point of view of PowerPak support and also the possibility of building carts/using socketed/EPROM boards etc.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Wed Nov 18, 2009 4:37 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Bank-switching for Beginners</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">neilbaldwin wrote:</div><div class="quotecontent">Before I dive into the murky void of bank-switching can I just ask a couple of fundamental questions;<br /><br />1) (I think I know the answer to this already but) Can you bank-switch DPCM?<br /></div><br />You can but IMO it's not useful. This is a subjective matter tough.<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">2) As well as bank-switching graphics, I presume you can bank switch code? If so, what's the protocol for switching PRG, calling routines and returning?<br /></div><br />Yes technically you can banswitch PRG-ROM, CHR-ROM, and more rarely PRG-RAM and CHR-RAM.<br />What you actually can do depends on the cartridge hardware you use.<br />I haven't developped anything with bankswitched PRG-ROM yet so I can't really help you about a protocol. I wrote something about switching the whole 32k in a user-friendly way, and another way to go is with last 16k fixed at $c000-$ffff, and first 16k switchable at $8000-$bfff.<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">3) If I'm going to go down the bank-switching route, what's the most common bank-switchable mapper/ROM configuration? I thinking here from the point of view of PowerPak support and also the possibility of building carts/using socketed/EPROM boards etc.</div>
<br />I guess mapper 2 is the most common with it's 16k switchable / 16k fixed sheme. Most advanced mappers such as MMCs are usually used in a way that simulate this bankswitching sheme.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>MetalSlime</b> [ Wed Nov 18, 2009 6:20 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Bank-switching for Beginners</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">neilbaldwin wrote:</div><div class="quotecontent">Before I dive into the murky void of bank-switching can I just ask a couple of fundamental questions;<br /><br />1) (I think I know the answer to this already but) Can you bank-switch DPCM?</div><br /><br />Yes, but I think you have to have your samples at $C000, so you need a mapper setup that will let you swap that section out.  <br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">2) As well as bank-switching graphics, I presume you can bank switch code? If so, what's the protocol for switching PRG, calling routines and returning?</div><br /><br />Yes.  You can swap out anything in PRG-ROM.  Mappers typically let you swap out banks either 8k or 16k in size.  One bank will be fixed (unswappable).  The fixed bank is usually the last one, since the vectors are at $FFFA-FFFF.  Most games I've looked at have a bankswapping subroutine in the fixed bank.  <br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">3) If I'm going to go down the bank-switching route, what's the most common bank-switchable mapper/ROM configuration? I thinking here from the point of view of PowerPak support and also the possibility of building carts/using socketed/EPROM boards etc.</div>
<br />
<br />As Bregalad said, Mapper 2 (<a href="http://wiki.nesdev.com/w/index.php/UxROM" class="postlink">UxROM</a>) is common.  Sivak's game Battle Kid uses UOROM and it is going to be a cart release.  UxROM will give you problems with swapping DPCM though since $C000-FFFF is the fixed bank.  I think I read once that somebody (Memblers?) made an altered UNROM that had $8000-BFFF fixed and $C000-FFFF swappable though.
<br />
<br />I've only worked with UxROM, so I can't comment on other mappers.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>neilbaldwin</b> [ Wed Nov 18, 2009 8:35 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thanks for the information, much appreciated.
<br />
<br />OK, scenario time...
<br />
<br />So, I definitely want to "reserve" $C000-&gt; for DPCM. And I've got $8000-$FFFF as fixed. I need space for the tracker editor and also for the playback routine but both won't fit in the space $8000-$BFFF.
<br />
<br />What's my next move? <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />
<br />
<br />Presumably I could have the music player in a switchable bank and do the bank switching somewhere in my NMI, call the music refresh routine, switch the bank back, JMP back to where I left off? If so, can the music refresh code, which resides in the switched bank, still see the SRAM area ($6000-$7FFF)?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Wed Nov 18, 2009 10:30 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Presumably I could have the music player in a switchable bank and do the bank switching somewhere in my NMI, call the music refresh routine, switch the bank back, JMP back to where I left off?</div>
<br />Well I guess the "standard" way to do is to banswitch it in and call it from NMI (who is typically fixed bank), but yeah you have to back-up the old bank and restore it after the sound code returns. I don't know if that's what you described.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Wed Nov 18, 2009 11:24 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Bank-switching for Beginners</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">neilbaldwin wrote:</div><div class="quotecontent">If so, what's the protocol for switching PRG, calling routines and returning?</div>
<br />If the mapper you use has a fixed bank, you typically place all the bankswitching routines in it. If the mapper switches the whole 32KB space at once, it's good practice to replicate a small piece of code across all banks, containing the reset code and the bankswitching routines, so that they appear to be always mapped at the same location, no matter what bank is active.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Wed Nov 18, 2009 6:29 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Bank-switching for Beginners</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">MetalSlime wrote:</div><div class="quotecontent">I think I read once that somebody (Memblers?) made an altered UNROM that had $8000-BFFF fixed and $C000-FFFF swappable though.</div>
<br />You're thinking of the <a href="http://wiki.nesdev.com/w/index.php/INES_Mapper_180" class="postlink"><em>Crazy Climber</em> board</a>, which is an UNROM or UOROM board modded to replace the quad OR gate (74HC32) with a quad AND gate (74HC08). This fixes $8000-$BFFF to bank 0 and allows swapping $C000-$FFFF. You lose six bytes at the end of each bank for vectors, but that's no problem because DPCM ignores the last 15 bytes of each sample anyway. MMC1 can be configured to work this way as well (<a href="http://wiki.nesdev.com/w/index.php/MMC1#Control_.28internal.2C_.248000-.249FFF.29" class="postlink">control register</a> set to bank mode 1, bank location 0). And the upshot: RetroZone sells boards compatible with UOROM and MMC1 software, so you don't have to worry about finding a highly uncommon* donor cart.
<br />
<br />If you want to run the music once per vblank, you could have the NMI handler just set a flag that your main code spins on. <em>Final Fantasy</em> does this, as does LJ65.
<br />
<br />The small piece of replicated code that tokumaru mentions is often called a "trampoline".
<br />
<br />
<br /><span style="font-size: 84%; line-height: normal">* Can't really say "rare" without making people think of A*ROM.</span>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>neilbaldwin</b> [ Thu Nov 19, 2009 4:31 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><img src="./images/smilies/icon_sad.gif" alt=":(" title="Sad" />
<br />
<br />Can someone knock up a bit of code to show me how to set up for MMC1 bank switching using fixed $C000-FFFF and 2 switchable banks @ $8000?
<br />
<br />I think I've got as far as putting the banks in the right place.... :S

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Nov 19, 2009 6:05 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />MMC1 has one switchable PRG bank.
<br />
<br />But fixed $C000 is the scenario you get when you reset the mapper anyway.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>cpow</b> [ Thu Nov 19, 2009 6:19 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">neilbaldwin wrote:</div><div class="quotecontent">:(<br /><br />Can someone knock up a bit of code to show me how to set up for MMC1 bank switching using fixed $C000-FFFF and 2 switchable banks @ $8000?<br /><br />I think I've got as far as putting the banks in the right place.... :S</div>
<br />Someone asked if I could include this type of thing in NESICIDE and I had always planned on providing something like a "New Project Wizard" that includes "Mapper Interfacing".  I had gotten as far as putting the mechanics together to be able to provide the wizard but none of the content, which is what you are after.  I know someone will probably reply to this before I get that done [with a well-formed, ready-to-assemble ROM shell], but your post has reinvigorated my interest in getting something like that done inside my tool.  It will be very similar to the MS Visual Studio "// TODO: Insert your specialized command handler code here" type of functional shell with inserted guidance comments.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Banshaku</b> [ Thu Nov 19, 2009 8:30 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Sorry Neil, we're stealing your thread, it will be split I guess (split me). I would like to help you with the MMC1 but I never tried yet, only MMC3/VRC6/VCR7.
<br />
<br />@Nesicide:
<br />Regarding your editor, if it could be more like visual studio 2008, with an MDI interface with tabbed documents, syntax highlighting, mouse over help, intellisense for known symbols by scope, support for ca65 (at the least) and other assemblers: I would be using it right away.  
<br />
<br />An editor that help beginner is great and all but even advanced users wants one with more options.  I wanted to make one (like many project on my todo list) but gave up since I have no more free time these days. I just came from work and it's already midnight... So forget hobbies..
<br />
<br />Then if you could debug, put break points in your code: even better.  But if the format is all binary like the current build and not text, being a full time developer during the day, I would skip it.
<br />
<br />My comments on the subject.  I really would like to see that editor available some day. Remote debugging with your own source code/comments/symbols.. That would be nice.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>neilbaldwin</b> [ Thu Nov 19, 2009 9:08 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">NESICIDE wrote:</div><div class="quotecontent"><div class="quotetitle">neilbaldwin wrote:</div><div class="quotecontent">:(<br /><br />Can someone knock up a bit of code to show me how to set up for MMC1 bank switching using fixed $C000-FFFF and 2 switchable banks @ $8000?<br /><br />I think I've got as far as putting the banks in the right place.... :S</div><br />Someone asked if I could include this type of thing in NESICIDE and I had always planned on providing something like a "New Project Wizard" that includes "Mapper Interfacing".  I had gotten as far as putting the mechanics together to be able to provide the wizard but none of the content, which is what you are after.  I know someone will probably reply to this before I get that done [with a well-formed, ready-to-assemble ROM shell], but your post has reinvigorated my interest in getting something like that done inside my tool.  It will be very similar to the MS Visual Studio "// TODO: Insert your specialized command handler code here" type of functional shell with inserted guidance comments.</div>
<br />
<br />Good idea.
<br />
<br />Seriously, someone throw something into the ring. I can't remember the last time I spent such an utterly fruitless time trying to get something working on the NES. I've got better things to do (yes, that's me admitting defeat <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /> ) and I'd like to know I can get this working before diving in with a massive chunk of the tracker editor.
<br />
<br />In the meantime I'm going to strip down my reset/NMI code so I can show you my non-working code.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>neilbaldwin</b> [ Thu Nov 19, 2009 9:46 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Right, this is what I've got. It seems to be working now (perhaps the stripping down tidied it up a bit). Am I on the right lines?;
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">; iNES header<br /><br />; iNES identifier<br />.byte &quot;NES&quot;,$1a <br /><br />; Number of PRG-ROM blocks<br />.byte $03<br /><br />; Number of CHR-ROM blocks<br />.byte $01<br /><br />; ROM control bytes: Horizontal mirroring, no SRAM<br />; or trainer, Mapper #0<br />;.byte $00, $00<br />.byte %00010000, %00000000&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;MMC1 with SRAM<br /><br />; Filler<br />.byte $00,$00,$00,$00,$00,$00,$00,$00&nbsp; &nbsp;<br />&nbsp; &nbsp;&nbsp; &nbsp;<br />SCREEN&nbsp; &nbsp;EQU $2000<br />PPU0&nbsp; &nbsp;EQU $2000<br />PPU1&nbsp; &nbsp;EQU $2001<br />PPU_STATUS&nbsp; &nbsp;EQU $2002<br /><br />&nbsp; &nbsp;;Zero page variables<br />&nbsp; &nbsp;ENUM $0000<br />tempvec&nbsp; &nbsp;db 0,0<br />tmp0&nbsp; &nbsp;db 0<br />tmp1&nbsp; &nbsp;db 0<br />tmp2&nbsp; &nbsp;db 0<br />tmp3&nbsp; &nbsp;db 0<br />tmp4&nbsp; &nbsp;db 0<br />tmp5&nbsp; &nbsp;db 0<br />tmp6&nbsp; &nbsp;db 0<br />tmp7&nbsp; &nbsp;db 0<br />&nbsp; &nbsp;ENDE<br /><br />;--------------------------------------------------------------------------------<br />; BANK 00<br />;--------------------------------------------------------------------------------<br />&nbsp; &nbsp;ORG $0000<br />&nbsp; &nbsp;BASE $8000<br />bank00&nbsp; &nbsp;inc $FE<br />&nbsp; &nbsp;rts<br />&nbsp; &nbsp;PAD $BFFA<br />&nbsp; &nbsp;DW vblank, reset, irq<br />;--------------------------------------------------------------------------------<br />; BANK 01<br />;--------------------------------------------------------------------------------<br /><br />&nbsp; &nbsp;BASE $8000<br />bank01&nbsp; &nbsp;inc $FF<br />&nbsp; &nbsp;rts<br />&nbsp; &nbsp;PAD $BFFA<br />&nbsp; &nbsp;DW vblank, reset, irq<br /><br />;--------------------------------------------------------------------------------<br />; FIXED BANK<br />;--------------------------------------------------------------------------------<br />&nbsp; &nbsp;&nbsp; &nbsp;<br />&nbsp; &nbsp;ORG $C000<br />reset&nbsp; &nbsp;sei<br /><br />&nbsp; &nbsp;jsr vblankwait<br />&nbsp; &nbsp;jsr resetMMC1<br />&nbsp; &nbsp;lda #%01100&nbsp; &nbsp;;Set bank layout<br />&nbsp; &nbsp;jsr setMMC1r0<br />&nbsp; &nbsp;lda #$00<br />&nbsp; &nbsp;jsr setPRGBank<br />&nbsp; &nbsp;&nbsp; &nbsp;<br />&nbsp; &nbsp;;clear RAM<br />&nbsp; &nbsp;lda #$00<br />&nbsp; &nbsp;ldx #$00<br />_reset_0&nbsp; &nbsp;sta $0000,x<br />&nbsp; &nbsp;sta $0100,x<br />&nbsp; &nbsp;sta $0200,x<br />&nbsp; &nbsp;sta $0300,x<br />&nbsp; &nbsp;sta $0400,x<br />&nbsp; &nbsp;sta $0500,x<br />&nbsp; &nbsp;sta $0600,x<br />&nbsp; &nbsp;sta $0700,x<br />&nbsp; &nbsp;inx<br />&nbsp; &nbsp;bne _reset_0<br /><br />&nbsp; &nbsp;;reset Stack<br />&nbsp; &nbsp;ldx #$FF<br />&nbsp; &nbsp;txs<br /><br />&nbsp; &nbsp;lda #$00<br />&nbsp; &nbsp;sta PPU0<br />&nbsp; &nbsp;sta PPU1<br /><br />&nbsp; &nbsp;;set PPU registers<br />&nbsp; &nbsp;lda #%10001000<br />&nbsp; &nbsp;sta PPU0<br />&nbsp; &nbsp;lda #%00011010<br />&nbsp; &nbsp;sta PPU1<br /><br />main_loop&nbsp; &nbsp;jmp main_loop<br />&nbsp; &nbsp;<br />vblankwait&nbsp; &nbsp;bit $2002<br />&nbsp; &nbsp;bpl vblankwait<br />&nbsp; &nbsp;rts<br />&nbsp; &nbsp;<br />vblankendwait&nbsp; &nbsp;bit $2002<br />&nbsp; &nbsp;bmi vblankendwait<br />&nbsp; &nbsp;rts<br /><br />vblank&nbsp; &nbsp;;rti<br />&nbsp; &nbsp;pha<br />&nbsp; &nbsp;txa<br />&nbsp; &nbsp;pha<br />&nbsp; &nbsp;tya<br />&nbsp; &nbsp;pha<br />&nbsp; &nbsp;bit $2002<br /><br />&nbsp; &nbsp;jsr screen_off<br /><br />&nbsp; &nbsp;lda #&gt;SCREEN<br />&nbsp; &nbsp;sta $2006<br />&nbsp; &nbsp;lda #&lt;SCREEN<br />&nbsp; &nbsp;sta $2006<br />&nbsp; &nbsp;lda $Fe&nbsp; &nbsp;&nbsp; &nbsp;;write content of $FE and $FE to screen<br />&nbsp; &nbsp;sta $2007<br />&nbsp; &nbsp;lda $FF<br />&nbsp; &nbsp;sta $2007<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;lda #%00011110<br />&nbsp; &nbsp;jsr screen_on<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;lda #$00&nbsp; &nbsp;&nbsp; &nbsp;;call routine in bank 00 to inc $FE<br />&nbsp; &nbsp;jsr setPRGBank<br />&nbsp; &nbsp;jsr bank00<br /><br />&nbsp; &nbsp;lda #$01&nbsp; &nbsp;&nbsp; &nbsp;;call routine in bank 01 to inc $FF<br />&nbsp; &nbsp;jsr setPRGBank<br />&nbsp; &nbsp;jsr bank01<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;pla<br />&nbsp; &nbsp;tay<br />&nbsp; &nbsp;pla<br />&nbsp; &nbsp;tax<br />&nbsp; &nbsp;pla<br />&nbsp; &nbsp;rti<br /><br />irq&nbsp; &nbsp;rti<br /><br />setPRGBank&nbsp; &nbsp;<br />&nbsp; &nbsp;sta $E000<br />&nbsp; &nbsp;lsr a<br />&nbsp; &nbsp;sta $E000<br />&nbsp; &nbsp;lsr a<br />&nbsp; &nbsp;sta $E000<br />&nbsp; &nbsp;lsr a<br />&nbsp; &nbsp;sta $E000<br />&nbsp; &nbsp;lsr a<br />&nbsp; &nbsp;sta $E000<br />&nbsp; &nbsp;rts<br />&nbsp; &nbsp;<br />screen_on&nbsp; &nbsp;sta $2001<br />&nbsp; &nbsp;ldx #$00<br />&nbsp; &nbsp;stx $2005<br />&nbsp; &nbsp;stx $2005<br />&nbsp; &nbsp;stx $2006<br />&nbsp; &nbsp;stx $2006<br />&nbsp; &nbsp;rts<br />&nbsp; &nbsp;<br />screen_off&nbsp; &nbsp;lda #%00010000<br />&nbsp; &nbsp;sta $2001<br />&nbsp; &nbsp;sta $2005<br />&nbsp; &nbsp;sta $2005<br />&nbsp; &nbsp;sta $2006<br />&nbsp; &nbsp;sta $2006<br />&nbsp; &nbsp;rts<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;<br />resetMMC1&nbsp; &nbsp;ldx #$7F<br />@b&nbsp; &nbsp;inx<br />&nbsp; &nbsp;bne @a<br />&nbsp; &nbsp;rts<br />@a&nbsp; &nbsp;stx $8000<br />&nbsp; &nbsp;bne @b<br />&nbsp; &nbsp;rts<br />&nbsp; &nbsp;<br />setMMC1r0&nbsp; &nbsp;sta $9fff<br />&nbsp; &nbsp;lsr a<br />&nbsp; &nbsp;sta $9fff<br />&nbsp; &nbsp;lsr a<br />&nbsp; &nbsp;sta $9fff<br />&nbsp; &nbsp;lsr a<br />&nbsp; &nbsp;sta $9fff<br />&nbsp; &nbsp;lsr a<br />&nbsp; &nbsp;sta $9fff<br />&nbsp; &nbsp;rts<br /><br /><br />&nbsp; &nbsp;ORG $FFFA<br />&nbsp; &nbsp;DW vblank, reset, irq<br />&nbsp; &nbsp;<br />;--------------------------------------------------------------------------------<br />; CHR ROM<br />;--------------------------------------------------------------------------------<br />&nbsp; &nbsp;BASE $0000<br />&nbsp; &nbsp;incbin &quot;set2.chr&quot;<br />&nbsp; &nbsp;;incbin &quot;set2.chr&quot;<br />&nbsp; &nbsp;ALIGN $2000<br />&nbsp; &nbsp;<br />;--------------------------------------------------------------------------------<br />; END OF ROM<br />;--------------------------------------------------------------------------------<br /><br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;</div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Thu Nov 19, 2009 11:00 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Well neil I guess you pretty much got it, in order to work with the MMC1 you have to write routines that does write 5 bits to it's registers and just call them.
<br />
<br />For resetting the MMC1, you typically just do it once at reset by doing inc to somewhere in ROM that contains a value greater than $80 (such as $fffb, the high byte of your reset vector). I don't know what you were trying to do here, but it looks overly complicated. Just do it one in the reset code and you should be allright.
<br />
<br />The problem is what happens if you try to write to a register NMI, if you were unlucky enough to have your main code interrupted when it was doing a register write. The most common solution is to set a flag each time you write to a MMC1 register, and skip the sound code in NMI if this flag is set. Another solution is to disable NMIs when writing to the MMC1, and enable it back when the write is done (which can ocasionally make VBlank time slightly shorter).
<br />The "infamous" solution is posted <a href="http://nesdev.com/bbs/viewtopic.php?t=3924&amp;highlight=mmc1" class="postlink">here</a> but I guess it works only if you use the standard 16k variable, 16k fixed bankwitching (which is the most common).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Thu Nov 19, 2009 12:52 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Megaman 2 has an infamous bug where the MMC1 bankswitch routine can be interrupted by the NMI, if there are lots of objects on the screen causing lag.  Some tool assisted speedruns expoit the bug.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>