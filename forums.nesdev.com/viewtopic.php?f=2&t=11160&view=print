<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - ca65 related question... possibly pertaining to a macro</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">ca65 related question... possibly pertaining to a macro</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=11160">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=11160</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Roth</b> [ Fri Apr 11, 2014 12:55 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>ca65 related question... possibly pertaining to a macro</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I remember when I was learning some other programming languages that I've since forgotten, there would be something along the lines of the &quot;length&quot; of a variable or some such. Like, string.length or thereabouts. Well, I was wondering if there was something I can do similar to that with a macro in ca65. An example of what I need is this...<br /><br />I have a table of bytes. The table of bytes gets read through and tested every frame. At the end of the routine that tests these bytes, I have a simple INX/CPX #$xx to see if all the bytes have been read or not. The slight inconvenience I have is that everytime I add some bytes to the end of the table, I have to manually update what the 'X' register is compared to. I was wondering if there was a way to make a macro or something like that which I could plug in, in place of #$xx, that had a parameter of the name of the table. So when the assembler builds the file, it takes the &quot;table.length&quot; and places the proper number where the CPX #$xx is. Is something like this possible?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Fri Apr 11, 2014 1:26 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: ca65 related question... possibly pertaining to a macro</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />A standard thing I've done is put a label at the end. This relies on assemblers always putting things in-order.<br />This won't work with tools that fuzz the order of arrays to uncover bugs, but most assemblers don't do that.<br /><br />For example, in ca65:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">mystruct: .byte 2 4 5 7 8<br />endofmystruct:<br /><br />mystructlength = endofmystruct - mystruct<br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Fri Apr 11, 2014 1:27 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: ca65 related question... possibly pertaining to a macro</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The first thing I suggest is scanning the table backwards (if that doesn't break any of your logic), since you can get rid of the CPX and just use the N flag (0-based index, maximum of 128 elements) or the Z flag (1-based index, maximum of 256 elements) to detect the end of the loop, making it faster.<br /><br />You'd still need to initialize X to the length of the table to begin the loop though, so the question remains. I don't think the assembler has a way to know where the table ends unless you put another label there, in which case you can do (EndLabel - StartLabel) to get the length of the table:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;LDX #(EndLabel - StartLabel)<br />Loop:<br />&nbsp; &nbsp;;ACCESS TABLE HERE<br />&nbsp; &nbsp;DEX<br />&nbsp; &nbsp;BNE Loop</div><br />I'm not very familiar with CA65 though, so someone else might have a solution more suited for it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Fri Apr 11, 2014 1:33 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: ca65 related question... possibly pertaining to a macro</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />As a slight simplification of lidnariq's suggestion, ca65 has the * symbol which is the program counter position known at link time, letting you do this:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">mystruct: .byte 2 4 5 7 8<br />mystructlength = * - mystruct</div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Roth</b> [ Fri Apr 11, 2014 1:41 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: ca65 related question... possibly pertaining to a macro</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Very cool!<br /><br />I happen to have another table that I always have right below it, as it is something that gets accessed along with that routine, so I only have to use that second table with it:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;cpx #(tele_y - tele_floor)<br /></div><br /><br /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">The first thing I suggest is scanning the table backwards (if that doesn't break any of your logic), since you can get rid of the CPX and just use the N flag (0-based index, maximum of 128 elements) or the Z flag (1-based index, maximum of 256 elements) to detect the end of the loop, making it faster.</div><br /><br />I use that technique when I'm working on some of my 1k games to save a byte here and there, but I find it to be more confusing overall. When I'm doing a regular full blown project, I just stick with the CPX method. Good suggestion of course, though : )<br /><br />Thanks guys, this was really helpful!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Movax12</b> [ Fri Apr 11, 2014 2:20 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: ca65 related question... possibly pertaining to a macro</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Syntax should be as:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">mystruct: .byte 2, 4, 5, 7, 8<br /></div><br /><br />And with ca65, you can use <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.sizeof&#40;&#41;</tt> instead of label math, example: (loop from start to #0 as suggested):<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent"><br />&nbsp; LDX #(.sizeof(mystruct)-1)<br />&nbsp; :<br />&nbsp; ; do stuff<br />&nbsp; DEX<br />&nbsp; BPL :-<br /><br /></div><br /><br />edit:Fix bad code <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Fri Apr 11, 2014 2:45 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: ca65 related question... possibly pertaining to a macro</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Movax12 wrote:</div><div class="quotecontent">And with ca65, you can use <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.sizeof&#40;&#41;</tt> instead of label math</div><br />How does it know where the table ends, though? If I put a second .byte statement on the next line, does that also count as part of the table? What if I .incbin a file?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Movax12</b> [ Fri Apr 11, 2014 2:54 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: ca65 related question... possibly pertaining to a macro</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />For .incbin I am not sure, but for a label, it seems to be based on EOL.<br />I know you can also get the size of a .scope (or a .proc):<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.scope DATA<br />&nbsp; &nbsp; mylabel: .byte 12, 23, 45, 45, 67, ABh<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;.byte 12, 23, 45, 45, 67, ABh<br />.endscope<br /><br />.out .sprintf(&quot;The size of DATA is: %d&quot; .sizeof(DATA))<br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Apr 11, 2014 3:06 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: ca65 related question... possibly pertaining to a macro</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If you have a bunch of different items each with different lengths, you can make a table of their lengths just as you make a table of pointers to the start. Or you can do it the C way: reserve one byte value for &quot;end of data&quot; and end the loop once you hit that byte. <br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">page_ptrs:<br />&nbsp; .addr page1_txt, page2_txt, page3_txt<br />num_pages = (* - page_ptrs) / 2<br /><br />page1_txt:<br />&nbsp; .incbin &quot;instructions1.txt&quot;<br />&nbsp; .byte $00<br />page2_txt:<br />&nbsp; .incbin &quot;instructions2.txt&quot;<br />&nbsp; .byte $00<br /></div>

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>