<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=3&amp;t=5585" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2010-08-26T12:03:16-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=3&amp;t=5585</id>
<entry>
<author><name><![CDATA[comegordas]]></name></author>
<updated>2010-08-26T12:03:16-07:00</updated>
<published>2010-08-26T12:03:16-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5585&amp;p=66760#p66760</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5585&amp;p=66760#p66760"/>
<title type="html"><![CDATA[Speeding up my graphics routine]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5585&amp;p=66760#p66760"><![CDATA[
yeep, finally could make it! i been reading about the palettes in allegro and the problem was that buffers in 8 BPP color depth needs their own palette to see the colors correctly. so instead of make a RGB_MAP to accelerate the "makecol()" function i peeked every single color (in 24 BPP format) in a palette i've found in a doc, put these values into the "makecol8()" function, collect the returned values and put those values into a palette array. the results:<br /><br /><img src="http://img443.imageshack.us/img443/1431/sinttulo2l.gif" alt="Image" /><br /><br /><img src="http://img841.imageshack.us/img841/820/sinttulo3k.gif" alt="Image" /><br /><br />some colors are bit wrong but the results were quite good. it's ok by now, but i'll have to fix this sooner or later. now it's time to take care about the sprites, i've some errors on that.<br /><br />thanks for your help guys <img src="http://forums.nesdev.com/images/smilies/icon_wink.gif" alt=";)" title="Wink" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4531">comegordas</a> — Thu Aug 26, 2010 12:03 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[comegordas]]></name></author>
<updated>2010-08-24T22:00:56-07:00</updated>
<published>2010-08-24T22:00:56-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5585&amp;p=66693#p66693</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5585&amp;p=66693#p66693"/>
<title type="html"><![CDATA[Speeding up my graphics routine]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5585&amp;p=66693#p66693"><![CDATA[
the color depth of all the bitmap buffers is 8 BPP. sorry, thought that already said it an older post.<br /><br />ok i'll read some about palette handling in Allegro. hopefully tomorrow i'll have some results.<br /><br />and of course: thanks! <img src="http://forums.nesdev.com/images/smilies/icon_wink.gif" alt=":wink:" title="Wink" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4531">comegordas</a> — Tue Aug 24, 2010 10:00 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[MottZilla]]></name></author>
<updated>2010-08-24T21:21:03-07:00</updated>
<published>2010-08-24T21:21:03-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5585&amp;p=66691#p66691</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5585&amp;p=66691#p66691"/>
<title type="html"><![CDATA[Speeding up my graphics routine]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5585&amp;p=66691#p66691"><![CDATA[
Allegro in 8bit color mode uses RGB values of 0 - 63. You can convert your typical 0 - 255 RGB values easily.<br /><br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">RGB TEMPCOLOR;<br /><br />const int PPU_NESPALRED&#91;0x40&#93; = &#123;<br />   117, 39,  0, 71,143,171,167,127, 67,  0,  0,  0, 27,  0,  0,  0,   // $0X<br />   188,  0, 35,131,191,231,219,203,139,  0,  0,  0,  0,  0,  0,  0,   // $1X<br />   255, 63, 95,167,247,255,255,255,243,131, 79, 88,  0,  0,  0,  0,   // $2X<br />   255,171,199,215,255,255,255,255,255,227,171,179,159,  0,  0,  0,   // $3X<br />&#125;;<br />const int PPU_NESPALGREEN&#91;0x40&#93; = &#123;<br />   117, 27,  0,  0,  0,  0,  0, 11, 47, 71, 81, 63, 63,  0,  0,  0,   // $0X<br />   188,115, 59,  0,  0,  0, 43, 79,115,151,171,147,131,  0,  0,  0,   // $1X<br />   255,191,151,139,123,119,119,155,191,211,223,248,235,  0,  0,  0,   // $2X<br />   255,231,215,203,199,199,191,219,231,255,243,255,255,  0,  0,  0,   // $3X<br />&#125;;<br />const int PPU_NESPALBLUE&#91;0x40&#93; = &#123;<br />   117,143,171,159,119, 19,  0,  0,  0,  0,  0, 23, 95,  0,  0,  0,   // $0X<br />   188,239,239,243,191, 91,  0, 15,  0,  0,  0, 59,139,  0,  0,  0,   // $1X<br />   255,255,255,253,255,183, 99, 59, 63, 19, 75,152,219,  0,  0,  0,   // $2X<br />   255,255,255,255,255,219,179,171,163,163,191,207,243,  0,  0,  0,   // $3X<br />&#125;;<br /><br />void SetPalEntry&#40;int Index,int Color&#41;<br />&#123;<br />   TEMPCOLOR.r = &#40;PPU_NESPALRED&#91;Color&#93;*63&#41;/255;<br />   TEMPCOLOR.g = &#40;PPU_NESPALGREEN&#91;Color&#93;*63&#41;/255;<br />   TEMPCOLOR.b = &#40;PPU_NESPALBLUE&#91;Color&#93;*63&#41;/255;<br />   set_color&#40;Index,&amp;TEMPCOLOR&#41;;<br />&#125;<br /></div><br /><br />Hopefully that helps.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=1726">MottZilla</a> — Tue Aug 24, 2010 9:21 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2010-08-24T20:21:47-07:00</updated>
<published>2010-08-24T20:21:47-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5585&amp;p=66688#p66688</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5585&amp;p=66688#p66688"/>
<title type="html"><![CDATA[Speeding up my graphics routine]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5585&amp;p=66688#p66688"><![CDATA[
What's important here is how you created the "ScreenBuffer". What is it's bit depth? If it's 8-bit, you have to somehow set it's palette to useful values (find the Allegro functions that allow you to modify the palette of your bitmap). If you did not initialize the palette it's understandable that you get "random" colors when using the indexes read from palette RAM.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Tue Aug 24, 2010 8:21 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[comegordas]]></name></author>
<updated>2010-08-24T19:52:18-07:00</updated>
<published>2010-08-24T19:52:18-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5585&amp;p=66686#p66686</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5585&amp;p=66686#p66686"/>
<title type="html"><![CDATA[Speeding up my graphics routine]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5585&amp;p=66686#p66686"><![CDATA[
thank you guys, you're really helping me. just wish that someday i could give all this help back. you know, sharing is all we have in this hobby.<br /><br />yeah, so it was just that stupid function. i was calling it for reach pixel geting drawn, that was the bottleneck. i almost thought that was a hardware issue of my computer!!! wich BTW is very slow... (don't tell anybody, but when i bought it the shop gifted me a slave with a shovel and a sack of coal to feed it <img src="http://forums.nesdev.com/images/smilies/icon_redface.gif" alt=":oops:" title="Embarassed" /> )<br /><br />i'll try to fix the palette and see what's happen. in order to solve this mess i tried to fix the colors by taking a snapshot of the screen of Balloon Fight runing on FCEUXD, then copy that snapshot on a Photoshop window and extract the color number via the dropper tool (dropper? is that the name in english of "cuentagotas"? google's translator helped me on this...). the problem was that the color values in Photoshop are given in 24-bits bit format, so i tried the set all the drawing and the color depth in 24-bits, but didn't work, colors looked really dark.<br /><br />anyway, if this is a palette issue then its a minor issue. the major issue should be the color fetching algorithm. i'll show you my code, sure it'll be helpful for you to give some hints.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">int i, j, Y, temp1, temp2;<br />byte NT_Entry, PT_Entry_Low, PT_Entry_High, AT_Entry, EmphasisBits, PaletteEntry;<br />word PT_Addr, NT_Addr, TileNumber;<br />byte ColorBit0, ColorBit1, ColorBit2and3, ColorIndex;<br />byte OAM_Byte0, OAM_Byte1, OAM_Byte2, OAM_Byte3;<br /><br />word PPUCycle, SpriteX, SpriteY;<br />byte OAM&#91;32&#93;, SpriteCounter, SpriteByte;<br />int SpriteRange;<br /><br />void RunScanline&#40;&#41;<br />&#123;<br />   if&#40;CoordY == 239&#41; CoordY = 0;<br /><br />   if&#40;Scanline == 0&#41;<br />   &#123;<br />      // Nothing here yet...<br />   &#125;<br />   else if&#40;&#40;Scanline &gt; 0 &#41; &amp;&amp; &#40;Scanline &lt;= 240&#41;&#41;<br />   &#123;<br />      if&#40;READ_BIT&#40;PPU_2001,3&#41;&#41;<br />      &#123;<br />         // BACKGROUND ROUTINE. Just pay atention the color fetching lines, the rest<br />         // works fine :&#41;<br /><br />         PT_Addr = READ_BIT&#40;PPU_2000,4&#41; &lt;&lt; 12;<br />         NT_Addr = &#40;&#40;PPU_2000 &amp; 0x3&#41; &lt;&lt; 10&#41; + 0x2000;<br /><br />         EmphasisBits = &#40;&#40;PPU_2001 &amp; 0xe0&#41; &gt;&gt; 5&#41;;<br /><br />         CoordX = 0;<br />         for&#40;i = 0; i &lt; 32; i++&#41;<br />         &#123;<br />            Y = &#40;Scanline - 1&#41; % 8;<br />            TileNumber = &#40;&#40;&#40;Scanline - 1&#41; &gt;&gt; 3&#41; &lt;&lt; 5&#41; + i;<br />            NT_Entry = VRAM&#91;NT_Addr + TileNumber&#93;;<br /><br />            PT_Entry_Low = VRAM&#91;PT_Addr + &#40;NT_Entry &lt;&lt; 4&#41; + Y&#93;;<br />            PT_Entry_High = VRAM&#91;PT_Addr + &#40;NT_Entry &lt;&lt; 4&#41; + Y + 8&#93;;<br />            for&#40;j = 7; j &gt;= 0; j--&#41;<br />            &#123;<br />               ColorBit0 = READ_BIT&#40;PT_Entry_Low,j&#41;;<br />               ColorBit1 = READ_BIT&#40;PT_Entry_High,j&#41;;<br /><br />               if&#40;EmphasisBits&#41;<br />               &#123;<br />                  // TO DO!!!<br />                  printf&#40;&quot;Emphasis bits!!!&quot;&#41;; getch&#40;&#41;;<br />               &#125;<br />               else<br />               &#123;<br />                  if&#40;ColorBit0 || ColorBit1&#41;<br />                  &#123;<br />                     <br />                     // Using a crappy array to fetch AT bytes. Couldn't find<br />                     // some maths to do it, please don't laugh :&#40;<br />                     AT_Entry = VRAM&#91;NT_Addr + 0x3c0 + AT_Byte&#91;TileNumber&#93;&#93;;<br />                     switch&#40;AT_Bits&#91;TileNumber&#93;&#41;<br />                     &#123;<br />                        case 0x03: ColorBit2and3 = AT_Entry &amp; AT_Bits&#91;TileNumber&#93;; break;<br />                        case 0x0c: ColorBit2and3 = &#40;AT_Entry &amp; AT_Bits&#91;TileNumber&#93;&#41; &gt;&gt; 2; break;<br />                        case 0x30: ColorBit2and3 = &#40;AT_Entry &amp; AT_Bits&#91;TileNumber&#93;&#41; &gt;&gt; 4; break;<br />                        case 0xc0: ColorBit2and3 = &#40;AT_Entry &amp; AT_Bits&#91;TileNumber&#93;&#41; &gt;&gt; 6; break;<br />                     &#125;<br />                     ColorIndex = &#40;ColorBit2and3 &lt;&lt; 2&#41; | &#40;ColorBit1 &lt;&lt; 1&#41; | ColorBit0;<br />                     PaletteEntry = VRAM&#91;0x3f00 + ColorIndex&#93; &amp; 0x3f;<br />                     _putpixel&#40;ScreenBuffer,CoordX,CoordY,Paleta&#91;PaletteEntry&#93;&#41;;<br />                  &#125;<br />                  else<br />                  &#123;<br />                     PaletteEntry = VRAM&#91;0x3f00&#93; &amp; 0x3f;<br />                     _putpixel&#40;ScreenBuffer,CoordX,CoordY,Paleta&#91;PaletteEntry&#93;&#41;;<br />                  &#125;<br />                  CoordX++;<br />               &#125;<br />            &#125;<br />         &#125;<br />      &#125;<br />      CoordY++;<br />      <br /><br />      if&#40;READ_BIT&#40;PPU_2001,4&#41;&#41;<br />      &#123;<br />         // SPRITES ROUTINE<br />         // This routine is far from the described in Qeed's doc, just made to see some<br />         // basic results.<br /><br />         // Initialize OAM to 0xFF<br />         for&#40;i = 0; i &lt; 32; i++&#41; OAM&#91;i&#93; = 0xff;<br /><br />         SpriteCounter = 0;<br />         for&#40;i = 0; i &lt; 0x100; i += 4&#41;<br />         &#123;<br />            // A crappy way stop the sprites fetching when 8 sprites in a scanline<br />            // had already been fetched<br />            if&#40;SpriteCounter == 8&#41; break;<br /><br />            // Evaluate sprite's range<br />            SpriteRange = &#40;&#40;Scanline - 1&#41; - 21&#41; - &#40;SRAM&#91;i&#93; + 1&#41;;<br /><br />            // If sprite's in range copy the rest of its data into OAM<br />            if&#40;&#40;SpriteRange &gt;= 0&#41; &amp;&amp; &#40;SpriteRange &lt;= 7&#41;&#41;<br />            &#123;<br />               for&#40;j = 0; j &lt; 4; j++&#41; OAM&#91;&#40;SpriteCounter &lt;&lt; 2&#41; + j&#93; = SRAM&#91;i + j&#93;;<br />               SpriteCounter++;<br />            &#125;<br />         &#125;<br /><br />         for&#40;i = 0; i &lt; SpriteCounter; i++&#41;<br />         &#123;<br />            // Fetch sprite's data<br />            OAM_Byte0 = OAM&#91;0 + &#40;i &lt;&lt; 2&#41;&#93;;<br />            OAM_Byte1 = OAM&#91;1 + &#40;i &lt;&lt; 2&#41;&#93;;<br />            OAM_Byte2 = OAM&#91;2 + &#40;i &lt;&lt; 2&#41;&#93;;<br />            OAM_Byte3 = OAM&#91;3 + &#40;i &lt;&lt; 2&#41;&#93;;<br /><br />            TileNumber = OAM_Byte1;<br />            <br />            PT_Addr = &#40;READ_BIT&#40;PPU_2000,3&#41; &lt;&lt; 12&#41;;<br /><br />            Y = &#40;Scanline - 1&#41; % 8;<br />            PT_Entry_Low = VRAM&#91;PT_Addr + &#40;TileNumber &lt;&lt; 4&#41; + Y&#93;;<br />            PT_Entry_High = VRAM&#91;PT_Addr + &#40;TileNumber &lt;&lt; 4&#41; + Y + 8&#93;;<br />            SpriteX = OAM_Byte3;<br />            SpriteY = OAM_Byte0 + Y;<br />            <br />            // &quot;Normal&quot; sprite rendering<br />            if&#40;!&#40;OAM&#91;2 + &#40;i &lt;&lt; 2&#41;&#93; &amp; 0x40&#41;&#41;<br />            &#123;<br />               for&#40;j = 7; j &gt;= 0; j--&#41;<br />               &#123;<br />                  ColorBit0 = READ_BIT&#40;PT_Entry_Low,j&#41;;<br />                  ColorBit1 = READ_BIT&#40;PT_Entry_High,j&#41;;<br />                  if&#40;ColorBit0 || ColorBit1&#41;<br />                  &#123;<br />                     ColorBit2and3 = OAM_Byte2 &amp; 0x3;<br />                     ColorIndex = &#40;ColorBit2and3 &lt;&lt; 2&#41; | &#40;ColorBit1 &lt;&lt; 1&#41; | ColorBit0;<br /><br />                     PaletteEntry = VRAM&#91;0x3f10 + ColorIndex&#93; &amp; 0x3f;<br />                     _putpixel&#40;ScreenBuffer,SpriteX,SpriteY,Paleta&#91;PaletteEntry&#93;&#41;;<br />                  &#125;<br />                  SpriteX++;<br />               &#125;<br />            &#125;<br /><br />            // Horizontally flipped sprite rendering<br />            else<br />            &#123;<br />               for&#40;j = 0; j &lt;= 7; j++&#41;<br />               &#123;<br />                  ColorBit0 = READ_BIT&#40;PT_Entry_Low,j&#41;;<br />                  ColorBit1 = READ_BIT&#40;PT_Entry_High,j&#41;;<br />                  if&#40;ColorBit0 || ColorBit1&#41;<br />                  &#123;<br />                     ColorBit2and3 = OAM_Byte2 &amp; 0x3;<br />                     ColorIndex = &#40;ColorBit2and3 &lt;&lt; 2&#41; | &#40;ColorBit1 &lt;&lt; 1&#41; | ColorBit0;<br />                     PaletteEntry = VRAM&#91;0x3f10 + ColorIndex&#93; &amp; 0x3f;<br />                     _putpixel&#40;ScreenBuffer,SpriteX,SpriteY,Paleta&#91;PaletteEntry&#93;&#41;;<br />                  &#125;<br />                  SpriteX++;<br />               &#125;<br />            &#125;<br />         &#125;<br />      &#125;<br />   &#125;<br />&#125;</div><br /><br />...and that's it. don't have to pay extremely atention at the code, just give it a fast check. i know there's no good in posting code. i'm feeling like i'm treating you like as my teachers at college, wich is kind of embarazing because there's no reason for you to waist your time in correcting my code :\<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4531">comegordas</a> — Tue Aug 24, 2010 7:52 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2010-08-24T19:15:51-07:00</updated>
<published>2010-08-24T19:15:51-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5585&amp;p=66685#p66685</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5585&amp;p=66685#p66685"/>
<title type="html"><![CDATA[Speeding up my graphics routine]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5585&amp;p=66685#p66685"><![CDATA[
<div class="quotetitle">Dwedit wrote:</div><div class="quotecontent"><br />Sometimes color emphesis is done in an 8-bit mode<br /></div><br />Oh yeah, 8-bit is not enough for all 8 variations of the palette. I was assuming a mode with more colors when I suggested that. I think it's important to be able to do what the NES can, even if no games did it.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Tue Aug 24, 2010 7:15 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Dwedit]]></name></author>
<updated>2010-08-24T19:11:16-07:00</updated>
<published>2010-08-24T19:11:16-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5585&amp;p=66684#p66684</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5585&amp;p=66684#p66684"/>
<title type="html"><![CDATA[Speeding up my graphics routine]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5585&amp;p=66684#p66684"><![CDATA[
Sometimes color emphesis is done in an 8-bit mode by ORing the color with 64, 128, or 192.  Then you have different emphesized versions of the palette.  This limits you to 4 different emphasis settings per frame though.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=53">Dwedit</a> — Tue Aug 24, 2010 7:11 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2010-08-24T19:08:57-07:00</updated>
<published>2010-08-24T19:08:57-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5585&amp;p=66683#p66683</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5585&amp;p=66683#p66683"/>
<title type="html"><![CDATA[Speeding up my graphics routine]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5585&amp;p=66683#p66683"><![CDATA[
<div class="quotetitle">MottZilla wrote:</div><div class="quotecontent"><br />So when you need color 3 or something like that it's just a lookup in the NESGLOBALPAL[3] array.<br /></div><br />Couldn't this array be bi-dimensional so that it is able to translate color emphasis too?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Tue Aug 24, 2010 7:08 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[MottZilla]]></name></author>
<updated>2010-08-24T18:55:31-07:00</updated>
<published>2010-08-24T18:55:31-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5585&amp;p=66681#p66681</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5585&amp;p=66681#p66681"/>
<title type="html"><![CDATA[Speeding up my graphics routine]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5585&amp;p=66681#p66681"><![CDATA[
You don't need to use allegro's makecol() routine. You can make your own array of NES palette to RGB values. This is what I did. So when you need color 3 or something like that it's just a lookup in the NESGLOBALPAL[3] array. It looks like you are trying this with 8bit color mode.<br /><br />First test that your palette is correct at all by only drawing using the first palette and just test games looking to see if any of the background is in the correct colors. Donkey Kong I think is good for that. If nothing is in correct colors its a emulator palette issue and not an emulator attribute fetching issue.<br /><br />The reason you had such a speed boost by removing makecol() is because you were probably calling it thousands of times per frame. <br /><br />You can always post your code for how you are decoding what attribute/palette to use for each background tile and we can try to spot any errors you may have.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=1726">MottZilla</a> — Tue Aug 24, 2010 6:55 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[comegordas]]></name></author>
<updated>2010-08-24T18:03:58-07:00</updated>
<published>2010-08-24T18:03:58-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5585&amp;p=66679#p66679</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5585&amp;p=66679#p66679"/>
<title type="html"><![CDATA[Speeding up my graphics routine]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5585&amp;p=66679#p66679"><![CDATA[
look now without the makecol() function (and using _putpixel()): 539 FPS!!! <img src="http://forums.nesdev.com/images/smilies/icon_eek.gif" alt=":shock:" title="Shocked" />  <img src="http://forums.nesdev.com/images/smilies/icon_eek.gif" alt=":shock:" title="Shocked" />  <img src="http://forums.nesdev.com/images/smilies/icon_eek.gif" alt=":shock:" title="Shocked" /> <br /><br />but i'm sure that i'm fetching the colors incorrectly :\<br />about the palette mirroring, i've found different information in different docs, so finally implemented the palette mirroring like this:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">// Writes to PPU $2007<br /><br />if&#40;PPU_2006 == 0x3f00&#41; for&#40;i = 0x3f00; i &lt;= 0x3f1c; i += 4&#41; VRAM&#91;i&#93; = Valor;</div><br /><br />...and the i have a mirror of $3F00 at $3F04/$3F08/$3F0C/$3F10/$3F14/$3F18/$3F1C as the wiki says.<br /><br />this is my actual palette:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">static const byte Paleta&#91;64&#93; =<br />&#123;<br />    0x00, 0x10, 0x20, 0x30,0x01, 0x11, 0x21, 0x31,<br />    0x02, 0x12, 0x22, 0x32,0x03, 0x13, 0x23, 0x33,<br />    0x04, 0x14, 0x24, 0x34,0x05, 0x15, 0x25, 0x35,<br />    0x06, 0x16, 0x26, 0x36,0x07, 0x17, 0x27, 0x37,<br />    0x08, 0x18, 0x28, 0x38,0x09, 0x19, 0x29, 0x39,<br />    0x0A, 0x1A, 0x2A, 0x3A,0x0B, 0x1B, 0x2B, 0x3B,<br />    0x0C, 0x1C, 0x2C, 0x3C,0x0D, 0x1D, 0x2D, 0x3D,<br />    0x0E, 0x1E, 0x2E, 0x3E,0x0F, 0x1F, 0x2F, 0x3F<br />&#125;;</div><br /><br />at this point... any hints? maybe i'm fetching incorrectly the attribute bytes :\<br /><br />anyway, here's a pic that may help to solve the problem:<br /><br /><img src="http://img837.imageshack.us/img837/1954/sinttulo2b.gif" alt="Image" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4531">comegordas</a> — Tue Aug 24, 2010 6:03 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[comegordas]]></name></author>
<updated>2010-08-24T14:08:36-07:00</updated>
<published>2010-08-24T14:08:36-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5585&amp;p=66670#p66670</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5585&amp;p=66670#p66670"/>
<title type="html"><![CDATA[Speeding up my graphics routine]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5585&amp;p=66670#p66670"><![CDATA[
thanks Tepples. tried to run the profiler but couldn't make it work (i'm using Code::Blocks + Allegro), but i guess that's something offlimits here in NESDev. anyway, i think the problem is on the "makecol()" function, so i'll have to find a palette with just one value per color (and not 3 like the one i'm actually using). have one already but it's completely wrong, but maybe is because i'm fetching the wrong colors. the 3-values-per-color palette i'm using now was taken from NESdoc.pdf and i'm still showing the wrong colors. who knows! <img src="http://forums.nesdev.com/images/smilies/icon_razz.gif" alt=":P" title="Razz" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4531">comegordas</a> — Tue Aug 24, 2010 2:08 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2010-08-24T04:58:56-07:00</updated>
<published>2010-08-24T04:58:56-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5585&amp;p=66632#p66632</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5585&amp;p=66632#p66632"/>
<title type="html"><![CDATA[Speeding up my graphics routine]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5585&amp;p=66632#p66632"><![CDATA[
<div class="quotetitle">comegordas wrote:</div><div class="quotecontent"><br />my emu is showing graphics at the poor rate of 5 FPS. as the same as Undubbed i'm using C + Allegro and the "_putpixel" function, but i tried to run the EXE file outside the IDE but nothing changed.<br /></div><br />Are you compiling an optimized/release build, or are you still running the debug build? Have you tried compiling a profiling build? Profiling should help you find bottlenecks (such as makecol()) and think of fixes (such as your solution of caching makecol() results) more rapidly.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />maybe with SDL? i don't think that will make radical changes :\<br /></div><br />The one advantage of SDL that I can think of is that if you make a Linux port, sound will work even on distributions such as Ubuntu that have switched to PulseAudio.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Tue Aug 24, 2010 4:58 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[comegordas]]></name></author>
<updated>2010-08-23T22:15:06-07:00</updated>
<published>2010-08-23T22:15:06-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5585&amp;p=66613#p66613</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5585&amp;p=66613#p66613"/>
<title type="html"><![CDATA[Speeding up my graphics routine]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5585&amp;p=66613#p66613"><![CDATA[
ok i have some crazy results hahaha <img src="http://forums.nesdev.com/images/smilies/icon_twisted.gif" alt=":twisted:" title="Twisted Evil" /> <br />i started with an array like TileCache[960][8][8] and in each position of the array i saved the PaletteEntry the actual pixel to be draw. so the bucle goes like "if(TileCache[TileNumber][TileByteSliver][0] == NULL) ... save the tile in the cache". therefore, i decode the tile only once, and at the second time i fetch it from the cahe. but nothing changed <img src="http://forums.nesdev.com/images/smilies/icon_sad.gif" alt=":(" title="Sad" /> <br />BUT.... instead of a 64x3=192 bytes array for the RGB palette i used once that has only one byte to identify the color (so the array for the palette is only 64 bytes long), so i don't have to call the function "makecol()" to compose the color... and guess what??? the emulator flew like a Concorde plain <img src="http://forums.nesdev.com/images/smilies/icon_twisted.gif" alt=":twisted:" title="Twisted Evil" />  <img src="http://forums.nesdev.com/images/smilies/icon_twisted.gif" alt=":twisted:" title="Twisted Evil" />  <img src="http://forums.nesdev.com/images/smilies/icon_twisted.gif" alt=":twisted:" title="Twisted Evil" /> <br />it gave a ratio of more than 300 FPS (yes... you read it ok...). the problem is that the color codes of the palette are completely messed up, so i'll have to made one by myself or find one that works correctly.<br /><br />well, well... it's late at night in Argentina and i gotta go to college tomorrow, so wi'll talk about later! do you think that maybe it's an error? that ratio sounds like tooooooooo much for me...<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4531">comegordas</a> — Mon Aug 23, 2010 10:15 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[MottZilla]]></name></author>
<updated>2010-08-23T21:10:10-07:00</updated>
<published>2010-08-23T21:10:10-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5585&amp;p=66612#p66612</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5585&amp;p=66612#p66612"/>
<title type="html"><![CDATA[Speeding up my graphics routine]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5585&amp;p=66612#p66612"><![CDATA[
I think it should help. When I was designing my emulator I really had no idea how other people did it. So it was alot of fun figuring out my own way. I'm not sure if other emulators make some sort of CHR cache but as I said the general idea is to reduce unneeded calculations and operations. When you realize that CHR-ROM pattern data is decoded to the same result 100% of the time and CHR-RAM is decoded the same probably 99% of the time you are just wasting time calculating it and throwing the results away. <br /><br />I do recall hearing the suggestions about not redrawing name tables but I never did this. I suppose if you cached the rendered name tables somehow you could do this. But even in my speed oriented emulator running on a 233mhz or 266mhz pentium laptop I got 60fps without any sort of optimization regarding not redrawing nametables all the time.<br /><br />So try out the CHR Cache and let me know if you get a good speed boost.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=1726">MottZilla</a> — Mon Aug 23, 2010 9:10 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[comegordas]]></name></author>
<updated>2010-08-23T21:04:25-07:00</updated>
<published>2010-08-23T21:04:25-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5585&amp;p=66611#p66611</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5585&amp;p=66611#p66611"/>
<title type="html"><![CDATA[Speeding up my graphics routine]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5585&amp;p=66611#p66611"><![CDATA[
thanks Tokumaru and MottZilla! i'd like your idea of make a tile cache. let's see what happens <img src="http://forums.nesdev.com/images/smilies/icon_wink.gif" alt=":wink:" title="Wink" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4531">comegordas</a> — Mon Aug 23, 2010 9:04 pm</p><hr />
]]></content>
</entry>
</feed>