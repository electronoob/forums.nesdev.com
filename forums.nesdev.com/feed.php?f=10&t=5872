<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=10&amp;t=5872" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2010-06-22T10:45:42-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=10&amp;t=5872</id>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2010-06-22T10:45:42-07:00</updated>
<published>2010-06-22T10:45:42-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5872&amp;p=63238#p63238</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5872&amp;p=63238#p63238"/>
<title type="html"><![CDATA[Re: some questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5872&amp;p=63238#p63238"><![CDATA[
<div class="quotetitle">Painvin wrote:</div><div class="quotecontent"><br />i have a problem understanding variables. i know they must go at adress $0000, but also the CHR goes there. i know that one is in the CPU and the other in the PPU, but how does the assembler know the difference?<br /></div><br />The assembler doesn't know the difference. The iNES format simply specifies that in a NES ROM first comes the PRG-ROM and then CHR-ROM (when present, if not present the game uses CHR-RAM), so if it's defined at the end of the source it's CHR.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />another problem, when i define bytes in the middle of my code they sometimes stuck the program, but sometimes they dont. i managed to make the program run by writing the .db after all my code (in the same bank and all, just at the end). i just wanted to know what exactly happens there.<br /></div><br />When you assemble a program, everything becomes bytes. Instructions, numbers and all kinds of data become nothing more than a series of bytes. The CPU works by interpreting those bytes. Each command you give the CPU has a code, and based on that code the CPU knows what to do next. So if you assemble something like this:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   lda #$09<br />   sta $2005<br />.db $44, $32, $50, $86</div><br />It becomes the following sequence of bytes in the resulting binary file:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">$A9, $09, $8D, $05, $20, $44, $32, $50, $86</div><br />Like I said, everything becomes just a big sequence of bytes. When the CPU executes that, it will read the $A9, which is the code for LDA in immediate addressing mode. The CPU is programmed to read the next byte from the ROM and put it in A when it finds that instruction. After that it finds the command $8D. This is the code for STA absolute. When the CPU reads this command, it knows it's supposed to store whatever is in A into the address specified by the following two bytes ($05, $20 is the address $2005, the lower byte comes first).<br /><br />That's how every CPU in the world works, by interpreting operations that are associated to codes (i.e. opcodes). So what happens now? The CPU will keep running the program. it then reads the code $44. The problem is this is not a valid code for an instruction, it's just data you happened to place right after the code. So it's no wonder the program will crash, since it will start executing things that are not proper instructions. And even if by coincidence they make up proper instructions, eventually a place with trash will be reached.<br /><br />So by placing all the data at the end you prevented the CPU from ever running into the data and interpreting it as code. Like it's been said, you can use jumps to skip data, but it's better if you can simply place it somewhere it won't ever be executed.<br /><br />For example, this is OK:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   lda #$09<br />   sta $2005<br />   jmp Continue<br /><br />.db $44, $32, $50, $86<br /><br />Continue:<br />   lda #$23<br />   sta $2005</div><br />Because you are telling the CPU to skip over the data. But it's better that you simply place all the data at the end or between functions, where the CPU will never go by itself.<br /><br />If you look at a <a href="http://www.obelisk.demon.co.uk/6502/reference.html" class="postlink">reference like this</a> you'll notice that each instruction has a list of opcodes it can turn into depending on the addressing mode. It's an interesting read if you want to know more about how CPUs work, but you don't have to memorize those codes. Assemblers exist exactly so that you don't have to memorize them, but as a programmer it's good that you understand that in the end it all becomes a sequence of numbers, without any sort of differentiation between code, graphics and other data. It's the responsibility of the programmer to make that differentiation, by structuring their programs well and interpreting each kind of data according to what it is.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Tue Jun 22, 2010 10:45 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2010-06-22T05:22:55-07:00</updated>
<published>2010-06-22T05:22:55-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5872&amp;p=63226#p63226</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5872&amp;p=63226#p63226"/>
<title type="html"><![CDATA[Quick Questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5872&amp;p=63226#p63226"><![CDATA[
Don't put .db into the middle of your code.<br /><br />You can put .db into your ROM, but make sure that before a block of .db there is a 'jmp' or 'rts' instruction.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Tue Jun 22, 2010 5:22 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Painvin]]></name></author>
<updated>2010-06-22T04:58:04-07:00</updated>
<published>2010-06-22T04:58:04-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5872&amp;p=63223#p63223</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5872&amp;p=63223#p63223"/>
<title type="html"><![CDATA[Quick Questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5872&amp;p=63223#p63223"><![CDATA[
i dont remember where i got that zelda.chr from, but it's just the chr rom for the title screen. i think i understood what you said, but its still a little confusing. i'll try to learn about that later, it doesnt really matter right now.<br /><br />about my other question: when i define bytes in the middle of my code they sometimes stuck the program, but sometimes they dont. i managed to make the program run by writing the .db after all my code (in the same bank and all, just at the end). i just wanted to know what exactly happens there.<br /> <br />and another one that arouse while i was waiting for those answers. is the code for handling the controllers supposed to go in the NMI routine? i tried different things and it seems that only that way it works. it also makes sense, but i want to be sure. thanks<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4427">Painvin</a> — Tue Jun 22, 2010 4:58 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2010-06-22T04:43:29-07:00</updated>
<published>2010-06-22T04:43:29-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5872&amp;p=63221#p63221</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5872&amp;p=63221#p63221"/>
<title type="html"><![CDATA[Quick Questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5872&amp;p=63221#p63221"><![CDATA[
There are two independent address and data buses on an NES. Variables go at $0000 on the CPU bus; CHR goes at $0000 on the PPU bus.<br /><br />In NESASM, the .org you pass to your assembler determines only the address. The .bank partly determines which bus; the iNES format places CHR immediately after PRG.<br /><br />"Zelda" doesn't have a CHR ROM unless you're talking about The Adventure of Link. Instead, The Legend of Zelda has CHR RAM, where the CPU copies data from PRG ROM to RAM on the cartridge through a register on the PPU.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Tue Jun 22, 2010 4:43 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Painvin]]></name></author>
<updated>2010-06-22T02:45:41-07:00</updated>
<published>2010-06-22T02:45:41-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5872&amp;p=63216#p63216</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5872&amp;p=63216#p63216"/>
<title type="html"><![CDATA[Quick Questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5872&amp;p=63216#p63216"><![CDATA[
that's what i though, but doesnt<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.bank 2<br />   .org $0000<br />   .incbin &quot;zelda.chr&quot;<br /></div><br />mean i write it directly to the PPU?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4427">Painvin</a> — Tue Jun 22, 2010 2:45 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Wave]]></name></author>
<updated>2010-06-22T02:40:34-07:00</updated>
<published>2010-06-22T02:40:34-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5872&amp;p=63215#p63215</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5872&amp;p=63215#p63215"/>
<title type="html"><![CDATA[Re: some questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5872&amp;p=63215#p63215"><![CDATA[
<div class="quotetitle">Painvin wrote:</div><div class="quotecontent"><br />hi, im new to all this, just started a few days ago.<br />im using nesasm3<br /><br />i have a problem understanding variables. i know they must go at adress $0000, but also the CHR goes there. i know that one is in the CPU and the other in the PPU, but how does the assembler know the difference?<br /><br />another problem, when i define bytes in the middle of my code they sometimes stuck the program, but sometimes they dont. i managed to make the program run by writing the .db after all my code (in the same bank and all, just at the end). i just wanted to know what exactly happens there.<br /><br />thank you, and sorry if my questions are a little confusing, im a bit confused too.<br /></div><br />You can't manipulate PPU RAM directly, asm always manipulates CPU memory.<br />Yo can only manipulate PPU RAM through the nes registers.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4116">Wave</a> — Tue Jun 22, 2010 2:40 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Painvin]]></name></author>
<updated>2010-06-22T02:28:05-07:00</updated>
<published>2010-06-22T02:28:05-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5872&amp;p=63214#p63214</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5872&amp;p=63214#p63214"/>
<title type="html"><![CDATA[some questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5872&amp;p=63214#p63214"><![CDATA[
hi, im new to all this, just started a few days ago.<br />im using nesasm3<br /><br />i have a problem understanding variables. i know they must go at adress $0000, but also the CHR goes there. i know that one is in the CPU and the other in the PPU, but how does the assembler know the difference?<br /><br />another problem, when i define bytes in the middle of my code they sometimes stuck the program, but sometimes they dont. i managed to make the program run by writing the .db after all my code (in the same bank and all, just at the end). i just wanted to know what exactly happens there.<br /><br />thank you, and sorry if my questions are a little confusing, im a bit confused too.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4427">Painvin</a> — Tue Jun 22, 2010 2:28 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Kasumi]]></name></author>
<updated>2010-06-21T15:31:09-07:00</updated>
<published>2010-06-21T15:31:09-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5872&amp;p=63201#p63201</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5872&amp;p=63201#p63201"/>
<title type="html"><![CDATA[Quick Questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5872&amp;p=63201#p63201"><![CDATA[
&gt;_&gt; Indeed, I totally forgot that a nametable is larger than 256 bytes. Thanks memblers.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3504">Kasumi</a> — Mon Jun 21, 2010 3:31 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Memblers]]></name></author>
<updated>2010-06-21T15:19:15-07:00</updated>
<published>2010-06-21T15:19:15-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5872&amp;p=63200#p63200</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5872&amp;p=63200#p63200"/>
<title type="html"><![CDATA[Quick Questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5872&amp;p=63200#p63200"><![CDATA[
Looks like the graphics are doing what they should be.  The question seems to be how to write more than 256 bytes, am I right?<br /><br />If so, you use a pointer with indirect addressing like "lda (pointer_in_zeropage),y"<br /><br />the pointer is made and used like this:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">ptr_lo = $00 ; must be low, then high<br />ptr_hi = $01<br /><br />lda #&gt;background<br />sta ptr_hi<br />lda #&lt;background<br />sta ptr_lo<br /><br />ldy #0<br />ldx #4 ; copy 4 pages of 256 bytes<br />@back<br />lda &#40;ptr_lo&#41;,y<br />sta $2007<br />iny<br />bne @back<br />inc ptr_hi<br />dex<br />bne @back<br /></div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=10">Memblers</a> — Mon Jun 21, 2010 3:19 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Kunio]]></name></author>
<updated>2010-06-21T15:14:34-07:00</updated>
<published>2010-06-21T15:14:34-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5872&amp;p=63198#p63198</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5872&amp;p=63198#p63198"/>
<title type="html"><![CDATA[Quick Questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5872&amp;p=63198#p63198"><![CDATA[
I figured out with this easy solution <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">LoadBackgroundLoop:<br />  lda background, x      <br />  sta $2007     <br />  inx                  <br />  cpx #$FF             <br />  sta $2007           <br />  cpx #$FF             <br />  sta $2007            <br />  cpx #$FF             <br />  bne LoadBackgroundLoop </div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4160">Kunio</a> — Mon Jun 21, 2010 3:14 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Kasumi]]></name></author>
<updated>2010-06-21T14:47:08-07:00</updated>
<published>2010-06-21T14:47:08-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5872&amp;p=63195#p63195</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5872&amp;p=63195#p63195"/>
<title type="html"><![CDATA[Quick Questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5872&amp;p=63195#p63195"><![CDATA[
Remember what I said earlier about .db statements being in the middle of your code? <br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">loadbg:<br />          lda background,x<br />         sta $2007<br />          inx<br />         cmx #208<br />        bne loadbg;What happens when this finishes branching to loadbg?<br />background: <br />.db $00,$01,$02,$03,$04,$05,$06,$07,$08,$09,$24,$24,$24,$24,$24,$24  ;;row 1;The program starts running from this line. All the bytes you have stored for your background are run as code.<br /></div><br /><br />Those background bytes are being run as code. If you have data like the .db statements under the background label, put it someplace after your main game loop, so it won't be run as code.<br /><br />But you didn't post enough code here for me to know what else might be wrong.<br /><br />Did you set the scroll with register $2005?<br /><br />Did you set the PPU address that register $2007 writes to with register $2006?<br /><br />Are you writing to $2007 while rendering is disabled or during vblank? <br /><br />If the answer to any of these questions is no, that is a problem.<br /><br />Edit: Ah... and is X loaded with 0 before you start this loop?<br /><br />Edit 2: Also, I've never seen cmx used for compare X. cpx is what I always see. I suppose if the assembler isn't giving your errors it's okay, though.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3504">Kasumi</a> — Mon Jun 21, 2010 2:47 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Kunio]]></name></author>
<updated>2010-06-21T14:38:06-07:00</updated>
<published>2010-06-21T14:38:06-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5872&amp;p=63193#p63193</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5872&amp;p=63193#p63193"/>
<title type="html"><![CDATA[Quick Questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5872&amp;p=63193#p63193"><![CDATA[
And the picture what we got:<br /><img src="http://kunio.zapto.org/Horv/kep.jpg" alt="Image" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4160">Kunio</a> — Mon Jun 21, 2010 2:38 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Horv]]></name></author>
<updated>2010-06-21T11:11:50-07:00</updated>
<published>2010-06-21T11:11:50-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5872&amp;p=63180#p63180</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5872&amp;p=63180#p63180"/>
<title type="html"><![CDATA[Quick Questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5872&amp;p=63180#p63180"><![CDATA[
Hi all! Thanks for the tut! Its helped! But I'm having trouble with the background, 'cause it made its limit. :S<br />This don't want to display more lines. We want to put the background at 80. y<br /><br />Here's the code about the tiles:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">loadbg:<br />          lda background,x<br />         sta $2007<br />          inx<br />         cmx #208<br />        bne loadbg<br />background:<br /><br />  .db $00,$01,$02,$03,$04,$05,$06,$07,$08,$09,$24,$24,$24,$24,$24,$24  ;;row 1<br />  .db $00,$01,$02,$03,$04,$05,$06,$07,$08,$09,$24,$24,$24,$24,$24,$24  ;;row 1<br />  .db $00,$01,$02,$03,$04,$05,$06,$07,$08,$09,$24,$24,$24,$24,$24,$24  ;;row 1<br />  .db $00,$01,$02,$03,$04,$05,$06,$07,$08,$09,$24,$24,$24,$24,$24,$24  ;;row 1<br />  .db $00,$01,$02,$03,$04,$05,$06,$07,$08,$09,$24,$24,$24,$24,$24,$24  ;;row 1<br />  .db $00,$01,$02,$03,$04,$05,$06,$07,$08,$09,$24,$24,$24,$24,$24,$24  ;;row 1<br />  .db $00,$01,$02,$03,$04,$05,$06,$07,$08,$09,$24,$24,$24,$24,$24,$24  ;;row 1<br />  .db $00,$01,$02,$03,$04,$05,$06,$07,$08,$09,$24,$24,$24,$24,$24,$24  ;;row 1<br />  .db $00,$01,$02,$03,$04,$05,$06,$07,$08,$09,$24,$24,$24,$24,$24,$24  ;;row 1<br />  .db $00,$01,$02,$03,$04,$05,$06,$07,$08,$09,$24,$24,$24,$24,$24,$24  ;;row 1<br />  .db $00,$01,$02,$03,$04,$05,$06,$07,$08,$09,$24,$24,$24,$24,$24,$24  ;;row 1<br />  .db $00,$01,$02,$03,$04,$05,$06,$07,$08,$09,$24,$24,$24,$24,$24,$24  ;;row 1<br />  .db $00,$01,$02,$03,$04,$05,$06,$07,$08,$09,$24,$24,$24,$24,$24,$24  ;;row 1<br />  .db $00,$01,$02,$03,$04,$05,$06,$07,$08,$09,$24,$24,$24,$24,$24,$24  ;;row 1<br />  .db $00,$01,$02,$03,$04,$05,$06,$07,$08,$09,$24,$24,$24,$24,$24,$24  ;;row 1<br />  .db $00,$01,$02,$03,$04,$05,$06,$07,$08,$09,$24,$24,$24,$24,$24,$24  ;;row 1<br />  .db $00,$01,$02,$03,$04,$05,$06,$07,$08,$09,$24,$24,$24,$24,$24,$24  ;;row 1<br />  .db $00,$01,$02,$03,$04,$05,$06,$07,$08,$09,$24,$24,$24,$24,$24,$24  ;;row 1<br />  .db $00,$01,$02,$03,$04,$05,$06,$07,$08,$09,$24,$24,$24,$24,$24,$24  ;;row 1<br />  .db $00,$01,$02,$03,$04,$05,$06,$07,$08,$09,$24,$24,$24,$24,$24,$24  ;;row 1<br />  .db $00,$01,$02,$03,$04,$05,$06,$07,$08,$09,$24,$24,$24,$24,$24,$24  ;;row 1<br />  .db $00,$01,$02,$03,$04,$05,$06,$07,$08,$09,$24,$24,$24,$24,$24,$24  ;;row 1<br />  .db $00,$01,$02,$03,$04,$05,$06,$07,$08,$09,$24,$24,$24,$24,$24,$24  ;;row 1</div><br />Thanks! Horv<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4159">Horv</a> — Mon Jun 21, 2010 11:11 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Horv]]></name></author>
<updated>2010-06-20T11:57:19-07:00</updated>
<published>2010-06-20T11:57:19-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5872&amp;p=63162#p63162</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5872&amp;p=63162#p63162"/>
<title type="html"><![CDATA[Quick Questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5872&amp;p=63162#p63162"><![CDATA[
<div class="quotetitle">Kasumi wrote:</div><div class="quotecontent"><br />I'm not sure you guys understand the basics.<br /></div><br /><br />We started learn a few days ago :'D  <img src="http://forums.nesdev.com/images/smilies/icon_lol.gif" alt=":lol:" title="Laughing" />  <br /><br />Thanks , for helping! <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /> Tomorrow we'll continue it and follow bunnyboy's tut.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4159">Horv</a> — Sun Jun 20, 2010 11:57 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Kasumi]]></name></author>
<updated>2010-06-20T11:36:54-07:00</updated>
<published>2010-06-20T11:36:54-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5872&amp;p=63161#p63161</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5872&amp;p=63161#p63161"/>
<title type="html"><![CDATA[Quick Questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5872&amp;p=63161#p63161"><![CDATA[
<div class="quotetitle">Kunio wrote:</div><div class="quotecontent"><br />This just screws up the drawing methods, but nothing happens if I put it somewhere. So where I need to put that variable change code to change the x, y in-game?<br /></div><br /><br />I'm not sure you guys understand the basics.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">Loop: <br />stand: <br />   lda 10 ; or whatever value you want<br />   sta p1_x ; its stored<br />   .db p1_y,p1_face,$00,p1_x<br />   .db p1_y,p1_face+1,$00,p1_x+8<br /><br />  ; a bunch more .db statements<br />   <br /><br />  jmp Loop<br /></div><br /><br />Your assembler's job is to turn your code into machine code. Each instruction has a byte associated with it. <br /><br />  lda #$00 becomes $A9 (the lda immediate byte) $00 (the number you gave it)<br /><br />.db inserts a byte into your code. <br /><br />So if you have something like<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">Loop: <br />stand: <br />   lda #$10 <br />   <br />  jmp Loop<br /></div><br /><br />You can actually do this instead: <br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">Loop: <br />stand: <br />   .db $A9<br />   .db $10<br />   <br />  jmp Loop<br /></div><br /><br />It's not recommended, but it's the same thing. The reason I've said all this, is because you're inserting a bunch of bytes in the middle of your code with those .db statements. <br /><br />Those bytes will be read as instructions since they're right in the middle of a loop. I don't think .db does what you think it does.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">  lda 10 ; or whatever value you want<br /></div><br /><br />This loads the accumulator with the number in ram location $0A. Is that what you want?<br /><br />I really need to see more code to sort this out, but it might be better to start over. Where's your NMI routine? What assembler are you using?<br /><br />First you have to choose which page your sprites will use in RAM. <br /><br />Page $02 ($0200-$02FF) would be fine.<br /><br />After that choice is made, this is the program flow for what you want to do.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">1. Startup Code. Clearing RAM/Nametables, Loading Palettes, and setting the display registers to show sprites and enable NMIs.<br /><br />2. Your Main game loop.<br />     1. Wait for Vblank<br />     2. Read Joypads, store the results in a byte.<br />     3. Check the byte you stored joypad information in, and update the sprite if buttons are pressed. The sprites are updated simply by writing new values to the page of RAM associated with sprites. If it's Page $02, writing to $0200 will change the Y position of the first sprite, writing to $0201 will change the tile of the first sprite, writing to $0202 will change the attributes of the first sprite, writing to $0203 will change the X position of the first sprite, writing to $0204 will change the Y positon of the SECOND sprite, and so on. However you'll only see the sprites update if your NMI routine is in place.<br /><br />3. Your NMI routine.<br />     1. Stores the X, Y, and A registers in RAM or on the stack.<br />     2. Write the page where the sprites appear in RAM to the DMA register &#40;$4014&#41;. This is what makes the sprites update on the screen based on the information in the page of RAM you wrote to $4014.<br />     3. Loads the values from RAM or the stack to the X, Y and A registers<br /></div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3504">Kasumi</a> — Sun Jun 20, 2010 11:36 am</p><hr />
]]></content>
</entry>
</feed>