<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=21&amp;t=7003" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2010-10-13T12:42:14-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=21&amp;t=7003</id>
<entry>
<author><name><![CDATA[psycopathicteen]]></name></author>
<updated>2010-10-13T12:42:14-07:00</updated>
<published>2010-10-13T12:42:14-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7003&amp;p=68583#p68583</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7003&amp;p=68583#p68583"/>
<title type="html"><![CDATA[color palette for FPGA users]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7003&amp;p=68583#p68583"><![CDATA[
"CHR RAM accessed how fast? If you've ever played Videomation, you'll probably remember how slow its flood fill is."<br /><br />I've been thinking about 21 Mhz, but I'm not sure what speed to allow the 63C09 to access SRAM, because it has to be accessed by the FPGA too.<br /><br />I'll do some math.  A 21 Mhz has 1365 cycles per line.  If I let the 63C09 access the SRAM at 5 Mhz which is 341 cycles per line, I will have 1024 left over cycles for the FPGA to access.<br />1024 - 336 color palette accesses = 688 cycles<br />688 - 160 y-coordinate sprite entries = 528 cycles<br />528 / 6 accesses per sprite (x-coordinate, attributes, 4 patterns) = 88 sprites per line.<br />88 sprites / 22 sprites per layer = 4 layers of parallax before flickering<br /><br />160 sprites with 88 sprites per line is pretty good.<br /><br />I advise be careful when using the offset-per-tile joining bit.  If the host sprite isn't on the scanline, the joined sprite will use the last rendered sprite's x-coordinate as the host sprite instead.  Use a blank tile on top and bottom of the sprite strips to avoid visible glitches when using tile-per-offset joining.<br /><br />The only thing that I don't know yet is what should I do about 8x8 text like score boards?<br /><br />EDIT: I fixed some broken math.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4383">psycopathicteen</a> — Wed Oct 13, 2010 12:42 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2010-10-13T11:32:41-07:00</updated>
<published>2010-10-13T11:32:41-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7003&amp;p=68579#p68579</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7003&amp;p=68579#p68579"/>
<title type="html"><![CDATA[color palette for FPGA users]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7003&amp;p=68579#p68579"><![CDATA[
This constructive criticism is here to help you avoid crippling bottlenecks that programmers for your console might discover:<br /><br /><div class="quotetitle">psycopathicteen wrote:</div><div class="quotecontent"><br />I'm planning on 128-kB of SRAM for the FPGA, that can also be accessed with the 63C09.<br /></div><br />CHR RAM accessed how fast? If you've ever played Videomation, you'll probably remember how slow its flood fill is.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />The Neo Geo's sprites are actually vertical strips of 32 16x16 tiles, with a different attribute table for each tile.<br /></div><br />Then they're almost more like narrow planes than like sprites per se. In Tetris or Dr. Mario, for example, each column of the playfield would be two sprites, or 48 in all for two Tetris playfields in four join groups, plus sprites for falling, ghost, and next pieces. That sounds more reasonable.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Neo Geo's sprites have a join bit that joins the next sprite to side of the last sprite.  If you move one sprite, several sprites will move with it.<br /></div><br />But can sprites be moved between scanlines?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Wed Oct 13, 2010 11:32 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[psycopathicteen]]></name></author>
<updated>2010-10-13T10:40:24-07:00</updated>
<published>2010-10-13T10:40:24-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7003&amp;p=68575#p68575</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7003&amp;p=68575#p68575"/>
<title type="html"><![CDATA[color palette for FPGA users]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7003&amp;p=68575#p68575"><![CDATA[
[*]How would a game like Qix work under your planned system? Ordinarily, it works by drawing fences in the manner of an Etch-a-Sketch and then flood-filling once the new fence reaches an existing fence, but that requires an all-points-addressable display mode. That's doable on a system with CHR RAM, but apparently the NeoGeo uses CHR ROM only.<br /><br />I'm planning on 128-kB of SRAM for the FPGA, that can also be accessed with the 63C09.<br /><br />[*]How would a game like Tetris work? Tetris needs up to 9*20=180 sprites for the blocks in each playfield, plus the falling piece, shadow, next piece(s), score counter, and playfield border. Just two players would put it over 380, the widely reported NeoGeo limit.<br /><br />The Neo Geo's sprites are actually vertical strips of 32 16x16 tiles, with a different attribute table for each tile.<br /><br />[*]Racing games will need some sort of deformation, at least shearing (Pole Position style) if not flat-out scanline texture mapping (F-Zero style), to draw the track. Even 2D fighters and basketball games shear their floors.<br /><br />Neo Geo's sprites have a join bit that joins the next sprite to side of the last sprite.  If you move one sprite, several sprites will move with it.<br /><br />On my FPGA project, I will have a regular join bit, and a tile-per-offset join bit that keeps the next sprite at the side of the last sprite, but uses it's own individual y-coordinate.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4383">psycopathicteen</a> — Wed Oct 13, 2010 10:40 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2010-10-13T09:37:06-07:00</updated>
<published>2010-10-13T09:37:06-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7003&amp;p=68570#p68570</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7003&amp;p=68570#p68570"/>
<title type="html"><![CDATA[color palette for FPGA users]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7003&amp;p=68570#p68570"><![CDATA[
Not all video games can be made in a display model that uses only sprites with predefined textures. For example:<br /><ul><li>How would a game like Qix work under your planned system? Ordinarily, it works by drawing fences in the manner of an Etch-a-Sketch and then flood-filling once the new fence reaches an existing fence, but that requires an all-points-addressable display mode. That's doable on a system with CHR RAM, but apparently the NeoGeo uses CHR ROM only. </li><li>How would a game like Tetris work? Tetris needs up to 9*20=180 sprites for the blocks in each playfield, plus the falling piece, shadow, next piece(s), score counter, and playfield border. Just two players would put it over 380, the widely reported NeoGeo limit. </li><li>Racing games will need some sort of deformation, at least shearing (Pole Position style) if not flat-out scanline texture mapping (F-Zero style), to draw the track. Even 2D fighters and basketball games shear their floors. </li></ul><br />You could make a tile map reader that feeds fake sprites to the sprite compositor.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Wed Oct 13, 2010 9:37 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[psycopathicteen]]></name></author>
<updated>2010-10-13T09:15:51-07:00</updated>
<published>2010-10-13T09:15:51-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7003&amp;p=68567#p68567</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7003&amp;p=68567#p68567"/>
<title type="html"><![CDATA[color palette for FPGA users]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7003&amp;p=68567#p68567"><![CDATA[
I'm thinking of considering a NeoGeo-style sprite system, where everything is made out of sprites and there is no hardware background layer.  It will be easier designing an FPGA for that than an SNES style PPU.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4383">psycopathicteen</a> — Wed Oct 13, 2010 9:15 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[psycopathicteen]]></name></author>
<updated>2010-10-11T11:10:07-07:00</updated>
<published>2010-10-11T11:10:07-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7003&amp;p=68498#p68498</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7003&amp;p=68498#p68498"/>
<title type="html"><![CDATA[color palette for FPGA users]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7003&amp;p=68498#p68498"><![CDATA[
A few years ago I was more serious about it, and I was looking around for FPGA's and Microcontrollers, but wasn't sure if I wanted to invest all my money into it just yet.  I'm just afraid I'll buy the wrong one and have to buy another one.<br /><br />Once I become a little older and more independent of my own money (I'm only 19 and living under my parents) I would take action.<br /><br /><br /><br />The technical specifications that I've decided to stick with so far are:<br />-6309 cpu core<br />-336x224 screen resolution<br />-256 out of 32000 colors (either RGB or "PCM" color palette)<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4383">psycopathicteen</a> — Mon Oct 11, 2010 11:10 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Jeroen]]></name></author>
<updated>2010-10-11T07:11:59-07:00</updated>
<published>2010-10-11T07:11:59-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7003&amp;p=68484#p68484</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7003&amp;p=68484#p68484"/>
<title type="html"><![CDATA[color palette for FPGA users]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7003&amp;p=68484#p68484"><![CDATA[
Well if you're serious about making your own fpga console....yes you should know this.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3369">Jeroen</a> — Mon Oct 11, 2010 7:11 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[psycopathicteen]]></name></author>
<updated>2010-10-05T09:37:28-07:00</updated>
<published>2010-10-05T09:37:28-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7003&amp;p=68133#p68133</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7003&amp;p=68133#p68133"/>
<title type="html"><![CDATA[color palette for FPGA users]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7003&amp;p=68133#p68133"><![CDATA[
...and everybody is jumping to conclusion that I actually know how to do this.<br /><br />Oh crap!!!<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4383">psycopathicteen</a> — Tue Oct 05, 2010 9:37 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2010-10-05T06:18:48-07:00</updated>
<published>2010-10-05T06:18:48-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7003&amp;p=68123#p68123</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7003&amp;p=68123#p68123"/>
<title type="html"><![CDATA[color palette for FPGA users]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7003&amp;p=68123#p68123"><![CDATA[
Or you could make the palette YUV (not HSV like on the NES), clock the DAC at 4*Fsc (14.32 MHz), and output Y+U, Y+V, Y-U, Y-V. Apple II uses something much like this.<br /><br />Once the prototype is working, the problem will become one of attracting developers and one of making enough units of your console to ship to customers.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Tue Oct 05, 2010 6:18 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[kyuusaku]]></name></author>
<updated>2010-10-05T00:18:41-07:00</updated>
<published>2010-10-05T00:18:41-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7003&amp;p=68122#p68122</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7003&amp;p=68122#p68122"/>
<title type="html"><![CDATA[color palette for FPGA users]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7003&amp;p=68122#p68122"><![CDATA[
I don't see the benefit of this over a true composite encoder, they don't use a lot of resources or anything and if you only want 9-bit RGB you can easily build a 6-bit DAC that will work fine.<br /><br /><!-- m --><a class="postlink" href="http://nesdev.com/bbs/viewtopic.php?t=4189">http://nesdev.com/bbs/viewtopic.php?t=4189</a><!-- m --><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=20">kyuusaku</a> — Tue Oct 05, 2010 12:18 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Memblers]]></name></author>
<updated>2010-10-04T23:32:47-07:00</updated>
<published>2010-10-04T23:32:47-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7003&amp;p=68121#p68121</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7003&amp;p=68121#p68121"/>
<title type="html"><![CDATA[color palette for FPGA users]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7003&amp;p=68121#p68121"><![CDATA[
Well, there are 2D graphics chips, even NES graphics, but it's almost sure to be part of a system-on-a-chip (being cheaper overall, in huge quantities only).  And really other than the Texas Instruments chip used in the Coleco, and MSX, I don't think there ever was any kind of off-the-shelf 2D graphics chip.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=10">Memblers</a> — Mon Oct 04, 2010 11:32 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[3gengames]]></name></author>
<updated>2010-10-04T23:06:52-07:00</updated>
<published>2010-10-04T23:06:52-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7003&amp;p=68120#p68120</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7003&amp;p=68120#p68120"/>
<title type="html"><![CDATA[color palette for FPGA users]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7003&amp;p=68120#p68120"><![CDATA[
You can pull a Williams and use 48K of RAM for RGB graphics and make a circuit that outputs them....I have no idea if you could also have another circuit outputting other video types from that....But what the hay, it's an idea. <img src="http://forums.nesdev.com/images/smilies/icon_razz.gif" alt=":P" title="Razz" /><br /><br /><br />I google'd 2D Graphics chip....are these not really available anywhere? You'd think something like that would be still produced today and have a standard. :/ It must be one of those things replaced by software.....<br /><br /><br /><br />This a really cool project. I was thinking of doing something like this but since I know nothing about logic of CPU's and volts and stuff, it's out of my capability, but still.....I want to learn all that one day and attempt this too. <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /> A 2D homebrew system in todays world would probably be better then the NES, and maybe up to par with SNES! <img src="http://forums.nesdev.com/images/smilies/icon_razz.gif" alt=":P" title="Razz" /> Technology has advanced so far. It's scary!<br /><br /><br />Oh well too much stupid stuff. I just get excited seeing people try this stuff. Good luck man! I can't wait to see what you come up with.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4311">3gengames</a> — Mon Oct 04, 2010 11:06 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2010-10-04T21:07:50-07:00</updated>
<published>2010-10-04T21:07:50-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7003&amp;p=68119#p68119</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7003&amp;p=68119#p68119"/>
<title type="html"><![CDATA[color palette for FPGA users]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7003&amp;p=68119#p68119"><![CDATA[
It's just the basic approach to development: start with standard stuff. Then once you have things working well enough, start seeing what parts are worth customizing/doing yourself, and whether the benefits really outweigh the costs.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Mon Oct 04, 2010 9:07 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2010-10-04T20:49:08-07:00</updated>
<published>2010-10-04T20:49:08-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7003&amp;p=68117#p68117</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7003&amp;p=68117#p68117"/>
<title type="html"><![CDATA[color palette for FPGA users]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7003&amp;p=68117#p68117"><![CDATA[
MottZilla is right: you'll want something that can output NTSC S-Video, PAL60 S-Video, and component at 480i and component and VGA at 480p if you want to cover all your bases.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Mon Oct 04, 2010 8:49 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[MottZilla]]></name></author>
<updated>2010-10-04T17:40:16-07:00</updated>
<published>2010-10-04T17:40:16-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7003&amp;p=68114#p68114</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7003&amp;p=68114#p68114"/>
<title type="html"><![CDATA[color palette for FPGA users]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7003&amp;p=68114#p68114"><![CDATA[
Or you could just output RGB and use one of the many video encoder chips used in commercial game consoles like the Sega Genesis.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=1726">MottZilla</a> — Mon Oct 04, 2010 5:40 pm</p><hr />
]]></content>
</entry>
</feed>