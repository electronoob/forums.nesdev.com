<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=20&amp;t=13727" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2016-02-12T00:18:46-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=20&amp;t=13727</id>
<entry>
<author><name><![CDATA[LIJI]]></name></author>
<updated>2016-02-12T00:18:46-07:00</updated>
<published>2016-02-12T00:18:46-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=13727&amp;p=164381#p164381</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=13727&amp;p=164381#p164381"/>
<title type="html"><![CDATA[Re: Hblank on line 153?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=13727&amp;p=164381#p164381"><![CDATA[
<div class="quotetitle">mikejmoffitt wrote:</div><div class="quotecontent"><br />Just curious... are you the same LIJI from the Clickteam / TDC forums?<br /></div><br />Yes. <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7385">LIJI</a> — Fri Feb 12, 2016 12:18 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[mikejmoffitt]]></name></author>
<updated>2016-02-11T18:06:46-07:00</updated>
<published>2016-02-11T18:06:46-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=13727&amp;p=164356#p164356</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=13727&amp;p=164356#p164356"/>
<title type="html"><![CDATA[Re: Hblank on line 153?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=13727&amp;p=164356#p164356"><![CDATA[
Just curious... are you the same LIJI from the Clickteam / TDC forums?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5314">mikejmoffitt</a> — Thu Feb 11, 2016 6:06 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[gekkio]]></name></author>
<updated>2016-01-19T13:11:30-07:00</updated>
<published>2016-01-19T13:11:30-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=13727&amp;p=162885#p162885</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=13727&amp;p=162885#p162885"/>
<title type="html"><![CDATA[Re: Hblank on line 153?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=13727&amp;p=162885#p162885"><![CDATA[
I tested oam_count_v5.gb with all handheld devices I own (listed here <a href="https://github.com/Gekkio/mooneye-gb#accuracy" class="postlink">here</a>) and the test passed on all of them. Can't test SGB/SGB2 at the moment, but I'm 99.99% sure the test will pass on them as well.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7248">gekkio</a> — Tue Jan 19, 2016 1:11 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Shonumi]]></name></author>
<updated>2016-01-19T08:17:01-07:00</updated>
<published>2016-01-19T08:17:01-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=13727&amp;p=162863#p162863</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=13727&amp;p=162863#p162863"/>
<title type="html"><![CDATA[Re: Hblank on line 153?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=13727&amp;p=162863#p162863"><![CDATA[
&gt; Maybe Game Boys are all full of micro-variations like this. Wouldn't that be a treat? <img src="http://forums.nesdev.com/images/smilies/icon_razz.gif" alt=":P" title="Razz" /><br /><br />Like some of the audio quirks? That would be wonderful! <img src="http://forums.nesdev.com/images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /> <span style="font-size: 50%; line-height: normal">not really</span><br /><br />Anyway, I thought about this, so I added a new check to my test. It now verifies each LY value at the start of every OAM-STAT interrupt before writing it to Cart RAM. It expects it to be 0 through 0x90 incrementing by one. If it encounters any other value, it now displays an &quot;NN&quot; screen. So this gives us the results on-screen in addition to the saved RAM. If any Game Boy models deviate from the GBC, we should be able to tell with this new &quot;NN&quot; screen, since it will mess up the expected pattern of LYs.<br /><br />I was a spoiled kid, so I have quite a few GB models to work with: MGB-001, CGB-001, AGB-001, AGS-001, and a Game Boy Player for the Gamecube. Tested on everything but the GBP, but the results were the same. They passed this new test, so as long as this test is written correctly, it means this behavior should be consistent, OAM-STATs on Lines 0 - 144.<br /><br />@LIJI - I'll take a look at your test more in-depth in a bit. Tuesdays + Wednesdays are the busiest days of my week, however, so I might not finish up till later. Thanks for sharing though, and keep up the awesome work on the GB Video Player! <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br />EDIT - FWIW, I can replicate your results with your test ROM on my GBC, first value is 0x97. I'll dig into the assembly tonight if I get time.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6368">Shonumi</a> — Tue Jan 19, 2016 8:17 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[LIJI]]></name></author>
<updated>2016-01-19T04:37:50-07:00</updated>
<published>2016-01-19T04:37:50-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=13727&amp;p=162857#p162857</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=13727&amp;p=162857#p162857"/>
<title type="html"><![CDATA[Re: Hblank on line 153?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=13727&amp;p=162857#p162857"><![CDATA[
Weird, Shonumi's test ROM passes on my Gameboy, yet fails on emulator, meaning I haven't got it either. <img src="http://forums.nesdev.com/images/smilies/icon_razz.gif" alt=":P" title="Razz" /><br /><br />I uploaded the test ROM I used to get that 151 timing. It's different than what I remembered but it's still pretty much the same: It logs every OAM interrupt by it's LY value into an array, &quot;restarting&quot; every HBlank. On my Gameboy Color and on my own emulator, the output starts with 97 (151) and continues with &quot;00, 01, 02, 03...&quot;. It does not display the entire array, because that would take too much CPU and break the timing.<br /><br />BGB's handling of this is quite weird: When in CGB mode, the output does not start with 97; it starts with 00 and continues. Debugging easily shows the extra interrupt happens on LY=144 - incorrect. In DMG mode however, it's the same as the correct CGB output. However, I don't have a DMG to verify if this behavior is correct.<br /><br />As for higan, I can't get the ROM to even run on it — for some reason it makes icarus crash both on OS X and my Windows VM.<br /><br />Edit: This is really weird, I managed to get it to run on higan, and it actually displays the correct result, even though it should have been 99 in higan. Got to do more tests!<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7385">LIJI</a> — Tue Jan 19, 2016 4:37 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[byuu]]></name></author>
<updated>2016-01-19T02:02:31-07:00</updated>
<published>2016-01-19T02:02:31-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=13727&amp;p=162851#p162851</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=13727&amp;p=162851#p162851"/>
<title type="html"><![CDATA[Re: Hblank on line 153?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=13727&amp;p=162851#p162851"><![CDATA[
&gt; Second, the source code of the OAM interrupt in the player (It's incorrectly labeled as HBlank, sorry!) states the problem:<br /><br />The comment definitely helped a whole lot. But it sounds like we still don't have the exact behavior down 100% just yet, but Shonumi seems to be closing in on it :D<br /><br />Right now, it looks like my interrupt system is shot. Altered Space is doing something really weird with IRQs that I don't yet understand. And the exact way they trigger is really poorly explained (like everything else on the DMG ...) So my emulator's probably not the best place to test things, but ... oh well.<br /><br />&gt; the extra interrupt occurs for LY=151<br /><br />Given this contradicts Shonumi's research ... I wonder if it varies per Game Boy, or if perhaps yours is an odd exception that's acting slightly erratic?<br /><br />I've also heard another person state they couldn't run your GBVideoPlayer on their real hardware with a flashcart.<br /><br />Maybe Game Boys are all full of micro-variations like this. Wouldn't that be a treat? :P<br /><br />&gt; And while we're at it, my local &quot;build&quot; has a double resolution, which will later get another 50% increase. I attached a comparison as a teaser, I hope the coming soon updates won't break any of your emulators! :P<br /><br />Looking forward to seeing how you do it! :D<br /><br />And by the way, I'm considering extending my MBC3 support to allow full 16-bit bank selection, which would give you 1GiB of storage. It's a silly, stupid thing, but maybe that could be useful for you in some way? Obviously won't work on real hardware, of course.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=375">byuu</a> — Tue Jan 19, 2016 2:02 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Shonumi]]></name></author>
<updated>2016-01-18T23:20:52-07:00</updated>
<published>2016-01-18T23:20:52-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=13727&amp;p=162842#p162842</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=13727&amp;p=162842#p162842"/>
<title type="html"><![CDATA[Re: Hblank on line 153?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=13727&amp;p=162842#p162842"><![CDATA[
Hello LIJI, great to have you join us! <img src="http://forums.nesdev.com/images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /><br /><br />Could you double check your results on whether the 145th OAM-STAT interrupt happens on Line 151? I only ask because I modified my tests to try to replicate it. The source code and the binary are attached for review. What I did was use Register B as a counter for OAM interrupts, and HL pointing to Cart RAM to write the results of the current LY value. The program waits until the start of a new VBlank (manually testing if LY == 144), then it spins, waiting for OAM-STAT interrupts. Every OAM-STAT interrupt, B is incremented, and the current value of LY is stored in Cart RAM. It technically starts waiting for OAM-STAT interrupts somewhere on line 144, so it should catch any OAM-STAT interrupts that occur from 145-153, then from 0-144. Essentially, I believe I'm testing for OAM-STATS on every line. The results of the Cart RAM show 0x0 through 0x90 (Lines 0 through 144).<br /><br />I tested it on my GBC, and the save attached (just rename it from .txt to .sav or something) is the dump from my test. Could you share your test here as well, and perhaps take a look at my code? I'm pretty sure I'm doing this correctly, but I want to reconcile getting different results than you.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6368">Shonumi</a> — Mon Jan 18, 2016 11:20 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[LIJI]]></name></author>
<updated>2016-01-18T18:10:53-07:00</updated>
<published>2016-01-18T18:10:53-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=13727&amp;p=162828#p162828</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=13727&amp;p=162828#p162828"/>
<title type="html"><![CDATA[Re: Hblank on line 153?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=13727&amp;p=162828#p162828"><![CDATA[
Hey! <br /><br />First of all I must say I'm flattered to see people actually invested time in properly emulating my GBVideoPlayer. <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /> (You should have contacted me though! I could have helped!)<br /><br />Second, the source code of the OAM interrupt in the player (It's incorrectly labeled as HBlank, sorry!) states the problem:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">    ; Not sure how or why, but this routine gets called 145 times<br />    ; per frame instead of 144. The addional call is not rLY=144.<br />    ; Until I figure out which LY value is being used twice (or,<br />    ; which LY value greater than 144 is being used), we skip the<br />    ; last line so HL won't go out of sync with frame starts.<br /><br />    ldh a, &#91;rLY&#93; ; 3<br />    xor $8F ; 2<br /><br />    jr z, SkipLine ; 2 (If false)</div><br /><br />When I released the player, I haven't investigated this issue that much, after I start writing my own Gameboy Color emulator (Will release it sooner or later <img src="http://forums.nesdev.com/images/smilies/icon_razz.gif" alt=":P" title="Razz" />) I decided to investigate further. And yes, my own player gave me a pretty much hard time when writing the emulator.<br /><br />I discovered that the extra interrupt only occurs for OAM interrupts, but that extra &quot;line&quot; is neither 153, nor is it 144 (as stated in the comment). BGB emulates this hardware bug incorrectly, an interrupt being fired for LY=144. This was EXTREMELY confusing to figure that out, since I used BGB to debug my player when I was making it.<br /><br />I wrote a simple test ROM that had an OAM interrupt that simply added 1 to an array cell, with LY as an index (i.e. array[rLY]++). I ran the test on my GBC and found out that the extra interrupt occurs for <strong>LY=151</strong>.<br /><br />This can also be verified by modifying GBVideo Player by changing $8F in the above code snippet. Setting anything higher that 143, except 151, will break it on a real Gameboy. 144 will work on BGB, but not on a real Gameboy, and 153 will work on higan, but not on a real Gameboy. Also, any value greater than 143 will work on an emulator that does not emulate this bug in the first place.<br /><br />And while we're at it, my local &quot;build&quot; has a double resolution, which will later get another 50% increase. I attached a comparison as a teaser, I hope the coming soon updates won't break any of your emulators! <img src="http://forums.nesdev.com/images/smilies/icon_razz.gif" alt=":P" title="Razz" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7385">LIJI</a> — Mon Jan 18, 2016 6:10 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Shonumi]]></name></author>
<updated>2016-01-12T21:09:22-07:00</updated>
<published>2016-01-12T21:09:22-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=13727&amp;p=162444#p162444</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=13727&amp;p=162444#p162444"/>
<title type="html"><![CDATA[Re: Hblank on line 153?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=13727&amp;p=162444#p162444"><![CDATA[
@tepples - I think you're correct on both accounts. Echoes what I've looked into.<br /><br />@byuu - Not enough time to make  the rest of the Line 144 STAT IRQ tests, but I managed to replace OAM-STAT interrupts with HBLANK-STAT interrupts. Even with VBlank interrupts (regular and STAT based ones) disabled, HBlank never fires on Line 144. It seems OAM-STAT is a bit of an oddball. I still have to test it to see if VBLANK-STAT interrupts mess it up like regular VBlank interrupts. I think the 145th OAM-STAT interrupt probably triggers (when in theory it shouldn't) because of how early in a scanline it's supposed to fire. Like I said, I think the LCD controller doesn't properly recognize it's in VBlank as soon as it enters Line 144, so it gives OAM-STAT interrupts the OK. HBLANK-STAT interrupts happen later in the scanline, so maybe by that time the LCD controller correctly figures out VBlank is taking place. Just a theory, since I can't see what's going on with the actual circuits and whatnot.<br /><br />Anyway, I did have time to get the LCD clocking demo done. Here's how it works. It creates 2 16-bit counters (C1 and C2), then increments them in two loops. The test waits for Line 152 (tail end of VBlank), then it shuts off the LCD (which resets LY to 0). The first loop updates C1 for 0x390 times (taking 32 cycles each time, so approximately 72 scanlines worth of looping). The values are written to cart RAM, then LCD is turned on. Now the next counter, C2, increments in a loop (also 32 cycles long) all the way until it reaches VBlank. On VBlank, it writes the counter values to RAM, then loops endlessly.<br /><br />The idea is, if the LCD isn't clocking at all, LY isn't incremented at all during this period. If the loop for C1 finishes and the LCD doesn't clock anything, when it turns the LCD back on, LY is still 0 and the LCD starts clocking with a fresh start. In that case, when C2 counts up, it will be noticeably bigger than C1 because it has to run for all 144 scanlines.<br /><br />If the LCD is clocking when turned off, however, it should still update LY. When C1 finishes its loop, LY should be 72 when the LCD is turned back on. Since C2 counts until the next VBlank, its value should be nearly equivalent to C1 (since both are supposed to run for 72 scanlines).<br /><br />I tested it on my GBC, but the results indicate the former rather than the latter. The LCD doesn't clock cycles when its turned off. At least, it doesn't do anything with them. I'll leave the source code along with the ROM + save file. C1 is 0x1 - 0x2 of the save (MSB first), and C2 is 0x3 - 0x4 (again MSB first). C1 will always be 0x390, but real hardware shows C2 being 0x720 (so exactly 2x C1, meaning it ran for all 144 scanlines). So... what this means is you can delay how long you leave the LCD off for an arbitrary amount of time. When you turn it on, it always starts fresh from zero. Chaos as you said <img src="http://forums.nesdev.com/images/smilies/icon_wink.gif" alt=";)" title="Wink" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6368">Shonumi</a> — Tue Jan 12, 2016 9:09 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2016-01-12T17:32:35-07:00</updated>
<published>2016-01-12T17:32:35-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=13727&amp;p=162435#p162435</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=13727&amp;p=162435#p162435"/>
<title type="html"><![CDATA[Re: Hblank on line 153?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=13727&amp;p=162435#p162435"><![CDATA[
<div class="quotetitle">Dwedit wrote:</div><div class="quotecontent"><br />Nintendo DS can also have its scanline reset during vblank time.<br /></div><br />As I understand it, this is intended for synchronizing multiple systems in WLAN multiplayer where one system's crystal may be slightly faster or slower than another's.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />And some GBC games did turn off the screen during render time, like Conker's Pocket Tales.<br /></div><br />GBC also had a radically different screen technology from the monochrome Game Boy. I wonder if ability to safely turn off rendering was one of the changes between the Game Boy's screen and the GBC's.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Tue Jan 12, 2016 5:32 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Dwedit]]></name></author>
<updated>2016-01-12T16:00:58-07:00</updated>
<published>2016-01-12T16:00:58-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=13727&amp;p=162434#p162434</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=13727&amp;p=162434#p162434"/>
<title type="html"><![CDATA[Re: Hblank on line 153?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=13727&amp;p=162434#p162434"><![CDATA[
Nintendo DS can also have its scanline reset during vblank time.<br />And some GBC games did turn off the screen during render time, like Conker's Pocket Tales.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=53">Dwedit</a> — Tue Jan 12, 2016 4:00 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[byuu]]></name></author>
<updated>2016-01-12T00:42:59-07:00</updated>
<published>2016-01-12T00:42:59-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=13727&amp;p=162387#p162387</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=13727&amp;p=162387#p162387"/>
<title type="html"><![CDATA[Re: Hblank on line 153?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=13727&amp;p=162387#p162387"><![CDATA[
&gt; Pretty sure the LCD doesn't clock any cycles when it's turned off.<br /><br />... holy shit. That would be absolutely chaotic if true.<br /><br />You could effectively control the refresh rate completely with that.<br /><br />I know Nintendo disallows turning it off while the screen is rendering. But if you turn it off in Vblank, and then wait for one full frame, you've turned your Game Boy into a 30fps display.<br /><br />It would absolutely require an adaptive sync monitor to emulate. And even then, you could easily push it below the minimum value they support (not that any game would.)<br /><br />I can easily emulate it under the caveat that you'll never get smooth scrolling, but ... yuck.<br /><br />Would love a test ROM to confirm this, if you don't mind.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=375">byuu</a> — Tue Jan 12, 2016 12:42 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Shonumi]]></name></author>
<updated>2016-01-11T19:58:35-07:00</updated>
<published>2016-01-11T19:58:35-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=13727&amp;p=162381#p162381</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=13727&amp;p=162381#p162381"/>
<title type="html"><![CDATA[Re: Hblank on line 153?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=13727&amp;p=162381#p162381"><![CDATA[
&gt; What about LYC interrupts? Do they affect this behavior at all if they do/don't trigger?<br />&gt;<br />&gt; Does this behavior happen only for the STAT-VBLANK interrupt, or the regular VBLANK one?<br /><br />If you had an LYC interrupt on line 144, you would have to read the STAT register to tell if an LYC interrupt would technically block the OAM interrupt like regular VBlank interrupts do. OAM and LYC interrupts trigger at the same time from what I understand, so you couldn't use a simple counter like this test does. You'd have to see what bits get flipped in STAT itself. It's something I'll keep in mind when I work on the next versions.<br /><br />Now about other STAT interrupts (VBLANK especially), I don't know. I only tested OAM interrupts. I would like to know if I enabled STAT-OAM and STAT-VBLANK, would it still hit 145 instances for the STAT interrupt? That is to say, is the STAT-VBLANK just like the regular VBlank interrupt, blocking the 145th instance? If so, we can say there's something weird going on with the GB's LCD and how it checks VBlank interrupts of any kind. Ultimately,  what I'd like to know for sure is, what kinds of STAT interrupts can occur on Line 144. I'll leave that for tomorrow though. Today's been pretty exciting already <img src="http://forums.nesdev.com/images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /><br /><br />&gt; Does the display enable flag matter at all for this?<br /><br />Pretty sure the LCD doesn't clock any cycles when it's turned off. Maybe I misremembered something, but that's what I recall. In that case no LCD interrupts can be triggered, so I don't imagine it would affect us here. Just have to be careful when counting lines because LY is reset to 0 again when switching the LCD off then on.<br /><br />&gt; What about the &quot;read LY as 0 on LY=153&quot; behavior?<br /><br />I'll still have to check that out. I suspect that &quot;dummy&quot; Line 0 is what happens on a real GB. Tomorrow I'll make a new test ROM specifically for that stuff.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6368">Shonumi</a> — Mon Jan 11, 2016 7:58 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[byuu]]></name></author>
<updated>2016-01-11T18:43:46-07:00</updated>
<published>2016-01-11T18:43:46-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=13727&amp;p=162377#p162377</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=13727&amp;p=162377#p162377"/>
<title type="html"><![CDATA[Re: Hblank on line 153?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=13727&amp;p=162377#p162377"><![CDATA[
Thanks, this seems like we're definitely on the right track here! Still lots of questions remaining, though.<br /><br />What about LYC interrupts? Do they affect this behavior at all if they do/don't trigger?<br /><br />Does this behavior happen only for the STAT-VBLANK interrupt, or the regular VBLANK one?<br /><br />Does the display enable flag matter at all for this? (Do all STAT interrupts require the display to be enabled?)<br /><br />What about the &quot;read LY as 0 on LY=153&quot; behavior?<br /><br />Does a LYC of 0 trigger on LY 153 only, or on both 153 and 0? Testing Kirby's Dreamland 2, both work.<br /><br />&gt; Again, apparently some emu authors (*cough*BGB*cough*) knew about this stuff ages ago, but failed to enlighten anyone else...<br /><br />No surprise there. What else would you expect from someone that hides their source?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=375">byuu</a> — Mon Jan 11, 2016 6:43 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Shonumi]]></name></author>
<updated>2016-01-11T18:05:33-07:00</updated>
<published>2016-01-11T18:05:33-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=13727&amp;p=162374#p162374</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=13727&amp;p=162374#p162374"/>
<title type="html"><![CDATA[Re: Hblank on line 153?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=13727&amp;p=162374#p162374"><![CDATA[
Well, I must say byuu, you certainly know how to entertain people with mysteries <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br />I think I've cracked this one though. It's not HBlanks you want to go after, but you're close. You still want to target STAT IRQs, but you want the OAM ones (with Bit 5 set in the STAT register). If you run the ROM of the Pokemon anime intro, you'll see it constantly uses this interrupt. Here's what I observed through BGB (it's one of the few emulators that &quot;works&quot; with it) and I noticed that OAM-STAT IRQs were being fired on Lines 0 through 144. That's up <strong>and including</strong> Line 144. That means the demo in question runs and services that interrupt 145 times.<br /><br />Curious, I tried to make a test ROM that replicates and demonstrates that behavior. Like before, it counts every instance of a certain interrupt (in our case OAM-STAT ones). It runs one frame (until VBlank) then draws a &quot;Y&quot; for 145 successful instances, or &quot;N&quot; for only 144 instances (or a blank screen if something entirely different happens). Initially, I used VBlank IRQs to stop the test from counting. Strangely, I kept getting the same results as before. Real hardware showed only 144 instances of the OAM-STAT interrupt firing.<br /><br />However, I saw that the GB Video demo does not use VBlank interrupts, so I wondered if that was somehow blocking the 145th OAM-STAT interrupt in my test from firing. Rewriting the test to read LY manually, suddenly the 145th OAM-STAT triggered! I verified this in BGB (displays the &quot;Y&quot;), VBAM (displays the &quot;N&quot; and runs like garbage on the GB Video demo), my own GBE+ (displays a blank screen, oops...), and finally my GBC (displays the &quot;Y&quot;).<br /><br />So here's what it looks like. OAM-STATs can fire 145 times a frame, from Lines 0 to 145. Even though Line 145 is technically in VBlank, perhaps the LCD hardware hasn't had enough time to tell itself to stop searching OAM and generating interrupts? I can't say, but I don't believe Lines 146 - 153 trigger STAT interrupts of any sort. What's more, this behavior is only observable when a VBlank interrupt <strong>does not occur</strong>. As soon as a VBlank IRQ is fired, the LCD fails to fire an OAM-STAT interrupt on Line 145; you don't even see the interrupt as pending in the IF register. I'm really interested in what logic the LCD controller is following internally that makes it go this route.<br /><br />Here is the new source code and the new test ROM. Like I said, I already verified the result on real hardware, but please double check the code to make sure it does what we think it does. At any rate, I'm pretty sure we've pegged another undocumented quirk about the GB. Again, apparently some emu authors (*cough*BGB*cough*) knew about this stuff ages ago, but failed to enlighten anyone else...<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6368">Shonumi</a> — Mon Jan 11, 2016 6:05 pm</p><hr />
]]></content>
</entry>
</feed>